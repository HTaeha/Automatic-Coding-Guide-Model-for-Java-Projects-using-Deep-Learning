/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
Using TensorFlow backend.
WARNING:tensorflow:From logging_nmt_with_attention.py:87: The name tf.enable_eager_execution is deprecated. Please use tf.compat.v1.enable_eager_execution instead.

2019-11-13 13:28:46.228842: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1
2019-11-13 13:28:46.233683: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-13 13:28:46.234340: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties: 
name: GeForce RTX 2070 major: 7 minor: 5 memoryClockRate(GHz): 1.62
pciBusID: 0000:01:00.0
2019-11-13 13:28:46.234405: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcudart.so.10.0'; dlerror: libcudart.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.234455: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcublas.so.10.0'; dlerror: libcublas.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.234504: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcufft.so.10.0'; dlerror: libcufft.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.234606: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcurand.so.10.0'; dlerror: libcurand.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.234668: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusolver.so.10.0'; dlerror: libcusolver.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.234716: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusparse.so.10.0'; dlerror: libcusparse.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:28:46.237031: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7
2019-11-13 13:28:46.237044: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1663] Cannot dlopen some GPU libraries. Skipping registering GPU devices...
2019-11-13 13:28:46.237248: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-11-13 13:28:46.401968: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-13 13:28:46.402613: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5632970 executing computations on platform CUDA. Devices:
2019-11-13 13:28:46.402640: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce RTX 2070, Compute Capability 7.5
2019-11-13 13:28:46.423033: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3408000000 Hz
2019-11-13 13:28:46.423792: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x554db40 executing computations on platform Host. Devices:
2019-11-13 13:28:46.423833: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2019-11-13 13:28:46.423894: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-13 13:28:46.423902: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      
WARNING:tensorflow:Entity <function train_step at 0x7f999f501488> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function train_step at 0x7f999f501488>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method Encoder.call of <__main__.Encoder object at 0x7f99b25a7a58>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Encoder.call of <__main__.Encoder object at 0x7f99b25a7a58>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:From /home/momo/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
2019-11-13 13:29:01.899589: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1878
2019-11-13 13:29:01.899655: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1879
2019-11-13 13:29:01.899878: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2244
2019-11-13 13:29:01.899901: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2245
2019-11-13 13:29:01.900085: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2642
2019-11-13 13:29:01.900107: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2643
2019-11-13 13:29:01.900285: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3037
2019-11-13 13:29:01.900306: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3038
2019-11-13 13:29:01.900489: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3432
2019-11-13 13:29:01.900511: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3433
2019-11-13 13:29:01.900689: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3827
2019-11-13 13:29:01.900710: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3828
2019-11-13 13:29:01.900894: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4222
2019-11-13 13:29:01.900915: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4223
2019-11-13 13:29:01.901092: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4617
2019-11-13 13:29:01.901114: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4618
2019-11-13 13:29:01.901317: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5012
2019-11-13 13:29:01.901339: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5013
2019-11-13 13:29:01.901516: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5407
2019-11-13 13:29:01.901537: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5408
2019-11-13 13:29:01.901719: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5802
2019-11-13 13:29:01.901740: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5803
2019-11-13 13:29:01.901923: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6197
2019-11-13 13:29:01.901960: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6198
2019-11-13 13:29:01.902156: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6592
2019-11-13 13:29:01.902177: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6593
2019-11-13 13:29:01.902361: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_6987
2019-11-13 13:29:01.902382: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_6988
2019-11-13 13:29:01.902606: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7382
2019-11-13 13:29:01.902629: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7383
2019-11-13 13:29:01.902838: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7382_rewritten
2019-11-13 13:29:01.902890: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7383_rewritten
2019-11-13 13:29:01.903218: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7382_grad_8888
2019-11-13 13:29:01.903266: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7383_grad_7924
2019-11-13 13:29:01.903855: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_6987_rewritten
2019-11-13 13:29:01.903909: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_6988_rewritten
2019-11-13 13:29:01.904241: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_6987_grad_10486
2019-11-13 13:29:01.904288: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_6988_grad_9522
2019-11-13 13:29:01.904880: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6592_rewritten
2019-11-13 13:29:01.904935: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6593_rewritten
2019-11-13 13:29:01.905263: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6592_grad_11943
2019-11-13 13:29:01.905310: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6593_grad_10979
2019-11-13 13:29:01.905898: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6197_rewritten
2019-11-13 13:29:01.905952: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6198_rewritten
2019-11-13 13:29:01.906283: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6197_grad_13400
2019-11-13 13:29:01.906329: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6198_grad_12436
2019-11-13 13:29:01.906952: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5802_rewritten
2019-11-13 13:29:01.907007: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5803_rewritten
2019-11-13 13:29:01.907341: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5802_grad_14857
2019-11-13 13:29:01.907388: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5803_grad_13893
2019-11-13 13:29:01.907978: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5407_rewritten
2019-11-13 13:29:01.908034: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5408_rewritten
2019-11-13 13:29:01.908368: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5407_grad_16314
2019-11-13 13:29:01.908415: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5408_grad_15350
2019-11-13 13:29:01.909001: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5012_rewritten
2019-11-13 13:29:01.909057: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5013_rewritten
2019-11-13 13:29:01.909387: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5012_grad_17771
2019-11-13 13:29:01.909435: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5013_grad_16807
2019-11-13 13:29:01.910020: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4617_rewritten
2019-11-13 13:29:01.910073: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4618_rewritten
2019-11-13 13:29:01.910398: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4617_grad_19228
2019-11-13 13:29:01.910445: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4618_grad_18264
2019-11-13 13:29:01.911063: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4222_rewritten
2019-11-13 13:29:01.911123: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4223_rewritten
2019-11-13 13:29:01.911454: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4222_grad_20685
2019-11-13 13:29:01.911502: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4223_grad_19721
2019-11-13 13:29:01.912087: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3827_rewritten
2019-11-13 13:29:01.912140: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3828_rewritten
2019-11-13 13:29:01.912473: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3827_grad_22142
2019-11-13 13:29:01.912520: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3828_grad_21178
2019-11-13 13:29:01.913107: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3432_rewritten
2019-11-13 13:29:01.913160: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3433_rewritten
2019-11-13 13:29:01.913485: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3432_grad_23599
2019-11-13 13:29:01.913534: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3433_grad_22635
2019-11-13 13:29:01.914124: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3037_rewritten
2019-11-13 13:29:01.914178: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3038_rewritten
2019-11-13 13:29:01.914513: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3037_grad_25056
2019-11-13 13:29:01.914592: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3038_grad_24092
2019-11-13 13:29:01.915184: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2642_rewritten
2019-11-13 13:29:01.915238: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2643_rewritten
2019-11-13 13:29:01.915570: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2642_grad_26513
2019-11-13 13:29:01.915617: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2643_grad_25549
2019-11-13 13:29:01.916206: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2244_rewritten
2019-11-13 13:29:01.916260: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2245_rewritten
2019-11-13 13:29:01.916587: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2244_grad_27970
2019-11-13 13:29:01.916634: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2245_grad_27006
2019-11-13 13:29:01.917224: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1878_rewritten
2019-11-13 13:29:01.917281: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1879_rewritten
2019-11-13 13:29:01.917614: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1878_grad_29453
2019-11-13 13:29:01.917661: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1879_grad_28489
WARNING:tensorflow:Entity <function Function._initialize_uninitialized_variables.<locals>.initialize_variables at 0x7f999f46a048> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function Function._initialize_uninitialized_variables.<locals>.initialize_variables at 0x7f999f46a048>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <function train_step at 0x7f999f501488> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function train_step at 0x7f999f501488>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method Encoder.call of <__main__.Encoder object at 0x7f99b25a7a58>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Encoder.call of <__main__.Encoder object at 0x7f99b25a7a58>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7f999f4b1f28>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7f999f4b2550>>: AssertionError: Bad argument number for Name: 3, expecting 4
2019-11-13 13:29:17.177151: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30647
2019-11-13 13:29:17.177218: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30648
2019-11-13 13:29:17.177427: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31013
2019-11-13 13:29:17.177451: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31014
2019-11-13 13:29:17.177631: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31411
2019-11-13 13:29:17.177653: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31412
2019-11-13 13:29:17.177838: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31806
2019-11-13 13:29:17.177860: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31807
2019-11-13 13:29:17.178036: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32201
2019-11-13 13:29:17.178057: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32202
2019-11-13 13:29:17.178233: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32596
2019-11-13 13:29:17.178254: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32597
2019-11-13 13:29:17.178428: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_32991
2019-11-13 13:29:17.178449: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_32992
2019-11-13 13:29:17.178630: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33386
2019-11-13 13:29:17.178652: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33387
2019-11-13 13:29:17.178826: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33781
2019-11-13 13:29:17.178847: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33782
2019-11-13 13:29:17.179021: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34176
2019-11-13 13:29:17.179041: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34177
2019-11-13 13:29:17.179224: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34571
2019-11-13 13:29:17.179244: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34572
2019-11-13 13:29:17.179424: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_34966
2019-11-13 13:29:17.179445: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_34967
2019-11-13 13:29:17.179627: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35361
2019-11-13 13:29:17.179648: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35362
2019-11-13 13:29:17.179829: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35756
2019-11-13 13:29:17.179849: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35757
2019-11-13 13:29:17.180029: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36151
2019-11-13 13:29:17.180050: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36152
2019-11-13 13:29:17.180252: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36151_rewritten
2019-11-13 13:29:17.180304: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36152_rewritten
2019-11-13 13:29:17.180631: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36151_grad_37657
2019-11-13 13:29:17.180682: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36152_grad_36693
2019-11-13 13:29:17.181271: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35756_rewritten
2019-11-13 13:29:17.181327: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35757_rewritten
2019-11-13 13:29:17.181655: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35756_grad_39255
2019-11-13 13:29:17.181702: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35757_grad_38291
2019-11-13 13:29:17.182291: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35361_rewritten
2019-11-13 13:29:17.182346: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35362_rewritten
2019-11-13 13:29:17.182701: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35361_grad_40712
2019-11-13 13:29:17.182798: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35362_grad_39748
2019-11-13 13:29:17.183401: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_34966_rewritten
2019-11-13 13:29:17.183454: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_34967_rewritten
2019-11-13 13:29:17.183780: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_34966_grad_42169
2019-11-13 13:29:17.183826: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_34967_grad_41205
2019-11-13 13:29:17.184409: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34571_rewritten
2019-11-13 13:29:17.184463: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34572_rewritten
2019-11-13 13:29:17.184792: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34571_grad_43626
2019-11-13 13:29:17.184838: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34572_grad_42662
2019-11-13 13:29:17.185425: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34176_rewritten
2019-11-13 13:29:17.185479: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34177_rewritten
2019-11-13 13:29:17.185810: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34176_grad_45083
2019-11-13 13:29:17.185855: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34177_grad_44119
2019-11-13 13:29:17.186444: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33781_rewritten
2019-11-13 13:29:17.186498: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33782_rewritten
2019-11-13 13:29:17.186838: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33781_grad_46540
2019-11-13 13:29:17.186891: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33782_grad_45576
2019-11-13 13:29:17.187486: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33386_rewritten
2019-11-13 13:29:17.187541: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33387_rewritten
2019-11-13 13:29:17.187868: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33386_grad_47997
2019-11-13 13:29:17.187914: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33387_grad_47033
2019-11-13 13:29:17.188510: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_32991_rewritten
2019-11-13 13:29:17.188565: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_32992_rewritten
2019-11-13 13:29:17.188893: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_32991_grad_49454
2019-11-13 13:29:17.188940: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_32992_grad_48490
2019-11-13 13:29:17.189544: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32596_rewritten
2019-11-13 13:29:17.189611: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32597_rewritten
2019-11-13 13:29:17.189940: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32596_grad_50911
2019-11-13 13:29:17.189986: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32597_grad_49947
2019-11-13 13:29:17.190587: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32201_rewritten
2019-11-13 13:29:17.190641: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32202_rewritten
2019-11-13 13:29:17.190972: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32201_grad_52368
2019-11-13 13:29:17.191019: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32202_grad_51404
2019-11-13 13:29:17.191606: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31806_rewritten
2019-11-13 13:29:17.191658: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31807_rewritten
2019-11-13 13:29:17.191989: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31806_grad_53825
2019-11-13 13:29:17.192035: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31807_grad_52861
2019-11-13 13:29:17.192623: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31411_rewritten
2019-11-13 13:29:17.192677: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31412_rewritten
2019-11-13 13:29:17.193010: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31411_grad_55282
2019-11-13 13:29:17.193057: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31412_grad_54318
2019-11-13 13:29:17.193654: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31013_rewritten
2019-11-13 13:29:17.193708: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31014_rewritten
2019-11-13 13:29:17.194034: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31013_grad_56739
2019-11-13 13:29:17.194082: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31014_grad_55775
2019-11-13 13:29:17.194675: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30647_rewritten
2019-11-13 13:29:17.194730: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30648_rewritten
2019-11-13 13:29:17.195058: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30647_grad_58222
2019-11-13 13:29:17.195105: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30648_grad_57258
2019-11-13 13:29:18.900966: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:502] constant folding failed: Invalid argument: Unsupported type: 21
2019-11-13 13:29:24.088726: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:502] constant folding failed: Invalid argument: Unsupported type: 21
2019-11-13 13:29:27.762403: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
Input data
zero :  378
one :  370

Target data
zero :  378
one :  370

598 598 150 150
Input Language; index to word mapping
1 ----> <start>
6 ----> void
6 ----> void
11 ----> String
2 ----> <end>

Target Language; index to word mapping
1 ----> <start>
2 ----> MethodDeclaration
3 ----> <end>
0 <start>
1 <end>
2 {
3 }
4 public
5 void
6 return
7 throws
8 (
9 )
10 String
11 long
12 int
13 boolean
14 private
15 IOException
16 Exception
17 final
18 protected
19 byte
20 >
21 =
22 <
23 size
24 null
25 ServerName
26 Cell
27 [
28 ]
29 serverName
30 List
31 conf
32 true
33 CompletableFuture
34 Connection
35 Path
36 new
37 ==
38 name
39 t
40 Configuration
41 controller
42 Result
43 result
44 ?
45 ,
46 ServiceException
47 key
48 row
49 Throwable
50 server
51 InterruptedException
52 !
53 type
54 TableName
55 Set
56 start
57 0
58 this
59 HTableDescriptor
60 1
61 put
62 val
63 count
64 index
65 TableDescriptor
66 bytes
67 connection
68 value
69 RegionInfo
70 i
71 regions
72 Class
73 b
74 path
75 entry
76 e
77 cell
78 f
79 tableName
80 family
81 Collection
82 env
83 false
84 region
85 +
86 Void
87 Object
88 ByteBuffer
89 -
90 p
91 c
92 ts
93 n
94 now
95 offset
96 qualifier
97 regionInfo
98 2
99 FileSystem
100 100
101 HRegion
102 Table
103 table
104 request
105 s
106 -1
107 results
108 peerId
109 args
110 Integer
111 procId
112 HRegionInfo
113 admin
114 out
115 a
116 throw
0 <start>
1 MethodDeclaration
2 <end>
3 BlockStmt
4 NameExpr
5 ReturnStmt
6 MethodCallExpr
7 ExpressionStmt
8 FieldAccessExpr
9 ThisExpr
10 AssignExpr
11 NullLiteralExpr
12 IntegerLiteralExpr
13 BooleanLiteralExpr
14 BinaryExpr
15 ClassOrInterfaceType
16 LineComment
17 StringLiteralExpr
18 SuperExpr
19 UnaryExpr
20 ObjectCreationExpr
21 ConditionalExpr
22 EnclosedExpr
23 LongLiteralExpr
24 ThrowStmt
25 ClassExpr
Encoder output shape: (batch size, sequence length, units) (64, 11, 1024)
Encoder Hidden state shape: (batch size, units) (64, 1024)
Attention result shape: (batch size, units) (64, 1024)
Attention weights shape: (batch_size, sequence_length, 1) (64, 11, 1)
Decoder output shape: (batch_size, vocab size) (64, 27)
Epoch 1 Batch 0 Loss 0.8655
Epoch 1 Loss 0.6212
Time taken for 1 epoch 50.57230305671692 sec

Epoch 2 Batch 0 Loss 0.4692
Epoch 2 Loss 0.3727
Time taken for 1 epoch 8.809722661972046 sec

Epoch 3 Batch 0 Loss 0.3428
Epoch 3 Loss 0.2731
Time taken for 1 epoch 8.365203857421875 sec

Epoch 4 Batch 0 Loss 0.2582
Epoch 4 Loss 0.2045
Time taken for 1 epoch 8.821436643600464 sec

Epoch 5 Batch 0 Loss 0.1978
Epoch 5 Loss 0.1569
Time taken for 1 epoch 8.38124680519104 sec

Epoch 6 Batch 0 Loss 0.1690
Epoch 6 Loss 0.1315
Time taken for 1 epoch 8.79548716545105 sec

Epoch 7 Batch 0 Loss 0.1480
Epoch 7 Loss 0.1134
Time taken for 1 epoch 8.341504096984863 sec

Epoch 8 Batch 0 Loss 0.1324
Epoch 8 Loss 0.1029
Time taken for 1 epoch 8.763134956359863 sec

Epoch 9 Batch 0 Loss 0.1194
Epoch 9 Loss 0.0947
Time taken for 1 epoch 8.339268684387207 sec

Epoch 10 Batch 0 Loss 0.1089
Epoch 10 Loss 0.0910
Time taken for 1 epoch 8.791545629501343 sec

Part of train data.
Input: <start> final byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte qualifier <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final RegionInfo regionInfo <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public List < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> void void final TableName tableName <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final long bytes <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> private void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> final long <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public List < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final long <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte row <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final long <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean final byte name <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> private { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Throwable { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected Set < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte name <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte family <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Set < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> final byte family <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final long t <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Collection < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt StringLiteralExpr <end>
Input: <start> protected void final env <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean start final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte row <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final TableName <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected Collection < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void final server <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> public { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String final ServerName <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final int <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> int int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final long <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt StringLiteralExpr <end>
Input: <start> { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> Path Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return 2 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> protected throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void int i throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void ServerName serverName throws IOException <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public Configuration conf throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BooleanLiteralExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> byte key byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> void void throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void controller { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public String { return name } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public FileSystem { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public type { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public boolean { return false } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BooleanLiteralExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public IOException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public int { return regions } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> int int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public Class { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return 100 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> Connection Connection { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> int int Cell Cell <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Configuration { return conf } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> Connection Connection Configuration conf throws IOException <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> public void throws Throwable { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public void ServerName serverName throws IOException <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> public HRegion { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> int int Cell Cell <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void Table table throws IOException <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int index val <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> long long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return request } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> private Throwable { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void t { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String s { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Connection connection { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> int { return -1 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt UnaryExpr IntegerLiteralExpr <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void int { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void byte { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void Configuration conf { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void region { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return this } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ThisExpr <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void f { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Connection connection { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return this } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ThisExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = size } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NameExpr <end>
Input: <start> public void final long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private String long size { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr BooleanLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { String = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> protected void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public void final boolean b { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NameExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public < ? > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void { = 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr IntegerLiteralExpr <end>
Input: <start> public < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Configuration conf { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { String } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr BooleanLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> boolean boolean String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public String { return { + } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr <end>
Input: <start> protected void final String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void final long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt LineComment LineComment MethodCallExpr NameExpr <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr NameExpr <end>
Input: <start> private int region { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void final String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> int int throws IOException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void final { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected throws IOException { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> protected void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> CompletableFuture < Void > CompletableFuture < Void > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public byte { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> Object [ ] Object { return results } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> ByteBuffer ByteBuffer throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public byte { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void throws InterruptedException , { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> HTableDescriptor [ ] HTableDescriptor String throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> byte row boolean throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr LongLiteralExpr <end>
Input: <start> boolean boolean boolean boolean throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> protected void entry throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( null ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NullLiteralExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private void Result result int i { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> List < String > List < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> [ ] { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private RegionInfo { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr <end>
Input: <start> public ServerName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> CompletableFuture < > CompletableFuture < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final TableName tableName final <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public void env throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long size { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public ServerName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public TableName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public boolean { return > 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt LineComment LineComment BinaryExpr FieldAccessExpr ThisExpr IntegerLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr FieldAccessExpr NameExpr <end>
Input: <start> public void { ( false ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr BooleanLiteralExpr <end>
Input: <start> public { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> < > < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int size { return - } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr NameExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return - } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr FieldAccessExpr ThisExpr NameExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr NameExpr <end>
Input: <start> public String { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> CompletableFuture < > CompletableFuture < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> HTableDescriptor [ ] HTableDescriptor throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> long long String peerId throws , IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> void void String name <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private void String throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return ( int ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String args throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public CompletableFuture < > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result int i { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public server throws { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ObjectCreationExpr ClassOrInterfaceType ClassOrInterfaceType BinaryExpr StringLiteralExpr MethodCallExpr NameExpr MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public CompletableFuture < Integer > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void int int count { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean Path p { String return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void int { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean final long procId { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void int throws { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String HRegionInfo { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public c throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void String Throwable e { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public List < > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( true ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { final } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void { ( conf ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> private void int row Result result { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String int { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String final String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Set < > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void admin throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { ( out ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void Cell Cell { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return ( int ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> private void p throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> String RegionInfo { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Cell Cell { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public c throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void a b { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Accuracy :  61.41078838174274
BLEU :  [1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.452319977366798e-231, 1.5677619884393257e-231, 1.3955027237671406e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.452319977366798e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3955027237671406e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3483065280626046e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.452319977366798e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3483065280626046e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.3435336867013266e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3887656922647428e-231, 1.3165594234639305e-231, 1.5677619884393257e-231, 1.417219350102421e-231, 1.3955027237671406e-231, 1.5677619884393257e-231, 1.3955027237671406e-231, 1.417219350102421e-231, 1.3165594234639305e-231, 1.3165594234639305e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3955027237671406e-231, 1.3165594234639305e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.446178951977432e-231, 1.3955027237671406e-231, 1.3165594234639305e-231, 1.3955027237671406e-231, 1.3887656922647428e-231, 1.4019308198091064e-231, 1.417219350102421e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3165594234639305e-231, 1.3955027237671406e-231, 1.446178951977432e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.3165594234639305e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.3165594234639305e-231, 1.3165594234639305e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.3955027237671406e-231, 1.5677619884393257e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.446178951977432e-231, 1.5677619884393257e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3955027237671406e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.3165594234639305e-231, 1.3955027237671406e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3165594234639305e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3712934633577556e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4720386119228615e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4720386119228615e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3416480207402436e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3014440956899565e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.3014440956899565e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.3048555118335446e-231, 1.2882297539194154e-231, 1.2882297539194154e-231, 1.375558813346999e-231, 1.5412290386568077e-231, 1.2882297539194154e-231, 1.3014440956899565e-231, 1.2423111676412644e-231, 1.5412290386568077e-231, 1.3416480207402436e-231, 1.2882297539194154e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.2882297539194154e-231, 1.2882297539194154e-231, 1.375558813346999e-231, 1.5677619884393257e-231, 1.2423111676412644e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3423535944897285e-231, 1.375558813346999e-231, 1.2882297539194154e-231, 1.5412290386568077e-231, 1.2882297539194154e-231, 1.2882297539194154e-231, 1.2882297539194154e-231, 1.3409182690312023e-231, 1.375558813346999e-231, 1.5412290386568077e-231, 1.4033911663926262e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.2882297539194154e-231, 1.5412290386568077e-231, 1.3142677534656346e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.452319977366798e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.375558813346999e-231, 1.2423111676412644e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3153652640281735e-231, 1.3933116309307982e-231, 1.4859931444866587e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.3153652640281735e-231, 1.3153652640281735e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3142677534656346e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3153652640281735e-231, 1.3470131869789734e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5412290386568077e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.4859931444866587e-231, 1.3933116309307982e-231, 1.4238840495486763e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.5412290386568077e-231, 1.3153652640281735e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.227528094654964e-231, 1.285151524626267e-231, 1.322612729825152e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.384292958842266e-231, 1.3933116309307982e-231, 1.347146693416745e-231, 1.3283260927349745e-231, 1.446178951977432e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.3153652640281735e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3153652640281735e-231, 1.4238840495486763e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5677619884393257e-231, 1.3153652640281735e-231, 1.3153652640281735e-231, 1.3933116309307982e-231, 1.3933116309307982e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.0922264590844235e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.2439956612288083e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231]/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)

Avg of BLEU :  1.4817590352939967e-231
BLEU all :  0
Traceback (most recent call last):
  File "logging_nmt_with_attention.py", line 784, in <module>
    print("BLEU2 : ", sentence_bleu(list(map(lambda sen: sen.split(), sentence_arr)), list(map(lambda sen2: sen2.split(), sentence2_arr))))
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 106, in sentence_bleu
    [references], [hypothesis], weights, smoothing_function, auto_reweigh
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 185, in corpus_bleu
    p_i = modified_precision(references, hypothesis, i)
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 318, in modified_precision
    counts = Counter(ngrams(hypothesis, n)) if len(hypothesis) >= n else Counter()
  File "/usr/lib/python3.6/collections/__init__.py", line 535, in __init__
    self.update(*args, **kwds)
  File "/usr/lib/python3.6/collections/__init__.py", line 622, in update
    _count_elements(self, iterable)
TypeError: unhashable type: 'list'
