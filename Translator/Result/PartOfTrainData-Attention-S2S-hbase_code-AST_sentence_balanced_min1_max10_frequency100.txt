/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
Using TensorFlow backend.
WARNING:tensorflow:From logging_nmt_with_attention.py:87: The name tf.enable_eager_execution is deprecated. Please use tf.compat.v1.enable_eager_execution instead.

2019-11-13 13:47:27.042897: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1
2019-11-13 13:47:27.047745: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-13 13:47:27.048400: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties: 
name: GeForce RTX 2070 major: 7 minor: 5 memoryClockRate(GHz): 1.62
pciBusID: 0000:01:00.0
2019-11-13 13:47:27.048467: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcudart.so.10.0'; dlerror: libcudart.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.048519: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcublas.so.10.0'; dlerror: libcublas.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.048568: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcufft.so.10.0'; dlerror: libcufft.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.048616: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcurand.so.10.0'; dlerror: libcurand.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.048665: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusolver.so.10.0'; dlerror: libcusolver.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.048713: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusparse.so.10.0'; dlerror: libcusparse.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-13 13:47:27.051083: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7
2019-11-13 13:47:27.051099: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1663] Cannot dlopen some GPU libraries. Skipping registering GPU devices...
2019-11-13 13:47:27.051301: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-11-13 13:47:27.221106: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-13 13:47:27.221735: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5604d40 executing computations on platform CUDA. Devices:
2019-11-13 13:47:27.221753: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce RTX 2070, Compute Capability 7.5
2019-11-13 13:47:27.243055: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3408000000 Hz
2019-11-13 13:47:27.243627: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x54a36d0 executing computations on platform Host. Devices:
2019-11-13 13:47:27.243668: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2019-11-13 13:47:27.243721: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-13 13:47:27.243731: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      
WARNING:tensorflow:Entity <function train_step at 0x7fb21d2d6488> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function train_step at 0x7fb21d2d6488>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method Encoder.call of <__main__.Encoder object at 0x7fb2303f49e8>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Encoder.call of <__main__.Encoder object at 0x7fb2303f49e8>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:From /home/momo/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
2019-11-13 13:47:42.856752: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1967
2019-11-13 13:47:42.856824: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1968
2019-11-13 13:47:42.857048: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2333
2019-11-13 13:47:42.857072: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2334
2019-11-13 13:47:42.857255: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2731
2019-11-13 13:47:42.857277: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2732
2019-11-13 13:47:42.857460: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3126
2019-11-13 13:47:42.857481: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3127
2019-11-13 13:47:42.857658: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3521
2019-11-13 13:47:42.857680: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3522
2019-11-13 13:47:42.857856: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3916
2019-11-13 13:47:42.857877: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3917
2019-11-13 13:47:42.858062: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4311
2019-11-13 13:47:42.858084: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4312
2019-11-13 13:47:42.858260: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4706
2019-11-13 13:47:42.858282: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4707
2019-11-13 13:47:42.858460: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5101
2019-11-13 13:47:42.858482: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5102
2019-11-13 13:47:42.858693: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5496
2019-11-13 13:47:42.858715: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5497
2019-11-13 13:47:42.858897: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5891
2019-11-13 13:47:42.858919: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5892
2019-11-13 13:47:42.859104: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6286
2019-11-13 13:47:42.859127: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6287
2019-11-13 13:47:42.859311: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6681
2019-11-13 13:47:42.859333: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6682
2019-11-13 13:47:42.859516: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_7076
2019-11-13 13:47:42.859537: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_7077
2019-11-13 13:47:42.859721: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7471
2019-11-13 13:47:42.859741: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7472
2019-11-13 13:47:42.859950: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7471_rewritten
2019-11-13 13:47:42.860002: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7472_rewritten
2019-11-13 13:47:42.860323: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_7471_grad_8977
2019-11-13 13:47:42.860371: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_7472_grad_8013
2019-11-13 13:47:42.860964: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_7076_rewritten
2019-11-13 13:47:42.861018: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_7077_rewritten
2019-11-13 13:47:42.861375: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_7076_grad_10575
2019-11-13 13:47:42.861423: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_7077_grad_9611
2019-11-13 13:47:42.862018: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6681_rewritten
2019-11-13 13:47:42.862072: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6682_rewritten
2019-11-13 13:47:42.862407: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_6681_grad_12032
2019-11-13 13:47:42.862454: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_6682_grad_11068
2019-11-13 13:47:42.863092: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6286_rewritten
2019-11-13 13:47:42.863147: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6287_rewritten
2019-11-13 13:47:42.863476: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_6286_grad_13489
2019-11-13 13:47:42.863524: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_6287_grad_12525
2019-11-13 13:47:42.864119: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5891_rewritten
2019-11-13 13:47:42.864173: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5892_rewritten
2019-11-13 13:47:42.864505: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_5891_grad_14946
2019-11-13 13:47:42.864552: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_5892_grad_13982
2019-11-13 13:47:42.865141: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5496_rewritten
2019-11-13 13:47:42.865196: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5497_rewritten
2019-11-13 13:47:42.865526: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_5496_grad_16403
2019-11-13 13:47:42.865573: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_5497_grad_15439
2019-11-13 13:47:42.866169: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5101_rewritten
2019-11-13 13:47:42.866225: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5102_rewritten
2019-11-13 13:47:42.866582: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_5101_grad_17860
2019-11-13 13:47:42.866631: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_5102_grad_16896
2019-11-13 13:47:42.867216: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4706_rewritten
2019-11-13 13:47:42.867270: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4707_rewritten
2019-11-13 13:47:42.867599: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_4706_grad_19317
2019-11-13 13:47:42.867647: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_4707_grad_18353
2019-11-13 13:47:42.868234: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4311_rewritten
2019-11-13 13:47:42.868292: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4312_rewritten
2019-11-13 13:47:42.868620: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_4311_grad_20774
2019-11-13 13:47:42.868666: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_4312_grad_19810
2019-11-13 13:47:42.869255: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3916_rewritten
2019-11-13 13:47:42.869310: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3917_rewritten
2019-11-13 13:47:42.869639: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_3916_grad_22231
2019-11-13 13:47:42.869686: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_3917_grad_21267
2019-11-13 13:47:42.870288: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3521_rewritten
2019-11-13 13:47:42.870342: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3522_rewritten
2019-11-13 13:47:42.870721: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_3521_grad_23688
2019-11-13 13:47:42.870769: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_3522_grad_22724
2019-11-13 13:47:42.871362: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3126_rewritten
2019-11-13 13:47:42.871416: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3127_rewritten
2019-11-13 13:47:42.871744: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_3126_grad_25145
2019-11-13 13:47:42.871791: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_3127_grad_24181
2019-11-13 13:47:42.872382: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2731_rewritten
2019-11-13 13:47:42.872436: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2732_rewritten
2019-11-13 13:47:42.872765: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_2731_grad_26602
2019-11-13 13:47:42.872812: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_2732_grad_25638
2019-11-13 13:47:42.873399: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2333_rewritten
2019-11-13 13:47:42.873454: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2334_rewritten
2019-11-13 13:47:42.873787: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_2333_grad_28059
2019-11-13 13:47:42.873834: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_2334_grad_27095
2019-11-13 13:47:42.874426: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1967_rewritten
2019-11-13 13:47:42.874485: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1968_rewritten
2019-11-13 13:47:42.874859: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_1967_grad_29542
2019-11-13 13:47:42.874908: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_1968_grad_28578
WARNING:tensorflow:Entity <function Function._initialize_uninitialized_variables.<locals>.initialize_variables at 0x7fb21d2c5048> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function Function._initialize_uninitialized_variables.<locals>.initialize_variables at 0x7fb21d2c5048>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <function train_step at 0x7fb21d2d6488> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <function train_step at 0x7fb21d2d6488>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method Encoder.call of <__main__.Encoder object at 0x7fb2303f49e8>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Encoder.call of <__main__.Encoder object at 0x7fb2303f49e8>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
WARNING:tensorflow:Entity <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Decoder.call of <__main__.Decoder object at 0x7fb21d323da0>>: AttributeError: module 'gast' has no attribute 'Num'
WARNING:tensorflow:Entity <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>> could not be transformed and will be executed as-is. Please report this to the AutgoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BahdanauAttention.call of <__main__.BahdanauAttention object at 0x7fb21d38f128>>: AssertionError: Bad argument number for Name: 3, expecting 4
2019-11-13 13:47:58.278433: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30736
2019-11-13 13:47:58.278504: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30737
2019-11-13 13:47:58.278715: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31102
2019-11-13 13:47:58.278740: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31103
2019-11-13 13:47:58.278919: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31500
2019-11-13 13:47:58.278942: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31501
2019-11-13 13:47:58.279129: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31895
2019-11-13 13:47:58.279150: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31896
2019-11-13 13:47:58.279328: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32290
2019-11-13 13:47:58.279349: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32291
2019-11-13 13:47:58.279525: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32685
2019-11-13 13:47:58.279546: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32686
2019-11-13 13:47:58.279724: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_33080
2019-11-13 13:47:58.279745: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_33081
2019-11-13 13:47:58.279919: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33475
2019-11-13 13:47:58.279940: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33476
2019-11-13 13:47:58.280115: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33870
2019-11-13 13:47:58.280136: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33871
2019-11-13 13:47:58.280313: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34265
2019-11-13 13:47:58.280333: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34266
2019-11-13 13:47:58.280515: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34660
2019-11-13 13:47:58.280537: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34661
2019-11-13 13:47:58.280719: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_35055
2019-11-13 13:47:58.280740: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_35056
2019-11-13 13:47:58.280921: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35450
2019-11-13 13:47:58.280942: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35451
2019-11-13 13:47:58.281152: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35845
2019-11-13 13:47:58.281172: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35846
2019-11-13 13:47:58.281370: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36240
2019-11-13 13:47:58.281391: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36241
2019-11-13 13:47:58.281614: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36240_rewritten
2019-11-13 13:47:58.281667: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36241_rewritten
2019-11-13 13:47:58.281999: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_cond_36240_grad_37746
2019-11-13 13:47:58.282051: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_13_gru_1_while_body_36241_grad_36782
2019-11-13 13:47:58.282710: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35845_rewritten
2019-11-13 13:47:58.282765: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35846_rewritten
2019-11-13 13:47:58.283098: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_cond_35845_grad_39344
2019-11-13 13:47:58.283146: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_12_gru_1_while_body_35846_grad_38380
2019-11-13 13:47:58.283738: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35450_rewritten
2019-11-13 13:47:58.283793: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35451_rewritten
2019-11-13 13:47:58.284123: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_cond_35450_grad_40801
2019-11-13 13:47:58.284170: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_11_gru_1_while_body_35451_grad_39837
2019-11-13 13:47:58.284763: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_35055_rewritten
2019-11-13 13:47:58.284816: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_35056_rewritten
2019-11-13 13:47:58.285144: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_cond_35055_grad_42258
2019-11-13 13:47:58.285191: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_10_gru_1_while_body_35056_grad_41294
2019-11-13 13:47:58.285785: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34660_rewritten
2019-11-13 13:47:58.285840: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34661_rewritten
2019-11-13 13:47:58.286166: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_cond_34660_grad_43715
2019-11-13 13:47:58.286212: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_9_gru_1_while_body_34661_grad_42751
2019-11-13 13:47:58.286833: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34265_rewritten
2019-11-13 13:47:58.286888: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34266_rewritten
2019-11-13 13:47:58.287222: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_cond_34265_grad_45172
2019-11-13 13:47:58.287267: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_8_gru_1_while_body_34266_grad_44208
2019-11-13 13:47:58.287859: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33870_rewritten
2019-11-13 13:47:58.287913: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33871_rewritten
2019-11-13 13:47:58.288244: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_cond_33870_grad_46629
2019-11-13 13:47:58.288295: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_7_gru_1_while_body_33871_grad_45665
2019-11-13 13:47:58.288889: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33475_rewritten
2019-11-13 13:47:58.288942: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33476_rewritten
2019-11-13 13:47:58.289272: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_cond_33475_grad_48086
2019-11-13 13:47:58.289319: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_6_gru_1_while_body_33476_grad_47122
2019-11-13 13:47:58.289915: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_33080_rewritten
2019-11-13 13:47:58.289968: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_33081_rewritten
2019-11-13 13:47:58.290303: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_cond_33080_grad_49543
2019-11-13 13:47:58.290349: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_5_gru_1_while_body_33081_grad_48579
2019-11-13 13:47:58.290994: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32685_rewritten
2019-11-13 13:47:58.291050: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32686_rewritten
2019-11-13 13:47:58.291380: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_cond_32685_grad_51000
2019-11-13 13:47:58.291427: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_4_gru_1_while_body_32686_grad_50036
2019-11-13 13:47:58.292018: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32290_rewritten
2019-11-13 13:47:58.292072: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32291_rewritten
2019-11-13 13:47:58.292401: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_cond_32290_grad_52457
2019-11-13 13:47:58.292447: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_3_gru_1_while_body_32291_grad_51493
2019-11-13 13:47:58.293039: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31895_rewritten
2019-11-13 13:47:58.293093: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31896_rewritten
2019-11-13 13:47:58.293419: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_cond_31895_grad_53914
2019-11-13 13:47:58.293465: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_2_gru_1_while_body_31896_grad_52950
2019-11-13 13:47:58.294058: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31500_rewritten
2019-11-13 13:47:58.294114: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31501_rewritten
2019-11-13 13:47:58.294447: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_cond_31500_grad_55371
2019-11-13 13:47:58.294496: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_1_gru_1_while_body_31501_grad_54407
2019-11-13 13:47:58.295124: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31102_rewritten
2019-11-13 13:47:58.295180: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31103_rewritten
2019-11-13 13:47:58.295505: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_cond_31102_grad_56828
2019-11-13 13:47:58.295552: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: decoder_gru_1_while_body_31103_grad_55864
2019-11-13 13:47:58.296149: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30736_rewritten
2019-11-13 13:47:58.296204: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30737_rewritten
2019-11-13 13:47:58.296530: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_cond_30736_grad_58311
2019-11-13 13:47:58.296577: W tensorflow/core/common_runtime/eager/context.cc:371] Added two functions with the same name: encoder_gru_while_body_30737_grad_57347
2019-11-13 13:48:00.009188: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:502] constant folding failed: Invalid argument: Unsupported type: 21
2019-11-13 13:48:05.218083: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:502] constant folding failed: Invalid argument: Unsupported type: 21
2019-11-13 13:48:08.944731: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
Input data
zero :  378
one :  370

Target data
zero :  378
one :  370

598 598 150 150
Input Language; index to word mapping
1 ----> <start>
6 ----> void
6 ----> void
11 ----> String
2 ----> <end>

Target Language; index to word mapping
1 ----> <start>
2 ----> MethodDeclaration
3 ----> <end>
0 <start>
1 <end>
2 {
3 }
4 public
5 void
6 return
7 throws
8 (
9 )
10 String
11 long
12 int
13 boolean
14 private
15 IOException
16 Exception
17 final
18 protected
19 byte
20 >
21 =
22 <
23 size
24 null
25 ServerName
26 Cell
27 [
28 ]
29 serverName
30 List
31 ExtendedCellBuilder
32 conf
33 true
34 CompletableFuture
35 stop
36 listener
37 inc
38 Connection
39 Path
40 new
41 ==
42 PositionedByteRange
43 name
44 t
45 T
46 model
47 usage
48 Configuration
49 controller
50 tearDown
51 Result
52 result
53 ?
54 ,
55 RpcController
56 ServiceException
57 TEST_UTIL.shutdownMiniCluster
58 key
59 row
60 double
61 Throwable
62 toString
63 server
64 InterruptedException
65 ExecutionException
66 expected
67 System.exit
68 !
69 ByteBuff
70 type
71 TableName
72 Set
73 start
74 Procedure
75 hashCode
76 0
77 msg
78 this
79 why
80 HTableDescriptor
81 1
82 actual
83 tearDownAfterClass
84 Bytes
85 close
86 put
87 val
88 reset
89 count
90 index
91 TableDescriptor
92 limit
93 bytes
94 connection
95 setup
96 value
97 RegionInfo
98 proc
99 i
100 regions
101 Class
102 ReplicationPeerConfig
103 static
104 encodedRegionName
105 message
106 clear
107 b
108 this.row
109 path
110 WAL
111 entry
112 Boolean
113 sn
114 time
115 short
116 position
117 e
118 BlockCache
119 cmp
120 shutdown
121 cell
122 f
123 Chunk
124 tableName
125 timestamp
126 setRow
127 ColumnFamilyDescriptor
128 family
129 Collection
130 env
131 location
132 RegionServerServices
133 getName
134 50
135 Job
136 false
137 exception
138 HConstants.NO_NONCE
139 delta
140 setConf
141 Region
142 region
143 float
144 this.columns
145 +
146 ZKWatcher
147 zkw
148 Void
149 Object
150 ByteBuffer
151 source
152 ClusterMetrics
153 Optional
154 User
155 -
156 pattern
157 ReplicationException
158 TimeRange
159 p
160 ...
161 hris
162 metric
163 c
164 TColumnValue
165 isSetRow
166 err
167 setUpBeforeClass
168 Entry
169 maxVersions
170 V
171 fileName
172 ts
173 timeout
174 compareTo
175 Row
176 n
177 create
178 sync
179 now
180 startTime
181 src
182 TimeUnit
183 unit
184 next
185 task
186 Message
187 param
188 set
189 init
190 offset
191 block
192 FileStatus
193 context
194 len
195 test
196 before
197 qualifier
198 regionInfo
199 seqId
200 QuotaSettings
201 RetriesExhaustedWithDetailsException
202 HStore
203 tn
204 HRegionLocation
205 StoreFileWriter
206 tags
207 failed
208 rpcTimeout
209 2
210 endTime
211 columnFamily
212 BlockType
213 column
214 caching
215 FileSystem
216 this.fs
217 validate
218 org.apache.thrift.TException
219 ExecutorService
220 priority
221 metrics
222 protocol
223 100
224 getConnection
225 this.connection
226 compare
227 getConf
228 CellComparator
229 comparator
230 iv
231 HRegion
232 this.region
233 info
234 Table
235 table
236 CommandLine
237 cmd
238 request
239 throwable
240 Thread
241 job
242 retries
243 header
244 status
245 s
246 queueId
247 reason
248 -1
249 File
250 CellModel
251 setUp
252 hash
253 callable
254 action
255 results
256 DataInputStream
257 regex
258 Order
259 1L
260 enabled
261 append
262 writer
263 WAL.Entry
264 RegionLocations
265 CoprocessorEnvironment
266 getTableName
267 master.getAssignmentManager
268 this.length
269 InetSocketAddress
270 Pattern
271 peerId
272 heapSize
273 MemStoreSize
274 main
275 args
276 clone
277 URL
278 Integer
279 output
280 procId
281 total
282 HRegionInfo
283 handler
284 Filter
285 filter
286 port
287 Admin
288 admin
289 out
290 Mutation
291 a
292 array
293 throw
294 UnsupportedOperationException
295 nonceGroup
296 InvalidProtocolBufferException
297 clazz
298 this.conf
299 cleanup
300 K
301 obj
302 TColumn
303 extends
304 Store
305 filename
306 synchronized
307 initialize
308 after
309 KeeperException
310 C
0 <start>
1 MethodDeclaration
2 <end>
3 BlockStmt
4 NameExpr
5 ReturnStmt
6 MethodCallExpr
7 ExpressionStmt
8 FieldAccessExpr
9 ThisExpr
10 AssignExpr
11 NullLiteralExpr
12 IntegerLiteralExpr
13 BooleanLiteralExpr
14 BinaryExpr
15 ClassOrInterfaceType
16 LineComment
17 StringLiteralExpr
18 SuperExpr
19 UnaryExpr
20 ObjectCreationExpr
21 ConditionalExpr
22 EnclosedExpr
23 LongLiteralExpr
24 ThrowStmt
25 ClassExpr
26 SynchronizedStmt
Encoder output shape: (batch size, sequence length, units) (64, 12, 1024)
Encoder Hidden state shape: (batch size, units) (64, 1024)
Attention result shape: (batch size, units) (64, 1024)
Attention weights shape: (batch_size, sequence_length, 1) (64, 12, 1)
Decoder output shape: (batch_size, vocab size) (64, 28)
Epoch 1 Batch 0 Loss 0.8541
Epoch 1 Loss 0.6161
Time taken for 1 epoch 51.2127525806427 sec

Epoch 2 Batch 0 Loss 0.4000
Epoch 2 Loss 0.3673
Time taken for 1 epoch 9.059184312820435 sec

Epoch 3 Batch 0 Loss 0.2864
Epoch 3 Loss 0.2700
Time taken for 1 epoch 8.641908645629883 sec

Epoch 4 Batch 0 Loss 0.2187
Epoch 4 Loss 0.2094
Time taken for 1 epoch 9.04320740699768 sec

Epoch 5 Batch 0 Loss 0.1700
Epoch 5 Loss 0.1709
Time taken for 1 epoch 8.640493392944336 sec

Epoch 6 Batch 0 Loss 0.1331
Epoch 6 Loss 0.1387
Time taken for 1 epoch 9.072741508483887 sec

Epoch 7 Batch 0 Loss 0.1263
Epoch 7 Loss 0.1146
Time taken for 1 epoch 8.598305702209473 sec

Epoch 8 Batch 0 Loss 0.1021
Epoch 8 Loss 0.0990
Time taken for 1 epoch 9.042383193969727 sec

Epoch 9 Batch 0 Loss 0.0889
Epoch 9 Loss 0.0868
Time taken for 1 epoch 8.608878135681152 sec

Epoch 10 Batch 0 Loss 0.0831
Epoch 10 Loss 0.0803
Time taken for 1 epoch 9.039575338363647 sec

Part of train data.
Input: <start> final byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int inc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> ExtendedCellBuilder ExtendedCellBuilder final byte qualifier <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final RegionInfo regionInfo <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public List < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> void void final TableName tableName <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final long bytes <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> private void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> ExtendedCellBuilder ExtendedCellBuilder final long seqId <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public List < QuotaSettings > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final long timestamp <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> ExtendedCellBuilder ExtendedCellBuilder setRow final byte row <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public double { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final listener <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final long timestamp <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean final byte name <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> private { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Throwable { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected Set < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> ColumnFamilyDescriptor ColumnFamilyDescriptor final byte name <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte family <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final listener <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean final listener <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Set < > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RetriesExhaustedWithDetailsException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> final byte family <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String toString { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final long t <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Collection < HStore > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt StringLiteralExpr <end>
Input: <start> protected void final env <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> ExtendedCellBuilder ExtendedCellBuilder final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> boolean boolean start final listener <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> setRow final byte row <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final TableName tn <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final Procedure proc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> final byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final HRegionLocation location <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int inc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String toString { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final listener <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected Collection < StoreFileWriter > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> boolean boolean final Procedure proc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String toString { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void setup final RegionServerServices server <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String final ServerName sn <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void final int inc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> int int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> final type <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final long inc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> ExtendedCellBuilder ExtendedCellBuilder final byte tags <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final int inc <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt StringLiteralExpr <end>
Input: <start> { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int hashCode { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> Path Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String getName { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean failed { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return rpcTimeout } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public double { return 50 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return 2 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> protected T throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void int i throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void ServerName serverName throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public Job Configuration conf throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BooleanLiteralExpr <end>
Input: <start> public long { return endTime } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> byte key byte value <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public double { return 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return columnFamily } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> void void BlockType throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void setup RegionServerServices server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void controller { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public String getName { return name } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return column } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public { return listener } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected int { return caching } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public FileSystem { return this.fs } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public type { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public boolean { return false } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BooleanLiteralExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void validate throws org.apache.thrift.TException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public ExecutorService { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return priority } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public IOException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public Path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public int { return regions } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return 50 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> int int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public { return metrics } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> private byte { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public Class { return protocol } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public long { return 100 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt IntegerLiteralExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> Connection Connection getConnection { return this.connection } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> int int compare Cell Cell <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public Configuration getConf { return conf } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> Connection Connection Configuration conf throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void throws Throwable { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public CellComparator { return comparator } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public byte { return iv } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected ReplicationPeerConfig { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> public void ServerName serverName throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public HRegion { return this.region } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public long { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public info { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> int int Cell Cell <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void tearDown throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void Table table throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected void CommandLine cmd { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public { return exception } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public PositionedByteRange int index short val <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> long long { return HConstants.NO_NONCE } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr NameExpr <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String { return request } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt FieldAccessExpr ThisExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> private Throwable throwable { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void Thread t { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void Job job { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long retries { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void header { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void status String s { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String queueId { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void model { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void model { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String msg { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Connection connection { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void model { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long delta { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { T return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String reason { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> static int { return -1 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt UnaryExpr IntegerLiteralExpr <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { T return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void int { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void byte encodedRegionName { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long delta { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void setConf Configuration conf { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String msg { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Region region { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return this } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ThisExpr <end>
Input: <start> public void stop String why { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String usage { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void File f { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void usage String msg { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void CellModel model { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String message { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void server { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void int size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Connection connection { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public { return this } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ThisExpr <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void model { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void setUp throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void tearDown throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String msg { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = size } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NameExpr <end>
Input: <start> public void final long size { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private String long size { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void clear { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr BooleanLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { String = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> protected void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public void final boolean b { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { hash = } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NameExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { this.row = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void clear { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public < ? > callable <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void reset { = 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr IntegerLiteralExpr <end>
Input: <start> public T < T > action <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public float Configuration conf { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { String } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr BooleanLiteralExpr <end>
Input: <start> public void exception { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public void { this.columns = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> boolean boolean String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void clear { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
Input: <start> public void reset { = null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr NameExpr NullLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> public String toString { return { + } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr <end>
Input: <start> protected void final String message { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private boolean { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String String { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void final long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { WAL } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt LineComment LineComment MethodCallExpr NameExpr <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr NameExpr <end>
Input: <start> private int Region region { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void final String message { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> int int throws IOException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void final { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String path { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt ReturnStmt <end>
Input: <start> public { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected throws IOException { return new } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
Input: <start> protected void { = true } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public String ZKWatcher zkw { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean { return == } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> CompletableFuture < Void > CompletableFuture < Void > shutdown <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public byte { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> Object [ ] Object { return results } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> protected Procedure { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> ByteBuffer ByteBuffer DataInputStream source throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public byte { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public int position { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void throws InterruptedException , ExecutionException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> HTableDescriptor [ ] HTableDescriptor String regex throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public Order { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> byte row boolean throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public void { ( 1L ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr LongLiteralExpr <end>
Input: <start> boolean boolean boolean enabled boolean throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> protected void append writer WAL.Entry entry throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public void { ( null ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NullLiteralExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int hashCode { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private void Result result int i { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> List < String > List < String > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> [ ] { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private RegionInfo { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr <end>
Input: <start> public ServerName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> CompletableFuture < ClusterMetrics > CompletableFuture < ClusterMetrics > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> void void final TableName tableName final RegionLocations location <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public void stop CoprocessorEnvironment env throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public long size { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public ServerName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public TableName getTableName { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public boolean { return > 0 } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt LineComment LineComment BinaryExpr FieldAccessExpr ThisExpr IntegerLiteralExpr <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr FieldAccessExpr NameExpr <end>
Input: <start> public void stop { ( false ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr BooleanLiteralExpr <end>
Input: <start> public { return master.getAssignmentManager ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> Optional < User > Optional < User > <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int size { return - } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr NameExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return this.length - } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt BinaryExpr FieldAccessExpr ThisExpr NameExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr NameExpr <end>
Input: <start> public InetSocketAddress String encodedRegionName { return null } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt NullLiteralExpr <end>
Input: <start> CompletableFuture < Boolean > CompletableFuture < Boolean > <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public double { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public int { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> HTableDescriptor [ ] HTableDescriptor Pattern pattern throws IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> long long String peerId throws ReplicationException , IOException <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public int hashCode { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long heapSize { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr <end>
Input: <start> public String { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> void void String name double expected source <end>
Predicted translation: <start> MethodDeclaration <end>
BLEU test
<start> MethodDeclaration <end>
<start> MethodDeclaration <end>
Input: <start> public boolean { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public MemStoreSize { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr FieldAccessExpr ThisExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> public long { return ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
Input: <start> private void String throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { System.exit ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public RpcController controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return ( int ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void main String args throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void TimeRange TimeRange clone { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public CompletableFuture < Boolean > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , ExecutionException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result int i { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public URL server throws { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt AssignExpr FieldAccessExpr ThisExpr NullLiteralExpr <end>
<start> MethodDeclaration BlockStmt ReturnStmt ObjectCreationExpr ClassOrInterfaceType ClassOrInterfaceType BinaryExpr StringLiteralExpr MethodCallExpr NameExpr MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public CompletableFuture < Integer > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> void void int int count { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String output String pattern { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RpcController controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean Path p { String return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RpcController controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void int { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public boolean final long procId { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void int total throws ReplicationException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , ExecutionException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String HRegionInfo ... hris { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String metric long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , ExecutionException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RpcController c throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Result result throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { System.exit ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void String why Throwable e { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void { ( ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void long expected long actual { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public List < WAL > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void stop { ( true ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr FieldAccessExpr ThisExpr BooleanLiteralExpr <end>
Input: <start> public void handler throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Filter filter throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void long expected long actual { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { final WAL } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { System.exit ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void { System.exit ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> public void { ( conf ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> private void int row Result result { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void String int port { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public String final String encodedRegionName { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public Set < > { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void ReplicationPeerConfig expected ReplicationPeerConfig actual { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void ServerName serverName throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void Admin admin throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> protected void { ( out ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr NameExpr <end>
Input: <start> public void Cell Cell { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws InterruptedException , ExecutionException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void throws Exception { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RpcController controller throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void String metric long { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public int { return ( int ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void usage { System.exit ( 1 ) } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt ExpressionStmt MethodCallExpr NameExpr IntegerLiteralExpr <end>
Input: <start> private void Mutation p throws IOException { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> static String RegionInfo ... hris { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
BLEU test
<start> MethodDeclaration BlockStmt ReturnStmt MethodCallExpr NameExpr <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> private void Cell expected Cell actual { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public RpcController c throws ServiceException { return } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Input: <start> public void TColumnValue a TColumnValue b { } <end>
Predicted translation: <start> MethodDeclaration BlockStmt <end>
BLEU test
<start> MethodDeclaration BlockStmt <end>
<start> MethodDeclaration BlockStmt <end>
Accuracy :  75.31120331950207
BLEU :  [1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.452319977366798e-231, 1.5677619884393257e-231, 1.4859931444866587e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.452319977366798e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3483065280626046e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.485728473865243e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3483065280626046e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3887656922647428e-231, 1.3165594234639305e-231, 1.5677619884393257e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.5677619884393257e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.4019308198091064e-231, 1.3165594234639305e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.446178951977432e-231, 1.4859931444866587e-231, 1.3165594234639305e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.3165594234639305e-231, 1.417219350102421e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3887656922647428e-231, 1.3955027237671406e-231, 1.446178951977432e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.3165594234639305e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.417219350102421e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.3165594234639305e-231, 1.3165594234639305e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.417219350102421e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.5677619884393257e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.446178951977432e-231, 1.5677619884393257e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3955027237671406e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3955027237671406e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.4019308198091064e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.4019308198091064e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.3887656922647428e-231, 1.4859931444866587e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4859931444866587e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3969362158714698e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4720386119228615e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.4720386119228615e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.354867824134309e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3014440956899565e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.3014440956899565e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.3423535944897285e-231, 1.3334993494212447e-231, 1.3334993494212447e-231, 1.375558813346999e-231, 1.5412290386568077e-231, 1.3334993494212447e-231, 1.3014440956899565e-231, 1.3024980396734287e-231, 1.5412290386568077e-231, 1.354867824134309e-231, 1.3334993494212447e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.375558813346999e-231, 1.3334993494212447e-231, 1.2761323602556544e-231, 1.375558813346999e-231, 1.5677619884393257e-231, 1.3024980396734287e-231, 1.5677619884393257e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3048555118335446e-231, 1.375558813346999e-231, 1.3334993494212447e-231, 1.5412290386568077e-231, 1.299995630345669e-231, 1.3334993494212447e-231, 1.3334993494212447e-231, 1.3283260927349745e-231, 1.375558813346999e-231, 1.5412290386568077e-231, 1.4033911663926262e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.2882297539194154e-231, 1.5412290386568077e-231, 1.3142677534656346e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.452319977366798e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.375558813346999e-231, 1.3024980396734287e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.3409182690312023e-231, 1.419366116189521e-231, 1.4859931444866587e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.3409182690312023e-231, 1.3409182690312023e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.3142677534656346e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.3409182690312023e-231, 1.3470131869789734e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5412290386568077e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.4859931444866587e-231, 1.419366116189521e-231, 1.4515451998292023e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.5412290386568077e-231, 1.3409182690312023e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.227528094654964e-231, 1.285151524626267e-231, 1.322612729825152e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.384292958842266e-231, 1.419366116189521e-231, 1.323293962464011e-231, 1.3531653690559654e-231, 1.446178951977432e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.3409182690312023e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.3409182690312023e-231, 1.4515451998292023e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5677619884393257e-231, 1.3409182690312023e-231, 1.3409182690312023e-231, 1.419366116189521e-231, 1.419366116189521e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.1119141359022692e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.2439956612288083e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3393810770972338e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.3041959940532062e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231, 1.5412290386568077e-231]/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py:523: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)

Avg of BLEU :  1.4894780420046995e-231
BLEU all :  0
Traceback (most recent call last):
  File "logging_nmt_with_attention.py", line 784, in <module>
    print("BLEU2 : ", sentence_bleu(list(map(lambda sen: sen.split(), sentence_arr)), list(map(lambda sen2: sen2.split(), sentence2_arr))))
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 106, in sentence_bleu
    [references], [hypothesis], weights, smoothing_function, auto_reweigh
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 185, in corpus_bleu
    p_i = modified_precision(references, hypothesis, i)
  File "/home/momo/.local/lib/python3.6/site-packages/nltk/translate/bleu_score.py", line 318, in modified_precision
    counts = Counter(ngrams(hypothesis, n)) if len(hypothesis) >= n else Counter()
  File "/usr/lib/python3.6/collections/__init__.py", line 535, in __init__
    self.update(*args, **kwds)
  File "/usr/lib/python3.6/collections/__init__.py", line 622, in update
    _count_elements(self, iterable)
TypeError: unhashable type: 'list'
