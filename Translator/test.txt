/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/momo/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
Using TensorFlow backend.
WARNING:tensorflow:From word2vec_logging_nmt_with_attention.py:89: The name tf.enable_eager_execution is deprecated. Please use tf.compat.v1.enable_eager_execution instead.

Input data
zero :  378
one :  370

Target data
zero :  378
one :  370

('<start>', 748)
('<end>', 748)
('{', 581)
('}', 581)
('public', 483)
('void', 457)
('return', 257)
('throws', 133)
('(', 108)
(')', 108)
('String', 95)
('long', 93)
('int', 90)
('boolean', 82)
('private', 68)
('IOException', 60)
('Exception', 58)
('final', 50)
('protected', 48)
('byte', 46)
('>', 36)
('=', 36)
('<', 35)
('size', 22)
('null', 19)
('printUsage', 18)
('ServerName', 15)
('Cell', 14)
('[', 13)
(']', 13)
('serverName', 11)
('List', 11)
('ExtendedCellBuilder', 10)
('RawCellBuilder', 10)
('testClassMethodsAreBuilderStyle', 8)
('CellBuilder', 8)
('conf', 8)
('true', 8)
('CompletableFuture', 8)
('stop', 7)
('listener', 7)
('inc', 7)
('Connection', 7)
('Path', 7)
('new', 7)
('isAborted', 7)
('==', 7)
('PositionedByteRange', 6)
('name', 6)
('t', 6)
('checkModel', 6)
('T', 6)
('model', 6)
('usage', 6)
('Configuration', 6)
('controller', 6)
('tearDown', 6)
('Result', 6)
('result', 6)
('?', 6)
(',', 6)
('RpcController', 6)
('ServiceException', 6)
('TEST_UTIL.shutdownMiniCluster', 6)
('key', 5)
('incrLogEditsFiltered', 5)
('row', 5)
('double', 5)
('Throwable', 5)
('toString', 5)
('server', 5)
('this.state', 5)
('InterruptedException', 5)
('ExecutionException', 5)
('expected', 5)
('System.exit', 5)
('!', 5)
('ReplicationPeerConfigBuilder', 4)
('ByteBuff', 4)
('decrSizeOfLogQueue', 4)
('filterRow', 4)
('type', 4)
('isCatalogJanitorEnabled', 4)
('TableName', 4)
('Set', 4)
('start', 4)
('Procedure', 4)
('getSizeOfLogQueue', 4)
('getNumLogFiles', 4)
('hashCode', 4)
('0', 4)
('msg', 4)
('this', 4)
('why', 4)
('HTableDescriptor', 4)
('printUsageAndExit', 4)
('1', 4)
('actual', 4)
('tearDownAfterClass', 4)
('getSplitLogManagerCoordination', 3)
('Bytes', 3)
('close', 3)
('put', 3)
('val', 3)
('reset', 3)
('count', 3)
('index', 3)
('getValueArray', 3)
('TableDescriptor', 3)
('setFailed', 3)
('limit', 3)
('bytes', 3)
('connection', 3)
('announce', 3)
('incrSizeOfLogQueue', 3)
('setup', 3)
('value', 3)
('RegionInfo', 3)
('setType', 3)
('Cell.Type', 3)
('getWriterClassName', 3)
('getLogFileSize', 3)
('proc', 3)
('getShortNameToLog', 3)
('i', 3)
('regions', 3)
('Class', 3)
('ReplicationPeerConfig', 3)
('HttpServer', 3)
('log', 3)
('abort', 3)
('static', 3)
('encodedRegionName', 3)
('setStartLogErrorsCnt', 3)
('incrLogReadInBytes', 3)
('message', 3)
('clear', 3)
('b', 3)
('this.row', 3)
('path', 3)
('WAL', 3)
('entry', 3)
('Boolean', 3)
('enableCatalogJanitor', 3)
('TableOperationType', 2)
('getTableOperationType', 2)
('getStartKey', 2)
('getValue', 2)
('TableBuilder', 2)
('sn', 2)
('decrement', 2)
('time', 2)
('MetricsMasterProcSource', 2)
('MasterServices', 2)
('masterServices', 2)
('short', 2)
('getTagsArray', 2)
('Histogram', 2)
('testConstuctor', 2)
('updateNumTablesInSpaceQuotaViolation', 2)
('position', 2)
('e', 2)
('BlockCache', 2)
('cmp', 2)
('shutdown', 2)
('DeleteResult', 2)
('cell', 2)
('MatchCode', 2)
('f', 2)
('getErrors', 2)
('Chunk', 2)
('TunerResult', 2)
('testMetaTables', 2)
('getLog', 2)
('incrLogEditsRead', 2)
('setValue', 2)
('tableName', 2)
('getCatalogFamily', 2)
('setTimestamp', 2)
('timestamp', 2)
('setRow', 2)
('getOldLogDir', 2)
('WALActionsListener', 2)
('createServerErrorTracker', 2)
('ColumnFamilyDescriptor', 2)
('setFamily', 2)
('family', 2)
('FlushRequestListener', 2)
('details', 2)
('deepCopy', 2)
('errorText', 2)
('Collection', 2)
('getExceptionMessageAdditionalDetail', 2)
('env', 2)
('location', 2)
('RegionServerServices', 2)
('FailureType', 2)
('getName', 2)
('50', 2)
('unaligned', 2)
('createConnection', 2)
('incrLogReadInEdits', 2)
('startDataNode', 2)
('Job', 2)
('getCaching', 2)
('false', 2)
('enable', 2)
('serviceException', 2)
('getScannerCaching', 2)
('scannerCaching', 2)
('getSkipBadLines', 2)
('skipBadLines', 2)
('leftCell', 2)
('rightCell', 2)
('killZkNode', 2)
('realSeekDone', 2)
('exception', 2)
('logFileSystemState', 2)
('HConstants.NO_NONCE', 2)
('testWALKeyValueMapperWithDeprecatedConfig', 2)
('testEcho', 2)
('delta', 2)
('setConf', 2)
('Region', 2)
('region', 2)
('interrupt', 2)
('unsetCellVisibility', 2)
('this.cellVisibility', 2)
('unsetStopRow', 2)
('this.stopRow', 2)
('opInstanceName', 2)
('float', 2)
('this.columns', 2)
('+', 2)
('getNumRolledLogFiles', 2)
('runCatalogScan', 2)
('ZKWatcher', 2)
('zkw', 2)
('Void', 2)
('Object', 2)
('ByteBuffer', 2)
('source', 2)
('RowLock', 2)
('assertResultEquals', 2)
('FileChannel', 2)
('ClusterMetrics', 2)
('this.realCacheSize.sum', 2)
('Optional', 2)
('User', 2)
('-', 2)
('pattern', 2)
('ReplicationException', 2)
('assertGauge', 2)
('TimeRange', 2)
('p', 2)
('...', 2)
('hris', 2)
('metric', 2)
('expectedValue', 2)
('c', 2)
('TColumnValue', 2)
('isSetRow', 2)
('encryptor', 2)
('hfcc', 2)
('err', 2)
('setUpBeforeClass', 2)
('TestReplicationBase.setUpBeforeClass', 2)
('Entry', 2)
('maxVersions', 2)
('allowed', 2)
('V', 2)
('this.stopped', 2)
('fileName', 2)
('SplitLogManagerCoordination', 1)
('setMin', 1)
('ts', 1)
('doShutdown', 1)
('filterAllRemaining', 1)
('setOperationTimeout', 1)
('timeout', 1)
('submitTask', 1)
('taskName', 1)
('compareTo', 1)
('Row', 1)
('var1', 1)
('startReplicationService', 1)
('testParameterPropagation', 1)
('cancelConnections', 1)
('n', 1)
('setRITOldestAge', 1)
('age', 1)
('updateMetaWALSplitTime', 1)
('create', 1)
('MetricsMasterWrapper', 1)
('masterWrapper', 1)
('decrSizeOfHFileRefsQueue', 1)
('testHasIgnoreValueIgnoreTS', 1)
('sync', 1)
('CompactionWindow', 1)
('newIncomingWindow', 1)
('now', 1)
('receivedBytes', 1)
('setMasterServices', 1)
('getShort', 1)
('addOptions', 1)
('getDescriptor', 1)
('removeListener', 1)
('ReplicationListener', 1)
('TestContainsNothing', 1)
('setStartTime', 1)
('startTime', 1)
('histogram', 1)
('getStartKeys', 1)
('incrementFailedDeleteRequests', 1)
('numTablesInViolation', 1)
('setRIT', 1)
('ritCount', 1)
('setReplicationEndpointImpl', 1)
('replicationEndpointImpl', 1)
('incrementSucessfulGetRequests', 1)
('src', 1)
('getRowArray', 1)
('updateGet', 1)
('updateDeleteBatch', 1)
('isKilledRS', 1)
('replicate', 1)
('ReplicateContext', 1)
('replicateContext', 1)
('updatePut', 1)
('setMaxErrors', 1)
('getInt', 1)
('testWrapperSource', 1)
('getReadRpcTimeout', 1)
('TimeUnit', 1)
('unit', 1)
('setMaxSize', 1)
('setPosition', 1)
('incrOpsShipped', 1)
('ops', 1)
('testCreateThriftTwoSource', 1)
('next', 1)
('abstract', 1)
('refill', 1)
('checkTaskStillAvailable', 1)
('task', 1)
('getSchemePrefix', 1)
('setRPCPacket', 1)
('Message', 1)
('param', 1)
('set', 1)
('getBlockCaches', 1)
('init', 1)
('isBalancerEnabled', 1)
('updateFlushOutputSize', 1)
('testIfExtendedCellImplemented', 1)
('updateMetaWALSplitSize', 1)
('incTimeInQueue', 1)
('getEncryptionKey', 1)
('setOffset', 1)
('offset', 1)
('stopMaster', 1)
('processedCall', 1)
('processingTime', 1)
('getFirstKeyCellInBlock', 1)
('block', 1)
('getConfigurationValue', 1)
('tablesInViolation', 1)
('updateScanSize', 1)
('scanSize', 1)
('registerAll', 1)
('MetricSet', 1)
('metricSet', 1)
('isDeleted', 1)
('getNextRowOrNextColumn', 1)
('accept', 1)
('FileStatus', 1)
('setCurMemStoreSizeGauge', 1)
('memStoreSize', 1)
('updateSplitSize', 1)
('getNewExternalChunk', 1)
('ChunkCreator.ChunkType', 1)
('chunkType', 1)
('setCurBlockCacheSizeGauge', 1)
('blockCacheSize', 1)
('incrementLogRollRequested', 1)
('tune', 1)
('TunerContext', 1)
('context', 1)
('testStackedUpKeyValue', 1)
('dequeuedCall', 1)
('qTime', 1)
('containsRow', 1)
('moveBack', 1)
('len', 1)
('updateSplitTime', 1)
('incrementSystemErrorCount', 1)
('testCreateThriftOneSource', 1)
('testCompatabilityRegistered', 1)
('testMetaReaderGetColumnMethods', 1)
('testSeqIdComparator', 1)
('testNoObservationsOnCreation', 1)
('getErrorHandler', 1)
('testFoldableByteSize', 1)
('testSatisfiesNoUnsafeReverse', 1)
('closeAllRegions', 1)
('testAppenderDefined', 1)
('SplitLogManager', 1)
('getSplitLogManager', 1)
('testGetHostWithoutDomain', 1)
('requestLogRoll', 1)
('testStartsWith', 1)
('testHas', 1)
('testCompressionOrdinance', 1)
('printSchema', 1)
('testGetTableArchivePath', 1)
('testCompareVersion', 1)
('testPassingEmptyArrayToFindEntry', 1)
('teardown', 1)
('getLogCleaner', 1)
('testHashCode', 1)
('getSplitLogWorkerCoordination', 1)
('testHasIgnoreTS', 1)
('testIntFitsIn', 1)
('startDaemonLogTailer', 1)
('test', 1)
('assertObserverHasExecuted', 1)
('before', 1)
('testCalSleepTimeMs', 1)
('addListener', 1)
('testReferenceSize', 1)
('testEqual', 1)
('setErrorHandler', 1)
('testLongFitsIn', 1)
('testEquality', 1)
('getCatalogJanitor', 1)
('dump', 1)
('testSatisfiesReverse', 1)
('createRescanFailure', 1)
('testAppenderUndefined', 1)
('incrementLowReplicationLogRoll', 1)
('testHasIgnoreValue', 1)
('ensureCompatRegistered', 1)
('incrementFailedScanRequests', 1)
('setQualifier', 1)
('qualifier', 1)
('regionClosed', 1)
('regionInfo', 1)
('startReplayingFromWAL', 1)
('getListOfRegionServers', 1)
('getWalRoller', 1)
('walRoller', 1)
('clearRegionCache', 1)
('incrBytesSkippedInUncleanlyClosedWALs', 1)
('printHelp', 1)
('setSequenceId', 1)
('seqId', 1)
('getLogId', 1)
('QuotaSettings', 1)
('getQuotaSettings', 1)
('actualErrorRate', 1)
('registerWALActionsListener', 1)
('hasColumnFamily', 1)
('getFailed', 1)
('getColumnFamilies', 1)
('getColumnFamily', 1)
('getOrigLogSeqNum', 1)
('registerFlushRequestListener', 1)
('unregisterFlushRequestListener', 1)
('MetricRegistryInfo', 1)
('getMetricRegistryInfos', 1)
('getDetails', 1)
('RetriesExhaustedWithDetailsException', 1)
('setWarnTime', 1)
('HStore', 1)
('selectStoresToFlush', 1)
('periodicExecute', 1)
('TEnvironment', 1)
('ProcedureCoordinator', 1)
('hasUnDeletedQueues', 1)
('getLogDir', 1)
('setPriority', 1)
('tn', 1)
('getNumReadErrors', 1)
('hasParentLock', 1)
('deleteCachedRegionLocation', 1)
('HRegionLocation', 1)
('incrementFailedIncrementRequests', 1)
('unregisterWALActionsListener', 1)
('StoreFileWriter', 1)
('writers', 1)
('hasLockAccess', 1)
('getRegionServerVersion', 1)
('incrementSucessfulIncrementRequests', 1)
('getStartLogErrorsCnt', 1)
('incRequests', 1)
('setTags', 1)
('tags', 1)
('incrementSucessfulScanRequests', 1)
('checkActiveSize', 1)
('getFailureType', 1)
('getSize', 1)
('hasError', 1)
('ConnectionImplementation.ServerErrorTracker', 1)
('failed', 1)
('getAbortZnode', 1)
('getRpcTimeout', 1)
('rpcTimeout', 1)
('getMobFileCacheHitPercent', 1)
('getScanQueueLength', 1)
('2', 1)
('ConnectionId', 1)
('remoteId', 1)
('writeInt', 1)
('getMaxQueueSize', 1)
('this.maxQueueSize', 1)
('getSnapshotDir', 1)
('this.workingDir', 1)
('newJob', 1)
('hasTotalNumberOfRequests', 1)
('getTimestamp', 1)
('endTime', 1)
('putPeerData', 1)
('MasterProcedureManagerHost', 1)
('getMasterProcedureManagerHost', 1)
('mpmHost', 1)
('getFlushPressure', 1)
('TableOperationType.DELETE', 1)
('getCachedTime', 1)
('this.cachedTime', 1)
('getStackIndexes', 1)
('stackIndexes', 1)
('getFamily', 1)
('columnFamily', 1)
('postEncoding', 1)
('BlockType', 1)
('blockType', 1)
('onHeartbeat', 1)
('ScanController', 1)
('MetricsRegionAggregateSource', 1)
('getAggregateSource', 1)
('agg', 1)
('WebAppContext', 1)
('getWebAppContext', 1)
('this.webAppContext', 1)
('getColumn', 1)
('column', 1)
('MetaTableLocator', 1)
('getMetaTableLocator', 1)
('BufferedMutator.ExceptionListener', 1)
('getListener', 1)
('getMaxSize', 1)
('this.cacheCapacity', 1)
('caching', 1)
('FileSystem', 1)
('getFileSystem', 1)
('this.fs', 1)
('ResponseType', 1)
('ResponseType.SINGLE', 1)
('isHBaseSecurityEnabled', 1)
('getRowOffsetPerColumnFamily', 1)
('this.storeOffset', 1)
('getMemStoreSizeMB', 1)
('memStoreSizeMB', 1)
('getFileCreateTime', 1)
('fileCreateTime', 1)
('hasNullColumnInQuery', 1)
('hasNullColumn', 1)
('validate', 1)
('org.apache.thrift.TException', 1)
('getRefCount', 1)
('this.refCount', 1)
('getTotalCompactedSize', 1)
('totalCompactedSize', 1)
('ExecutorService', 1)
('getExecutorService', 1)
('getStamp', 1)
('stamp', 1)
('getPriority', 1)
('priority', 1)
('getFailedOn', 1)
('getRootDir', 1)
('this.rootdir', 1)
('getRegions', 1)
('getActiveWriteRpcHandlerCount', 1)
('MetricsAssignmentManager', 1)
('getAssignmentManagerMetrics', 1)
('metrics', 1)
('getAmmount', 1)
('this.ammount', 1)
('getTableFamily', 1)
('HConstants.TABLE_FAMILY', 1)
('getProtocol', 1)
('protocol', 1)
('getBatchSize', 1)
('this.batchSize', 1)
('getStartCode', 1)
('100', 1)
('getOriginalIndex', 1)
('originalIndex', 1)
('getConnection', 1)
('this.connection', 1)
('LockStatus', 1)
('getLockStatus', 1)
('lockStatus', 1)
('compare', 1)
('getConf', 1)
('testTrailingGarbageCorruptionLogFileSkipErrorsFalseThrows', 1)
('testImport94Table', 1)
('CellComparator', 1)
('getComparator', 1)
('comparator', 1)
('getTableNameString', 1)
('tableNameString', 1)
('getIv', 1)
('iv', 1)
('getOldPeerConfig', 1)
('HRegion', 1)
('getHRegion', 1)
('this.region', 1)
('areDeadServersInProgress', 1)
('processing', 1)
('getRESTVersion', 1)
('restVersion', 1)
('getReadRequestsCount', 1)
('readRequestsCount', 1)
('ConfigurationManager', 1)
('getConfigurationManager', 1)
('configurationManager', 1)
('MetricsInfo', 1)
('info', 1)
('metricsInfo', 1)
('getUserFilter', 1)
('userRegex', 1)
('perform', 1)
('compareTimestamps', 1)
('execute', 1)
('Table', 1)
('table', 1)
('getHealthReport', 1)
('healthReport', 1)
('processOptions', 1)
('CommandLine', 1)
('cmd', 1)
('PoolType', 1)
('getPoolType', 1)
('PoolType.ThreadLocal', 1)
('RemoteProcedureException', 1)
('getException', 1)
('putShort', 1)
('getNonceGroup', 1)
('visitLogEntryBeforeWrite', 1)
('getRequest', 1)
('request', 1)
('getLimit', 1)
('this.limit', 1)
('isClientScannerAsyncPrefetch', 1)
('clientScannerAsyncPrefetch', 1)
('isPreWALRestoreCalled', 1)
('preWALRestoreCalled', 1)
('getIOError', 1)
('throwable', 1)
('setLoggingUncaughtExceptionHandler', 1)
('Thread', 1)
('assertNotLive', 1)
('setJobScannerConf', 1)
('job', 1)
('rescan', 1)
('retries', 1)
('testQuoting', 1)
('testGetMasterInfoPort', 1)
('testRegionCount', 1)
('printHeader', 1)
('ProcedureWALHeader', 1)
('header', 1)
('testFirstKey', 1)
('status', 1)
('s', 1)
('deleteQueue', 1)
('queueId', 1)
('buildRunCatalogScanResponse', 1)
('numCleaned', 1)
('TableRegionModel', 1)
('VersionModel', 1)
('testNeedsQuoting', 1)
('isPostWALRestoreCalled', 1)
('postWALRestoreCalled', 1)
('testParsingNull', 1)
('checkShared', 1)
('addToSize', 1)
('testRegionServerCoprocessorsReported', 1)
('StorageClusterVersionModel', 1)
('testSize', 1)
('testEmptyOpenLogFiles', 1)
('reason', 1)
('enqueueLog', 1)
('this.currentPath', 1)
('-1', 1)
('testHash', 1)
('updateNextStartRowWhenError', 1)
('parameterCount', 1)
('abortCacheFlush', 1)
('testEmptyLogFiles', 1)
('verifyInMemoryFlushSize', 1)
('testMetaHTDReplicaCount', 1)
('AsyncAdminBuilder', 1)
('assertUsageContent', 1)
('testLocalFiles', 1)
('testLastEntry', 1)
('assertExists', 1)
('File', 1)
('testEchoMap', 1)
('cleanLogDir', 1)
('testFirstEntry', 1)
('testSendError', 1)
('CellModel', 1)
('buildEnableCatalogJanitorResponse', 1)
('prevValue', 1)
('printThreadInfo', 1)
('title', 1)
('testWithParallelCompaction', 1)
('testLastKey', 1)
('appendToLogAndSync', 1)
('logFSTree', 1)
('assertAlive', 1)
('testIncrementBytes', 1)
('checkShortCircuit', 1)
('AsyncBufferedMutatorBuilder', 1)
('testLogReplayWithDistributedLogSplit', 1)
('ColumnSchemaModel', 1)
('testGetKeyValuesWithUnsetKey', 1)
('setUp', 1)
('readInBytes', 1)
('markHead', 1)
('head', 1)
('consumeRead', 1)
('fileSizeToString', 1)
('this.counter.decrement', 1)
('authenticationSuccess', 1)
('authenticationSuccesses.incr', 1)
('scannerResetException', 1)
('exceptionsScannerReset.incr', 1)
('unknownScannerException', 1)
('exceptionsUnknown.incr', 1)
('incrNormalRunners', 1)
('this.runnerStats.incrNormalRunners', 1)
('registries.clear', 1)
('thread.interrupt', 1)
('setDisplayFullReport', 1)
('incrementAppendCount', 1)
('appendCount.incr', 1)
('testEscape', 1)
('jrubyString', 1)
('awaitRunning', 1)
('this.delegator.awaitRunning', 1)
('markForEvict', 1)
('this.markedForEvict', 1)
('setCatalogJanitorEnabled', 1)
('clearHashCache', 1)
('hash', 1)
('UNSET_HASH_VALUE', 1)
('unsetDeleteType', 1)
('this.deleteType', 1)
('receiveReachedGlobalBarrier', 1)
('inGlobalBarrier.countDown', 1)
('incrMiscInvocations', 1)
('stochasticSource.incrMiscInvocations', 1)
('clearArchive', 1)
('archivedTables.clear', 1)
('unsetRow', 1)
('queue.clear', 1)
('RetryingCallerInterceptorContext', 1)
('prepare', 1)
('RetryingCallable', 1)
('callable', 1)
('this.count', 1)
('runAs', 1)
('PrivilegedAction', 1)
('action', 1)
('getAbortZNode', 1)
('getErrorRate', 1)
('testHealthCheckerFail', 1)
('setCheckMetaOnly', 1)
('checkMetaOnly', 1)
('exceptions.incr', 1)
('unsetColumns', 1)
('isAbortNode', 1)
('this.message', 1)
('setDeleteFamilyBloomFilterFaulty', 1)
('this.deleteFamilyBloomFilter', 1)
('unsetTable', 1)
('this.table', 1)
('incrSlowGet', 1)
('slowGet.incr', 1)
('onError', 1)
('notifyAll', 1)
('isMasterRunning', 1)
('isDone', 1)
('isErr', 1)
('prepareTask', 1)
('taskname', 1)
('isAbortPathNode', 1)
('setOrigLogSeqNum', 1)
('sequenceId', 1)
('testWALObserverLoaded', 1)
('stopTask', 1)
('worker.interrupt', 1)
('isOwned', 1)
('printCommands', 1)
('System.err.flush', 1)
('assertNoopLimiter', 1)
('QuotaLimiter', 1)
('limiter', 1)
('deleteNodeFailure', 1)
('ClusterStatusProtos.ReplicationLoadSource', 1)
('toReplicationLoadSource', 1)
('ReplicationLoadSource', 1)
('rls', 1)
('createWAL', 1)
('stopChaos', 1)
('monkeyRunner.stopRunner', 1)
('kill', 1)
('this.killed', 1)
('getRescanNode', 1)
('isUnassigned', 1)
('isResigned', 1)
('getQualifierArray', 1)
('this.cell.getQualifierArray', 1)
('getDeleteFamilyBloomHitCount', 1)
('deleteFamilyBloomHitCount.sum', 1)
('getResults', 1)
('results', 1)
('dequeue', 1)
('runnables.poll', 1)
('isRunning', 1)
('running.get', 1)
('decodeKeyValues', 1)
('DataInputStream', 1)
('HFileBlockDecodingContext', 1)
('decodingCtx', 1)
('areCompactionsDisabled', 1)
('disableCompactions.get', 1)
('this.cell.getValueArray', 1)
('this.buf.position', 1)
('dispose', 1)
('SaslUtil.safeDispose', 1)
('saslServer', 1)
('testAvg', 1)
('listTables', 1)
('regex', 1)
('getCurrentParallelPutCount', 1)
('currentParallelPutCount.get', 1)
('Order', 1)
('getOrder', 1)
('base.getOrder', 1)
('getRowLock', 1)
('readLock', 1)
('incrUncleanlyClosedWALs', 1)
('uncleanlyClosedWAL.incr', 1)
('1L', 1)
('splitSwitch', 1)
('enabled', 1)
('synchronous', 1)
('append', 1)
('W', 1)
('writer', 1)
('WAL.Entry', 1)
('walRollRequestFinished', 1)
('this.walRoller.walRollFinished', 1)
('clearReplicationScope', 1)
('setReplicationScope', 1)
('getNumOpenConnections', 1)
('connectionManager.size', 1)
('favoredNodesMap.hashCode', 1)
('getFailedInserts', 1)
('failedInserts.get', 1)
('getMobScanCellsCount', 1)
('mobScanCellsCount.get', 1)
('getMasterCoprocessorNames', 1)
('getIntermediateIndexMissCount', 1)
('intermediateIndexMissCount.sum', 1)
('remainingCapacity', 1)
('underlyingQueue.remainingCapacity', 1)
('getFileChannels', 1)
('fileChannels', 1)
('getNumOfSegments', 1)
('segments.size', 1)
('getParentRegion', 1)
('getRegion', 1)
('getServerWALsBelongTo', 1)
('server.getServerName', 1)
('getClusterMetrics', 1)
('cacheLocation', 1)
('RegionLocations', 1)
('isConnectionOpen', 1)
('channel.isOpen', 1)
('CoprocessorEnvironment', 1)
('getMasterName', 1)
('metrics.getMasterName', 1)
('getTableName', 1)
('modifiedTableDescriptor.getTableName', 1)
('isEnable', 1)
('this.parallelPutToStoreThreadLimit', 1)
('sendStopSignal', 1)
('queue.add', 1)
('DelayedUtil.DELAYED_POISON', 1)
('setRunning', 1)
('AssignmentManager', 1)
('getAssignmentManager', 1)
('master.getAssignmentManager', 1)
('getCaller', 1)
('getWritePoint', 1)
('writePoint.get', 1)
('maxCellIdx', 1)
('minCellIdx', 1)
('getPoolLargestPoolSize', 1)
('pool.getLargestPoolSize', 1)
('getValueLength', 1)
('this.length', 1)
('INFRASTRUCTURE_SIZE', 1)
('getPolicyName', 1)
('SpaceViolationPolicy.NO_WRITES.name', 1)
('InetSocketAddress', 1)
('getFavoredNodesForRegion', 1)
('isNormalizerEnabled', 1)
('getInfoServerPort', 1)
('metrics.getInfoServerPort', 1)
('getRealCacheSize', 1)
('currentScannerCallable.getCaching', 1)
('getSystemLoadAverage', 1)
('osMbean.getSystemLoadAverage', 1)
('getOwnerString', 1)
('delegatee.getOwnerString', 1)
('walFile2Props.size', 1)
('disableTables', 1)
('Pattern', 1)
('getMemStoreFlushSize', 1)
('region.getMemStoreFlushSize', 1)
('enableReplicationPeer', 1)
('peerId', 1)
('this.serverName.hashCode', 1)
('heapSize', 1)
('getCurrentSize', 1)
('getHBaseVersion', 1)
('VersionInfo.getVersion', 1)
('getMasterInitializationTime', 1)
('master.getMasterFinishedInitializationTime', 1)
('BaseSource', 1)
('isReadOnly', 1)
('this.writestate.isReadOnly', 1)
('MemStoreSize', 1)
('getMemStoreSize', 1)
('this.memStoreSizing.getMemStoreSize', 1)
('getRequestCountPerSecond', 1)
('metrics.getRequestCountPerSecond', 1)
('getCellsSizeCompactedToMob', 1)
('cellsSizeCompactedToMob.get', 1)
('runRoundTrip', 1)
('str', 1)
('USAGE_EXIT_CODE', 1)
('main', 1)
('args', 1)
('assertEquals', 1)
('origin', 1)
('clone', 1)
('testSum', 1)
('URL', 1)
('getServerURL', 1)
('MalformedURLException', 1)
('Integer', 1)
('runCatalogJanitor', 1)
('verifyPriorityGroupCount', 1)
('priorityLevel', 1)
('assertMatches', 1)
('output', 1)
('abortProcedure', 1)
('isArchivedLogFile', 1)
('assertSharedLock', 1)
('LockedResource', 1)
('resource', 1)
('lockCount', 1)
('assertEmptyResult', 1)
('procId', 1)
('assertNumberOfPeers', 1)
('total', 1)
('testRowCount', 1)
('HRegionInfo', 1)
('assertCounter', 1)
('testMin', 1)
('assertWithinJitter', 1)
('maxSplitSize', 1)
('sizeToCheck', 1)
('assertNullResult', 1)
('startChaos', 1)
('executor.execute', 1)
('runner', 1)
('assertValueNear', 1)
('getWALs', 1)
('this.heapMemTunerChore.cancel', 1)
('checkTableList', 1)
('Hbase.Iface', 1)
('handler', 1)
('stopRowTests', 1)
('Filter', 1)
('filter', 1)
('assertEqualsWithJitter', 1)
('testWALObserverWriteToWAL', 1)
('stopZkNode', 1)
('testAddDefaultObserver', 1)
('master.updateConfigurationForSpaceQuotaObserver', 1)
('assertResult', 1)
('reportWebUIPort', 1)
('daemon', 1)
('port', 1)
('prettyPrint', 1)
('ProcedureWALFile', 1)
('getCorruptedLogs', 1)
('stopDataNode', 1)
('assertConfigEquals', 1)
('killDataNode', 1)
('killMaster', 1)
('assertNoSnapshots', 1)
('Admin', 1)
('admin', 1)
('dumpVersionInfo', 1)
('VersionInfo.writeTo', 1)
('out', 1)
('assertCellEquals', 1)
('firstKeyValue', 1)
('secondKeyValue', 1)
('testMax', 1)
('assertNoErrors', 1)
('HBaseFsck', 1)
('fsck', 1)
('debugLogMutation', 1)
('Mutation', 1)
('checkCell', 1)
('assertTColumnValueEqual', 1)
('a', 1)
('afterAllTests', 1)
('array', 1)
('throw', 1)
('UnsupportedOperationException', 1)
('setEncryptor', 1)
('Encryptor', 1)
('this.encryptor', 1)
('hasNonceGroup', 1)
('nonceGroup', 1)
('Comparer', 1)
('lexicographicalComparerJavaImpl', 1)
('LexicographicalComparerHolder.PureJavaComparer.INSTANCE', 1)
('setHFileCorruptionChecker', 1)
('HFileCorruptionChecker', 1)
('this.hfcc', 1)
('this.rowsAccepted++', 1)
('this.rowsAccepted', 1)
('this.pageSize', 1)
('BloomFilterUtil.toString', 1)
('listTableDescriptorsByNamespace', 1)
('toJsonString', 1)
('MessageOrBuilder', 1)
('messageOrBuilder', 1)
('InvalidProtocolBufferException', 1)
('setErr', 1)
('this.err', 1)
('setRegions', 1)
('this.regions', 1)
('getClazz', 1)
('clazz', 1)
('this.conf', 1)
('Bytes.hashCode', 1)
('isEnabled', 1)
('isInStates', 1)
('State.ENABLED', 1)
('REGION.close', 1)
('setEntry', 1)
('this.entry', 1)
('ByteStringCompressor', 1)
('getNoneCompressor', 1)
('NoneCompressor', 1)
('getExcludeNamespaces', 1)
('this.excludeNamespaces', 1)
('Float', 1)
('encodedClass', 1)
('Float.class', 1)
('isSetTags', 1)
('this.tags', 1)
('ChunkCreator.chunkPoolDisabled', 1)
('chunkPoolDisabledBeforeTest', 1)
('setMaxVersions', 1)
('this.maxVersions', 1)
('cleanup', 1)
('server.stop', 1)
('getWalEntries', 1)
('walEntries', 1)
('getDeadNodes', 1)
('deadNodes', 1)
('isMetaRegionInTransition', 1)
('isMetaAssigned', 1)
('setAllowed', 1)
('this.allowed', 1)
('Reference', 1)
('createReference', 1)
('K', 1)
('obj', 1)
('TColumn', 1)
('getColumns', 1)
('testJar', 1)
('jar', 1)
('extends', 1)
('Store', 1)
('getStores', 1)
('stateManager.start', 1)
('getEncodedNodeName', 1)
('filename', 1)
('testFindOnEmpty', 1)
('m.clear', 1)
('getHeapOccupancyPercent', 1)
('this.heapOccupancyPercent', 1)
('Float.MAX_VALUE', 1)
('synchronized', 1)
('super.interrupt', 1)
('initialize', 1)
('testSmallBatch', 1)
('runSmallBatchTest', 1)
('isCompacted', 1)
('header.getType', 1)
('testSimplePutDelete', 1)
('runSimplePutDeleteTest', 1)
('testGetAndExists', 1)
('waitForIdleConnectionClosed', 1)
('appendToLog', 1)
('after', 1)
('testGetAndSetKeyValuesWithValues', 1)
('callSetKeyValues', 1)
('KeeperException', 1)
('this.checkEnabledAndUpdate', 1)2019-11-20 19:35:34.664873: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1
2019-11-20 19:35:34.668323: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-20 19:35:34.668872: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties: 
name: GeForce RTX 2070 major: 7 minor: 5 memoryClockRate(GHz): 1.62
pciBusID: 0000:01:00.0
2019-11-20 19:35:34.668937: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcudart.so.10.0'; dlerror: libcudart.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.668989: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcublas.so.10.0'; dlerror: libcublas.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.669037: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcufft.so.10.0'; dlerror: libcufft.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.669084: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcurand.so.10.0'; dlerror: libcurand.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.669132: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusolver.so.10.0'; dlerror: libcusolver.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.669181: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Could not dlopen library 'libcusparse.so.10.0'; dlerror: libcusparse.so.10.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64${LD_LIBRARY_PATH:+:/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:}}
2019-11-20 19:35:34.671553: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7
2019-11-20 19:35:34.671568: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1663] Cannot dlopen some GPU libraries. Skipping registering GPU devices...
2019-11-20 19:35:34.671766: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-11-20 19:35:34.729726: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-11-20 19:35:34.730353: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x58c8f40 executing computations on platform CUDA. Devices:
2019-11-20 19:35:34.730370: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce RTX 2070, Compute Capability 7.5
2019-11-20 19:35:34.749727: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3408000000 Hz
2019-11-20 19:35:34.750591: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5710f00 executing computations on platform Host. Devices:
2019-11-20 19:35:34.750647: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2019-11-20 19:35:34.750749: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-20 19:35:34.750767: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      

('splitMetaLog', 1)
('testMoveServersAndTables', 1)
('super.testMoveServersAndTables', 1)
('splitLog', 1)
('printProcedure', 1)
('getTmpRecoveredEditsFileName', 1)
('TestReplicationBase.tearDownAfterClass', 1)
('testingUtility.shutdownMiniCluster', 1)
('getAbortNode', 1)
('ZKProcedureUtil', 1)
('testRemoveServers', 1)
('super.testRemoveServers', 1)
('testTableMoveTruncateAndDrop', 1)
('super.testTableMoveTruncateAndDrop', 1)
('AsyncTableBuilderBase', 1)
('C', 1)
15 12
598 598 150 150
Input vocabulary :  1152
0 <start>
1 SplitLogManagerCoordination
2 getSplitLogManagerCoordination
3 <end>
4 public
5 TableOperationType
6 getTableOperationType
7 byte
8 [
9 ]
10 getStartKey
11 Bytes
12 getValue
13 key
14 protected
15 void
16 setMin
17 long
18 ts
19 doShutdown
20 throws
21 IOException
22 boolean
23 filterAllRemaining
24 TableBuilder
25 setOperationTimeout
26 int
27 timeout
28 incrLogEditsFiltered
29 {
30 }
31 submitTask
32 String
33 taskName
34 compareTo
35 Row
36 var1
37 startReplicationService
38 testParameterPropagation
39 cancelConnections
40 ServerName
41 sn
42 decrement
43 n
44 setRITOldestAge
45 age
46 updateMetaWALSplitTime
47 time
48 close
49 MetricsMasterProcSource
50 create
51 MetricsMasterWrapper
52 masterWrapper
53 PositionedByteRange
54 put
55 val
56 decrSizeOfHFileRefsQueue
57 size
58 testHasIgnoreValueIgnoreTS
59 sync
60 CompactionWindow
61 newIncomingWindow
62 now
63 reset
64 receivedBytes
65 count
66 setMasterServices
67 MasterServices
68 masterServices
69 short
70 getShort
71 index
72 addOptions
73 getValueArray
74 getTagsArray
75 TableDescriptor
76 getDescriptor
77 stop
78 removeListener
79 ReplicationListener
80 listener
81 TestContainsNothing
82 setStartTime
83 startTime
84 Histogram
85 histogram
86 name
87 testConstuctor
88 getStartKeys
89 incrementFailedDeleteRequests
90 inc
91 updateNumTablesInSpaceQuotaViolation
92 numTablesInViolation
93 testClassMethodsAreBuilderStyle
94 setRIT
95 ritCount
96 printUsage
97 ReplicationPeerConfigBuilder
98 setReplicationEndpointImpl
99 replicationEndpointImpl
100 incrementSucessfulGetRequests
101 ByteBuff
102 src
103 decrSizeOfLogQueue
104 getRowArray
105 updateGet
106 t
107 updateDeleteBatch
108 isKilledRS
109 serverName
110 replicate
111 ReplicateContext
112 replicateContext
113 updatePut
114 setMaxErrors
115 getInt
116 testWrapperSource
117 getReadRpcTimeout
118 TimeUnit
119 unit
120 checkModel
121 T
122 model
123 setMaxSize
124 setPosition
125 position
126 private
127 setFailed
128 e
129 incrOpsShipped
130 ops
131 testCreateThriftTwoSource
132 Cell
133 next
134 abstract
135 refill
136 limit
137 checkTaskStillAvailable
138 task
139 getSchemePrefix
140 setRPCPacket
141 Message
142 param
143 usage
144 set
145 bytes
146 BlockCache
147 getBlockCaches
148 init
149 Connection
150 connection
151 isBalancerEnabled
152 updateFlushOutputSize
153 testIfExtendedCellImplemented
154 updateMetaWALSplitSize
155 incTimeInQueue
156 cmp
157 shutdown
158 getEncryptionKey
159 setOffset
160 offset
161 stopMaster
162 filterRow
163 processedCall
164 processingTime
165 getFirstKeyCellInBlock
166 block
167 getConfigurationValue
168 tablesInViolation
169 updateScanSize
170 scanSize
171 registerAll
172 MetricSet
173 metricSet
174 announce
175 DeleteResult
176 isDeleted
177 cell
178 MatchCode
179 getNextRowOrNextColumn
180 accept
181 FileStatus
182 f
183 setCurMemStoreSizeGauge
184 memStoreSize
185 updateSplitSize
186 return
187 getErrors
188 Chunk
189 getNewExternalChunk
190 ChunkCreator.ChunkType
191 chunkType
192 setCurBlockCacheSizeGauge
193 blockCacheSize
194 incrementLogRollRequested
195 TunerResult
196 tune
197 TunerContext
198 context
199 testStackedUpKeyValue
200 dequeuedCall
201 qTime
202 containsRow
203 row
204 moveBack
205 len
206 updateSplitTime
207 testMetaTables
208 incrementSystemErrorCount
209 testCreateThriftOneSource
210 testCompatabilityRegistered
211 testMetaReaderGetColumnMethods
212 testSeqIdComparator
213 testNoObservationsOnCreation
214 getErrorHandler
215 testFoldableByteSize
216 testSatisfiesNoUnsafeReverse
217 getLog
218 closeAllRegions
219 testAppenderDefined
220 SplitLogManager
221 getSplitLogManager
222 incrSizeOfLogQueue
223 testGetHostWithoutDomain
224 requestLogRoll
225 testStartsWith
226 testHas
227 testCompressionOrdinance
228 printSchema
229 testGetTableArchivePath
230 testCompareVersion
231 testPassingEmptyArrayToFindEntry
232 teardown
233 getLogCleaner
234 testHashCode
235 setup
236 getSplitLogWorkerCoordination
237 testHasIgnoreTS
238 testIntFitsIn
239 startDaemonLogTailer
240 test
241 assertObserverHasExecuted
242 before
243 testCalSleepTimeMs
244 incrLogEditsRead
245 addListener
246 testReferenceSize
247 testEqual
248 setErrorHandler
249 testLongFitsIn
250 testEquality
251 getCatalogJanitor
252 dump
253 testSatisfiesReverse
254 createRescanFailure
255 testAppenderUndefined
256 incrementLowReplicationLogRoll
257 testHasIgnoreValue
258 ensureCompatRegistered
259 CellBuilder
260 setValue
261 final
262 value
263 incrementFailedScanRequests
264 ExtendedCellBuilder
265 setQualifier
266 qualifier
267 regionClosed
268 RegionInfo
269 regionInfo
270 setType
271 Cell.Type
272 type
273 isCatalogJanitorEnabled
274 startReplayingFromWAL
275 List
276 <
277 >
278 getListOfRegionServers
279 getWalRoller
280 walRoller
281 clearRegionCache
282 TableName
283 tableName
284 incrBytesSkippedInUncleanlyClosedWALs
285 printHelp
286 setSequenceId
287 seqId
288 getLogId
289 getCatalogFamily
290 QuotaSettings
291 getQuotaSettings
292 setTimestamp
293 timestamp
294 setRow
295 double
296 actualErrorRate
297 Path
298 getOldLogDir
299 registerWALActionsListener
300 WALActionsListener
301 RawCellBuilder
302 hasColumnFamily
303 createServerErrorTracker
304 new
305 Throwable
306 getFailed
307 isAborted
308 Set
309 getColumnFamilies
310 ColumnFamilyDescriptor
311 getColumnFamily
312 setFamily
313 family
314 getOrigLogSeqNum
315 registerFlushRequestListener
316 FlushRequestListener
317 unregisterFlushRequestListener
318 MetricRegistryInfo
319 getMetricRegistryInfos
320 getDetails
321 details
322 getWriterClassName
323 deepCopy
324 errorText
325 RetriesExhaustedWithDetailsException
326 getLogFileSize
327 toString
328 setWarnTime
329 Collection
330 HStore
331 selectStoresToFlush
332 getExceptionMessageAdditionalDetail
333 periodicExecute
334 TEnvironment
335 env
336 start
337 ProcedureCoordinator
338 hasUnDeletedQueues
339 getLogDir
340 setPriority
341 tn
342 getNumReadErrors
343 hasParentLock
344 Procedure
345 proc
346 deleteCachedRegionLocation
347 HRegionLocation
348 location
349 incrementFailedIncrementRequests
350 getSizeOfLogQueue
351 unregisterWALActionsListener
352 getNumLogFiles
353 StoreFileWriter
354 writers
355 hasLockAccess
356 RegionServerServices
357 server
358 getRegionServerVersion
359 incrementSucessfulIncrementRequests
360 getStartLogErrorsCnt
361 incRequests
362 setTags
363 tags
364 incrementSucessfulScanRequests
365 checkActiveSize
366 getShortNameToLog
367 FailureType
368 getFailureType
369 getSize
370 hashCode
371 hasError
372 ConnectionImplementation.ServerErrorTracker
373 getName
374 failed
375 getAbortZnode
376 getRpcTimeout
377 rpcTimeout
378 getMobFileCacheHitPercent
379 50
380 unaligned
381 getScanQueueLength
382 2
383 createConnection
384 ConnectionId
385 remoteId
386 incrLogReadInEdits
387 writeInt
388 i
389 startDataNode
390 getMaxQueueSize
391 this.maxQueueSize
392 getSnapshotDir
393 this.workingDir
394 Job
395 newJob
396 Configuration
397 conf
398 hasTotalNumberOfRequests
399 true
400 getTimestamp
401 endTime
402 putPeerData
403 MasterProcedureManagerHost
404 getMasterProcedureManagerHost
405 mpmHost
406 getFlushPressure
407 0
408 TableOperationType.DELETE
409 getCachedTime
410 this.cachedTime
411 getStackIndexes
412 stackIndexes
413 getFamily
414 columnFamily
415 postEncoding
416 BlockType
417 blockType
418 onHeartbeat
419 ScanController
420 controller
421 MetricsRegionAggregateSource
422 getAggregateSource
423 agg
424 WebAppContext
425 getWebAppContext
426 this.webAppContext
427 getColumn
428 column
429 MetaTableLocator
430 getMetaTableLocator
431 null
432 BufferedMutator.ExceptionListener
433 getListener
434 getMaxSize
435 this.cacheCapacity
436 getCaching
437 caching
438 FileSystem
439 getFileSystem
440 this.fs
441 ResponseType
442 ResponseType.SINGLE
443 isHBaseSecurityEnabled
444 false
445 getRowOffsetPerColumnFamily
446 this.storeOffset
447 getMemStoreSizeMB
448 memStoreSizeMB
449 getFileCreateTime
450 fileCreateTime
451 hasNullColumnInQuery
452 hasNullColumn
453 validate
454 org.apache.thrift.TException
455 enable
456 getRefCount
457 this.refCount
458 getTotalCompactedSize
459 totalCompactedSize
460 ExecutorService
461 getExecutorService
462 getStamp
463 stamp
464 getPriority
465 priority
466 getFailedOn
467 serviceException
468 getRootDir
469 this.rootdir
470 getRegions
471 regions
472 getActiveWriteRpcHandlerCount
473 getScannerCaching
474 scannerCaching
475 MetricsAssignmentManager
476 getAssignmentManagerMetrics
477 metrics
478 getAmmount
479 this.ammount
480 getTableFamily
481 HConstants.TABLE_FAMILY
482 Class
483 getProtocol
484 protocol
485 getSkipBadLines
486 skipBadLines
487 getBatchSize
488 this.batchSize
489 getStartCode
490 100
491 getOriginalIndex
492 originalIndex
493 getConnection
494 this.connection
495 LockStatus
496 getLockStatus
497 lockStatus
498 compare
499 leftCell
500 rightCell
501 getConf
502 testTrailingGarbageCorruptionLogFileSkipErrorsFalseThrows
503 testImport94Table
504 CellComparator
505 getComparator
506 comparator
507 getTableNameString
508 tableNameString
509 getIv
510 iv
511 ReplicationPeerConfig
512 getOldPeerConfig
513 killZkNode
514 HRegion
515 getHRegion
516 this.region
517 areDeadServersInProgress
518 processing
519 getRESTVersion
520 restVersion
521 getReadRequestsCount
522 readRequestsCount
523 ConfigurationManager
524 getConfigurationManager
525 configurationManager
526 MetricsInfo
527 info
528 metricsInfo
529 getUserFilter
530 userRegex
531 realSeekDone
532 perform
533 Exception
534 compareTimestamps
535 tearDown
536 execute
537 Table
538 table
539 getHealthReport
540 healthReport
541 processOptions
542 CommandLine
543 cmd
544 PoolType
545 getPoolType
546 PoolType.ThreadLocal
547 RemoteProcedureException
548 getException
549 exception
550 logFileSystemState
551 putShort
552 getNonceGroup
553 HConstants.NO_NONCE
554 visitLogEntryBeforeWrite
555 getRequest
556 request
557 getLimit
558 this.limit
559 isClientScannerAsyncPrefetch
560 clientScannerAsyncPrefetch
561 isPreWALRestoreCalled
562 preWALRestoreCalled
563 getIOError
564 throwable
565 setLoggingUncaughtExceptionHandler
566 Thread
567 assertNotLive
568 HttpServer
569 setJobScannerConf
570 job
571 rescan
572 retries
573 testQuoting
574 testGetMasterInfoPort
575 testRegionCount
576 printHeader
577 ProcedureWALHeader
578 header
579 testFirstKey
580 status
581 s
582 deleteQueue
583 queueId
584 buildRunCatalogScanResponse
585 numCleaned
586 TableRegionModel
587 VersionModel
588 testNeedsQuoting
589 testWALKeyValueMapperWithDeprecatedConfig
590 log
591 msg
592 isPostWALRestoreCalled
593 postWALRestoreCalled
594 testParsingNull
595 checkShared
596 testEcho
597 addToSize
598 testRegionServerCoprocessorsReported
599 StorageClusterVersionModel
600 testSize
601 delta
602 testEmptyOpenLogFiles
603 abort
604 reason
605 enqueueLog
606 this.currentPath
607 =
608 static
609 -1
610 testHash
611 updateNextStartRowWhenError
612 Result
613 result
614 parameterCount
615 abortCacheFlush
616 encodedRegionName
617 testEmptyLogFiles
618 setConf
619 verifyInMemoryFlushSize
620 Region
621 region
622 testMetaHTDReplicaCount
623 AsyncAdminBuilder
624 setStartLogErrorsCnt
625 this
626 why
627 assertUsageContent
628 testLocalFiles
629 testLastEntry
630 assertExists
631 File
632 testEchoMap
633 incrLogReadInBytes
634 cleanLogDir
635 testFirstEntry
636 testSendError
637 CellModel
638 buildEnableCatalogJanitorResponse
639 prevValue
640 printThreadInfo
641 title
642 testWithParallelCompaction
643 testLastKey
644 appendToLogAndSync
645 message
646 logFSTree
647 assertAlive
648 testIncrementBytes
649 checkShortCircuit
650 AsyncBufferedMutatorBuilder
651 testLogReplayWithDistributedLogSplit
652 ColumnSchemaModel
653 testGetKeyValuesWithUnsetKey
654 setUp
655 readInBytes
656 markHead
657 head
658 consumeRead
659 fileSizeToString
660 this.counter.decrement
661 (
662 )
663 authenticationSuccess
664 authenticationSuccesses.incr
665 scannerResetException
666 exceptionsScannerReset.incr
667 unknownScannerException
668 exceptionsUnknown.incr
669 incrNormalRunners
670 this.runnerStats.incrNormalRunners
671 clear
672 registries.clear
673 interrupt
674 thread.interrupt
675 setDisplayFullReport
676 unsetCellVisibility
677 this.cellVisibility
678 unsetStopRow
679 this.stopRow
680 incrementAppendCount
681 appendCount.incr
682 testEscape
683 jrubyString
684 awaitRunning
685 this.delegator.awaitRunning
686 markForEvict
687 this.markedForEvict
688 setCatalogJanitorEnabled
689 b
690 clearHashCache
691 hash
692 UNSET_HASH_VALUE
693 unsetDeleteType
694 this.deleteType
695 receiveReachedGlobalBarrier
696 inGlobalBarrier.countDown
697 incrMiscInvocations
698 stochasticSource.incrMiscInvocations
699 clearArchive
700 archivedTables.clear
701 unsetRow
702 this.row
703 queue.clear
704 RetryingCallerInterceptorContext
705 prepare
706 RetryingCallable
707 ?
708 callable
709 this.count
710 runAs
711 PrivilegedAction
712 action
713 getAbortZNode
714 opInstanceName
715 float
716 getErrorRate
717 testHealthCheckerFail
718 setCheckMetaOnly
719 checkMetaOnly
720 exceptions.incr
721 unsetColumns
722 this.columns
723 isAbortNode
724 path
725 this.message
726 setDeleteFamilyBloomFilterFaulty
727 this.deleteFamilyBloomFilter
728 unsetTable
729 this.table
730 incrSlowGet
731 slowGet.incr
732 +
733 onError
734 notifyAll
735 isMasterRunning
736 isDone
737 this.state
738 ==
739 isErr
740 prepareTask
741 taskname
742 isAbortPathNode
743 setOrigLogSeqNum
744 sequenceId
745 testWALObserverLoaded
746 WAL
747 stopTask
748 worker.interrupt
749 isOwned
750 printCommands
751 System.err.flush
752 getNumRolledLogFiles
753 runCatalogScan
754 assertNoopLimiter
755 QuotaLimiter
756 limiter
757 deleteNodeFailure
758 ClusterStatusProtos.ReplicationLoadSource
759 toReplicationLoadSource
760 ReplicationLoadSource
761 rls
762 createWAL
763 stopChaos
764 monkeyRunner.stopRunner
765 kill
766 this.killed
767 getRescanNode
768 ZKWatcher
769 zkw
770 isUnassigned
771 isResigned
772 CompletableFuture
773 Void
774 getQualifierArray
775 this.cell.getQualifierArray
776 getDeleteFamilyBloomHitCount
777 deleteFamilyBloomHitCount.sum
778 Object
779 getResults
780 results
781 dequeue
782 runnables.poll
783 isRunning
784 running.get
785 ByteBuffer
786 decodeKeyValues
787 DataInputStream
788 source
789 HFileBlockDecodingContext
790 decodingCtx
791 areCompactionsDisabled
792 disableCompactions.get
793 this.cell.getValueArray
794 this.buf.position
795 dispose
796 SaslUtil.safeDispose
797 saslServer
798 testAvg
799 InterruptedException
800 ,
801 ExecutionException
802 HTableDescriptor
803 listTables
804 regex
805 getCurrentParallelPutCount
806 currentParallelPutCount.get
807 Order
808 getOrder
809 base.getOrder
810 RowLock
811 getRowLock
812 readLock
813 incrUncleanlyClosedWALs
814 uncleanlyClosedWAL.incr
815 1L
816 splitSwitch
817 enabled
818 synchronous
819 append
820 W
821 writer
822 WAL.Entry
823 entry
824 walRollRequestFinished
825 this.walRoller.walRollFinished
826 clearReplicationScope
827 setReplicationScope
828 getNumOpenConnections
829 connectionManager.size
830 favoredNodesMap.hashCode
831 assertResultEquals
832 getFailedInserts
833 failedInserts.get
834 getMobScanCellsCount
835 mobScanCellsCount.get
836 getMasterCoprocessorNames
837 getIntermediateIndexMissCount
838 intermediateIndexMissCount.sum
839 remainingCapacity
840 underlyingQueue.remainingCapacity
841 FileChannel
842 getFileChannels
843 fileChannels
844 getNumOfSegments
845 segments.size
846 getParentRegion
847 getRegion
848 getServerWALsBelongTo
849 server.getServerName
850 ClusterMetrics
851 getClusterMetrics
852 cacheLocation
853 RegionLocations
854 isConnectionOpen
855 channel.isOpen
856 CoprocessorEnvironment
857 this.realCacheSize.sum
858 getMasterName
859 metrics.getMasterName
860 getTableName
861 modifiedTableDescriptor.getTableName
862 isEnable
863 this.parallelPutToStoreThreadLimit
864 sendStopSignal
865 queue.add
866 DelayedUtil.DELAYED_POISON
867 setRunning
868 AssignmentManager
869 getAssignmentManager
870 master.getAssignmentManager
871 Optional
872 User
873 getCaller
874 getWritePoint
875 writePoint.get
876 maxCellIdx
877 -
878 minCellIdx
879 getPoolLargestPoolSize
880 pool.getLargestPoolSize
881 getValueLength
882 this.length
883 INFRASTRUCTURE_SIZE
884 getPolicyName
885 SpaceViolationPolicy.NO_WRITES.name
886 InetSocketAddress
887 getFavoredNodesForRegion
888 Boolean
889 isNormalizerEnabled
890 getInfoServerPort
891 metrics.getInfoServerPort
892 getRealCacheSize
893 currentScannerCallable.getCaching
894 getSystemLoadAverage
895 osMbean.getSystemLoadAverage
896 getOwnerString
897 delegatee.getOwnerString
898 walFile2Props.size
899 disableTables
900 Pattern
901 pattern
902 getMemStoreFlushSize
903 region.getMemStoreFlushSize
904 enableReplicationPeer
905 peerId
906 ReplicationException
907 this.serverName.hashCode
908 heapSize
909 getCurrentSize
910 getHBaseVersion
911 VersionInfo.getVersion
912 getMasterInitializationTime
913 master.getMasterFinishedInitializationTime
914 assertGauge
915 expected
916 BaseSource
917 isReadOnly
918 this.writestate.isReadOnly
919 MemStoreSize
920 getMemStoreSize
921 this.memStoreSizing.getMemStoreSize
922 getRequestCountPerSecond
923 metrics.getRequestCountPerSecond
924 getCellsSizeCompactedToMob
925 cellsSizeCompactedToMob.get
926 runRoundTrip
927 str
928 printUsageAndExit
929 System.exit
930 USAGE_EXIT_CODE
931 RpcController
932 ServiceException
933 main
934 args
935 assertEquals
936 TimeRange
937 origin
938 clone
939 testSum
940 URL
941 getServerURL
942 MalformedURLException
943 Integer
944 runCatalogJanitor
945 verifyPriorityGroupCount
946 priorityLevel
947 assertMatches
948 output
949 abortProcedure
950 isArchivedLogFile
951 p
952 enableCatalogJanitor
953 assertSharedLock
954 LockedResource
955 resource
956 lockCount
957 assertEmptyResult
958 procId
959 assertNumberOfPeers
960 total
961 testRowCount
962 HRegionInfo
963 ...
964 hris
965 assertCounter
966 metric
967 expectedValue
968 testMin
969 c
970 assertWithinJitter
971 maxSplitSize
972 sizeToCheck
973 assertNullResult
974 1
975 startChaos
976 executor.execute
977 runner
978 assertValueNear
979 actual
980 getWALs
981 this.heapMemTunerChore.cancel
982 checkTableList
983 Hbase.Iface
984 handler
985 stopRowTests
986 Filter
987 filter
988 assertEqualsWithJitter
989 testWALObserverWriteToWAL
990 stopZkNode
991 testAddDefaultObserver
992 master.updateConfigurationForSpaceQuotaObserver
993 assertResult
994 reportWebUIPort
995 daemon
996 port
997 prettyPrint
998 ProcedureWALFile
999 getCorruptedLogs
1000 stopDataNode
1001 assertConfigEquals
1002 killDataNode
1003 killMaster
1004 assertNoSnapshots
1005 Admin
1006 admin
1007 dumpVersionInfo
1008 VersionInfo.writeTo
1009 out
1010 assertCellEquals
1011 firstKeyValue
1012 secondKeyValue
1013 testMax
1014 assertNoErrors
1015 HBaseFsck
1016 fsck
1017 debugLogMutation
1018 Mutation
1019 checkCell
1020 assertTColumnValueEqual
1021 TColumnValue
1022 a
1023 afterAllTests
1024 TEST_UTIL.shutdownMiniCluster
1025 isSetRow
1026 !
1027 array
1028 throw
1029 UnsupportedOperationException
1030 setEncryptor
1031 Encryptor
1032 encryptor
1033 this.encryptor
1034 hasNonceGroup
1035 nonceGroup
1036 Comparer
1037 lexicographicalComparerJavaImpl
1038 LexicographicalComparerHolder.PureJavaComparer.INSTANCE
1039 setHFileCorruptionChecker
1040 HFileCorruptionChecker
1041 hfcc
1042 this.hfcc
1043 this.rowsAccepted++
1044 this.rowsAccepted
1045 this.pageSize
1046 BloomFilterUtil.toString
1047 listTableDescriptorsByNamespace
1048 toJsonString
1049 MessageOrBuilder
1050 messageOrBuilder
1051 InvalidProtocolBufferException
1052 setErr
1053 err
1054 this.err
1055 setRegions
1056 this.regions
1057 getClazz
1058 clazz
1059 setUpBeforeClass
1060 TestReplicationBase.setUpBeforeClass
1061 tearDownAfterClass
1062 this.conf
1063 Bytes.hashCode
1064 isEnabled
1065 isInStates
1066 State.ENABLED
1067 REGION.close
1068 setEntry
1069 Entry
1070 this.entry
1071 ByteStringCompressor
1072 getNoneCompressor
1073 NoneCompressor
1074 getExcludeNamespaces
1075 this.excludeNamespaces
1076 Float
1077 encodedClass
1078 Float.class
1079 isSetTags
1080 this.tags
1081 ChunkCreator.chunkPoolDisabled
1082 chunkPoolDisabledBeforeTest
1083 setMaxVersions
1084 maxVersions
1085 this.maxVersions
1086 cleanup
1087 server.stop
1088 getWalEntries
1089 walEntries
1090 getDeadNodes
1091 deadNodes
1092 isMetaRegionInTransition
1093 isMetaAssigned
1094 setAllowed
1095 allowed
1096 this.allowed
1097 Reference
1098 V
1099 createReference
1100 K
1101 obj
1102 TColumn
1103 getColumns
1104 testJar
1105 jar
1106 extends
1107 Store
1108 getStores
1109 stateManager.start
1110 getEncodedNodeName
1111 filename
1112 testFindOnEmpty
1113 m.clear
1114 getHeapOccupancyPercent
1115 this.heapOccupancyPercent
1116 Float.MAX_VALUE
1117 synchronized
1118 super.interrupt
1119 initialize
1120 testSmallBatch
1121 runSmallBatchTest
1122 isCompacted
1123 header.getType
1124 testSimplePutDelete
1125 runSimplePutDeleteTest
1126 this.stopped
1127 testGetAndExists
1128 waitForIdleConnectionClosed
1129 appendToLog
1130 after
1131 testGetAndSetKeyValuesWithValues
1132 callSetKeyValues
1133 KeeperException
1134 this.checkEnabledAndUpdate
1135 splitMetaLog
1136 testMoveServersAndTables
1137 super.testMoveServersAndTables
1138 splitLog
1139 printProcedure
1140 getTmpRecoveredEditsFileName
1141 fileName
1142 TestReplicationBase.tearDownAfterClass
1143 testingUtility.shutdownMiniCluster
1144 getAbortNode
1145 ZKProcedureUtil
1146 testRemoveServers
1147 super.testRemoveServers
1148 testTableMoveTruncateAndDrop
1149 super.testTableMoveTruncateAndDrop
1150 AsyncTableBuilderBase
1151 C

Target vocabulary :  27
0 <start>
1 MethodDeclaration
2 <end>
3 BlockStmt
4 ReturnStmt
5 ConditionalExpr
6 EnclosedExpr
7 StringLiteralExpr
8 NameExpr
9 IntegerLiteralExpr
10 FieldAccessExpr
11 ThisExpr
12 BooleanLiteralExpr
13 NullLiteralExpr
14 UnaryExpr
15 ExpressionStmt
16 AssignExpr
17 MethodCallExpr
18 LineComment
19 LongLiteralExpr
20 BinaryExpr
21 ObjectCreationExpr
22 ClassOrInterfaceType
23 ThrowStmt
24 ClassExpr
25 SynchronizedStmt
26 SuperExpr
<DatasetV1Adapter shapes: ((64, 12, 10), (64, 15, 10)), types: (tf.float32, tf.float32)>
(64, 12, 10) (64, 15, 10)
Traceback (most recent call last):
  File "word2vec_logging_nmt_with_attention.py", line 442, in <module>
    encoder = Encoder(vocab_inp_size, embedding_dim, units, BATCH_SIZE)
  File "word2vec_logging_nmt_with_attention.py", line 424, in __init__
    self.embedding = tf.keras.layers.Embedding(vocab_size,10, embedding_dim)
  File "/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/keras/layers/embeddings.py", line 111, in __init__
    self.embeddings_initializer = initializers.get(embeddings_initializer)
  File "/home/momo/.local/lib/python3.6/site-packages/tensorflow/python/keras/initializers.py", line 208, in get
    str(identifier))
ValueError: Could not interpret initializer identifier: 256
