Compiled from "Quantiles.java"
public final class com.google.common.math.Quantiles {
  public com.google.common.math.Quantiles();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.common.math.Quantiles$ScaleAndIndex median();
    Code:
       0: iconst_2
       1: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       4: iconst_1
       5: invokevirtual #11                 // Method com/google/common/math/Quantiles$Scale.index:(I)Lcom/google/common/math/Quantiles$ScaleAndIndex;
       8: areturn

  public static com.google.common.math.Quantiles$Scale quartiles();
    Code:
       0: iconst_4
       1: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       4: areturn

  public static com.google.common.math.Quantiles$Scale percentiles();
    Code:
       0: bipush        100
       2: invokestatic  #10                 // Method scale:(I)Lcom/google/common/math/Quantiles$Scale;
       5: areturn

  public static com.google.common.math.Quantiles$Scale scale(int);
    Code:
       0: new           #12                 // class com/google/common/math/Quantiles$Scale
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #13                 // Method com/google/common/math/Quantiles$Scale."<init>":(ILcom/google/common/math/Quantiles$1;)V
       9: areturn

  static void access$300(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #8                  // Method checkIndex:(II)V
       5: return

  static double[] access$400(long[]);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method longsToDoubles:([J)[D
       4: areturn

  static double[] access$500(int[]);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method intsToDoubles:([I)[D
       4: areturn

  static boolean access$600(double[]);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method containsNaN:([D)Z
       4: ireturn

  static void access$700(int, double[], int, int);
    Code:
       0: iload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #4                  // Method selectInPlace:(I[DII)V
       7: return

  static double access$800(double, double, double, double);
    Code:
       0: dload_0
       1: dload_2
       2: dload         4
       4: dload         6
       6: invokestatic  #3                  // Method interpolate:(DDDD)D
       9: dreturn

  static void access$900(int[], int, int, double[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: invokestatic  #2                  // Method selectAllInPlace:([III[DII)V
      11: return
}
