Compiled from "MacHashFunction.java"
final class com.google.common.hash.MacHashFunction extends com.google.common.hash.AbstractHashFunction {
  com.google.common.hash.MacHashFunction(java.lang.String, java.security.Key, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/hash/AbstractHashFunction."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #2                  // Method getMac:(Ljava/lang/String;Ljava/security/Key;)Ljavax/crypto/Mac;
      10: putfield      #3                  // Field prototype:Ljavax/crypto/Mac;
      13: aload_0
      14: aload_2
      15: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #5                  // class java/security/Key
      21: putfield      #6                  // Field key:Ljava/security/Key;
      24: aload_0
      25: aload_3
      26: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #7                  // class java/lang/String
      32: putfield      #8                  // Field toString:Ljava/lang/String;
      35: aload_0
      36: aload_0
      37: getfield      #3                  // Field prototype:Ljavax/crypto/Mac;
      40: invokevirtual #9                  // Method javax/crypto/Mac.getMacLength:()I
      43: bipush        8
      45: imul
      46: putfield      #11                 // Field bits:I
      49: aload_0
      50: aload_0
      51: getfield      #3                  // Field prototype:Ljavax/crypto/Mac;
      54: invokestatic  #12                 // Method supportsClone:(Ljavax/crypto/Mac;)Z
      57: putfield      #13                 // Field supportsClone:Z
      60: return

  public int bits();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bits:I
       4: ireturn

  public com.google.common.hash.Hasher newHasher();
    Code:
       0: aload_0
       1: getfield      #13                 // Field supportsClone:Z
       4: ifeq          27
       7: new           #24                 // class com/google/common/hash/MacHashFunction$MacHasher
      10: dup
      11: aload_0
      12: getfield      #3                  // Field prototype:Ljavax/crypto/Mac;
      15: invokevirtual #14                 // Method javax/crypto/Mac.clone:()Ljava/lang/Object;
      18: checkcast     #25                 // class javax/crypto/Mac
      21: aconst_null
      22: invokespecial #26                 // Method com/google/common/hash/MacHashFunction$MacHasher."<init>":(Ljavax/crypto/Mac;Lcom/google/common/hash/MacHashFunction$1;)V
      25: areturn
      26: astore_1
      27: new           #24                 // class com/google/common/hash/MacHashFunction$MacHasher
      30: dup
      31: aload_0
      32: getfield      #3                  // Field prototype:Ljavax/crypto/Mac;
      35: invokevirtual #27                 // Method javax/crypto/Mac.getAlgorithm:()Ljava/lang/String;
      38: aload_0
      39: getfield      #6                  // Field key:Ljava/security/Key;
      42: invokestatic  #2                  // Method getMac:(Ljava/lang/String;Ljava/security/Key;)Ljavax/crypto/Mac;
      45: aconst_null
      46: invokespecial #26                 // Method com/google/common/hash/MacHashFunction$MacHasher."<init>":(Ljavax/crypto/Mac;Lcom/google/common/hash/MacHashFunction$1;)V
      49: areturn
    Exception table:
       from    to  target type
           7    25    26   Class java/lang/CloneNotSupportedException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field toString:Ljava/lang/String;
       4: areturn
}
