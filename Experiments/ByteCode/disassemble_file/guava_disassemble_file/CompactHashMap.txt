Compiled from "CompactHashMap.java"
class com.google.common.collect.CompactHashMap<K, V> extends java.util.AbstractMap<K, V> implements java.io.Serializable {
  static final int DEFAULT_SIZE;

  static final int UNSET;

  transient long[] entries;

  transient java.lang.Object[] keys;

  transient java.lang.Object[] values;

  transient int modCount;

  public static <K, V> com.google.common.collect.CompactHashMap<K, V> create();
    Code:
       0: new           #1                  // class com/google/common/collect/CompactHashMap
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.CompactHashMap<K, V> createWithExpectedSize(int);
    Code:
       0: new           #1                  // class com/google/common/collect/CompactHashMap
       3: dup
       4: iload_0
       5: invokespecial #6                  // Method "<init>":(I)V
       8: areturn

  com.google.common.collect.CompactHashMap();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: iconst_3
       6: invokevirtual #8                  // Method init:(I)V
       9: return

  com.google.common.collect.CompactHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: iload_1
       6: invokevirtual #8                  // Method init:(I)V
       9: return

  void init(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #9                  // String Expected size must be non-negative
      11: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: iconst_1
      16: iload_1
      17: invokestatic  #11                 // Method java/lang/Math.max:(II)I
      20: putfield      #12                 // Field modCount:I
      23: return

  boolean needsAllocArrays();
    Code:
       0: aload_0
       1: getfield      #13                 // Field table:[I
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  void allocArrays();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method needsAllocArrays:()Z
       4: ldc           #15                 // String Arrays already allocated
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
       9: aload_0
      10: getfield      #12                 // Field modCount:I
      13: istore_1
      14: iload_1
      15: dconst_1
      16: invokestatic  #17                 // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
      19: istore_2
      20: aload_0
      21: iload_2
      22: invokestatic  #18                 // Method newTable:(I)[I
      25: putfield      #13                 // Field table:[I
      28: aload_0
      29: iload_1
      30: invokestatic  #19                 // Method newEntries:(I)[J
      33: putfield      #20                 // Field entries:[J
      36: aload_0
      37: iload_1
      38: anewarray     #21                 // class java/lang/Object
      41: putfield      #22                 // Field keys:[Ljava/lang/Object;
      44: aload_0
      45: iload_1
      46: anewarray     #21                 // class java/lang/Object
      49: putfield      #23                 // Field values:[Ljava/lang/Object;
      52: return

  void accessEntry(int);
    Code:
       0: return

  public V put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method needsAllocArrays:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #32                 // Method allocArrays:()V
      11: aload_0
      12: getfield      #20                 // Field entries:[J
      15: astore_3
      16: aload_0
      17: getfield      #22                 // Field keys:[Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: getfield      #23                 // Field values:[Ljava/lang/Object;
      26: astore        5
      28: aload_1
      29: invokestatic  #33                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      32: istore        6
      34: iload         6
      36: aload_0
      37: invokespecial #34                 // Method hashTableMask:()I
      40: iand
      41: istore        7
      43: aload_0
      44: getfield      #3                  // Field size:I
      47: istore        8
      49: aload_0
      50: getfield      #13                 // Field table:[I
      53: iload         7
      55: iaload
      56: istore        9
      58: iload         9
      60: iconst_m1
      61: if_icmpne     76
      64: aload_0
      65: getfield      #13                 // Field table:[I
      68: iload         7
      70: iload         8
      72: iastore
      73: goto          154
      76: iload         9
      78: istore        10
      80: aload_3
      81: iload         9
      83: laload
      84: lstore        11
      86: lload         11
      88: invokestatic  #35                 // Method getHash:(J)I
      91: iload         6
      93: if_icmpne     130
      96: aload_1
      97: aload         4
      99: iload         9
     101: aaload
     102: invokestatic  #36                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     105: ifeq          130
     108: aload         5
     110: iload         9
     112: aaload
     113: astore        13
     115: aload         5
     117: iload         9
     119: aload_2
     120: aastore
     121: aload_0
     122: iload         9
     124: invokevirtual #37                 // Method accessEntry:(I)V
     127: aload         13
     129: areturn
     130: lload         11
     132: invokestatic  #38                 // Method getNext:(J)I
     135: istore        9
     137: iload         9
     139: iconst_m1
     140: if_icmpne     76
     143: aload_3
     144: iload         10
     146: lload         11
     148: iload         8
     150: invokestatic  #39                 // Method swapNext:(JI)J
     153: lastore
     154: iload         8
     156: ldc           #41                 // int 2147483647
     158: if_icmpne     171
     161: new           #42                 // class java/lang/IllegalStateException
     164: dup
     165: ldc           #43                 // String Cannot contain more than Integer.MAX_VALUE elements!
     167: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     170: athrow
     171: iload         8
     173: iconst_1
     174: iadd
     175: istore        10
     177: aload_0
     178: iload         10
     180: invokespecial #45                 // Method resizeMeMaybe:(I)V
     183: aload_0
     184: iload         8
     186: aload_1
     187: aload_2
     188: iload         6
     190: invokevirtual #46                 // Method insertEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
     193: aload_0
     194: iload         10
     196: putfield      #3                  // Field size:I
     199: aload_0
     200: getfield      #13                 // Field table:[I
     203: arraylength
     204: istore        11
     206: iload         8
     208: iload         11
     210: dconst_1
     211: invokestatic  #47                 // Method com/google/common/collect/Hashing.needsResizing:(IID)Z
     214: ifeq          225
     217: aload_0
     218: iconst_2
     219: iload         11
     221: imul
     222: invokespecial #48                 // Method resizeTable:(I)V
     225: aload_0
     226: dup
     227: getfield      #12                 // Field modCount:I
     230: iconst_1
     231: iadd
     232: putfield      #12                 // Field modCount:I
     235: aconst_null
     236: areturn

  void insertEntry(int, K, V, int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field entries:[J
       4: iload_1
       5: iload         4
       7: i2l
       8: bipush        32
      10: lshl
      11: ldc2_w        #30                 // long 4294967295l
      14: lor
      15: lastore
      16: aload_0
      17: getfield      #22                 // Field keys:[Ljava/lang/Object;
      20: iload_1
      21: aload_2
      22: aastore
      23: aload_0
      24: getfield      #23                 // Field values:[Ljava/lang/Object;
      27: iload_1
      28: aload_3
      29: aastore
      30: return

  void resizeEntries(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #22                 // Field keys:[Ljava/lang/Object;
       5: iload_1
       6: invokestatic  #50                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       9: putfield      #22                 // Field keys:[Ljava/lang/Object;
      12: aload_0
      13: aload_0
      14: getfield      #23                 // Field values:[Ljava/lang/Object;
      17: iload_1
      18: invokestatic  #50                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      21: putfield      #23                 // Field values:[Ljava/lang/Object;
      24: aload_0
      25: getfield      #20                 // Field entries:[J
      28: astore_2
      29: aload_2
      30: arraylength
      31: istore_3
      32: aload_2
      33: iload_1
      34: invokestatic  #51                 // Method java/util/Arrays.copyOf:([JI)[J
      37: astore_2
      38: iload_1
      39: iload_3
      40: if_icmple     52
      43: aload_2
      44: iload_3
      45: iload_1
      46: ldc2_w        #25                 // long -1l
      49: invokestatic  #52                 // Method java/util/Arrays.fill:([JIIJ)V
      52: aload_0
      53: aload_2
      54: putfield      #20                 // Field entries:[J
      57: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method indexOf:(Ljava/lang/Object;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method indexOf:(Ljava/lang/Object;)I
       5: istore_2
       6: aload_0
       7: iload_2
       8: invokevirtual #37                 // Method accessEntry:(I)V
      11: iload_2
      12: iconst_m1
      13: if_icmpne     20
      16: aconst_null
      17: goto          26
      20: aload_0
      21: getfield      #23                 // Field values:[Ljava/lang/Object;
      24: iload_2
      25: aaload
      26: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method needsAllocArrays:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_1
      11: aload_1
      12: invokestatic  #33                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      15: invokespecial #53                 // Method remove:(Ljava/lang/Object;I)Ljava/lang/Object;
      18: areturn

  void moveLastEntry(int);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method size:()I
       4: iconst_1
       5: isub
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     151
      12: aload_0
      13: getfield      #22                 // Field keys:[Ljava/lang/Object;
      16: iload_1
      17: aload_0
      18: getfield      #22                 // Field keys:[Ljava/lang/Object;
      21: iload_2
      22: aaload
      23: aastore
      24: aload_0
      25: getfield      #23                 // Field values:[Ljava/lang/Object;
      28: iload_1
      29: aload_0
      30: getfield      #23                 // Field values:[Ljava/lang/Object;
      33: iload_2
      34: aaload
      35: aastore
      36: aload_0
      37: getfield      #22                 // Field keys:[Ljava/lang/Object;
      40: iload_2
      41: aconst_null
      42: aastore
      43: aload_0
      44: getfield      #23                 // Field values:[Ljava/lang/Object;
      47: iload_2
      48: aconst_null
      49: aastore
      50: aload_0
      51: getfield      #20                 // Field entries:[J
      54: iload_2
      55: laload
      56: lstore_3
      57: aload_0
      58: getfield      #20                 // Field entries:[J
      61: iload_1
      62: lload_3
      63: lastore
      64: aload_0
      65: getfield      #20                 // Field entries:[J
      68: iload_2
      69: ldc2_w        #25                 // long -1l
      72: lastore
      73: lload_3
      74: invokestatic  #35                 // Method getHash:(J)I
      77: aload_0
      78: invokespecial #34                 // Method hashTableMask:()I
      81: iand
      82: istore        5
      84: aload_0
      85: getfield      #13                 // Field table:[I
      88: iload         5
      90: iaload
      91: istore        6
      93: iload         6
      95: iload_2
      96: if_icmpne     110
      99: aload_0
     100: getfield      #13                 // Field table:[I
     103: iload         5
     105: iload_1
     106: iastore
     107: goto          148
     110: iload         6
     112: istore        7
     114: aload_0
     115: getfield      #20                 // Field entries:[J
     118: iload         6
     120: laload
     121: dup2
     122: lstore        8
     124: invokestatic  #38                 // Method getNext:(J)I
     127: istore        6
     129: iload         6
     131: iload_2
     132: if_icmpne     110
     135: aload_0
     136: getfield      #20                 // Field entries:[J
     139: iload         7
     141: lload         8
     143: iload_1
     144: invokestatic  #39                 // Method swapNext:(JI)J
     147: lastore
     148: goto          174
     151: aload_0
     152: getfield      #22                 // Field keys:[Ljava/lang/Object;
     155: iload_1
     156: aconst_null
     157: aastore
     158: aload_0
     159: getfield      #23                 // Field values:[Ljava/lang/Object;
     162: iload_1
     163: aconst_null
     164: aastore
     165: aload_0
     166: getfield      #20                 // Field entries:[J
     169: iload_1
     170: ldc2_w        #25                 // long -1l
     173: lastore
     174: return

  int firstEntryIndex();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_m1
       8: goto          12
      11: iconst_0
      12: ireturn

  int getSuccessor(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #3                  // Field size:I
       7: if_icmpge     16
      10: iload_1
      11: iconst_1
      12: iadd
      13: goto          17
      16: iconst_m1
      17: ireturn

  int adjustAfterRemove(int, int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: ireturn

  public void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    Code:
       0: aload_1
       1: invokestatic  #57                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #3                  // Field size:I
      12: if_icmpge     45
      15: aload_0
      16: getfield      #23                 // Field values:[Ljava/lang/Object;
      19: iload_2
      20: aload_1
      21: aload_0
      22: getfield      #22                 // Field keys:[Ljava/lang/Object;
      25: iload_2
      26: aaload
      27: aload_0
      28: getfield      #23                 // Field values:[Ljava/lang/Object;
      31: iload_2
      32: aaload
      33: invokeinterface #58,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: aastore
      39: iinc          2, 1
      42: goto          7
      45: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #59                 // Field keySetView:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #60                 // Method createKeySet:()Ljava/util/Set;
      12: dup_x1
      13: putfield      #59                 // Field keySetView:Ljava/util/Set;
      16: goto          23
      19: aload_0
      20: getfield      #59                 // Field keySetView:Ljava/util/Set;
      23: areturn

  java.util.Set<K> createKeySet();
    Code:
       0: new           #61                 // class com/google/common/collect/CompactHashMap$KeySetView
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method com/google/common/collect/CompactHashMap$KeySetView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<K> keySetIterator();
    Code:
       0: new           #63                 // class com/google/common/collect/CompactHashMap$1
       3: dup
       4: aload_0
       5: invokespecial #64                 // Method com/google/common/collect/CompactHashMap$1."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #57                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #65                 // Method firstEntryIndex:()I
       9: istore_2
      10: iload_2
      11: iflt          41
      14: aload_1
      15: aload_0
      16: getfield      #22                 // Field keys:[Ljava/lang/Object;
      19: iload_2
      20: aaload
      21: aload_0
      22: getfield      #23                 // Field values:[Ljava/lang/Object;
      25: iload_2
      26: aaload
      27: invokeinterface #66,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_0
      33: iload_2
      34: invokevirtual #67                 // Method getSuccessor:(I)I
      37: istore_2
      38: goto          10
      41: return

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #68                 // Field entrySetView:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #69                 // Method createEntrySet:()Ljava/util/Set;
      12: dup_x1
      13: putfield      #68                 // Field entrySetView:Ljava/util/Set;
      16: goto          23
      19: aload_0
      20: getfield      #68                 // Field entrySetView:Ljava/util/Set;
      23: areturn

  java.util.Set<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: new           #70                 // class com/google/common/collect/CompactHashMap$EntrySetView
       3: dup
       4: aload_0
       5: invokespecial #71                 // Method com/google/common/collect/CompactHashMap$EntrySetView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<java.util.Map$Entry<K, V>> entrySetIterator();
    Code:
       0: new           #72                 // class com/google/common/collect/CompactHashMap$2
       3: dup
       4: aload_0
       5: invokespecial #73                 // Method com/google/common/collect/CompactHashMap$2."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #3                  // Field size:I
       7: if_icmpge     31
      10: aload_1
      11: aload_0
      12: getfield      #23                 // Field values:[Ljava/lang/Object;
      15: iload_2
      16: aaload
      17: invokestatic  #36                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: iinc          2, 1
      28: goto          2
      31: iconst_0
      32: ireturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #74                 // Field valuesView:Ljava/util/Collection;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #75                 // Method createValues:()Ljava/util/Collection;
      12: dup_x1
      13: putfield      #74                 // Field valuesView:Ljava/util/Collection;
      16: goto          23
      19: aload_0
      20: getfield      #74                 // Field valuesView:Ljava/util/Collection;
      23: areturn

  java.util.Collection<V> createValues();
    Code:
       0: new           #76                 // class com/google/common/collect/CompactHashMap$ValuesView
       3: dup
       4: aload_0
       5: invokespecial #77                 // Method com/google/common/collect/CompactHashMap$ValuesView."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  java.util.Iterator<V> valuesIterator();
    Code:
       0: new           #78                 // class com/google/common/collect/CompactHashMap$3
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method com/google/common/collect/CompactHashMap$3."<init>":(Lcom/google/common/collect/CompactHashMap;)V
       8: areturn

  public void trimToSize();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method needsAllocArrays:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field size:I
      12: istore_1
      13: iload_1
      14: aload_0
      15: getfield      #20                 // Field entries:[J
      18: arraylength
      19: if_icmpge     27
      22: aload_0
      23: iload_1
      24: invokevirtual #49                 // Method resizeEntries:(I)V
      27: iload_1
      28: dconst_1
      29: invokestatic  #17                 // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
      32: istore_2
      33: iload_2
      34: aload_0
      35: getfield      #13                 // Field table:[I
      38: arraylength
      39: if_icmpge     47
      42: aload_0
      43: iload_2
      44: invokespecial #48                 // Method resizeTable:(I)V
      47: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method needsAllocArrays:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: getfield      #12                 // Field modCount:I
      13: iconst_1
      14: iadd
      15: putfield      #12                 // Field modCount:I
      18: aload_0
      19: getfield      #22                 // Field keys:[Ljava/lang/Object;
      22: iconst_0
      23: aload_0
      24: getfield      #3                  // Field size:I
      27: aconst_null
      28: invokestatic  #80                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      31: aload_0
      32: getfield      #23                 // Field values:[Ljava/lang/Object;
      35: iconst_0
      36: aload_0
      37: getfield      #3                  // Field size:I
      40: aconst_null
      41: invokestatic  #80                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      44: aload_0
      45: getfield      #13                 // Field table:[I
      48: iconst_m1
      49: invokestatic  #24                 // Method java/util/Arrays.fill:([II)V
      52: aload_0
      53: getfield      #20                 // Field entries:[J
      56: iconst_0
      57: aload_0
      58: getfield      #3                  // Field size:I
      61: ldc2_w        #25                 // long -1l
      64: invokestatic  #52                 // Method java/util/Arrays.fill:([JIIJ)V
      67: aload_0
      68: iconst_0
      69: putfield      #3                  // Field size:I
      72: return

  static java.lang.Object access$000(com.google.common.collect.CompactHashMap, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method removeEntry:(I)Ljava/lang/Object;
       5: areturn

  static int access$100(com.google.common.collect.CompactHashMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ireturn

  static int access$200(com.google.common.collect.CompactHashMap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method indexOf:(Ljava/lang/Object;)I
       5: ireturn
}
