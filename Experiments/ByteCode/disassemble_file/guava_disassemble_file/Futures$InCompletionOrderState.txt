Compiled from "Futures.java"
final class com.google.common.util.concurrent.Futures$InCompletionOrderState<T> {
  com.google.common.util.concurrent.Futures$InCompletionOrderState(com.google.common.util.concurrent.ListenableFuture[], com.google.common.util.concurrent.Futures$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":([Lcom/google/common/util/concurrent/ListenableFuture;)V
       5: return

  static void access$300(com.google.common.util.concurrent.Futures$InCompletionOrderState, com.google.common.collect.ImmutableList, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method recordInputCompletion:(Lcom/google/common/collect/ImmutableList;I)V
       6: return

  static void access$400(com.google.common.util.concurrent.Futures$InCompletionOrderState, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method recordOutputCancellation:(Z)V
       5: return

  static com.google.common.util.concurrent.ListenableFuture[] access$500(com.google.common.util.concurrent.Futures$InCompletionOrderState);
    Code:
       0: aload_0
       1: getfield      #2                  // Field inputFutures:[Lcom/google/common/util/concurrent/ListenableFuture;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$600(com.google.common.util.concurrent.Futures$InCompletionOrderState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field incompleteOutputCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn
}
