Compiled from "CycleDetectingLockFactory.java"
class com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode {
  final java.util.Map<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace> allowedPriorLocks;

  final java.util.Map<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException> disallowedPriorLocks;

  final java.lang.String lockName;

  com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/google/common/collect/MapMaker
       8: dup
       9: invokespecial #3                  // Method com/google/common/collect/MapMaker."<init>":()V
      12: invokevirtual #4                  // Method com/google/common/collect/MapMaker.weakKeys:()Lcom/google/common/collect/MapMaker;
      15: invokevirtual #5                  // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      18: putfield      #6                  // Field allowedPriorLocks:Ljava/util/Map;
      21: aload_0
      22: new           #2                  // class com/google/common/collect/MapMaker
      25: dup
      26: invokespecial #3                  // Method com/google/common/collect/MapMaker."<init>":()V
      29: invokevirtual #4                  // Method com/google/common/collect/MapMaker.weakKeys:()Lcom/google/common/collect/MapMaker;
      32: invokevirtual #5                  // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      35: putfield      #7                  // Field disallowedPriorLocks:Ljava/util/Map;
      38: aload_0
      39: aload_1
      40: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #9                  // class java/lang/String
      46: putfield      #10                 // Field lockName:Ljava/lang/String;
      49: return

  java.lang.String getLockName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lockName:Ljava/lang/String;
       4: areturn

  void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy, java.util.List<com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
       8: istore        4
      10: iload_3
      11: iload         4
      13: if_icmpge     37
      16: aload_0
      17: aload_1
      18: aload_2
      19: iload_3
      20: invokeinterface #12,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #13                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
      28: invokevirtual #14                 // Method checkAcquiredLock:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;)V
      31: iinc          3, 1
      34: goto          10
      37: return

  void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy, com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode);
    Code:
       0: aload_0
       1: aload_2
       2: if_acmpeq     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #15                 // String Attempted to acquire multiple locks with the same rank %s
      12: aload_2
      13: invokevirtual #16                 // Method getLockName:()Ljava/lang/String;
      16: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #6                  // Field allowedPriorLocks:Ljava/util/Map;
      23: aload_2
      24: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          33
      32: return
      33: aload_0
      34: getfield      #7                  // Field disallowedPriorLocks:Ljava/util/Map;
      37: aload_2
      38: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #20                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException
      46: astore_3
      47: aload_3
      48: ifnull        76
      51: new           #20                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException
      54: dup
      55: aload_2
      56: aload_0
      57: aload_3
      58: invokevirtual #21                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException.getConflictingStackTrace:()Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;
      61: aconst_null
      62: invokespecial #22                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$1;)V
      65: astore        4
      67: aload_1
      68: aload         4
      70: invokeinterface #23,  2           // InterfaceMethod com/google/common/util/concurrent/CycleDetectingLockFactory$Policy.handlePotentialDeadlock:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;)V
      75: return
      76: invokestatic  #24                 // Method com/google/common/collect/Sets.newIdentityHashSet:()Ljava/util/Set;
      79: astore        4
      81: aload_2
      82: aload_0
      83: aload         4
      85: invokespecial #25                 // Method findPathTo:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Ljava/util/Set;)Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;
      88: astore        5
      90: aload         5
      92: ifnonnull     118
      95: aload_0
      96: getfield      #6                  // Field allowedPriorLocks:Ljava/util/Map;
      99: aload_2
     100: new           #26                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace
     103: dup
     104: aload_2
     105: aload_0
     106: invokespecial #27                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;)V
     109: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: goto          153
     118: new           #20                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException
     121: dup
     122: aload_2
     123: aload_0
     124: aload         5
     126: aconst_null
     127: invokespecial #22                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$1;)V
     130: astore        6
     132: aload_0
     133: getfield      #7                  // Field disallowedPriorLocks:Ljava/util/Map;
     136: aload_2
     137: aload         6
     139: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: aload_1
     146: aload         6
     148: invokeinterface #23,  2           // InterfaceMethod com/google/common/util/concurrent/CycleDetectingLockFactory$Policy.handlePotentialDeadlock:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;)V
     153: return
}
