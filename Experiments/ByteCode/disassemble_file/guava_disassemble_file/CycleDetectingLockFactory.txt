Compiled from "CycleDetectingLockFactory.java"
public class com.google.common.util.concurrent.CycleDetectingLockFactory {
  final com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy;

  public static com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy);
    Code:
       0: new           #5                  // class com/google/common/util/concurrent/CycleDetectingLockFactory
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)V
       8: areturn

  public java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #6                  // Method newReentrantLock:(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantLock;
       6: areturn

  public java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;
       4: getstatic     #8                  // Field com/google/common/util/concurrent/CycleDetectingLockFactory$Policies.DISABLED:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
       7: if_acmpne     21
      10: new           #9                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: iload_2
      15: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      18: goto          39
      21: new           #11                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantLock
      24: dup
      25: aload_0
      26: new           #12                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
      29: dup
      30: aload_1
      31: invokespecial #13                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode."<init>":(Ljava/lang/String;)V
      34: iload_2
      35: aconst_null
      36: invokespecial #14                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantLock."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;ZLcom/google/common/util/concurrent/CycleDetectingLockFactory$1;)V
      39: areturn

  public java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #15                 // Method newReentrantReadWriteLock:(Ljava/lang/String;Z)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       6: areturn

  public java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field policy:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;
       4: getstatic     #8                  // Field com/google/common/util/concurrent/CycleDetectingLockFactory$Policies.DISABLED:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
       7: if_acmpne     21
      10: new           #16                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      13: dup
      14: iload_2
      15: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":(Z)V
      18: goto          39
      21: new           #18                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock
      24: dup
      25: aload_0
      26: new           #12                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
      29: dup
      30: aload_1
      31: invokespecial #13                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode."<init>":(Ljava/lang/String;)V
      34: iload_2
      35: aconst_null
      36: invokespecial #19                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode;ZLcom/google/common/util/concurrent/CycleDetectingLockFactory$1;)V
      39: areturn

  public static <E extends java.lang.Enum<E>> com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering<E> newInstanceWithExplicitOrdering(java.lang.Class<E>, com.google.common.util.concurrent.CycleDetectingLockFactory$Policy);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokestatic  #21                 // Method getOrCreateNodes:(Ljava/lang/Class;)Ljava/util/Map;
      14: astore_2
      15: new           #22                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering
      18: dup
      19: aload_1
      20: aload_2
      21: invokespecial #23                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$WithExplicitOrdering."<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;Ljava/util/Map;)V
      24: areturn

  static <E extends java.lang.Enum<E>> java.util.Map<E, com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode> createNodes(java.lang.Class<E>);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method com/google/common/collect/Maps.newEnumMap:(Ljava/lang/Class;)Ljava/util/EnumMap;
       4: astore_1
       5: aload_0
       6: invokevirtual #31                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
       9: checkcast     #32                 // class "[Ljava/lang/Enum;"
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iload_3
      17: invokestatic  #33                 // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
      20: astore        4
      22: aload_2
      23: astore        5
      25: aload         5
      27: arraylength
      28: istore        6
      30: iconst_0
      31: istore        7
      33: iload         7
      35: iload         6
      37: if_icmpge     84
      40: aload         5
      42: iload         7
      44: aaload
      45: astore        8
      47: new           #12                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
      50: dup
      51: aload         8
      53: invokestatic  #34                 // Method getLockName:(Ljava/lang/Enum;)Ljava/lang/String;
      56: invokespecial #13                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode."<init>":(Ljava/lang/String;)V
      59: astore        9
      61: aload         4
      63: aload         9
      65: invokevirtual #35                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_1
      70: aload         8
      72: aload         9
      74: invokevirtual #36                 // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: iinc          7, 1
      81: goto          33
      84: iconst_1
      85: istore        5
      87: iload         5
      89: iload_3
      90: if_icmpge     123
      93: aload         4
      95: iload         5
      97: invokevirtual #37                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     100: checkcast     #12                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
     103: getstatic     #38                 // Field com/google/common/util/concurrent/CycleDetectingLockFactory$Policies.THROW:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
     106: aload         4
     108: iconst_0
     109: iload         5
     111: invokevirtual #39                 // Method java/util/ArrayList.subList:(II)Ljava/util/List;
     114: invokevirtual #40                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode.checkAcquiredLocks:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;Ljava/util/List;)V
     117: iinc          5, 1
     120: goto          87
     123: iconst_0
     124: istore        5
     126: iload         5
     128: iload_3
     129: iconst_1
     130: isub
     131: if_icmpge     166
     134: aload         4
     136: iload         5
     138: invokevirtual #37                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     141: checkcast     #12                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode
     144: getstatic     #8                  // Field com/google/common/util/concurrent/CycleDetectingLockFactory$Policies.DISABLED:Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policies;
     147: aload         4
     149: iload         5
     151: iconst_1
     152: iadd
     153: iload_3
     154: invokevirtual #39                 // Method java/util/ArrayList.subList:(II)Ljava/util/List;
     157: invokevirtual #40                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode.checkAcquiredLocks:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;Ljava/util/List;)V
     160: iinc          5, 1
     163: goto          126
     166: aload_1
     167: invokestatic  #41                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     170: areturn

  static java.util.logging.Logger access$100();
    Code:
       0: getstatic     #4                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  com.google.common.util.concurrent.CycleDetectingLockFactory(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy, com.google.common.util.concurrent.CycleDetectingLockFactory$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$Policy;)V
       5: return

  static void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method aboutToAcquire:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingLock;)V
       5: return

  static void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method lockStateChanged:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$CycleDetectingLock;)V
       4: return

  static {};
    Code:
       0: new           #59                 // class com/google/common/collect/MapMaker
       3: dup
       4: invokespecial #60                 // Method com/google/common/collect/MapMaker."<init>":()V
       7: invokevirtual #61                 // Method com/google/common/collect/MapMaker.weakKeys:()Lcom/google/common/collect/MapMaker;
      10: invokevirtual #62                 // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      13: putstatic     #24                 // Field lockGraphNodesPerType:Ljava/util/concurrent/ConcurrentMap;
      16: ldc           #5                  // class com/google/common/util/concurrent/CycleDetectingLockFactory
      18: invokevirtual #63                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokestatic  #64                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      24: putstatic     #4                  // Field logger:Ljava/util/logging/Logger;
      27: new           #65                 // class com/google/common/util/concurrent/CycleDetectingLockFactory$1
      30: dup
      31: invokespecial #66                 // Method com/google/common/util/concurrent/CycleDetectingLockFactory$1."<init>":()V
      34: putstatic     #53                 // Field acquiredLocks:Ljava/lang/ThreadLocal;
      37: return
}
