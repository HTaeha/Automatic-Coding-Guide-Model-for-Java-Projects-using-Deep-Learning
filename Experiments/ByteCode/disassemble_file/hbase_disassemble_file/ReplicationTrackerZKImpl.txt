Compiled from "ReplicationTrackerZKImpl.java"
public class org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl implements org.apache.hadoop.hbase.replication.ReplicationTracker {
  public org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl(org.apache.hadoop.hbase.zookeeper.ZKWatcher, org.apache.hadoop.hbase.Abortable, org.apache.hadoop.hbase.Stoppable);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #3                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #9                  // class java/util/ArrayList
      19: dup
      20: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #11                 // Field otherRegionServers:Ljava/util/ArrayList;
      26: aload_0
      27: aload_1
      28: putfield      #12                 // Field zookeeper:Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
      31: aload_0
      32: aload_2
      33: putfield      #13                 // Field abortable:Lorg/apache/hadoop/hbase/Abortable;
      36: aload_0
      37: aload_3
      38: putfield      #5                  // Field stopper:Lorg/apache/hadoop/hbase/Stoppable;
      41: aload_0
      42: getfield      #12                 // Field zookeeper:Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
      45: new           #14                 // class org/apache/hadoop/hbase/replication/ReplicationTrackerZKImpl$OtherRegionServerWatcher
      48: dup
      49: aload_0
      50: aload_0
      51: getfield      #12                 // Field zookeeper:Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
      54: invokespecial #15                 // Method org/apache/hadoop/hbase/replication/ReplicationTrackerZKImpl$OtherRegionServerWatcher."<init>":(Lorg/apache/hadoop/hbase/replication/ReplicationTrackerZKImpl;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
      57: invokevirtual #16                 // Method org/apache/hadoop/hbase/zookeeper/ZKWatcher.registerListener:(Lorg/apache/hadoop/hbase/zookeeper/ZKListener;)V
      60: aload_0
      61: iconst_1
      62: invokespecial #1                  // Method refreshOtherRegionServersList:(Z)Z
      65: pop
      66: return

  public void registerListener(org.apache.hadoop.hbase.replication.ReplicationListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeListener(org.apache.hadoop.hbase.replication.ReplicationListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.List<java.lang.String> getListOfRegionServers();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method refreshOtherRegionServersList:(Z)Z
       5: pop
       6: aconst_null
       7: astore_1
       8: aload_0
       9: getfield      #11                 // Field otherRegionServers:Ljava/util/ArrayList;
      12: dup
      13: astore_2
      14: monitorenter
      15: new           #9                  // class java/util/ArrayList
      18: dup
      19: aload_0
      20: getfield      #11                 // Field otherRegionServers:Ljava/util/ArrayList;
      23: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: astore_1
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_1
      38: areturn
    Exception table:
       from    to  target type
          15    29    32   any
          32    35    32   any

  static org.apache.hadoop.hbase.Stoppable access$000(org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stopper:Lorg/apache/hadoop/hbase/Stoppable;
       4: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.List access$200(org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/List;
       4: areturn

  static java.lang.String access$300(org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method getZNodeName:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static boolean access$400(org.apache.hadoop.hbase.replication.ReplicationTrackerZKImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method refreshOtherRegionServersList:(Z)Z
       5: ireturn

  static {};
    Code:
       0: ldc           #33                 // class org/apache/hadoop/hbase/replication/ReplicationTrackerZKImpl
       2: invokestatic  #34                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #4                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
