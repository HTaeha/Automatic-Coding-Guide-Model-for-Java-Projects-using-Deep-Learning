Compiled from "ConcurrentMapUtils.java"
public class org.apache.hadoop.hbase.util.ConcurrentMapUtils {
  public org.apache.hadoop.hbase.util.ConcurrentMapUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> V computeIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, java.util.function.Supplier<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #2,  0              // InvokeDynamic #0:run:()Ljava/lang/Runnable;
       8: invokestatic  #3                  // Method computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Runnable;)Ljava/lang/Object;
      11: areturn

  public static <K, V> V computeIfAbsentEx(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.hadoop.hbase.util.ConcurrentMapUtils$IOExceptionSupplier<V>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: dup
       8: astore_3
       9: ifnonnull     43
      12: aload_2
      13: invokeinterface #5,  1            // InterfaceMethod org/apache/hadoop/hbase/util/ConcurrentMapUtils$IOExceptionSupplier.get:()Ljava/lang/Object;
      18: dup
      19: astore        4
      21: ifnull        43
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokeinterface #6,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: dup
      34: astore_3
      35: ifnonnull     43
      38: aload         4
      40: goto          44
      43: aload_3
      44: areturn

  public static <K, V> V computeIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, java.util.function.Supplier<V>, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: ifnull        17
      14: aload         4
      16: areturn
      17: aload_2
      18: invokeinterface #7,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      23: astore        5
      25: aload_0
      26: aload_1
      27: aload         5
      29: invokeinterface #6,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        4
      36: aload         4
      38: ifnull        44
      41: aload         4
      43: areturn
      44: aload_3
      45: invokeinterface #8,  1            // InterfaceMethod java/lang/Runnable.run:()V
      50: aload         5
      52: areturn
}
