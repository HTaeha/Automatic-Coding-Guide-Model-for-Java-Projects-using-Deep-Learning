Compiled from "StochasticLoadBalancer.java"
abstract class org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer$CostFromRegionLoadFunction extends org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer$CostFunction {
  org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer$CostFromRegionLoadFunction(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$CostFunction."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field clusterStatus:Lorg/apache/hadoop/hbase/ClusterMetrics;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field loads:Ljava/util/Map;
      15: aload_0
      16: aconst_null
      17: putfield      #4                  // Field stats:[D
      20: return

  void setClusterMetrics(org.apache.hadoop.hbase.ClusterMetrics);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field clusterStatus:Lorg/apache/hadoop/hbase/ClusterMetrics;
       5: return

  void setLoads(java.util.Map<java.lang.String, java.util.Deque<org.apache.hadoop.hbase.master.balancer.BalancerRegionLoad>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field loads:Ljava/util/Map;
       5: return

  double cost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field clusterStatus:Lorg/apache/hadoop/hbase/ClusterMetrics;
       4: ifnull        14
       7: aload_0
       8: getfield      #3                  // Field loads:Ljava/util/Map;
      11: ifnonnull     16
      14: dconst_0
      15: dreturn
      16: aload_0
      17: getfield      #4                  // Field stats:[D
      20: ifnull        38
      23: aload_0
      24: getfield      #4                  // Field stats:[D
      27: arraylength
      28: aload_0
      29: getfield      #5                  // Field cluster:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;
      32: getfield      #6                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numServers:I
      35: if_icmpeq     51
      38: aload_0
      39: aload_0
      40: getfield      #5                  // Field cluster:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;
      43: getfield      #6                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numServers:I
      46: newarray       double
      48: putfield      #4                  // Field stats:[D
      51: iconst_0
      52: istore_1
      53: iload_1
      54: aload_0
      55: getfield      #4                  // Field stats:[D
      58: arraylength
      59: if_icmpge     145
      62: lconst_0
      63: lstore_2
      64: aload_0
      65: getfield      #5                  // Field cluster:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;
      68: getfield      #7                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.regionsPerServer:[[I
      71: iload_1
      72: aaload
      73: astore        4
      75: aload         4
      77: arraylength
      78: istore        5
      80: iconst_0
      81: istore        6
      83: iload         6
      85: iload         5
      87: if_icmpge     131
      90: aload         4
      92: iload         6
      94: iaload
      95: istore        7
      97: aload_0
      98: getfield      #5                  // Field cluster:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;
     101: getfield      #8                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.regionLoads:[Ljava/util/Deque;
     104: iload         7
     106: aaload
     107: astore        8
     109: aload         8
     111: ifnull        125
     114: lload_2
     115: l2d
     116: aload_0
     117: aload         8
     119: invokevirtual #9                  // Method getRegionLoadCost:(Ljava/util/Collection;)D
     122: dadd
     123: d2l
     124: lstore_2
     125: iinc          6, 1
     128: goto          83
     131: aload_0
     132: getfield      #4                  // Field stats:[D
     135: iload_1
     136: lload_2
     137: l2d
     138: dastore
     139: iinc          1, 1
     142: goto          53
     145: aload_0
     146: aload_0
     147: getfield      #4                  // Field stats:[D
     150: invokevirtual #10                 // Method costFromArray:([D)D
     153: dreturn

  protected double getRegionLoadCost(java.util.Collection<org.apache.hadoop.hbase.master.balancer.BalancerRegionLoad>);
    Code:
       0: dconst_0
       1: dstore_2
       2: aload_1
       3: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          44
      20: aload         4
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #14                 // class org/apache/hadoop/hbase/master/balancer/BalancerRegionLoad
      30: astore        5
      32: dload_2
      33: aload_0
      34: aload         5
      36: invokevirtual #15                 // Method getCostFromRl:(Lorg/apache/hadoop/hbase/master/balancer/BalancerRegionLoad;)D
      39: dadd
      40: dstore_2
      41: goto          10
      44: dload_2
      45: aload_1
      46: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.size:()I
      51: i2d
      52: ddiv
      53: dreturn

  protected abstract double getCostFromRl(org.apache.hadoop.hbase.master.balancer.BalancerRegionLoad);
}
