Compiled from "JitterScheduledThreadPoolExecutorImpl.java"
public class org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture<V> implements java.util.concurrent.RunnableScheduledFuture<V> {
  final org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl this$0;

  org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture(java.util.concurrent.RunnableScheduledFuture<V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
      14: return

  public boolean isPeriodic();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.isPeriodic:()Z
       9: ireturn

  public long getDelay(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      10: lstore_2
      11: lload_2
      12: l2d
      13: aload_0
      14: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.access$000:(Lorg/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl;)D
      20: dmul
      21: d2l
      22: lstore        4
      24: lload         4
      26: lconst_0
      27: lcmp
      28: ifgt          35
      31: lload_2
      32: goto          48
      35: lload_2
      36: invokestatic  #7                  // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      39: lload         4
      41: lneg
      42: lload         4
      44: invokevirtual #8                  // Method java/util/concurrent/ThreadLocalRandom.nextLong:(JJ)J
      47: ladd
      48: lstore        6
      50: lload         6
      52: lconst_0
      53: lcmp
      54: ifge          61
      57: lload_2
      58: goto          63
      61: lload         6
      63: lreturn

  public int compareTo(java.util.concurrent.Delayed);
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.compareTo:(Ljava/lang/Object;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class java/util/concurrent/Delayed
      11: ifeq          33
      14: aload_0
      15: aload_1
      16: checkcast     #10                 // class java/util/concurrent/Delayed
      19: invokevirtual #11                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
      22: ifne          29
      25: iconst_1
      26: goto          34
      29: iconst_0
      30: goto          34
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.run:()V
       9: return

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: iload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.cancel:(Z)Z
      10: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.isCancelled:()Z
       9: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.isDone:()Z
       9: ireturn

  public V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.get:()Ljava/lang/Object;
       9: areturn

  public V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field wrapped:Ljava/util/concurrent/RunnableScheduledFuture;
       4: lload_1
       5: aload_3
       6: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      11: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/util/concurrent/Delayed
       5: invokevirtual #11                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn
}
