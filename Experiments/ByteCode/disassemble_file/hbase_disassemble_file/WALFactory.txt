Compiled from "WALFactory.java"
public class org.apache.hadoop.hbase.wal.WALFactory {
  public static final java.lang.String WAL_PROVIDER;

  static final java.lang.String DEFAULT_WAL_PROVIDER;

  public static final java.lang.String META_WAL_PROVIDER;

  final java.lang.String factoryId;

  org.apache.hadoop.hbase.wal.WALFactory$Providers getDefaultProvider();
    Code:
       0: getstatic     #18                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.defaultProvider:Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
       3: areturn

  public java.lang.Class<? extends org.apache.hadoop.hbase.wal.WALProvider> getProviderClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_1
       5: aload_2
       6: invokevirtual #19                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokestatic  #20                 // Method org/apache/hadoop/hbase/wal/WALFactory$Providers.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
      12: astore_3
      13: aload_3
      14: aload_0
      15: invokevirtual #21                 // Method getDefaultProvider:()Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
      18: if_acmpne     49
      21: aload_3
      22: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.clazz:Ljava/lang/Class;
      25: ldc           #23                 // class org/apache/hadoop/hbase/wal/AsyncFSWALProvider
      27: if_acmpne     49
      30: invokestatic  #24                 // Method org/apache/hadoop/hbase/wal/AsyncFSWALProvider.load:()Z
      33: ifne          49
      36: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #26                 // String Failed to load AsyncFSWALProvider, falling back to FSHLogProvider
      41: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      46: ldc           #28                 // class org/apache/hadoop/hbase/wal/FSHLogProvider
      48: areturn
      49: aload_3
      50: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.clazz:Ljava/lang/Class;
      53: areturn
      54: astore_3
      55: aload_0
      56: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      59: aload_1
      60: getstatic     #18                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.defaultProvider:Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
      63: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.clazz:Ljava/lang/Class;
      66: ldc           #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      68: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      71: areturn
    Exception table:
       from    to  target type
           0    48    54   Class java/lang/IllegalArgumentException
          49    53    54   Class java/lang/IllegalArgumentException

  static org.apache.hadoop.hbase.wal.WALProvider createProvider(java.lang.Class<? extends org.apache.hadoop.hbase.wal.WALProvider>) throws java.io.IOException;
    Code:
       0: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #31                 // String Instantiating WALProvider of type {}
       5: aload_0
       6: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: iconst_0
      13: anewarray     #33                 // class java/lang/Class
      16: invokevirtual #34                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      19: iconst_0
      20: anewarray     #35                 // class java/lang/Object
      23: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      29: areturn
      30: astore_1
      31: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      34: new           #38                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #40                 // String couldn't set up WALProvider, the configured class is
      43: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      58: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      61: ldc           #45                 // String Exception details for failure to load WALProvider.
      63: aload_1
      64: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      69: new           #47                 // class java/io/IOException
      72: dup
      73: ldc           #48                 // String couldn't set up WALProvider
      75: aload_1
      76: invokespecial #49                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      79: athrow
    Exception table:
       from    to  target type
          11    29    30   Class java/lang/Exception

  public org.apache.hadoop.hbase.wal.WALFactory(org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #50                 // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Z)V
       7: return

  public org.apache.hadoop.hbase.wal.WALFactory(org.apache.hadoop.conf.Configuration, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: ldc           #5                  // String hbase.hlog.open.timeout
      19: ldc           #6                  // int 300000
      21: invokevirtual #7                  // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      24: putfield      #8                  // Field timeoutMillis:I
      27: aload_0
      28: aload_1
      29: ldc           #9                  // String hbase.regionserver.hlog.reader.impl
      31: ldc           #10                 // class org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader
      33: ldc           #11                 // class org/apache/hadoop/hbase/wal/AbstractFSWALProvider$Reader
      35: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      38: putfield      #13                 // Field logReaderClass:Ljava/lang/Class;
      41: aload_0
      42: aload_1
      43: putfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      46: aload_0
      47: aload_2
      48: putfield      #17                 // Field factoryId:Ljava/lang/String;
      51: aload_1
      52: ldc           #51                 // String hbase.regionserver.hlog.enabled
      54: iconst_1
      55: invokevirtual #52                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      58: ifeq          123
      61: aload_0
      62: ldc           #54                 // String hbase.wal.provider
      64: getstatic     #55                 // Field DEFAULT_WAL_PROVIDER:Ljava/lang/String;
      67: invokevirtual #56                 // Method getProviderClass:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;
      70: invokestatic  #57                 // Method createProvider:(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/WALProvider;
      73: astore        4
      75: iload_3
      76: ifeq          90
      79: new           #58                 // class org/apache/hadoop/hbase/wal/SyncReplicationWALProvider
      82: dup
      83: aload         4
      85: invokespecial #59                 // Method org/apache/hadoop/hbase/wal/SyncReplicationWALProvider."<init>":(Lorg/apache/hadoop/hbase/wal/WALProvider;)V
      88: astore        4
      90: aload         4
      92: aload_0
      93: aload_1
      94: aconst_null
      95: invokeinterface #60,  4           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.init:(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
     100: aload         4
     102: new           #61                 // class org/apache/hadoop/hbase/regionserver/wal/MetricsWAL
     105: dup
     106: invokespecial #62                 // Method org/apache/hadoop/hbase/regionserver/wal/MetricsWAL."<init>":()V
     109: invokeinterface #63,  2           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.addWALActionsListener:(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
     114: aload_0
     115: aload         4
     117: putfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
     120: goto          156
     123: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #64                 // String Running with WAL disabled.
     128: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     133: aload_0
     134: new           #65                 // class org/apache/hadoop/hbase/wal/DisabledWALProvider
     137: dup
     138: invokespecial #66                 // Method org/apache/hadoop/hbase/wal/DisabledWALProvider."<init>":()V
     141: putfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
     144: aload_0
     145: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
     148: aload_0
     149: aload_1
     150: aload_2
     151: invokeinterface #60,  4           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.init:(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
     156: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      10: astore_1
      11: aconst_null
      12: aload_1
      13: if_acmpeq     22
      16: aload_1
      17: invokeinterface #68,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.close:()V
      22: aconst_null
      23: aload_0
      24: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
      27: if_acmpeq     39
      30: aload_0
      31: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
      34: invokeinterface #68,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.close:()V
      39: return

  public void shutdown() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      12: astore_2
      13: aconst_null
      14: aload_2
      15: if_acmpeq     30
      18: aload_2
      19: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.shutdown:()V
      24: goto          30
      27: astore_3
      28: aload_3
      29: astore_1
      30: aload_0
      31: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
      34: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.shutdown:()V
      39: aconst_null
      40: aload_1
      41: if_acmpeq     46
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
          18    24    27   Class java/io/IOException

  public java.util.List<org.apache.hadoop.hbase.wal.WAL> getWALs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
       4: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.getWALs:()Ljava/util/List;
       9: areturn

  org.apache.hadoop.hbase.wal.WALProvider getMetaProvider() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aconst_null
      18: astore_2
      19: aload_0
      20: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      23: ldc           #71                 // String hbase.wal.meta_provider
      25: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      28: ifnonnull     53
      31: aload_0
      32: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      35: ldc           #54                 // String hbase.wal.provider
      37: getstatic     #18                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.defaultProvider:Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
      40: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.clazz:Ljava/lang/Class;
      43: ldc           #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      45: invokevirtual #12                 // Method org/apache/hadoop/conf/Configuration.getClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      48: astore_2
      49: goto          53
      52: astore_3
      53: aload_2
      54: ifnonnull     76
      57: aload_0
      58: ldc           #71                 // String hbase.wal.meta_provider
      60: aload_0
      61: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      64: ldc           #54                 // String hbase.wal.provider
      66: getstatic     #55                 // Field DEFAULT_WAL_PROVIDER:Ljava/lang/String;
      69: invokevirtual #19                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      72: invokevirtual #56                 // Method getProviderClass:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;
      75: astore_2
      76: aload_2
      77: invokestatic  #57                 // Method createProvider:(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/WALProvider;
      80: astore_1
      81: aload_1
      82: aload_0
      83: aload_0
      84: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      87: ldc           #75                 // String .meta
      89: invokeinterface #60,  4           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.init:(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
      94: aload_1
      95: new           #61                 // class org/apache/hadoop/hbase/regionserver/wal/MetricsWAL
      98: dup
      99: invokespecial #62                 // Method org/apache/hadoop/hbase/regionserver/wal/MetricsWAL."<init>":()V
     102: invokeinterface #63,  2           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.addWALActionsListener:(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
     107: aload_0
     108: getfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
     111: aconst_null
     112: aload_1
     113: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          121
     119: aload_1
     120: areturn
     121: aload_1
     122: invokeinterface #68,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.close:()V
     127: goto          0
    Exception table:
       from    to  target type
          31    49    52   Class java/lang/Throwable

  public org.apache.hadoop.hbase.wal.WAL getWAL(org.apache.hadoop.hbase.client.RegionInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: invokeinterface #77,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.isMetaRegion:()Z
      10: ifeq          33
      13: aload_1
      14: invokeinterface #78,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getReplicaId:()I
      19: ifne          33
      22: aload_0
      23: invokevirtual #79                 // Method getMetaProvider:()Lorg/apache/hadoop/hbase/wal/WALProvider;
      26: aload_1
      27: invokeinterface #80,  2           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.getWAL:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
      32: areturn
      33: aload_0
      34: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
      37: aload_1
      38: invokeinterface #80,  2           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider.getWAL:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
      43: areturn

  public org.apache.hadoop.hbase.wal.WAL$Reader createReader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #81                 // class org/apache/hadoop/hbase/util/CancelableProgressable
       7: invokevirtual #82                 // Method createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
      10: areturn

  public org.apache.hadoop.hbase.wal.WAL$Reader createReader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.util.CancelableProgressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: invokevirtual #83                 // Method createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Z)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
       8: areturn

  public org.apache.hadoop.hbase.wal.WAL$Reader createReader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.util.CancelableProgressable, boolean) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          12
       5: aload_0
       6: getfield      #13                 // Field logReaderClass:Ljava/lang/Class;
       9: goto          14
      12: ldc           #10                 // class org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader
      14: astore        5
      16: invokestatic  #84                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      19: lstore        6
      21: aload_0
      22: getfield      #8                  // Field timeoutMillis:I
      25: i2l
      26: lload         6
      28: ladd
      29: lstore        8
      31: iconst_0
      32: istore        10
      34: aconst_null
      35: astore        11
      37: aload         5
      39: iconst_0
      40: anewarray     #33                 // class java/lang/Class
      43: invokevirtual #34                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      46: iconst_0
      47: anewarray     #35                 // class java/lang/Object
      50: invokevirtual #36                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #11                 // class org/apache/hadoop/hbase/wal/AbstractFSWALProvider$Reader
      56: astore        11
      58: aload         11
      60: aload_1
      61: aload_2
      62: aload_0
      63: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      66: aconst_null
      67: invokeinterface #85,  5           // InterfaceMethod org/apache/hadoop/hbase/wal/AbstractFSWALProvider$Reader.init:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V
      72: aload         11
      74: areturn
      75: astore        12
      77: aload         11
      79: ifnull        137
      82: aload         11
      84: invokeinterface #86,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/AbstractFSWALProvider$Reader.close:()V
      89: goto          137
      92: astore        13
      94: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      97: new           #38                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #87                 // String Could not close FSDataInputStream
     106: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload         13
     111: invokevirtual #88                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     114: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     125: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     128: ldc           #89                 // String exception details
     130: aload         13
     132: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     137: aload         12
     139: invokevirtual #88                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     142: astore        13
     144: aload         13
     146: ifnull        345
     149: aload         13
     151: ldc           #90                 // String Cannot obtain block length
     153: invokevirtual #91                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     156: ifne          179
     159: aload         13
     161: ldc           #92                 // String Could not obtain the last block
     163: invokevirtual #91                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     166: ifne          179
     169: aload         13
     171: ldc           #93                 // String Blocklist for [^ ]* has changed.*
     173: invokevirtual #94                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
     176: ifeq          345
     179: iinc          10, 1
     182: iload         10
     184: iconst_1
     185: if_icmpne     200
     188: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     191: ldc           #95                 // String Lease should have recovered. This is not expected. Will retry
     193: aload         12
     195: invokeinterface #96,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     200: aload_3
     201: ifnull        223
     204: aload_3
     205: invokeinterface #97,  1           // InterfaceMethod org/apache/hadoop/hbase/util/CancelableProgressable.progress:()Z
     210: ifne          223
     213: new           #98                 // class java/io/InterruptedIOException
     216: dup
     217: ldc           #99                 // String Operation is cancelled
     219: invokespecial #100                // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
     222: athrow
     223: iload         10
     225: iconst_2
     226: if_icmple     292
     229: lload         8
     231: invokestatic  #84                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
     234: lcmp
     235: ifge          292
     238: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     241: new           #38                 // class java/lang/StringBuilder
     244: dup
     245: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     248: ldc           #101                // String Can't open after
     250: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: iload         10
     255: invokevirtual #102                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     258: ldc           #103                // String  attempts and
     260: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: invokestatic  #84                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
     266: lload         6
     268: lsub
     269: invokevirtual #104                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     272: ldc           #105                // String ms  for
     274: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: aload_2
     278: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     281: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     289: goto          335
     292: iload         10
     294: iconst_3
     295: if_icmpge     304
     298: ldc2_w        #106                // long 500l
     301: goto          307
     304: ldc2_w        #108                // long 1000l
     307: invokestatic  #110                // Method java/lang/Thread.sleep:(J)V
     310: goto          37
     313: astore        14
     315: new           #98                 // class java/io/InterruptedIOException
     318: dup
     319: invokespecial #112                // Method java/io/InterruptedIOException."<init>":()V
     322: astore        15
     324: aload         15
     326: aload         14
     328: invokevirtual #113                // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     331: pop
     332: aload         15
     334: athrow
     335: new           #114                // class org/apache/hadoop/hbase/util/LeaseNotRecoveredException
     338: dup
     339: aload         12
     341: invokespecial #115                // Method org/apache/hadoop/hbase/util/LeaseNotRecoveredException."<init>":(Ljava/lang/Throwable;)V
     344: athrow
     345: aload         12
     347: athrow
     348: astore        6
     350: aload         6
     352: athrow
     353: astore        6
     355: new           #47                 // class java/io/IOException
     358: dup
     359: ldc           #116                // String Cannot get log reader
     361: aload         6
     363: invokespecial #49                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     366: athrow
    Exception table:
       from    to  target type
          37    74    75   Class java/io/IOException
          82    89    92   Class java/io/IOException
         292   310   313   Class java/lang/InterruptedException
          16    74   348   Class java/io/IOException
          75   348   348   Class java/io/IOException
          16    74   353   Class java/lang/Exception
          75   348   353   Class java/lang/Exception

  public org.apache.hadoop.hbase.wal.WALProvider$Writer createWALWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_1
       5: aload_2
       6: iconst_0
       7: invokestatic  #117                // Method org/apache/hadoop/hbase/wal/FSHLogProvider.createWriter:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;
      10: areturn

  public org.apache.hadoop.hbase.wal.WALProvider$Writer createRecoveredEditsWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_1
       5: aload_2
       6: iconst_1
       7: invokestatic  #117                // Method org/apache/hadoop/hbase/wal/FSHLogProvider.createWriter:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;
      10: areturn

  public static org.apache.hadoop.hbase.wal.WALFactory getInstance(org.apache.hadoop.conf.Configuration);
    Code:
       0: getstatic     #118                // Field singleton:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #53                 // class org/apache/hadoop/hbase/wal/WALFactory
       9: astore_1
      10: aconst_null
      11: aload_1
      12: if_acmpne     69
      15: new           #53                 // class org/apache/hadoop/hbase/wal/WALFactory
      18: dup
      19: aload_0
      20: invokespecial #119                // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      23: astore_2
      24: getstatic     #118                // Field singleton:Ljava/util/concurrent/atomic/AtomicReference;
      27: aconst_null
      28: aload_2
      29: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          40
      35: aload_2
      36: astore_1
      37: goto          69
      40: aload_2
      41: invokevirtual #120                // Method close:()V
      44: goto          59
      47: astore_3
      48: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      51: ldc           #121                // String failed to close temporary singleton. ignoring.
      53: aload_3
      54: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: getstatic     #118                // Field singleton:Ljava/util/concurrent/atomic/AtomicReference;
      62: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      65: checkcast     #53                 // class org/apache/hadoop/hbase/wal/WALFactory
      68: astore_1
      69: aload_1
      70: areturn
    Exception table:
       from    to  target type
          40    44    47   Class java/io/IOException

  public static org.apache.hadoop.hbase.wal.WAL$Reader createReader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #122                // Method getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALFactory;
       4: aload_0
       5: aload_1
       6: invokevirtual #123                // Method createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
       9: areturn

  static org.apache.hadoop.hbase.wal.WAL$Reader createReader(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.util.CancelableProgressable) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #122                // Method getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALFactory;
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokevirtual #82                 // Method createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
      10: areturn

  public static org.apache.hadoop.hbase.wal.WAL$Reader createReaderIgnoreCustomClass(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #122                // Method getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALFactory;
       4: aload_0
       5: aload_1
       6: aconst_null
       7: iconst_0
       8: invokevirtual #83                 // Method createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Z)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
      11: areturn

  static org.apache.hadoop.hbase.wal.WALProvider$Writer createRecoveredEditsWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: iconst_1
       4: invokestatic  #117                // Method org/apache/hadoop/hbase/wal/FSHLogProvider.createWriter:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;
       7: areturn

  public static org.apache.hadoop.hbase.wal.WALProvider$Writer createWALWriter(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: iconst_0
       4: invokestatic  #117                // Method org/apache/hadoop/hbase/wal/FSHLogProvider.createWriter:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;
       7: areturn

  public final org.apache.hadoop.hbase.wal.WALProvider getWALProvider();
    Code:
       0: aload_0
       1: getfield      #15                 // Field provider:Lorg/apache/hadoop/hbase/wal/WALProvider;
       4: areturn

  public final org.apache.hadoop.hbase.wal.WALProvider getMetaWALProvider();
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaProvider:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #30                 // class org/apache/hadoop/hbase/wal/WALProvider
      10: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/apache/hadoop/hbase/wal/WALFactory
       2: invokestatic  #124                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       8: getstatic     #18                 // Field org/apache/hadoop/hbase/wal/WALFactory$Providers.defaultProvider:Lorg/apache/hadoop/hbase/wal/WALFactory$Providers;
      11: invokevirtual #125                // Method org/apache/hadoop/hbase/wal/WALFactory$Providers.name:()Ljava/lang/String;
      14: putstatic     #55                 // Field DEFAULT_WAL_PROVIDER:Ljava/lang/String;
      17: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      24: putstatic     #118                // Field singleton:Ljava/util/concurrent/atomic/AtomicReference;
      27: ldc           #53                 // class org/apache/hadoop/hbase/wal/WALFactory
      29: invokevirtual #126                // Method java/lang/Class.getName:()Ljava/lang/String;
      32: putstatic     #16                 // Field SINGLETON_ID:Ljava/lang/String;
      35: return
}
