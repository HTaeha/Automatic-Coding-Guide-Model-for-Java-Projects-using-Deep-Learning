Compiled from "MetricsRESTSourceImpl.java"
public class org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl extends org.apache.hadoop.hbase.metrics.BaseSourceImpl implements org.apache.hadoop.hbase.rest.MetricsRESTSource {
  public org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl();
    Code:
       0: aload_0
       1: ldc           #2                  // String REST
       3: ldc           #3                  // String Metrics about the HBase REST server
       5: ldc           #4                  // String rest
       7: ldc           #2                  // String REST
       9: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #6                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      14: ldc           #9                  // String pauseInfoThresholdExceeded
      16: ldc           #10                 // String Count of INFO level pause threshold alerts
      18: lconst_0
      19: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      22: putfield      #12                 // Field infoPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      25: aload_0
      26: aload_0
      27: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      30: ldc           #13                 // String pauseWarnThresholdExceeded
      32: ldc           #14                 // String Count of WARN level pause threshold alerts
      34: lconst_0
      35: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      38: putfield      #15                 // Field warnPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      41: aload_0
      42: aload_0
      43: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      46: ldc           #16                 // String pauseTimeWithGc
      48: invokevirtual #17                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      51: putfield      #18                 // Field pausesWithGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
      54: aload_0
      55: aload_0
      56: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      59: ldc           #19                 // String pauseTimeWithoutGc
      61: invokevirtual #17                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      64: putfield      #20                 // Field pausesWithoutGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
      67: return

  public void init();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       9: ldc           #22                 // String requests
      11: lconst_0
      12: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      15: putfield      #24                 // Field request:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      18: aload_0
      19: aload_0
      20: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      23: ldc           #25                 // String successfulGet
      25: lconst_0
      26: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      29: putfield      #26                 // Field sucGet:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      32: aload_0
      33: aload_0
      34: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      37: ldc           #27                 // String successfulPut
      39: lconst_0
      40: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      43: putfield      #28                 // Field sucPut:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      46: aload_0
      47: aload_0
      48: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      51: ldc           #29                 // String successfulDelete
      53: lconst_0
      54: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      57: putfield      #30                 // Field sucDel:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      60: aload_0
      61: aload_0
      62: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      65: ldc           #31                 // String successfulScanCount
      67: lconst_0
      68: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      71: putfield      #32                 // Field sucScan:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      74: aload_0
      75: aload_0
      76: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      79: ldc           #33                 // String successfulAppendCount
      81: lconst_0
      82: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      85: putfield      #34                 // Field sucAppend:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      88: aload_0
      89: aload_0
      90: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      93: ldc           #35                 // String successfulIncrementCount
      95: lconst_0
      96: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      99: putfield      #36                 // Field sucIncrement:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     102: aload_0
     103: aload_0
     104: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     107: ldc           #37                 // String failedGet
     109: lconst_0
     110: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     113: putfield      #38                 // Field fGet:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     116: aload_0
     117: aload_0
     118: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     121: ldc           #39                 // String failedPut
     123: lconst_0
     124: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     127: putfield      #40                 // Field fPut:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     130: aload_0
     131: aload_0
     132: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     135: ldc           #41                 // String failedDelete
     137: lconst_0
     138: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     141: putfield      #42                 // Field fDel:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     144: aload_0
     145: aload_0
     146: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     149: ldc           #43                 // String failedScanCount
     151: lconst_0
     152: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     155: putfield      #44                 // Field fScan:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     158: aload_0
     159: aload_0
     160: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     163: ldc           #45                 // String failedAppendCount
     165: lconst_0
     166: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     169: putfield      #46                 // Field fAppend:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     172: aload_0
     173: aload_0
     174: invokevirtual #7                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     177: ldc           #47                 // String failedIncrementCount
     179: lconst_0
     180: invokevirtual #23                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getCounter:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     183: putfield      #48                 // Field fIncrement:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     186: return

  public void incrementRequests(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field request:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulGetRequests(int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field sucGet:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulPutRequests(int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sucPut:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulDeleteRequests(int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field sucDel:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedGetRequests(int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field fGet:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedPutRequests(int);
    Code:
       0: aload_0
       1: getfield      #40                 // Field fPut:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedDeleteRequests(int);
    Code:
       0: aload_0
       1: getfield      #42                 // Field fDel:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulScanRequests(int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field sucScan:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedScanRequests(int);
    Code:
       0: aload_0
       1: getfield      #44                 // Field fScan:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulAppendRequests(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field sucAppend:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedAppendRequests(int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field fAppend:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementSucessfulIncrementRequests(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field sucIncrement:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incrementFailedIncrementRequests(int);
    Code:
       0: aload_0
       1: getfield      #48                 // Field fIncrement:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incInfoThresholdExceeded(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field infoPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incWarnThresholdExceeded(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field warnPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void updatePauseTimeWithGc(long);
    Code:
       0: aload_0
       1: getfield      #18                 // Field pausesWithGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #50,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void updatePauseTimeWithoutGc(long);
    Code:
       0: aload_0
       1: getfield      #20                 // Field pausesWithoutGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #50,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return
}
