Compiled from "RowIndexEncoderV1.java"
public class org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1 {
  public org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1(java.io.DataOutputStream, org.apache.hadoop.hbase.io.encoding.HFileBlockDefaultEncodingContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field lastCell:Lorg/apache/hadoop/hbase/Cell;
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field startOffset:I
      14: aload_0
      15: new           #4                  // class org/apache/hadoop/hbase/io/ByteArrayOutputStream
      18: dup
      19: sipush        256
      22: invokespecial #5                  // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream."<init>":(I)V
      25: putfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field out:Ljava/io/DataOutputStream;
      33: aload_0
      34: new           #8                  // class org/apache/hadoop/hbase/io/encoding/NoneEncoder
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #9                  // Method org/apache/hadoop/hbase/io/encoding/NoneEncoder."<init>":(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
      43: putfield      #10                 // Field encoder:Lorg/apache/hadoop/hbase/io/encoding/NoneEncoder;
      46: return

  public int write(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method checkRow:(Lorg/apache/hadoop/hbase/Cell;)Z
       5: ifne          45
       8: aload_0
       9: getfield      #3                  // Field startOffset:I
      12: ifge          26
      15: aload_0
      16: aload_0
      17: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      20: invokevirtual #12                 // Method java/io/DataOutputStream.size:()I
      23: putfield      #3                  // Field startOffset:I
      26: aload_0
      27: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      30: aload_0
      31: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      34: invokevirtual #12                 // Method java/io/DataOutputStream.size:()I
      37: aload_0
      38: getfield      #3                  // Field startOffset:I
      41: isub
      42: invokevirtual #13                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.writeInt:(I)V
      45: aload_0
      46: aload_1
      47: putfield      #2                  // Field lastCell:Lorg/apache/hadoop/hbase/Cell;
      50: aload_0
      51: getfield      #10                 // Field encoder:Lorg/apache/hadoop/hbase/io/encoding/NoneEncoder;
      54: aload_1
      55: invokevirtual #14                 // Method org/apache/hadoop/hbase/io/encoding/NoneEncoder.write:(Lorg/apache/hadoop/hbase/Cell;)I
      58: ireturn

  protected boolean checkRow(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnonnull     16
       6: new           #15                 // class java/io/IOException
       9: dup
      10: ldc           #16                 // String Key cannot be null or empty
      12: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #2                  // Field lastCell:Lorg/apache/hadoop/hbase/Cell;
      20: ifnull        84
      23: getstatic     #18                 // Field org/apache/hadoop/hbase/CellComparatorImpl.COMPARATOR:Lorg/apache/hadoop/hbase/CellComparatorImpl;
      26: aload_0
      27: getfield      #2                  // Field lastCell:Lorg/apache/hadoop/hbase/Cell;
      30: aload_1
      31: invokevirtual #19                 // Method org/apache/hadoop/hbase/CellComparatorImpl.compareRows:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
      34: istore_3
      35: iload_3
      36: ifle          78
      39: new           #15                 // class java/io/IOException
      42: dup
      43: new           #20                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #22                 // String Added a key not lexically larger than previous. Current cell =
      52: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #25                 // String , lastCell =
      61: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #2                  // Field lastCell:Lorg/apache/hadoop/hbase/Cell;
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iload_3
      79: ifne          84
      82: iconst_1
      83: istore_2
      84: iload_2
      85: ireturn

  public void flush() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #3                  // Field startOffset:I
       6: iflt          22
       9: aload_0
      10: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      13: invokevirtual #12                 // Method java/io/DataOutputStream.size:()I
      16: aload_0
      17: getfield      #3                  // Field startOffset:I
      20: isub
      21: istore_1
      22: aload_0
      23: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      26: aload_0
      27: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      30: invokevirtual #27                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.size:()I
      33: iconst_4
      34: idiv
      35: invokevirtual #28                 // Method java/io/DataOutputStream.writeInt:(I)V
      38: aload_0
      39: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      42: invokevirtual #27                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.size:()I
      45: ifle          70
      48: aload_0
      49: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      52: aload_0
      53: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      56: invokevirtual #29                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.getBuffer:()[B
      59: iconst_0
      60: aload_0
      61: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
      64: invokevirtual #27                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.size:()I
      67: invokevirtual #30                 // Method java/io/DataOutputStream.write:([BII)V
      70: aload_0
      71: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
      74: iload_1
      75: invokevirtual #28                 // Method java/io/DataOutputStream.writeInt:(I)V
      78: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      81: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      86: ifeq          153
      89: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      92: new           #20                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #33                 // String RowNumber:
     101: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #6                  // Field rowsOffsetBAOS:Lorg/apache/hadoop/hbase/io/ByteArrayOutputStream;
     108: invokevirtual #27                 // Method org/apache/hadoop/hbase/io/ByteArrayOutputStream.size:()I
     111: iconst_4
     112: idiv
     113: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     116: ldc           #35                 // String , onDiskDataSize:
     118: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload_1
     122: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc           #36                 // String , totalOnDiskSize:
     127: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #7                  // Field out:Ljava/io/DataOutputStream;
     134: invokevirtual #12                 // Method java/io/DataOutputStream.size:()I
     137: aload_0
     138: getfield      #3                  // Field startOffset:I
     141: isub
     142: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     153: return

  static {};
    Code:
       0: ldc           #38                 // class org/apache/hadoop/hbase/io/encoding/RowIndexEncoderV1
       2: invokestatic  #39                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
