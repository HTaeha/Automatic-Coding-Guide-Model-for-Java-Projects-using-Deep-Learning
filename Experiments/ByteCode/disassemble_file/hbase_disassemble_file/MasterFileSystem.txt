Compiled from "MasterFileSystem.java"
public class org.apache.hadoop.hbase.master.MasterFileSystem {
  public static final java.lang.String HBASE_DIR_PERMS;

  public static final java.lang.String HBASE_WAL_DIR_PERMS;

  public org.apache.hadoop.hbase.master.MasterFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/fs/permission/FsPermission
       8: dup
       9: ldc           #3                  // String 600
      11: invokespecial #4                  // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Ljava/lang/String;)V
      14: putfield      #5                  // Field secureRootFilePerms:Lorg/apache/hadoop/fs/permission/FsPermission;
      17: aload_0
      18: ldc           #6                  // String -rwx--x--x
      20: invokestatic  #7                  // Method org/apache/hadoop/fs/permission/FsPermission.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
      23: putfield      #8                  // Field HiddenDirPerms:Lorg/apache/hadoop/fs/permission/FsPermission;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      31: aload_0
      32: aload_1
      33: invokestatic  #10                 // Method org/apache/hadoop/hbase/util/FSUtils.getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      36: putfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      39: aload_0
      40: new           #12                 // class org/apache/hadoop/fs/Path
      43: dup
      44: aload_0
      45: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      48: ldc           #14                 // String .tmp
      50: invokespecial #15                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      53: putfield      #16                 // Field tempdir:Lorg/apache/hadoop/fs/Path;
      56: aload_0
      57: aload_0
      58: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      61: aload_1
      62: invokevirtual #17                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      65: putfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      68: aload_0
      69: aload_1
      70: invokestatic  #19                 // Method org/apache/hadoop/hbase/util/FSUtils.getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      73: putfield      #20                 // Field walRootDir:Lorg/apache/hadoop/fs/Path;
      76: aload_0
      77: aload_1
      78: invokestatic  #21                 // Method org/apache/hadoop/hbase/util/FSUtils.getWALFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      81: putfield      #22                 // Field walFs:Lorg/apache/hadoop/fs/FileSystem;
      84: aload_1
      85: new           #12                 // class org/apache/hadoop/fs/Path
      88: dup
      89: aload_0
      90: getfield      #22                 // Field walFs:Lorg/apache/hadoop/fs/FileSystem;
      93: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      96: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
      99: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/FSUtils.setFsDefault:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
     102: aload_0
     103: getfield      #22                 // Field walFs:Lorg/apache/hadoop/fs/FileSystem;
     106: aload_1
     107: invokevirtual #26                 // Method org/apache/hadoop/fs/FileSystem.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
     110: aload_1
     111: new           #12                 // class org/apache/hadoop/fs/Path
     114: dup
     115: aload_0
     116: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     119: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
     122: invokespecial #24                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/net/URI;)V
     125: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/FSUtils.setFsDefault:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
     128: aload_0
     129: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     132: aload_1
     133: invokevirtual #26                 // Method org/apache/hadoop/fs/FileSystem.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
     136: aload_0
     137: new           #2                  // class org/apache/hadoop/fs/permission/FsPermission
     140: dup
     141: aload_1
     142: ldc           #27                 // String hbase.rootdir.perms
     144: ldc           #28                 // String 700
     146: invokevirtual #29                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     149: invokespecial #4                  // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Ljava/lang/String;)V
     152: putfield      #30                 // Field secureRootSubDirPerms:Lorg/apache/hadoop/fs/permission/FsPermission;
     155: aload_0
     156: ldc           #31                 // String kerberos
     158: aload_1
     159: ldc           #32                 // String hbase.security.authentication
     161: invokevirtual #33                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
     164: invokevirtual #34                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     167: putfield      #35                 // Field isSecurityEnabled:Z
     170: aload_0
     171: invokespecial #36                 // Method createInitialFileSystemLayout:()V
     174: aload_1
     175: invokestatic  #37                 // Method org/apache/hadoop/hbase/fs/HFileSystem.addLocationsOrderInterceptor:(Lorg/apache/hadoop/conf/Configuration;)Z
     178: pop
     179: return

  public org.apache.hadoop.fs.FileSystem getFileSystem();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public org.apache.hadoop.fs.FileSystem getWALFileSystem();
    Code:
       0: aload_0
       1: getfield      #22                 // Field walFs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public org.apache.hadoop.conf.Configuration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public org.apache.hadoop.fs.Path getRootDir();
    Code:
       0: aload_0
       1: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public org.apache.hadoop.fs.Path getWALRootDir();
    Code:
       0: aload_0
       1: getfield      #20                 // Field walRootDir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public org.apache.hadoop.fs.Path getRegionDir(org.apache.hadoop.hbase.client.RegionInfo);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getRootDir:()Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: invokeinterface #74,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getTable:()Lorg/apache/hadoop/hbase/TableName;
      10: invokestatic  #75                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      13: aload_1
      14: invokestatic  #76                 // Method org/apache/hadoop/hbase/util/FSUtils.getRegionDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
      17: areturn

  public org.apache.hadoop.fs.Path getTempDir();
    Code:
       0: aload_0
       1: getfield      #16                 // Field tempdir:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public org.apache.hadoop.hbase.ClusterId getClusterId();
    Code:
       0: aload_0
       1: getfield      #77                 // Field clusterId:Lorg/apache/hadoop/hbase/ClusterId;
       4: areturn

  void checkTempDir(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #81                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          98
       8: aload_3
       9: aload_1
      10: invokestatic  #115                // Method org/apache/hadoop/hbase/util/FSUtils.getTableDirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      13: invokeinterface #116,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          62
      30: aload         4
      32: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #12                 // class org/apache/hadoop/fs/Path
      40: astore        5
      42: aload_2
      43: aload_3
      44: aload_0
      45: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      48: aload         5
      50: aload_3
      51: aload         5
      53: invokestatic  #119                // Method org/apache/hadoop/hbase/util/FSUtils.getRegionDirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      56: invokestatic  #120                // Method org/apache/hadoop/hbase/backup/HFileArchiver.archiveRegions:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
      59: goto          20
      62: aload_3
      63: aload_1
      64: iconst_1
      65: invokevirtual #121                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      68: ifne          98
      71: new           #99                 // class java/io/IOException
      74: dup
      75: new           #87                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #122                // String Unable to clean the temp directory:
      84: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: getfield      #35                 // Field isSecurityEnabled:Z
     102: ifeq          149
     105: aload_3
     106: aload_1
     107: aload_0
     108: getfield      #30                 // Field secureRootSubDirPerms:Lorg/apache/hadoop/fs/permission/FsPermission;
     111: invokevirtual #125                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
     114: ifne          189
     117: new           #99                 // class java/io/IOException
     120: dup
     121: new           #87                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #126                // String HBase temp directory '
     130: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_1
     134: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: ldc           #127                // String ' creation failure.
     139: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: aload_3
     150: aload_1
     151: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
     154: ifne          189
     157: new           #99                 // class java/io/IOException
     160: dup
     161: new           #87                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #126                // String HBase temp directory '
     170: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_1
     174: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: ldc           #127                // String ' creation failure.
     179: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     188: athrow
     189: return

  public static org.apache.hadoop.hbase.client.TableDescriptor setInfoFamilyCachingForMeta(org.apache.hadoop.hbase.client.TableDescriptor, boolean);
    Code:
       0: aload_0
       1: invokestatic  #151                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.newBuilder:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
       4: astore_2
       5: aload_0
       6: invokeinterface #152,  1          // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getColumnFamilies:()[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     75
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload         6
      34: invokeinterface #153,  1          // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      39: getstatic     #154                // Field org/apache/hadoop/hbase/HConstants.CATALOG_FAMILY:[B
      42: invokestatic  #155                // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
      45: ifeq          69
      48: aload_2
      49: aload         6
      51: invokestatic  #156                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      54: iload_1
      55: invokevirtual #157                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBlockCacheEnabled:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      58: iload_1
      59: invokevirtual #158                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setInMemory:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      62: invokevirtual #159                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      65: invokevirtual #160                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.modifyColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      68: pop
      69: iinc          5, 1
      72: goto          19
      75: aload_2
      76: invokevirtual #161                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      79: areturn

  public void deleteFamilyFromFS(org.apache.hadoop.hbase.client.RegionInfo, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
       5: aload_1
       6: aload_2
       7: invokevirtual #162                // Method deleteFamilyFromFS:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
      10: return

  public void deleteFamilyFromFS(org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.client.RegionInfo, byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #74,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getTable:()Lorg/apache/hadoop/hbase/TableName;
       7: invokestatic  #75                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      10: astore        4
      12: aload_0
      13: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      16: aload_0
      17: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      20: aload_2
      21: aload         4
      23: aload_3
      24: invokestatic  #163                // Method org/apache/hadoop/hbase/backup/HFileArchiver.archiveFamily:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
      27: new           #12                 // class org/apache/hadoop/fs/Path
      30: dup
      31: aload         4
      33: new           #12                 // class org/apache/hadoop/fs/Path
      36: dup
      37: aload_2
      38: invokeinterface #164,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      43: aload_3
      44: invokestatic  #165                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      47: invokespecial #166                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      50: invokespecial #167                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      53: astore        5
      55: aload_0
      56: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      59: aload         5
      61: iconst_1
      62: invokevirtual #121                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      65: ifne          143
      68: aload_0
      69: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      72: aload         5
      74: invokevirtual #81                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      77: ifeq          143
      80: new           #99                 // class java/io/IOException
      83: dup
      84: new           #87                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #168                // String Could not delete family
      93: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_3
      97: invokestatic  #165                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
     100: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #169                // String  from FileSystem for region
     105: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_2
     109: invokeinterface #170,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionNameAsString:()Ljava/lang/String;
     114: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #171                // String (
     119: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_2
     123: invokeinterface #164,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
     128: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #172                // String )
     133: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: return

  public void stop();
    Code:
       0: return

  public void logFileSystemState(org.slf4j.Logger) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: getfield      #11                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
       8: aload_1
       9: invokestatic  #173                // Method org/apache/hadoop/hbase/util/FSUtils.logFileSystemState:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/slf4j/Logger;)V
      12: return

  static {};
    Code:
       0: ldc           #53                 // class org/apache/hadoop/hbase/master/MasterFileSystem
       2: invokestatic  #174                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #68                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
