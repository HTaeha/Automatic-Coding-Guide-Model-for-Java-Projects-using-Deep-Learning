Compiled from "TestMasterObserverPostCalls.java"
public class org.apache.hadoop.hbase.master.procedure.TestMasterObserverPostCalls$MasterObserverForTest implements org.apache.hadoop.hbase.coprocessor.MasterCoprocessor,org.apache.hadoop.hbase.coprocessor.MasterObserver {
  public org.apache.hadoop.hbase.master.procedure.TestMasterObserverPostCalls$MasterObserverForTest();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       9: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.MasterObserver> getMasterObserver();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public void start(org.apache.hadoop.hbase.CoprocessorEnvironment) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       4: dup
       5: iconst_0
       6: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       9: putfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
      12: return

  public void postDeleteNamespace(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postModifyNamespace(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.NamespaceDescriptor, org.apache.hadoop.hbase.NamespaceDescriptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postCreateNamespace(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.NamespaceDescriptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postCreateTable(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.client.TableDescriptor, org.apache.hadoop.hbase.client.RegionInfo[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postModifyTable(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.TableDescriptor, org.apache.hadoop.hbase.client.TableDescriptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postDisableTable(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postDeleteTable(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment>, org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  static java.util.concurrent.atomic.AtomicInteger access$000(org.apache.hadoop.hbase.master.procedure.TestMasterObserverPostCalls$MasterObserverForTest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field postHookCalls:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn
}
