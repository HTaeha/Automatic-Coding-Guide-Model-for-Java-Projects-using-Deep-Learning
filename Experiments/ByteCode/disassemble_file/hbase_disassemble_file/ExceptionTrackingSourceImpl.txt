Compiled from "ExceptionTrackingSourceImpl.java"
public class org.apache.hadoop.hbase.metrics.ExceptionTrackingSourceImpl extends org.apache.hadoop.hbase.metrics.BaseSourceImpl implements org.apache.hadoop.hbase.metrics.ExceptionTrackingSource {
  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptions;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsOOO;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsBusy;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsUnknown;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsScannerReset;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsSanity;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsNSRE;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsMoved;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsMultiTooLarge;

  protected org.apache.hadoop.metrics2.lib.MutableFastCounter exceptionsCallQueueTooBig;

  public org.apache.hadoop.hbase.metrics.ExceptionTrackingSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void init();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       9: ldc           #5                  // String exceptions
      11: ldc           #6                  // String Exceptions caused by requests
      13: lconst_0
      14: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      17: putfield      #8                  // Field exceptions:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      20: aload_0
      21: aload_0
      22: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      25: ldc           #9                  // String exceptions.OutOfOrderScannerNextException
      27: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
      29: lconst_0
      30: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      33: putfield      #11                 // Field exceptionsOOO:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      36: aload_0
      37: aload_0
      38: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      41: ldc           #12                 // String exceptions.RegionTooBusyException
      43: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
      45: lconst_0
      46: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      49: putfield      #13                 // Field exceptionsBusy:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      52: aload_0
      53: aload_0
      54: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      57: ldc           #14                 // String exceptions.UnknownScannerException
      59: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
      61: lconst_0
      62: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      65: putfield      #15                 // Field exceptionsUnknown:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      68: aload_0
      69: aload_0
      70: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      73: ldc           #16                 // String exceptions.ScannerResetException
      75: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
      77: lconst_0
      78: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      81: putfield      #17                 // Field exceptionsScannerReset:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      84: aload_0
      85: aload_0
      86: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      89: ldc           #18                 // String exceptions.FailedSanityCheckException
      91: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
      93: lconst_0
      94: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      97: putfield      #19                 // Field exceptionsSanity:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     100: aload_0
     101: aload_0
     102: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     105: ldc           #20                 // String exceptions.RegionMovedException
     107: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
     109: lconst_0
     110: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     113: putfield      #21                 // Field exceptionsMoved:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     116: aload_0
     117: aload_0
     118: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     121: ldc           #22                 // String exceptions.NotServingRegionException
     123: ldc           #10                 // String Number of requests that resulted in the specified type of Exception
     125: lconst_0
     126: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     129: putfield      #23                 // Field exceptionsNSRE:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     132: aload_0
     133: aload_0
     134: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     137: ldc           #24                 // String exceptions.multiResponseTooLarge
     139: ldc           #25                 // String A response to a multi request was too large and the rest of the requests will have to be retried.
     141: lconst_0
     142: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     145: putfield      #26                 // Field exceptionsMultiTooLarge:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     148: aload_0
     149: aload_0
     150: invokevirtual #3                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     153: ldc           #27                 // String exceptions.callQueueTooBig
     155: ldc           #28                 // String Call queue is full
     157: lconst_0
     158: invokevirtual #7                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     161: putfield      #29                 // Field exceptionsCallQueueTooBig:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     164: return

  public void exception();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptions:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void outOfOrderException();
    Code:
       0: aload_0
       1: getfield      #11                 // Field exceptionsOOO:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void failedSanityException();
    Code:
       0: aload_0
       1: getfield      #19                 // Field exceptionsSanity:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void movedRegionException();
    Code:
       0: aload_0
       1: getfield      #21                 // Field exceptionsMoved:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void notServingRegionException();
    Code:
       0: aload_0
       1: getfield      #23                 // Field exceptionsNSRE:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void unknownScannerException();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exceptionsUnknown:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void scannerResetException();
    Code:
       0: aload_0
       1: getfield      #17                 // Field exceptionsScannerReset:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void tooBusyException();
    Code:
       0: aload_0
       1: getfield      #13                 // Field exceptionsBusy:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void multiActionTooLargeException();
    Code:
       0: aload_0
       1: getfield      #26                 // Field exceptionsMultiTooLarge:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void callQueueTooBigException();
    Code:
       0: aload_0
       1: getfield      #29                 // Field exceptionsCallQueueTooBig:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return
}
