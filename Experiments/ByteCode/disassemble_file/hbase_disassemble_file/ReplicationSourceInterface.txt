Compiled from "ReplicationSourceInterface.java"
public interface org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceInterface {
  public abstract void init(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager, org.apache.hadoop.hbase.replication.ReplicationQueueStorage, org.apache.hadoop.hbase.replication.ReplicationPeer, org.apache.hadoop.hbase.Server, java.lang.String, java.util.UUID, org.apache.hadoop.hbase.replication.regionserver.WALFileLengthProvider, org.apache.hadoop.hbase.replication.regionserver.MetricsSource) throws java.io.IOException;

  public abstract void enqueueLog(org.apache.hadoop.fs.Path);

  public abstract void addHFileRefs(org.apache.hadoop.hbase.TableName, byte[], java.util.List<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path>>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void startup();

  public abstract void terminate(java.lang.String);

  public abstract void terminate(java.lang.String, java.lang.Exception);

  public abstract org.apache.hadoop.fs.Path getCurrentPath();

  public abstract java.lang.String getQueueId();

  public java.lang.String getPeerId();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getPeer:()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
       6: invokeinterface #2,  1            // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeer.getId:()Ljava/lang/String;
      11: areturn

  public abstract org.apache.hadoop.hbase.replication.ReplicationPeer getPeer();

  public abstract java.lang.String getStats();

  public boolean isPeerEnabled();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getPeer:()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
       6: invokeinterface #3,  1            // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeer.isPeerEnabled:()Z
      11: ireturn

  public boolean isSyncReplication();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getPeer:()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
       6: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeer.getPeerConfig:()Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
      11: invokevirtual #5                  // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.isSyncReplication:()Z
      14: ireturn

  public abstract boolean isSourceActive();

  public abstract org.apache.hadoop.hbase.replication.regionserver.MetricsSource getSourceMetrics();

  public abstract org.apache.hadoop.hbase.replication.ReplicationEndpoint getReplicationEndpoint();

  public abstract org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager getSourceManager();

  public abstract org.apache.hadoop.hbase.replication.regionserver.WALFileLengthProvider getWALFileLengthProvider();

  public abstract void tryThrottle(int) throws java.lang.InterruptedException;

  public abstract void postShipEdits(java.util.List<org.apache.hadoop.hbase.wal.WAL$Entry>, int);

  public abstract org.apache.hadoop.hbase.ServerName getServerWALsBelongTo();

  public java.util.Map<java.lang.String, org.apache.hadoop.hbase.replication.regionserver.ReplicationStatus> getWalGroupStatus();
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       7: areturn

  public boolean isRecovered();
    Code:
       0: iconst_0
       1: ireturn
}
