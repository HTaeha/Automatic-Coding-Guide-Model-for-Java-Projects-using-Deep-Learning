Compiled from "KeyOnlyFilter.java"
class org.apache.hadoop.hbase.filter.KeyOnlyFilter$KeyOnlyCell implements org.apache.hadoop.hbase.Cell {
  public org.apache.hadoop.hbase.filter.KeyOnlyFilter$KeyOnlyCell(org.apache.hadoop.hbase.Cell, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field lenAsVal:Z
      14: aload_0
      15: aload_1
      16: invokestatic  #4                  // Method org/apache/hadoop/hbase/KeyValueUtil.keyLength:(Lorg/apache/hadoop/hbase/Cell;)I
      19: putfield      #5                  // Field keyLen:I
      22: return

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowArray:()[B
       9: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowOffset:()I
       9: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowLength:()S
       9: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyArray:()[B
       9: areturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyOffset:()I
       9: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyLength:()B
       9: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
       9: areturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
       9: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
       9: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getTimestamp:()J
       9: lreturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getTypeByte:()B
       9: ireturn

  public org.apache.hadoop.hbase.Cell$Type getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getType:()Lorg/apache/hadoop/hbase/Cell$Type;
       9: areturn

  public long getSequenceId();
    Code:
       0: lconst_0
       1: lreturn

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenAsVal:Z
       4: ifeq          20
       7: aload_0
       8: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
      11: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueLength:()I
      16: invokestatic  #19                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(I)[B
      19: areturn
      20: getstatic     #20                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
      23: areturn

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenAsVal:Z
       4: ifeq          9
       7: iconst_4
       8: ireturn
       9: iconst_0
      10: ireturn

  public int getSerializedSize();
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #5                  // Field keyLen:I
       6: iadd
       7: aload_0
       8: invokevirtual #23                 // Method getValueLength:()I
      11: iadd
      12: ireturn

  public byte[] getTagsArray();
    Code:
       0: getstatic     #20                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
       3: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: iconst_0
       1: ireturn

  public long heapSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.heapSize:()J
       9: lreturn
}
