Compiled from "ChunkCreator.java"
public class org.apache.hadoop.hbase.regionserver.ChunkCreator {
  public static final int SIZEOF_CHUNK_HEADER;

  static org.apache.hadoop.hbase.regionserver.ChunkCreator instance;

  static boolean chunkPoolDisabled;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.hbase.regionserver.ChunkCreator(int, boolean, long, float, float, org.apache.hadoop.hbase.regionserver.HeapMemoryManager, float);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #8                  // Field chunkID:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: putfield      #11                 // Field chunkIdMap:Ljava/util/Map;
      27: aload_0
      28: iload_2
      29: putfield      #12                 // Field offheap:Z
      32: aload_0
      33: iload_1
      34: putfield      #13                 // Field chunkSize:I
      37: aload_0
      38: iload_1
      39: lload_3
      40: fload         5
      42: fload         8
      44: fload         6
      46: aload         7
      48: invokespecial #14                 // Method initializePools:(IJFFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;)V
      51: return

  public static org.apache.hadoop.hbase.regionserver.ChunkCreator initialize(int, boolean, long, float, float, org.apache.hadoop.hbase.regionserver.HeapMemoryManager);
    Code:
       0: getstatic     #20                 // Field instance:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
       3: ifnull        10
       6: getstatic     #20                 // Field instance:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
       9: areturn
      10: new           #21                 // class org/apache/hadoop/hbase/regionserver/ChunkCreator
      13: dup
      14: iload_0
      15: iload_1
      16: lload_2
      17: fload         4
      19: fload         5
      21: aload         6
      23: ldc           #23                 // float 0.1f
      25: invokespecial #24                 // Method "<init>":(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;F)V
      28: putstatic     #20                 // Field instance:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      31: getstatic     #20                 // Field instance:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      34: areturn

  public static org.apache.hadoop.hbase.regionserver.ChunkCreator getInstance();
    Code:
       0: getstatic     #20                 // Field instance:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
       3: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getChunk(org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType.ARRAY_MAP:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
       4: aload_1
       5: invokevirtual #26                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
       8: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getChunk();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType.ARRAY_MAP:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
       4: getstatic     #27                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
       7: invokevirtual #26                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      10: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getChunk(org.apache.hadoop.hbase.regionserver.CompactingMemStore$IndexType);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #27                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
       5: invokevirtual #26                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
       8: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getChunk(org.apache.hadoop.hbase.regionserver.CompactingMemStore$IndexType, org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: getstatic     #28                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$ChunkCreator$ChunkType:[I
       3: aload_2
       4: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 56
               default: 86
          }
      36: aload_0
      37: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      40: ifnull        56
      43: aload_0
      44: aload_1
      45: aload_0
      46: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      49: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      52: invokevirtual #31                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      55: areturn
      56: aload_0
      57: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      60: ifnonnull     73
      63: aload_0
      64: aload_1
      65: aload_0
      66: getfield      #13                 // Field chunkSize:I
      69: invokevirtual #31                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      72: areturn
      73: aload_0
      74: aload_1
      75: aload_0
      76: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      79: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      82: invokevirtual #31                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      85: areturn
      86: new           #32                 // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #33                 // String chunkType must either be INDEX_CHUNK or DATA_CHUNK
      92: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow

  org.apache.hadoop.hbase.regionserver.Chunk getChunk(org.apache.hadoop.hbase.regionserver.CompactingMemStore$IndexType, int);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
       9: ifnull        32
      12: iload_2
      13: aload_0
      14: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      17: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      20: if_icmpne     32
      23: aload_0
      24: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      27: astore        4
      29: goto          56
      32: aload_0
      33: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      36: ifnull        56
      39: iload_2
      40: aload_0
      41: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      44: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      47: if_icmpne     56
      50: aload_0
      51: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      54: astore        4
      56: aload         4
      58: ifnull        118
      61: aload         4
      63: invokevirtual #35                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunk:()Lorg/apache/hadoop/hbase/regionserver/Chunk;
      66: astore_3
      67: aload_3
      68: ifnonnull     118
      71: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      74: invokeinterface #36,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      79: ifeq          118
      82: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      85: new           #37                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #39                 // String The chunk pool is full. Reached maxCount=
      94: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload         4
      99: invokestatic  #41                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$000:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)I
     102: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #43                 // String . Creating chunk onheap.
     107: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     118: aload_3
     119: ifnonnull     130
     122: aload_0
     123: iconst_0
     124: aload_1
     125: iload_2
     126: invokespecial #4                  // Method createChunk:(ZLorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
     129: astore_3
     130: aload_3
     131: invokevirtual #46                 // Method org/apache/hadoop/hbase/regionserver/Chunk.init:()V
     134: aload_3
     135: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getJumboChunk(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iadd
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
       9: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      12: if_icmpgt     70
      15: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      18: new           #37                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #47                 // String Jumbo chunk size
      27: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #48                 // String  must be more than regular chunk size
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      43: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      46: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #49                 // String . Converting to regular chunk.
      51: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #50,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      62: aload_0
      63: getstatic     #51                 // Field org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType.CHUNK_MAP:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
      66: invokevirtual #52                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      69: areturn
      70: aload_0
      71: getstatic     #51                 // Field org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType.CHUNK_MAP:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
      74: iload_2
      75: invokevirtual #31                 // Method getChunk:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      78: areturn

  org.apache.hadoop.hbase.regionserver.Chunk getChunk(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunkIdMap:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #65                 // class org/apache/hadoop/hbase/regionserver/Chunk
      16: areturn

  boolean isOffheap();
    Code:
       0: aload_0
       1: getfield      #12                 // Field offheap:Z
       4: ireturn

  org.apache.hadoop.hbase.regionserver.Chunk removeChunk(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunkIdMap:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #65                 // class org/apache/hadoop/hbase/regionserver/Chunk
      16: areturn

  int numberOfMappedChunks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunkIdMap:Ljava/util/Map;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  void clearChunkIds();
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunkIdMap:Ljava/util/Map;
       4: invokeinterface #70,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  static void clearDisableFlag();
    Code:
       0: iconst_0
       1: putstatic     #71                 // Field chunkPoolDisabled:Z
       4: return

  int getMaxCount();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
       4: invokevirtual #86                 // Method getMaxCount:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)I
       7: ireturn

  int getMaxCount(org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: getstatic     #28                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$ChunkCreator$ChunkType:[I
       3: aload_1
       4: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 51
               default: 66
          }
      36: aload_0
      37: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      40: ifnull        76
      43: aload_0
      44: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      47: invokestatic  #41                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$000:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)I
      50: ireturn
      51: aload_0
      52: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      55: ifnull        76
      58: aload_0
      59: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      62: invokestatic  #41                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$000:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)I
      65: ireturn
      66: new           #32                 // class java/lang/IllegalArgumentException
      69: dup
      70: ldc           #33                 // String chunkType must either be INDEX_CHUNK or DATA_CHUNK
      72: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: iconst_0
      77: ireturn

  int getPoolSize();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
       4: invokevirtual #87                 // Method getPoolSize:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)I
       7: ireturn

  int getPoolSize(org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: getstatic     #28                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$ChunkCreator$ChunkType:[I
       3: aload_1
       4: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 56
               default: 76
          }
      36: aload_0
      37: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      40: ifnull        86
      43: aload_0
      44: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      47: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      50: invokeinterface #89,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      55: ireturn
      56: aload_0
      57: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      60: ifnull        86
      63: aload_0
      64: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      67: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      70: invokeinterface #89,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      75: ireturn
      76: new           #32                 // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #33                 // String chunkType must either be INDEX_CHUNK or DATA_CHUNK
      82: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: iconst_0
      87: ireturn

  boolean isChunkInPool(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #90                 // Method getChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      16: ifnull        37
      19: aload_0
      20: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      23: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      26: aload_2
      27: invokeinterface #91,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.contains:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: aload_0
      38: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      41: ifnull        62
      44: aload_0
      45: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      48: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      51: aload_2
      52: invokeinterface #91,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.contains:(Ljava/lang/Object;)Z
      57: ifeq          62
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn

  void clearChunksInPool();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
       4: ifnull        19
       7: aload_0
       8: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      11: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      14: invokeinterface #92,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      19: aload_0
      20: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      23: ifnull        38
      26: aload_0
      27: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      30: invokestatic  #88                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$800:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;)Ljava/util/concurrent/BlockingQueue;
      33: invokeinterface #92,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      38: return

  int getChunkSize();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
       4: invokevirtual #93                 // Method getChunkSize:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)I
       7: ireturn

  int getChunkSize(org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: getstatic     #28                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$ChunkCreator$ChunkType:[I
       3: aload_1
       4: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 51
               default: 71
          }
      36: aload_0
      37: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      40: ifnull        51
      43: aload_0
      44: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      47: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      50: ireturn
      51: aload_0
      52: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      55: ifnull        66
      58: aload_0
      59: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      62: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
      65: ireturn
      66: aload_0
      67: getfield      #13                 // Field chunkSize:I
      70: ireturn
      71: new           #32                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #33                 // String chunkType must either be INDEX_CHUNK or DATA_CHUNK
      77: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow

  synchronized void putbackChunks(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
       4: ifnonnull     20
       7: aload_0
       8: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      11: ifnonnull     20
      14: aload_0
      15: aload_1
      16: invokespecial #94                 // Method removeChunks:(Ljava/util/Set;)V
      19: return
      20: aload_1
      21: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          133
      36: aload_2
      37: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #98                 // class java/lang/Integer
      45: invokevirtual #99                 // Method java/lang/Integer.intValue:()I
      48: istore_3
      49: aload_0
      50: iload_3
      51: invokevirtual #90                 // Method getChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      54: astore        4
      56: aload         4
      58: ifnull        130
      61: aload         4
      63: invokevirtual #100                // Method org/apache/hadoop/hbase/regionserver/Chunk.isFromPool:()Z
      66: ifeq          89
      69: aload         4
      71: invokevirtual #101                // Method org/apache/hadoop/hbase/regionserver/Chunk.isIndexChunk:()Z
      74: ifeq          89
      77: aload_0
      78: getfield      #19                 // Field indexChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
      81: aload         4
      83: invokestatic  #102                // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$900:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;Lorg/apache/hadoop/hbase/regionserver/Chunk;)V
      86: goto          130
      89: aload         4
      91: invokevirtual #100                // Method org/apache/hadoop/hbase/regionserver/Chunk.isFromPool:()Z
      94: ifeq          124
      97: aload         4
      99: getfield      #103                // Field org/apache/hadoop/hbase/regionserver/Chunk.size:I
     102: aload_0
     103: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
     106: invokevirtual #30                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.getChunkSize:()I
     109: if_icmpne     124
     112: aload_0
     113: getfield      #17                 // Field dataChunksPool:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;
     116: aload         4
     118: invokestatic  #102                // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool.access$900:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$MemStoreChunkPool;Lorg/apache/hadoop/hbase/regionserver/Chunk;)V
     121: goto          130
     124: aload_0
     125: iload_3
     126: invokevirtual #104                // Method removeChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
     129: pop
     130: goto          27
     133: return

  static org.apache.hadoop.hbase.regionserver.Chunk access$100(org.apache.hadoop.hbase.regionserver.ChunkCreator, boolean, org.apache.hadoop.hbase.regionserver.CompactingMemStore$IndexType, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #4                  // Method createChunk:(ZLorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
       7: areturn

  static org.apache.hadoop.hbase.regionserver.Chunk access$200(org.apache.hadoop.hbase.regionserver.ChunkCreator, org.apache.hadoop.hbase.regionserver.CompactingMemStore$IndexType, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method createChunkForPool:(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
       6: areturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #21                 // class org/apache/hadoop/hbase/regionserver/ChunkCreator
       2: invokevirtual #105                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #54                 // Field $assertionsDisabled:Z
      16: ldc           #21                 // class org/apache/hadoop/hbase/regionserver/ChunkCreator
      18: invokestatic  #106                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      24: iconst_0
      25: putstatic     #71                 // Field chunkPoolDisabled:Z
      28: return
}
