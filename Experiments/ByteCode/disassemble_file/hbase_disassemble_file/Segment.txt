Compiled from "Segment.java"
public abstract class org.apache.hadoop.hbase.regionserver.Segment implements org.apache.hadoop.hbase.regionserver.MemStoreSizing {
  public static final long FIXED_OVERHEAD;

  public static final long DEEP_OVERHEAD;

  protected long minSequenceId;

  protected final org.apache.hadoop.hbase.regionserver.MemStoreSizing memStoreSizing;

  protected final org.apache.hadoop.hbase.regionserver.TimeRangeTracker timeRangeTracker;

  protected volatile boolean tagsPresent;

  protected org.apache.hadoop.hbase.regionserver.Segment(org.apache.hadoop.hbase.CellComparator, org.apache.hadoop.hbase.regionserver.TimeRangeTracker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      20: aload_0
      21: new           #6                  // class org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing
      24: dup
      25: invokespecial #7                  // Method org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing."<init>":()V
      28: putfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      36: return

  protected org.apache.hadoop.hbase.regionserver.Segment(org.apache.hadoop.hbase.CellComparator, java.util.List<org.apache.hadoop.hbase.regionserver.ImmutableSegment>, org.apache.hadoop.hbase.regionserver.TimeRangeTracker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      15: lconst_0
      16: lstore        4
      18: lconst_0
      19: lstore        6
      21: lconst_0
      22: lstore        8
      24: iconst_0
      25: istore        10
      27: aload_2
      28: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore        11
      35: aload         11
      37: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          107
      45: aload         11
      47: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #13                 // class org/apache/hadoop/hbase/regionserver/Segment
      55: astore        12
      57: aload         12
      59: invokevirtual #14                 // Method getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
      62: astore        13
      64: lload         4
      66: aload         13
      68: invokevirtual #15                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getDataSize:()J
      71: ladd
      72: lstore        4
      74: lload         6
      76: aload         13
      78: invokevirtual #16                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getHeapSize:()J
      81: ladd
      82: lstore        6
      84: lload         8
      86: aload         13
      88: invokevirtual #17                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getOffHeapSize:()J
      91: ladd
      92: lstore        8
      94: iload         10
      96: aload         13
      98: invokevirtual #18                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getCellsCount:()I
     101: iadd
     102: istore        10
     104: goto          35
     107: aload_0
     108: aload_1
     109: putfield      #5                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
     112: aload_0
     113: new           #19                 // class java/util/concurrent/locks/ReentrantReadWriteLock
     116: dup
     117: invokespecial #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
     120: putfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     123: aload_0
     124: new           #6                  // class org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing
     127: dup
     128: lload         4
     130: lload         6
     132: lload         8
     134: iload         10
     136: invokespecial #22                 // Method org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing."<init>":(JJJI)V
     139: putfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
     142: aload_0
     143: aload_3
     144: putfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
     147: return

  protected org.apache.hadoop.hbase.regionserver.Segment(org.apache.hadoop.hbase.regionserver.CellSet, org.apache.hadoop.hbase.CellComparator, org.apache.hadoop.hbase.regionserver.MemStoreLAB, org.apache.hadoop.hbase.regionserver.TimeRangeTracker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: getfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      19: aload_1
      20: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      23: aload_0
      24: aload_2
      25: putfield      #5                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      28: aload_0
      29: new           #19                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      32: dup
      33: invokespecial #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      36: putfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      39: aload_0
      40: ldc2_w        #25                 // long 9223372036854775807l
      43: putfield      #27                 // Field minSequenceId:J
      46: aload_0
      47: aload_3
      48: putfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      51: aload_0
      52: new           #6                  // class org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing
      55: dup
      56: invokespecial #7                  // Method org/apache/hadoop/hbase/regionserver/ThreadSafeMemStoreSizing."<init>":()V
      59: putfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
      62: aload_0
      63: iconst_0
      64: putfield      #29                 // Field tagsPresent:Z
      67: aload_0
      68: aload         4
      70: putfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      73: return

  protected org.apache.hadoop.hbase.regionserver.Segment(org.apache.hadoop.hbase.regionserver.Segment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: getfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
      19: aload_1
      20: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
      23: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      26: aload_0
      27: aload_1
      28: invokevirtual #31                 // Method getComparator:()Lorg/apache/hadoop/hbase/CellComparator;
      31: putfield      #5                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      34: aload_0
      35: aload_1
      36: invokespecial #32                 // Method getUpdatesLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      39: putfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      42: aload_0
      43: aload_1
      44: invokevirtual #33                 // Method getMinSequenceId:()J
      47: putfield      #27                 // Field minSequenceId:J
      50: aload_0
      51: aload_1
      52: invokevirtual #34                 // Method getMemStoreLAB:()Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      55: putfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      58: aload_0
      59: aload_1
      60: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
      63: putfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
      66: aload_0
      67: aload_1
      68: invokevirtual #35                 // Method isTagsPresent:()Z
      71: putfield      #29                 // Field tagsPresent:Z
      74: aload_0
      75: aload_1
      76: invokevirtual #36                 // Method getTimeRangeTracker:()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      79: putfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      82: return

  protected org.apache.hadoop.hbase.regionserver.KeyValueScanner getScanner(long);
    Code:
       0: new           #37                 // class org/apache/hadoop/hbase/regionserver/SegmentScanner
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #38                 // Method org/apache/hadoop/hbase/regionserver/SegmentScanner."<init>":(Lorg/apache/hadoop/hbase/regionserver/Segment;J)V
       9: areturn

  public java.util.List<org.apache.hadoop.hbase.regionserver.KeyValueScanner> getScanners(long);
    Code:
       0: new           #37                 // class org/apache/hadoop/hbase/regionserver/SegmentScanner
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #38                 // Method org/apache/hadoop/hbase/regionserver/SegmentScanner."<init>":(Lorg/apache/hadoop/hbase/regionserver/Segment;J)V
       9: invokestatic  #39                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      12: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: invokevirtual #40                 // Method org/apache/hadoop/hbase/regionserver/CellSet.isEmpty:()Z
       7: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       4: ifnull        16
       7: aload_0
       8: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      11: invokeinterface #41,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.close:()V
      16: return

  public org.apache.hadoop.hbase.Cell maybeCloneWithAllocator(org.apache.hadoop.hbase.Cell, boolean);
    Code:
       0: aload_0
       1: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: iload_2
      10: ifeq          27
      13: aload_0
      14: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      17: aload_1
      18: invokeinterface #42,  2           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.forceCopyOfBigCellInto:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
      23: astore_3
      24: goto          38
      27: aload_0
      28: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      31: aload_1
      32: invokeinterface #43,  2           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.copyCellInto:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
      37: astore_3
      38: aload_3
      39: ifnull        46
      42: aload_3
      43: goto          47
      46: aload_1
      47: areturn

  static int getCellLength(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getSerializedSize:()I
       6: ireturn

  public boolean shouldSeek(org.apache.hadoop.hbase.io.TimeRange, long);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method isEmpty:()Z
       4: ifne          41
       7: aload_1
       8: invokevirtual #46                 // Method org/apache/hadoop/hbase/io/TimeRange.isAllTime:()Z
      11: ifne          25
      14: aload_0
      15: getfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      18: aload_1
      19: invokevirtual #47                 // Method org/apache/hadoop/hbase/regionserver/TimeRangeTracker.includesTimeRange:(Lorg/apache/hadoop/hbase/io/TimeRange;)Z
      22: ifeq          41
      25: aload_0
      26: getfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
      29: invokevirtual #48                 // Method org/apache/hadoop/hbase/regionserver/TimeRangeTracker.getMax:()J
      32: lload_2
      33: lcmp
      34: iflt          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public boolean isTagsPresent();
    Code:
       0: aload_0
       1: getfield      #29                 // Field tagsPresent:Z
       4: ireturn

  public void incScannerCount();
    Code:
       0: aload_0
       1: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       4: ifnull        16
       7: aload_0
       8: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      11: invokeinterface #49,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.incScannerCount:()V
      16: return

  public void decScannerCount();
    Code:
       0: aload_0
       1: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       4: ifnull        16
       7: aload_0
       8: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      11: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.decScannerCount:()V
      16: return

  protected org.apache.hadoop.hbase.regionserver.Segment setCellSet(org.apache.hadoop.hbase.regionserver.CellSet, org.apache.hadoop.hbase.regionserver.CellSet);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aload_2
       6: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: pop
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.regionserver.MemStoreSize getMemStoreSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: invokeinterface #52,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
       9: areturn

  public long getDataSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.getDataSize:()J
       9: lreturn

  public long getHeapSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.getHeapSize:()J
       9: lreturn

  public long getOffHeapSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: invokeinterface #55,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.getOffHeapSize:()J
       9: lreturn

  public int getCellsCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: invokeinterface #56,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.getCellsCount:()I
       9: ireturn

  public long incMemStoreSize(long, long, long, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: lload_1
       5: lload_3
       6: lload         5
       8: iload         7
      10: invokeinterface #57,  8           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.incMemStoreSize:(JJJI)J
      15: lreturn

  public boolean sharedLock();
    Code:
       0: aload_0
       1: getfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #59                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.tryLock:()Z
      10: ireturn

  public void sharedUnlock();
    Code:
       0: aload_0
       1: getfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #58                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #60                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      10: return

  public void waitForUpdates();
    Code:
       0: aload_0
       1: getfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #61                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.isWriteLocked:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #21                 // Field updatesLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      14: invokevirtual #62                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      17: invokevirtual #63                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      20: return

  public boolean compareAndSetDataSize(long, long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field memStoreSizing:Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
       4: lload_1
       5: lload_3
       6: invokeinterface #64,  5           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.compareAndSetDataSize:(JJ)Z
      11: ireturn

  public long getMinSequenceId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field minSequenceId:J
       4: lreturn

  public org.apache.hadoop.hbase.regionserver.TimeRangeTracker getTimeRangeTracker();
    Code:
       0: aload_0
       1: getfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
       4: areturn

  public org.apache.hadoop.hbase.Cell last();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: invokevirtual #65                 // Method org/apache/hadoop/hbase/regionserver/CellSet.last:()Lorg/apache/hadoop/hbase/Cell;
       7: areturn

  public java.util.Iterator<org.apache.hadoop.hbase.Cell> iterator();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: invokevirtual #66                 // Method org/apache/hadoop/hbase/regionserver/CellSet.iterator:()Ljava/util/Iterator;
       7: areturn

  public java.util.SortedSet<org.apache.hadoop.hbase.Cell> headSet(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: aload_1
       5: invokevirtual #67                 // Method org/apache/hadoop/hbase/regionserver/CellSet.headSet:(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
       8: areturn

  public int compare(org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getComparator:()Lorg/apache/hadoop/hbase/CellComparator;
       4: aload_1
       5: aload_2
       6: invokeinterface #68,  3           // InterfaceMethod org/apache/hadoop/hbase/CellComparator.compare:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
      11: ireturn

  public int compareRows(org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getComparator:()Lorg/apache/hadoop/hbase/CellComparator;
       4: aload_1
       5: aload_2
       6: invokeinterface #69,  3           // InterfaceMethod org/apache/hadoop/hbase/CellComparator.compareRows:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
      11: ireturn

  protected org.apache.hadoop.hbase.regionserver.CellSet getCellSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cellSet:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #71                 // class org/apache/hadoop/hbase/regionserver/CellSet
      10: areturn

  protected org.apache.hadoop.hbase.CellComparator getComparator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
       4: areturn

  protected void internalAdd(org.apache.hadoop.hbase.Cell, boolean, org.apache.hadoop.hbase.regionserver.MemStoreSizing, boolean);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: aload_1
       5: invokevirtual #72                 // Method org/apache/hadoop/hbase/regionserver/CellSet.add:(Lorg/apache/hadoop/hbase/Cell;)Z
       8: istore        5
      10: aload_0
      11: aload_1
      12: iload         5
      14: iload_2
      15: aload_3
      16: iload         4
      18: invokevirtual #73                 // Method updateMetaInfo:(Lorg/apache/hadoop/hbase/Cell;ZZLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;Z)V
      21: return

  protected void updateMetaInfo(org.apache.hadoop.hbase.Cell, boolean, boolean, org.apache.hadoop.hbase.regionserver.MemStoreSizing, boolean);
    Code:
       0: lconst_0
       1: lstore        6
       3: aload_1
       4: invokestatic  #74                 // Method getCellLength:(Lorg/apache/hadoop/hbase/Cell;)I
       7: i2l
       8: lstore        8
      10: iload_2
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore        10
      21: iload_2
      22: ifne          29
      25: iload_3
      26: ifeq          33
      29: lload         8
      31: lstore        6
      33: iload         5
      35: ifeq          45
      38: lload         6
      40: lload         8
      42: lsub
      43: lstore        6
      45: aload_0
      46: aload_1
      47: iload_2
      48: ifne          55
      51: iload_3
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: invokevirtual #75                 // Method heapSizeChange:(Lorg/apache/hadoop/hbase/Cell;Z)J
      63: lstore        11
      65: aload_0
      66: aload_1
      67: iload_2
      68: ifne          75
      71: iload_3
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: invokevirtual #76                 // Method offHeapSizeChange:(Lorg/apache/hadoop/hbase/Cell;Z)J
      83: lstore        13
      85: aload_0
      86: lload         6
      88: lload         11
      90: lload         13
      92: iload         10
      94: invokevirtual #77                 // Method incMemStoreSize:(JJJI)J
      97: pop2
      98: aload         4
     100: ifnull        119
     103: aload         4
     105: lload         6
     107: lload         11
     109: lload         13
     111: iload         10
     113: invokeinterface #57,  8           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreSizing.incMemStoreSize:(JJJI)J
     118: pop2
     119: aload_0
     120: invokevirtual #36                 // Method getTimeRangeTracker:()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
     123: aload_1
     124: invokevirtual #78                 // Method org/apache/hadoop/hbase/regionserver/TimeRangeTracker.includeTimestamp:(Lorg/apache/hadoop/hbase/Cell;)V
     127: aload_0
     128: aload_0
     129: getfield      #27                 // Field minSequenceId:J
     132: aload_1
     133: invokeinterface #79,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getSequenceId:()J
     138: invokestatic  #80                 // Method java/lang/Math.min:(JJ)J
     141: putfield      #27                 // Field minSequenceId:J
     144: aload_1
     145: invokeinterface #81,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getTagsLength:()I
     150: ifle          158
     153: aload_0
     154: iconst_1
     155: putfield      #29                 // Field tagsPresent:Z
     158: return

  protected void updateMetaInfo(org.apache.hadoop.hbase.Cell, boolean, org.apache.hadoop.hbase.regionserver.MemStoreSizing);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #34                 // Method getMemStoreLAB:()Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: aload_3
      16: iconst_0
      17: invokevirtual #73                 // Method updateMetaInfo:(Lorg/apache/hadoop/hbase/Cell;ZZLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;Z)V
      20: return

  protected long heapSizeChange(org.apache.hadoop.hbase.Cell, boolean);
    Code:
       0: lconst_0
       1: lstore_3
       2: iload_2
       3: ifeq          57
       6: iconst_1
       7: istore        5
       9: aload_0
      10: invokevirtual #34                 // Method getMemStoreLAB:()Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      13: astore        6
      15: aload         6
      17: ifnull        29
      20: aload         6
      22: invokeinterface #82,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.isOnHeap:()Z
      27: istore        5
      29: lload_3
      30: aload_0
      31: iload         5
      33: invokevirtual #83                 // Method indexEntryOnHeapSize:(Z)J
      36: ladd
      37: lstore_3
      38: iload         5
      40: ifeq          52
      43: lload_3
      44: aload_1
      45: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.heapSize:()J
      50: ladd
      51: lstore_3
      52: lload_3
      53: invokestatic  #85                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(J)J
      56: lstore_3
      57: lload_3
      58: lreturn

  protected long offHeapSizeChange(org.apache.hadoop.hbase.Cell, boolean);
    Code:
       0: lconst_0
       1: lstore_3
       2: iload_2
       3: ifeq          57
       6: iconst_0
       7: istore        5
       9: aload_0
      10: invokevirtual #34                 // Method getMemStoreLAB:()Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
      13: astore        6
      15: aload         6
      17: ifnull        29
      20: aload         6
      22: invokeinterface #86,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/MemStoreLAB.isOffHeap:()Z
      27: istore        5
      29: lload_3
      30: aload_0
      31: iload         5
      33: invokevirtual #87                 // Method indexEntryOffHeapSize:(Z)J
      36: ladd
      37: lstore_3
      38: iload         5
      40: ifeq          52
      43: lload_3
      44: aload_1
      45: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.heapSize:()J
      50: ladd
      51: lstore_3
      52: lload_3
      53: invokestatic  #85                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(J)J
      56: lstore_3
      57: lload_3
      58: lreturn

  protected long indexEntryOnHeapSize(boolean);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method indexEntrySize:()J
       4: lreturn

  protected long indexEntryOffHeapSize(boolean);
    Code:
       0: lconst_0
       1: lreturn

  protected abstract long indexEntrySize();

  protected java.util.SortedSet<org.apache.hadoop.hbase.Cell> tailSet(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: aload_1
       5: invokevirtual #89                 // Method org/apache/hadoop/hbase/regionserver/CellSet.tailSet:(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
       8: areturn

  org.apache.hadoop.hbase.regionserver.MemStoreLAB getMemStoreLAB();
    Code:
       0: aload_0
       1: getfield      #28                 // Field memStoreLAB:Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
       4: areturn

  void dump(org.slf4j.Logger);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getCellSet:()Lorg/apache/hadoop/hbase/regionserver/CellSet;
       4: invokevirtual #66                 // Method org/apache/hadoop/hbase/regionserver/CellSet.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          40
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #90                 // class org/apache/hadoop/hbase/Cell
      26: astore_3
      27: aload_1
      28: aload_3
      29: invokestatic  #91                 // Method java/util/Objects.toString:(Ljava/lang/Object;)Ljava/lang/String;
      32: invokeinterface #92,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: goto          8
      40: return

  public java.lang.String toString();
    Code:
       0: new           #93                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #95                 // String type=
       9: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #98                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      19: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #99                 // String ,
      24: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: astore_1
      31: new           #93                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_1
      39: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #101                // String empty=
      44: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #45                 // Method isEmpty:()Z
      51: ifeq          59
      54: ldc           #102                // String yes
      56: goto          61
      59: ldc           #103                // String no
      61: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #99                 // String ,
      66: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: astore_1
      73: new           #93                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      80: aload_1
      81: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #104                // String cellCount=
      86: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokevirtual #105                // Method getCellsCount:()I
      93: invokevirtual #106                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: ldc           #99                 // String ,
      98: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: astore_1
     105: new           #93                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     112: aload_1
     113: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #107                // String cellSize=
     118: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: invokevirtual #108                // Method getDataSize:()J
     125: invokevirtual #109                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     128: ldc           #99                 // String ,
     130: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: astore_1
     137: new           #93                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     144: aload_1
     145: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #110                // String totalHeapSize=
     150: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_0
     154: invokevirtual #111                // Method getHeapSize:()J
     157: invokevirtual #109                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     160: ldc           #99                 // String ,
     162: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: astore_1
     169: new           #93                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     176: aload_1
     177: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: ldc           #112                // String min timestamp=
     182: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_0
     186: getfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
     189: invokevirtual #113                // Method org/apache/hadoop/hbase/regionserver/TimeRangeTracker.getMin:()J
     192: invokevirtual #109                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     195: ldc           #99                 // String ,
     197: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: astore_1
     204: new           #93                 // class java/lang/StringBuilder
     207: dup
     208: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     211: aload_1
     212: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: ldc           #114                // String max timestamp=
     217: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_0
     221: getfield      #9                  // Field timeRangeTracker:Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
     224: invokevirtual #48                 // Method org/apache/hadoop/hbase/regionserver/TimeRangeTracker.getMax:()J
     227: invokevirtual #109                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     230: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: astore_1
     234: aload_1
     235: areturn

  static {};
    Code:
       0: getstatic     #115                // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
       3: bipush        6
       5: getstatic     #116                // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       8: imul
       9: iadd
      10: bipush        8
      12: iadd
      13: iconst_1
      14: iadd
      15: invokestatic  #118                // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      18: i2l
      19: putstatic     #119                // Field FIXED_OVERHEAD:J
      22: getstatic     #119                // Field FIXED_OVERHEAD:J
      25: getstatic     #120                // Field org/apache/hadoop/hbase/util/ClassSize.ATOMIC_REFERENCE:I
      28: i2l
      29: ladd
      30: getstatic     #121                // Field org/apache/hadoop/hbase/util/ClassSize.CELL_SET:I
      33: i2l
      34: ladd
      35: iconst_2
      36: getstatic     #122                // Field org/apache/hadoop/hbase/util/ClassSize.ATOMIC_LONG:I
      39: imul
      40: i2l
      41: ladd
      42: getstatic     #123                // Field org/apache/hadoop/hbase/util/ClassSize.REENTRANT_LOCK:I
      45: i2l
      46: ladd
      47: putstatic     #124                // Field DEEP_OVERHEAD:J
      50: return
}
