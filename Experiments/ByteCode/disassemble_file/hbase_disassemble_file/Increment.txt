Compiled from "Increment.java"
public class org.apache.hadoop.hbase.client.Increment extends org.apache.hadoop.hbase.client.Mutation {
  public org.apache.hadoop.hbase.client.Increment(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #1                  // Method "<init>":([BII)V
       8: return

  public org.apache.hadoop.hbase.client.Increment(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/hbase/client/Mutation."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method org/apache/hadoop/hbase/io/TimeRange.allTime:()Lorg/apache/hadoop/hbase/io/TimeRange;
       8: putfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokestatic  #5                  // Method checkRow:([BII)[B
      17: pop
      18: aload_0
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/Bytes.copy:([BII)[B
      25: putfield      #7                  // Field row:[B
      28: return

  public org.apache.hadoop.hbase.client.Increment(org.apache.hadoop.hbase.client.Increment);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/apache/hadoop/hbase/client/Mutation."<init>":(Lorg/apache/hadoop/hbase/client/Mutation;)V
       5: aload_0
       6: invokestatic  #3                  // Method org/apache/hadoop/hbase/io/TimeRange.allTime:()Lorg/apache/hadoop/hbase/io/TimeRange;
       9: putfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
      12: aload_0
      13: aload_1
      14: invokevirtual #9                  // Method getTimeRange:()Lorg/apache/hadoop/hbase/io/TimeRange;
      17: putfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
      20: return

  public org.apache.hadoop.hbase.client.Increment(byte[], long, java.util.NavigableMap<byte[], java.util.List<org.apache.hadoop.hbase.Cell>>);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: invokespecial #10                 // Method org/apache/hadoop/hbase/client/Mutation."<init>":([BJLjava/util/NavigableMap;)V
       8: aload_0
       9: invokestatic  #3                  // Method org/apache/hadoop/hbase/io/TimeRange.allTime:()Lorg/apache/hadoop/hbase/io/TimeRange;
      12: putfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
      15: return

  public org.apache.hadoop.hbase.client.Increment add(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/apache/hadoop/hbase/client/Mutation.add:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: pop
       6: aload_0
       7: areturn

  public org.apache.hadoop.hbase.client.Increment addColumn(byte[], byte[], long);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #13                 // String family cannot be null
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #15                 // Method getCellList:([B)Ljava/util/List;
      19: astore        5
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_0
      25: getfield      #16                 // Field ts:J
      28: lload_3
      29: invokestatic  #17                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(J)[B
      32: invokevirtual #18                 // Method createPutKeyValue:([B[BJ[B)Lorg/apache/hadoop/hbase/KeyValue;
      35: astore        6
      37: aload         5
      39: aload         6
      41: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: aload_0
      48: areturn

  public org.apache.hadoop.hbase.io.TimeRange getTimeRange();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
       4: areturn

  public org.apache.hadoop.hbase.client.Increment setTimeRange(long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #20                 // class org/apache/hadoop/hbase/io/TimeRange
       4: dup
       5: lload_1
       6: lload_3
       7: invokespecial #21                 // Method org/apache/hadoop/hbase/io/TimeRange."<init>":(JJ)V
      10: putfield      #4                  // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
      13: aload_0
      14: areturn

  public org.apache.hadoop.hbase.client.Increment setTimestamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #22                 // Method org/apache/hadoop/hbase/client/Mutation.setTimestamp:(J)Lorg/apache/hadoop/hbase/client/Mutation;
       5: pop
       6: aload_0
       7: areturn

  public org.apache.hadoop.hbase.client.Increment setReturnResults(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #23                 // Method org/apache/hadoop/hbase/client/Mutation.setReturnResults:(Z)Lorg/apache/hadoop/hbase/client/Mutation;
       5: pop
       6: aload_0
       7: areturn

  public boolean isReturnResults();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/apache/hadoop/hbase/client/Mutation.isReturnResults:()Z
       4: ireturn

  public int numFamilies();
    Code:
       0: aload_0
       1: getfield      #25                 // Field familyMap:Ljava/util/NavigableMap;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.size:()I
       9: ireturn

  public boolean hasFamilies();
    Code:
       0: aload_0
       1: getfield      #25                 // Field familyMap:Ljava/util/NavigableMap;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/NavigableMap.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Map<byte[], java.util.NavigableMap<byte[], java.lang.Long>> getFamilyMapOfLongs();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/apache/hadoop/hbase/client/Mutation.getFamilyCellMap:()Ljava/util/NavigableMap;
       4: astore_1
       5: new           #29                 // class java/util/TreeMap
       8: dup
       9: getstatic     #30                 // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      12: invokespecial #31                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: astore_2
      16: aload_1
      17: invokeinterface #32,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
      22: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          161
      37: aload_3
      38: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #36                 // class java/util/Map$Entry
      46: astore        4
      48: new           #29                 // class java/util/TreeMap
      51: dup
      52: getstatic     #30                 // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      55: invokespecial #31                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      58: astore        5
      60: aload         4
      62: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: checkcast     #38                 // class java/util/List
      70: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore        6
      77: aload         6
      79: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          142
      87: aload         6
      89: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #40                 // class org/apache/hadoop/hbase/Cell
      97: astore        7
      99: aload         5
     101: aload         7
     103: invokestatic  #41                 // Method org/apache/hadoop/hbase/CellUtil.cloneQualifier:(Lorg/apache/hadoop/hbase/Cell;)[B
     106: aload         7
     108: invokeinterface #42,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueArray:()[B
     113: aload         7
     115: invokeinterface #43,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueOffset:()I
     120: aload         7
     122: invokeinterface #44,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueLength:()I
     127: invokestatic  #45                 // Method org/apache/hadoop/hbase/util/Bytes.toLong:([BII)J
     130: invokestatic  #46                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     133: invokeinterface #47,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          77
     142: aload_2
     143: aload         4
     145: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     150: aload         5
     152: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: goto          28
     161: aload_2
     162: areturn

  public java.lang.String toString();
    Code:
       0: new           #50                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #52                 // String row=
      11: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field row:[B
      20: invokestatic  #54                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      23: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_0
      28: getfield      #25                 // Field familyMap:Ljava/util/NavigableMap;
      31: invokeinterface #27,  1           // InterfaceMethod java/util/NavigableMap.isEmpty:()Z
      36: ifeq          51
      39: aload_1
      40: ldc           #55                 // String , no columns set to be incremented
      42: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn
      51: aload_1
      52: ldc           #57                 // String , families=
      54: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: iconst_0
      59: istore_2
      60: aload_0
      61: getfield      #25                 // Field familyMap:Ljava/util/NavigableMap;
      64: invokeinterface #32,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
      69: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      74: astore_3
      75: aload_3
      76: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          305
      84: aload_3
      85: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #36                 // class java/util/Map$Entry
      93: astore        4
      95: iload_2
      96: ifeq          109
      99: aload_1
     100: ldc           #58                 // String ),
     102: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: pop
     106: goto          118
     109: iconst_1
     110: istore_2
     111: aload_1
     112: ldc           #59                 // String {
     114: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: aload_1
     119: ldc           #60                 // String (family=
     121: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_1
     126: aload         4
     128: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     133: checkcast     #61                 // class "[B"
     136: invokestatic  #62                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
     139: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: aload_1
     144: ldc           #63                 // String , columns=
     146: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: aload         4
     152: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     157: ifnonnull     170
     160: aload_1
     161: ldc           #64                 // String NONE
     163: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: goto          302
     170: aload_1
     171: ldc           #59                 // String {
     173: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: pop
     177: iconst_0
     178: istore        5
     180: aload         4
     182: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     187: checkcast     #38                 // class java/util/List
     190: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     195: astore        6
     197: aload         6
     199: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     204: ifeq          295
     207: aload         6
     209: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     214: checkcast     #40                 // class org/apache/hadoop/hbase/Cell
     217: astore        7
     219: iload         5
     221: ifeq          234
     224: aload_1
     225: ldc           #65                 // String ,
     227: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: pop
     231: goto          237
     234: iconst_1
     235: istore        5
     237: aload_1
     238: new           #50                 // class java/lang/StringBuilder
     241: dup
     242: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     245: aload         7
     247: invokestatic  #66                 // Method org/apache/hadoop/hbase/CellUtil.getCellKeyAsString:(Lorg/apache/hadoop/hbase/Cell;)Ljava/lang/String;
     250: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: ldc           #67                 // String +=
     255: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: aload         7
     260: invokeinterface #42,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueArray:()[B
     265: aload         7
     267: invokeinterface #43,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueOffset:()I
     272: aload         7
     274: invokeinterface #44,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueLength:()I
     279: invokestatic  #45                 // Method org/apache/hadoop/hbase/util/Bytes.toLong:([BII)J
     282: invokevirtual #68                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     285: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     288: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: pop
     292: goto          197
     295: aload_1
     296: ldc           #69                 // String }
     298: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     301: pop
     302: goto          75
     305: aload_1
     306: ldc           #69                 // String }
     308: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     311: pop
     312: aload_1
     313: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     316: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method getRow:()[B
       4: invokestatic  #71                 // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #72                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #72                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #73                 // class org/apache/hadoop/hbase/client/Row
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #74                 // Method compareTo:(Lorg/apache/hadoop/hbase/client/Row;)I
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  protected long extraHeapSize();
    Code:
       0: getstatic     #75                 // Field HEAP_OVERHEAD:I
       3: i2l
       4: lreturn

  public org.apache.hadoop.hbase.client.Increment setAttribute(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #76                 // Method org/apache/hadoop/hbase/client/Mutation.setAttribute:(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/client/OperationWithAttributes;
       6: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       9: areturn

  public org.apache.hadoop.hbase.client.Increment setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #78                 // Method org/apache/hadoop/hbase/client/Mutation.setId:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/OperationWithAttributes;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setDurability(org.apache.hadoop.hbase.client.Durability);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #79                 // Method org/apache/hadoop/hbase/client/Mutation.setDurability:(Lorg/apache/hadoop/hbase/client/Durability;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setFamilyCellMap(java.util.NavigableMap<byte[], java.util.List<org.apache.hadoop.hbase.Cell>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method org/apache/hadoop/hbase/client/Mutation.setFamilyCellMap:(Ljava/util/NavigableMap;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setClusterIds(java.util.List<java.util.UUID>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #81                 // Method org/apache/hadoop/hbase/client/Mutation.setClusterIds:(Ljava/util/List;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setCellVisibility(org.apache.hadoop.hbase.security.visibility.CellVisibility);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #82                 // Method org/apache/hadoop/hbase/client/Mutation.setCellVisibility:(Lorg/apache/hadoop/hbase/security/visibility/CellVisibility;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setACL(java.lang.String, org.apache.hadoop.hbase.security.access.Permission);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #83                 // Method org/apache/hadoop/hbase/client/Mutation.setACL:(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission;)Lorg/apache/hadoop/hbase/client/Mutation;
       6: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       9: areturn

  public org.apache.hadoop.hbase.client.Increment setACL(java.util.Map<java.lang.String, org.apache.hadoop.hbase.security.access.Permission>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #84                 // Method org/apache/hadoop/hbase/client/Mutation.setACL:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #85                 // Method org/apache/hadoop/hbase/client/Mutation.setTTL:(J)Lorg/apache/hadoop/hbase/client/Mutation;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Increment setPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #86                 // Method org/apache/hadoop/hbase/client/Mutation.setPriority:(I)Lorg/apache/hadoop/hbase/client/OperationWithAttributes;
       5: checkcast     #77                 // class org/apache/hadoop/hbase/client/Increment
       8: areturn

  public org.apache.hadoop.hbase.client.Mutation add(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method add:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setTimestamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #88                 // Method setTimestamp:(J)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setReturnResults(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #89                 // Method setReturnResults:(Z)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #90                 // Method setTTL:(J)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setACL(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method setACL:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setACL(java.lang.String, org.apache.hadoop.hbase.security.access.Permission);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #92                 // Method setACL:(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission;)Lorg/apache/hadoop/hbase/client/Increment;
       6: areturn

  public org.apache.hadoop.hbase.client.Mutation setCellVisibility(org.apache.hadoop.hbase.security.visibility.CellVisibility);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setCellVisibility:(Lorg/apache/hadoop/hbase/security/visibility/CellVisibility;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setClusterIds(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setClusterIds:(Ljava/util/List;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setFamilyCellMap(java.util.NavigableMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #95                 // Method setFamilyCellMap:(Ljava/util/NavigableMap;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.Mutation setDurability(org.apache.hadoop.hbase.client.Durability);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method setDurability:(Lorg/apache/hadoop/hbase/client/Durability;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.OperationWithAttributes setPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #97                 // Method setPriority:(I)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.OperationWithAttributes setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #98                 // Method setId:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Increment;
       5: areturn

  public org.apache.hadoop.hbase.client.OperationWithAttributes setAttribute(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #99                 // Method setAttribute:(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/client/Increment;
       6: areturn

  public org.apache.hadoop.hbase.client.Attributes setAttribute(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #99                 // Method setAttribute:(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/client/Increment;
       6: areturn

  static {};
    Code:
       0: getstatic     #100                // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       3: getstatic     #101                // Field org/apache/hadoop/hbase/util/ClassSize.TIMERANGE:I
       6: iadd
       7: putstatic     #75                 // Field HEAP_OVERHEAD:I
      10: return
}
