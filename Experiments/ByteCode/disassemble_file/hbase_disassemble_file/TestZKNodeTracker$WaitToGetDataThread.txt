Compiled from "TestZKNodeTracker.java"
public class org.apache.hadoop.hbase.zookeeper.TestZKNodeTracker$WaitToGetDataThread extends java.lang.Thread {
  org.apache.hadoop.hbase.zookeeper.TestZKNodeTracker$TestTracker tracker;

  boolean hasData;

  public org.apache.hadoop.hbase.zookeeper.TestZKNodeTracker$WaitToGetDataThread(org.apache.hadoop.hbase.zookeeper.ZKWatcher, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker
       8: dup
       9: aload_1
      10: aload_2
      11: aconst_null
      12: invokespecial #3                  // Method org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker."<init>":(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
      15: putfield      #4                  // Field tracker:Lorg/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker;
      18: aload_0
      19: getfield      #4                  // Field tracker:Lorg/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker;
      22: invokevirtual #5                  // Method org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker.start:()V
      25: aload_1
      26: aload_0
      27: getfield      #4                  // Field tracker:Lorg/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker;
      30: invokevirtual #6                  // Method org/apache/hadoop/hbase/zookeeper/ZKWatcher.registerListener:(Lorg/apache/hadoop/hbase/zookeeper/ZKListener;)V
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field hasData:Z
      38: return

  public org.apache.hadoop.hbase.zookeeper.TestZKNodeTracker$WaitToGetDataThread(org.apache.hadoop.hbase.zookeeper.ZKWatcher, java.lang.String, org.apache.hadoop.hbase.zookeeper.TestZKNodeTracker$TestTracker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #4                  // Field tracker:Lorg/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker;
       9: aload_0
      10: iconst_0
      11: putfield      #7                  // Field hasData:Z
      14: return

  public void run();
    Code:
       0: invokestatic  #8                  // Method org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker.access$100:()Lorg/slf4j/Logger;
       3: ldc           #9                  // String Waiting for data to be available in WaitToGetDataThread
       5: invokeinterface #10,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #4                  // Field tracker:Lorg/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker;
      14: invokevirtual #11                 // Method org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker$TestTracker.blockUntilAvailable:()[B
      17: pop
      18: goto          26
      21: astore_1
      22: aload_1
      23: invokevirtual #13                 // Method java/lang/InterruptedException.printStackTrace:()V
      26: invokestatic  #8                  // Method org/apache/hadoop/hbase/zookeeper/TestZKNodeTracker.access$100:()Lorg/slf4j/Logger;
      29: ldc           #14                 // String Data now available in tracker from WaitToGetDataThread
      31: invokeinterface #10,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      36: aload_0
      37: iconst_1
      38: putfield      #7                  // Field hasData:Z
      41: return
    Exception table:
       from    to  target type
          10    18    21   Class java/lang/InterruptedException
}
