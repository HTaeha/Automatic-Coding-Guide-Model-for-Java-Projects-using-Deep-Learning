Compiled from "PressureAwareFlushThroughputController.java"
public class org.apache.hadoop.hbase.regionserver.throttle.PressureAwareFlushThroughputController extends org.apache.hadoop.hbase.regionserver.throttle.PressureAwareThroughputController {
  public static final java.lang.String HBASE_HSTORE_FLUSH_MAX_THROUGHPUT_UPPER_BOUND;

  public static final java.lang.String HBASE_HSTORE_FLUSH_MAX_THROUGHPUT_LOWER_BOUND;

  public static final java.lang.String HBASE_HSTORE_FLUSH_THROUGHPUT_TUNE_PERIOD;

  public static final java.lang.String HBASE_HSTORE_FLUSH_THROUGHPUT_CONTROL_CHECK_INTERVAL;

  public org.apache.hadoop.hbase.regionserver.throttle.PressureAwareFlushThroughputController();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/hbase/regionserver/throttle/PressureAwareThroughputController."<init>":()V
       4: return

  public void setup(org.apache.hadoop.hbase.regionserver.RegionServerServices);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod org/apache/hadoop/hbase/regionserver/RegionServerServices.getChoreService:()Lorg/apache/hadoop/hbase/ChoreService;
       6: new           #4                  // class org/apache/hadoop/hbase/regionserver/throttle/PressureAwareFlushThroughputController$1
       9: dup
      10: aload_0
      11: ldc           #5                  // String FlushThroughputTuner
      13: aload_0
      14: aload_0
      15: getfield      #6                  // Field tuningPeriod:I
      18: aload_0
      19: getfield      #6                  // Field tuningPeriod:I
      22: i2l
      23: aload_1
      24: invokespecial #7                  // Method org/apache/hadoop/hbase/regionserver/throttle/PressureAwareFlushThroughputController$1."<init>":(Lorg/apache/hadoop/hbase/regionserver/throttle/PressureAwareFlushThroughputController;Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;IJLorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
      27: invokevirtual #8                  // Method org/apache/hadoop/hbase/ChoreService.scheduleChore:(Lorg/apache/hadoop/hbase/ScheduledChore;)Z
      30: pop
      31: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method org/apache/hadoop/hbase/regionserver/throttle/PressureAwareThroughputController.setConf:(Lorg/apache/hadoop/conf/Configuration;)V
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aload_1
      12: ldc           #28                 // String hbase.hstore.flush.throughput.upper.bound
      14: ldc2_w        #29                 // long 209715200l
      17: invokevirtual #31                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      20: putfield      #13                 // Field maxThroughputUpperBound:J
      23: aload_0
      24: aload_1
      25: ldc           #32                 // String hbase.hstore.flush.throughput.lower.bound
      27: ldc2_w        #33                 // long 104857600l
      30: invokevirtual #31                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      33: putfield      #12                 // Field maxThroughputLowerBound:J
      36: aload_0
      37: aload_1
      38: invokestatic  #35                 // Method org/apache/hadoop/hbase/regionserver/compactions/OffPeakHours.getInstance:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/compactions/OffPeakHours;
      41: putfield      #36                 // Field offPeakHours:Lorg/apache/hadoop/hbase/regionserver/compactions/OffPeakHours;
      44: aload_0
      45: aload_1
      46: ldc           #37                 // String hbase.hstore.flush.throughput.control.check.interval
      48: ldc2_w        #38                 // long 10485760l
      51: invokevirtual #31                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      54: putfield      #40                 // Field controlPerSize:J
      57: aload_0
      58: aload_0
      59: getfield      #12                 // Field maxThroughputLowerBound:J
      62: l2d
      63: invokevirtual #25                 // Method setMaxThroughput:(D)V
      66: aload_0
      67: aload_0
      68: invokevirtual #41                 // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      71: ldc           #42                 // String hbase.hstore.flush.throughput.tune.period
      73: sipush        20000
      76: invokevirtual #43                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      79: putfield      #6                  // Field tuningPeriod:I
      82: getstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
      85: new           #16                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #44                 // String Flush throughput configurations, upper bound:
      94: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: aload_0
      99: getfield      #13                 // Field maxThroughputUpperBound:J
     102: l2d
     103: invokevirtual #22                 // Method throughputDesc:(D)Ljava/lang/String;
     106: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #45                 // String , lower bound
     111: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: aload_0
     116: getfield      #12                 // Field maxThroughputLowerBound:J
     119: l2d
     120: invokevirtual #22                 // Method throughputDesc:(D)Ljava/lang/String;
     123: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #46                 // String , tuning period:
     128: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #6                  // Field tuningPeriod:I
     135: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     138: ldc           #48                 // String  ms
     140: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     151: return

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #50                 // String DefaultFlushController [maxThroughput=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: aload_0
      14: invokevirtual #51                 // Method getMaxThroughput:()D
      17: invokevirtual #22                 // Method throughputDesc:(D)Ljava/lang/String;
      20: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #52                 // String , activeFlushNumber=
      25: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #53                 // Field activeOperations:Ljava/util/concurrent/ConcurrentMap;
      32: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      37: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: ldc           #55                 // String ]
      42: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  protected boolean skipControl(long, long);
    Code:
       0: iconst_0
       1: ireturn

  static void access$000(org.apache.hadoop.hbase.regionserver.throttle.PressureAwareFlushThroughputController, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #1                  // Method tune:(D)V
       5: return

  static {};
    Code:
       0: ldc           #27                 // class org/apache/hadoop/hbase/regionserver/throttle/PressureAwareFlushThroughputController
       2: invokestatic  #56                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #14                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
