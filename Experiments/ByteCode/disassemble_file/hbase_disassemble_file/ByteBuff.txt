Compiled from "ByteBuff.java"
public abstract class org.apache.hadoop.hbase.nio.ByteBuff {
  public org.apache.hadoop.hbase.nio.ByteBuff();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int position();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff position(int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff skip(int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff moveBack(int);

  public abstract int capacity();

  public abstract int limit();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff limit(int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff rewind();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff mark();

  public abstract java.nio.ByteBuffer asSubByteBuffer(int);

  public abstract void asSubByteBuffer(int, int, org.apache.hadoop.hbase.util.ObjectIntPair<java.nio.ByteBuffer>);

  public abstract int remaining();

  public abstract boolean hasRemaining();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff reset();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff slice();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff duplicate();

  public abstract byte get();

  public abstract byte get(int);

  public abstract byte getByteAfterPosition(int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff put(byte);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff put(int, byte);

  public abstract void get(byte[], int, int);

  public abstract void get(int, byte[], int, int);

  public abstract void get(byte[]);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff put(byte[], int, int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff put(byte[]);

  public abstract boolean hasArray();

  public abstract byte[] array();

  public abstract int arrayOffset();

  public abstract short getShort();

  public abstract short getShort(int);

  public abstract short getShortAfterPosition(int);

  public abstract int getInt();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff putInt(int);

  public abstract int getInt(int);

  public abstract int getIntAfterPosition(int);

  public abstract long getLong();

  public abstract org.apache.hadoop.hbase.nio.ByteBuff putLong(long);

  public abstract long getLong(int);

  public abstract long getLongAfterPosition(int);

  public byte[] toBytes();
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokevirtual #2                  // Method limit:()I
       6: invokevirtual #3                  // Method toBytes:(II)[B
       9: areturn

  public abstract byte[] toBytes(int, int);

  public abstract void get(java.nio.ByteBuffer, int, int);

  public abstract org.apache.hadoop.hbase.nio.ByteBuff put(int, org.apache.hadoop.hbase.nio.ByteBuff, int, int);

  public abstract int read(java.nio.channels.ReadableByteChannel) throws java.io.IOException;

  public static int channelRead(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
       4: ldc           #6                  // int 65536
       6: if_icmpgt     17
       9: aload_0
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      16: ireturn
      17: aload_1
      18: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:()I
      21: istore_2
      22: aload_1
      23: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      26: istore_3
      27: iconst_0
      28: istore        4
      30: aload_1
      31: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      34: ifle          108
      37: aload_1
      38: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      41: ldc           #6                  // int 65536
      43: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      46: istore        5
      48: aload_1
      49: aload_1
      50: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I
      53: iload         5
      55: iadd
      56: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: aload_1
      62: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      67: istore        4
      69: iload         4
      71: iload         5
      73: if_icmpge     85
      76: aload_1
      77: iload_2
      78: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      81: pop
      82: goto          108
      85: aload_1
      86: iload_2
      87: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      90: pop
      91: goto          105
      94: astore        6
      96: aload_1
      97: iload_2
      98: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     101: pop
     102: aload         6
     104: athrow
     105: goto          30
     108: iload_3
     109: aload_1
     110: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
     113: isub
     114: istore        5
     116: iload         5
     118: ifle          126
     121: iload         5
     123: goto          128
     126: iload         4
     128: ireturn
    Exception table:
       from    to  target type
          37    76    94   any
          94    96    94   any

  public static int readCompressedInt(org.apache.hadoop.hbase.nio.ByteBuff);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method get:()B
       4: istore_1
       5: iload_1
       6: sipush        128
       9: iand
      10: ifeq          26
      13: iload_1
      14: bipush        127
      16: iand
      17: aload_0
      18: invokestatic  #14                 // Method readCompressedInt:(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
      21: bipush        7
      23: ishl
      24: iadd
      25: ireturn
      26: iload_1
      27: bipush        127
      29: iand
      30: ireturn

  public static int compareTo(org.apache.hadoop.hbase.nio.ByteBuff, int, int, org.apache.hadoop.hbase.nio.ByteBuff, int, int);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasArray:()Z
       4: ifeq          42
       7: aload_3
       8: invokevirtual #15                 // Method hasArray:()Z
      11: ifeq          42
      14: aload_0
      15: invokevirtual #16                 // Method array:()[B
      18: aload_0
      19: invokevirtual #17                 // Method arrayOffset:()I
      22: iload_1
      23: iadd
      24: iload_2
      25: aload_3
      26: invokevirtual #16                 // Method array:()[B
      29: aload_3
      30: invokevirtual #17                 // Method arrayOffset:()I
      33: iload         4
      35: iadd
      36: iload         5
      38: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Bytes.compareTo:([BII[BII)I
      41: ireturn
      42: iload_1
      43: iload_2
      44: iadd
      45: istore        6
      47: iload         4
      49: iload         5
      51: iadd
      52: istore        7
      54: iload_1
      55: istore        8
      57: iload         4
      59: istore        9
      61: iload         8
      63: iload         6
      65: if_icmpge     121
      68: iload         9
      70: iload         7
      72: if_icmpge     121
      75: aload_0
      76: iload         8
      78: invokevirtual #19                 // Method get:(I)B
      81: sipush        255
      84: iand
      85: istore        10
      87: aload_3
      88: iload         9
      90: invokevirtual #19                 // Method get:(I)B
      93: sipush        255
      96: iand
      97: istore        11
      99: iload         10
     101: iload         11
     103: if_icmpeq     112
     106: iload         10
     108: iload         11
     110: isub
     111: ireturn
     112: iinc          8, 1
     115: iinc          9, 1
     118: goto          61
     121: iload_2
     122: iload         5
     124: isub
     125: ireturn

  public static long readLong(org.apache.hadoop.hbase.nio.ByteBuff, int);
    Code:
       0: lconst_0
       1: lstore_2
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iload_1
       8: if_icmpge     38
      11: lload_2
      12: aload_0
      13: invokevirtual #12                 // Method get:()B
      16: i2l
      17: ldc2_w        #20                 // long 255l
      20: land
      21: ldc2_w        #22                 // long 8l
      24: iload         4
      26: i2l
      27: lmul
      28: l2i
      29: lshl
      30: lor
      31: lstore_2
      32: iinc          4, 1
      35: goto          5
      38: lload_2
      39: lreturn

  public static long readVLong(org.apache.hadoop.hbase.nio.ByteBuff);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method get:()B
       4: istore_1
       5: iload_1
       6: invokestatic  #24                 // Method org/apache/hadoop/io/WritableUtils.decodeVIntSize:(B)I
       9: istore_2
      10: iload_2
      11: iconst_1
      12: if_icmpne     18
      15: iload_1
      16: i2l
      17: lreturn
      18: lconst_0
      19: lstore_3
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload_2
      26: iconst_1
      27: isub
      28: if_icmpge     58
      31: aload_0
      32: invokevirtual #12                 // Method get:()B
      35: istore        6
      37: lload_3
      38: bipush        8
      40: lshl
      41: lstore_3
      42: lload_3
      43: iload         6
      45: sipush        255
      48: iand
      49: i2l
      50: lor
      51: lstore_3
      52: iinc          5, 1
      55: goto          23
      58: iload_1
      59: invokestatic  #25                 // Method org/apache/hadoop/io/WritableUtils.isNegativeVInt:(B)Z
      62: ifeq          73
      65: lload_3
      66: ldc2_w        #26                 // long -1l
      69: lxor
      70: goto          74
      73: lload_3
      74: lreturn

  public static int unsignedBinarySearch(org.apache.hadoop.hbase.nio.ByteBuff, int, int, byte);
    Code:
       0: iload_3
       1: sipush        255
       4: iand
       5: istore        4
       7: iload_1
       8: istore        5
      10: iload_2
      11: iconst_1
      12: isub
      13: istore        6
      15: iload         5
      17: iload         6
      19: if_icmpgt     84
      22: iload         5
      24: iload         6
      26: iload         5
      28: isub
      29: iconst_1
      30: ishr
      31: iadd
      32: istore        7
      34: aload_0
      35: iload         7
      37: invokevirtual #19                 // Method get:(I)B
      40: sipush        255
      43: iand
      44: istore        8
      46: iload         8
      48: iload         4
      50: if_icmpge     62
      53: iload         7
      55: iconst_1
      56: iadd
      57: istore        5
      59: goto          81
      62: iload         8
      64: iload         4
      66: if_icmple     78
      69: iload         7
      71: iconst_1
      72: isub
      73: istore        6
      75: goto          81
      78: iload         7
      80: ireturn
      81: goto          15
      84: iload         5
      86: iconst_1
      87: iadd
      88: ineg
      89: ireturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #31                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #33                 // String [pos=
      19: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #34                 // Method position:()I
      26: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #36                 // String , lim=
      31: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #2                  // Method limit:()I
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #37                 // String , cap=
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #38                 // Method capacity:()I
      50: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #39                 // String ]
      55: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public static java.lang.String toStringBinary(org.apache.hadoop.hbase.nio.ByteBuff, int, int);
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: iload_1
       9: aload_0
      10: invokevirtual #38                 // Method capacity:()I
      13: if_icmplt     21
      16: aload_3
      17: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: areturn
      21: iload_1
      22: iload_2
      23: iadd
      24: aload_0
      25: invokevirtual #38                 // Method capacity:()I
      28: if_icmple     38
      31: aload_0
      32: invokevirtual #38                 // Method capacity:()I
      35: iload_1
      36: isub
      37: istore_2
      38: iload_1
      39: istore        4
      41: iload         4
      43: iload_1
      44: iload_2
      45: iadd
      46: if_icmpge     152
      49: aload_0
      50: iload         4
      52: invokevirtual #19                 // Method get:(I)B
      55: sipush        255
      58: iand
      59: istore        5
      61: iload         5
      63: bipush        48
      65: if_icmplt     75
      68: iload         5
      70: bipush        57
      72: if_icmple     113
      75: iload         5
      77: bipush        65
      79: if_icmplt     89
      82: iload         5
      84: bipush        90
      86: if_icmple     113
      89: iload         5
      91: bipush        97
      93: if_icmplt     103
      96: iload         5
      98: bipush        122
     100: if_icmple     113
     103: ldc           #41                 // String  `~!@#$%^&*()-_=+[]{}|;:'\",.<>/?
     105: iload         5
     107: invokevirtual #42                 // Method java/lang/String.indexOf:(I)I
     110: iflt          124
     113: aload_3
     114: iload         5
     116: i2c
     117: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: pop
     121: goto          146
     124: aload_3
     125: ldc           #44                 // String \x%02X
     127: iconst_1
     128: anewarray     #45                 // class java/lang/Object
     131: dup
     132: iconst_0
     133: iload         5
     135: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: aastore
     139: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     142: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: iinc          4, 1
     149: goto          41
     152: aload_3
     153: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: areturn
}
