Compiled from "CacheConfig.java"
public class org.apache.hadoop.hbase.io.hfile.CacheConfig {
  public static final org.apache.hadoop.hbase.io.hfile.CacheConfig DISABLED;

  public static final java.lang.String CACHE_DATA_ON_READ_KEY;

  public static final java.lang.String CACHE_BLOCKS_ON_WRITE_KEY;

  public static final java.lang.String CACHE_INDEX_BLOCKS_ON_WRITE_KEY;

  public static final java.lang.String CACHE_BLOOM_BLOCKS_ON_WRITE_KEY;

  public static final java.lang.String CACHE_DATA_BLOCKS_COMPRESSED_KEY;

  public static final java.lang.String EVICT_BLOCKS_ON_CLOSE_KEY;

  public static final java.lang.String PREFETCH_BLOCKS_ON_OPEN_KEY;

  public static final java.lang.String DROP_BEHIND_CACHE_COMPACTION_KEY;

  public static final boolean DEFAULT_CACHE_DATA_ON_READ;

  public static final boolean DEFAULT_CACHE_DATA_ON_WRITE;

  public static final boolean DEFAULT_IN_MEMORY;

  public static final boolean DEFAULT_CACHE_INDEXES_ON_WRITE;

  public static final boolean DEFAULT_CACHE_BLOOMS_ON_WRITE;

  public static final boolean DEFAULT_EVICT_ON_CLOSE;

  public static final boolean DEFAULT_CACHE_DATA_COMPRESSED;

  public static final boolean DEFAULT_PREFETCH_ON_OPEN;

  public static final boolean DROP_BEHIND_CACHE_COMPACTION_DEFAULT;

  public org.apache.hadoop.hbase.io.hfile.CacheConfig(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
       6: return

  public org.apache.hadoop.hbase.io.hfile.CacheConfig(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.io.hfile.BlockCache);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
       7: return

  public org.apache.hadoop.hbase.io.hfile.CacheConfig(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.client.ColumnFamilyDescriptor, org.apache.hadoop.hbase.io.hfile.BlockCache);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #5                  // String hbase.block.data.cacheonread
       8: iconst_1
       9: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      12: ifeq          35
      15: aload_2
      16: ifnonnull     22
      19: goto          31
      22: aload_2
      23: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isBlockCacheEnabled:()Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: putfield      #8                  // Field cacheDataOnRead:Z
      39: aload_0
      40: aload_2
      41: ifnonnull     48
      44: iconst_0
      45: goto          54
      48: aload_2
      49: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isInMemory:()Z
      54: putfield      #10                 // Field inMemory:Z
      57: aload_0
      58: aload_1
      59: ldc           #11                 // String hbase.block.data.cachecompressed
      61: iconst_0
      62: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      65: putfield      #12                 // Field cacheDataCompressed:Z
      68: aload_0
      69: aload_1
      70: ldc           #13                 // String hbase.hfile.drop.behind.compaction
      72: iconst_1
      73: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      76: putfield      #14                 // Field dropBehindCompaction:Z
      79: aload_0
      80: aload_1
      81: ldc           #15                 // String hbase.rs.cacheblocksonwrite
      83: iconst_0
      84: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      87: ifne          106
      90: aload_2
      91: ifnonnull     97
      94: goto          110
      97: aload_2
      98: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isCacheDataOnWrite:()Z
     103: ifeq          110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: putfield      #17                 // Field cacheDataOnWrite:Z
     114: aload_0
     115: aload_1
     116: ldc           #18                 // String hfile.block.index.cacheonwrite
     118: iconst_0
     119: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     122: ifne          141
     125: aload_2
     126: ifnonnull     132
     129: goto          145
     132: aload_2
     133: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isCacheIndexesOnWrite:()Z
     138: ifeq          145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: putfield      #20                 // Field cacheIndexesOnWrite:Z
     149: aload_0
     150: aload_1
     151: ldc           #21                 // String hfile.block.bloom.cacheonwrite
     153: iconst_0
     154: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     157: ifne          176
     160: aload_2
     161: ifnonnull     167
     164: goto          180
     167: aload_2
     168: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isCacheBloomsOnWrite:()Z
     173: ifeq          180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: putfield      #23                 // Field cacheBloomsOnWrite:Z
     184: aload_0
     185: aload_1
     186: ldc           #24                 // String hbase.rs.evictblocksonclose
     188: iconst_0
     189: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     192: ifne          211
     195: aload_2
     196: ifnonnull     202
     199: goto          215
     202: aload_2
     203: invokeinterface #25,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isEvictBlocksOnClose:()Z
     208: ifeq          215
     211: iconst_1
     212: goto          216
     215: iconst_0
     216: putfield      #26                 // Field evictOnClose:Z
     219: aload_0
     220: aload_1
     221: ldc           #27                 // String hbase.rs.prefetchblocksonopen
     223: iconst_0
     224: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
     227: ifne          246
     230: aload_2
     231: ifnonnull     237
     234: goto          250
     237: aload_2
     238: invokeinterface #28,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.isPrefetchBlocksOnOpen:()Z
     243: ifeq          250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: putfield      #29                 // Field prefetchOnOpen:Z
     254: aload_0
     255: aload_3
     256: putfield      #30                 // Field blockCache:Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
     259: getstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
     262: new           #32                 // class java/lang/StringBuilder
     265: dup
     266: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     269: ldc           #34                 // String Created cacheConfig:
     271: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: aload_0
     275: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     278: aload_2
     279: ifnonnull     287
     282: ldc           #37                 // String
     284: goto          306
     287: new           #32                 // class java/lang/StringBuilder
     290: dup
     291: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     294: ldc           #38                 // String  for family
     296: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: aload_2
     300: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     303: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     306: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: ldc           #40                 // String  with blockCache=
     311: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: aload_3
     315: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     318: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     321: invokeinterface #41,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     326: return

  public org.apache.hadoop.hbase.io.hfile.CacheConfig(org.apache.hadoop.hbase.io.hfile.CacheConfig);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #8                  // Field cacheDataOnRead:Z
       9: putfield      #8                  // Field cacheDataOnRead:Z
      12: aload_0
      13: aload_1
      14: getfield      #10                 // Field inMemory:Z
      17: putfield      #10                 // Field inMemory:Z
      20: aload_0
      21: aload_1
      22: getfield      #17                 // Field cacheDataOnWrite:Z
      25: putfield      #17                 // Field cacheDataOnWrite:Z
      28: aload_0
      29: aload_1
      30: getfield      #20                 // Field cacheIndexesOnWrite:Z
      33: putfield      #20                 // Field cacheIndexesOnWrite:Z
      36: aload_0
      37: aload_1
      38: getfield      #23                 // Field cacheBloomsOnWrite:Z
      41: putfield      #23                 // Field cacheBloomsOnWrite:Z
      44: aload_0
      45: aload_1
      46: getfield      #26                 // Field evictOnClose:Z
      49: putfield      #26                 // Field evictOnClose:Z
      52: aload_0
      53: aload_1
      54: getfield      #12                 // Field cacheDataCompressed:Z
      57: putfield      #12                 // Field cacheDataCompressed:Z
      60: aload_0
      61: aload_1
      62: getfield      #29                 // Field prefetchOnOpen:Z
      65: putfield      #29                 // Field prefetchOnOpen:Z
      68: aload_0
      69: aload_1
      70: getfield      #14                 // Field dropBehindCompaction:Z
      73: putfield      #14                 // Field dropBehindCompaction:Z
      76: aload_0
      77: aload_1
      78: getfield      #30                 // Field blockCache:Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
      81: putfield      #30                 // Field blockCache:Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
      84: return

  public boolean shouldCacheDataOnRead();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheDataOnRead:Z
       4: ireturn

  public boolean shouldDropBehindCompaction();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dropBehindCompaction:Z
       4: ireturn

  public boolean shouldCacheBlockOnRead(org.apache.hadoop.hbase.io.hfile.BlockType$BlockCategory);
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheDataOnRead:Z
       4: ifne          42
       7: aload_1
       8: getstatic     #42                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.INDEX:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      11: if_acmpeq     42
      14: aload_1
      15: getstatic     #43                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.BLOOM:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      18: if_acmpeq     42
      21: aload_0
      22: getfield      #29                 // Field prefetchOnOpen:Z
      25: ifeq          46
      28: aload_1
      29: getstatic     #44                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.META:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      32: if_acmpeq     46
      35: aload_1
      36: getstatic     #45                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.UNKNOWN:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      39: if_acmpeq     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean isInMemory();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inMemory:Z
       4: ireturn

  public boolean shouldCacheDataOnWrite();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cacheDataOnWrite:Z
       4: ireturn

  public void setCacheDataOnWrite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field cacheDataOnWrite:Z
       5: return

  public boolean shouldCacheIndexesOnWrite();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cacheIndexesOnWrite:Z
       4: ireturn

  public boolean shouldCacheBloomsOnWrite();
    Code:
       0: aload_0
       1: getfield      #23                 // Field cacheBloomsOnWrite:Z
       4: ireturn

  public boolean shouldEvictOnClose();
    Code:
       0: aload_0
       1: getfield      #26                 // Field evictOnClose:Z
       4: ireturn

  public void setEvictOnClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field evictOnClose:Z
       5: return

  public boolean shouldCacheDataCompressed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheDataOnRead:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #12                 // Field cacheDataCompressed:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean shouldCacheCompressed(org.apache.hadoop.hbase.io.hfile.BlockType$BlockCategory);
    Code:
       0: getstatic     #46                 // Field org/apache/hadoop/hbase/io/hfile/CacheConfig$1.$SwitchMap$org$apache$hadoop$hbase$io$hfile$BlockType$BlockCategory:[I
       3: aload_1
       4: invokevirtual #47                 // Method org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 48
          }
      28: aload_0
      29: getfield      #8                  // Field cacheDataOnRead:Z
      32: ifeq          46
      35: aload_0
      36: getfield      #12                 // Field cacheDataCompressed:Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn
      48: iconst_0
      49: ireturn

  public boolean shouldPrefetchOnOpen();
    Code:
       0: aload_0
       1: getfield      #29                 // Field prefetchOnOpen:Z
       4: ireturn

  public boolean shouldReadBlockFromCache(org.apache.hadoop.hbase.io.hfile.BlockType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheDataOnRead:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #29                 // Field prefetchOnOpen:Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #17                 // Field cacheDataOnWrite:Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: aload_1
      28: ifnonnull     33
      31: iconst_1
      32: ireturn
      33: aload_1
      34: invokevirtual #48                 // Method org/apache/hadoop/hbase/io/hfile/BlockType.getCategory:()Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      37: getstatic     #43                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.BLOOM:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      40: if_acmpeq     53
      43: aload_1
      44: invokevirtual #48                 // Method org/apache/hadoop/hbase/io/hfile/BlockType.getCategory:()Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      47: getstatic     #42                 // Field org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory.INDEX:Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      50: if_acmpne     55
      53: iconst_1
      54: ireturn
      55: iconst_0
      56: ireturn

  public boolean shouldLockOnCacheMiss(org.apache.hadoop.hbase.io.hfile.BlockType);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #48                 // Method org/apache/hadoop/hbase/io/hfile/BlockType.getCategory:()Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
      11: invokevirtual #49                 // Method shouldCacheBlockOnRead:(Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;)Z
      14: ireturn

  public java.util.Optional<org.apache.hadoop.hbase.io.hfile.BlockCache> getBlockCache();
    Code:
       0: aload_0
       1: getfield      #30                 // Field blockCache:Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
       4: invokestatic  #50                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #51                 // String cacheDataOnRead=
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #52                 // Method shouldCacheDataOnRead:()Z
      16: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: ldc           #54                 // String , cacheDataOnWrite=
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #55                 // Method shouldCacheDataOnWrite:()Z
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: ldc           #56                 // String , cacheIndexesOnWrite=
      33: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #57                 // Method shouldCacheIndexesOnWrite:()Z
      40: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #58                 // String , cacheBloomsOnWrite=
      45: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #59                 // Method shouldCacheBloomsOnWrite:()Z
      52: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #60                 // String , cacheEvictOnClose=
      57: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #61                 // Method shouldEvictOnClose:()Z
      64: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #62                 // String , cacheDataCompressed=
      69: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #63                 // Method shouldCacheDataCompressed:()Z
      76: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #64                 // String , prefetchOnOpen=
      81: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #65                 // Method shouldPrefetchOnOpen:()Z
      88: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  static {};
    Code:
       0: ldc           #4                  // class org/apache/hadoop/hbase/io/hfile/CacheConfig
       2: invokevirtual #66                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #31                 // Field LOG:Lorg/slf4j/Logger;
      11: new           #4                  // class org/apache/hadoop/hbase/io/hfile/CacheConfig
      14: dup
      15: invokespecial #68                 // Method "<init>":()V
      18: putstatic     #69                 // Field DISABLED:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      21: return
}
