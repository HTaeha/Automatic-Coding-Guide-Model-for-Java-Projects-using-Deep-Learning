Compiled from "TableName.java"
public final class org.apache.hadoop.hbase.TableName implements java.lang.Comparable<org.apache.hadoop.hbase.TableName> {
  public static final char NAMESPACE_DELIM;

  public static final java.lang.String VALID_NAMESPACE_REGEX;

  public static final java.lang.String VALID_TABLE_QUALIFIER_REGEX;

  public static final java.lang.String VALID_USER_TABLE_REGEX;

  public static final org.apache.hadoop.hbase.TableName META_TABLE_NAME;

  public static final org.apache.hadoop.hbase.TableName NAMESPACE_TABLE_NAME;

  public static final java.lang.String OLD_META_STR;

  public static final java.lang.String OLD_ROOT_STR;

  public static final java.lang.String DISALLOWED_TABLE_NAME;

  public static final org.apache.hadoop.hbase.TableName OLD_ROOT_TABLE_NAME;

  public static final org.apache.hadoop.hbase.TableName OLD_META_TABLE_NAME;

  public static boolean isMetaTableName(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
       4: invokevirtual #3                  // Method equals:(Ljava/lang/Object;)Z
       7: ireturn

  public static byte[] isLegalFullyQualifiedTableName(byte[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifgt          19
       9: new           #4                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #5                  // String Name is null or empty
      15: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: bipush        58
      22: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/primitives/Bytes.lastIndexOf:([BB)I
      25: istore_1
      26: iload_1
      27: ifge          38
      30: aload_0
      31: invokestatic  #8                  // Method isLegalTableQualifierName:([B)[B
      34: pop
      35: goto          53
      38: aload_0
      39: iconst_0
      40: iload_1
      41: invokestatic  #9                  // Method isLegalNamespaceName:([BII)V
      44: aload_0
      45: iload_1
      46: iconst_1
      47: iadd
      48: aload_0
      49: arraylength
      50: invokestatic  #10                 // Method isLegalTableQualifierName:([BII)V
      53: aload_0
      54: areturn

  public static byte[] isLegalTableQualifierName(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iconst_0
       5: invokestatic  #11                 // Method isLegalTableQualifierName:([BIIZ)V
       8: aload_0
       9: areturn

  public static byte[] isLegalTableQualifierName(byte[], boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iload_1
       5: invokestatic  #11                 // Method isLegalTableQualifierName:([BIIZ)V
       8: aload_0
       9: areturn

  public static void isLegalTableQualifierName(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokestatic  #11                 // Method isLegalTableQualifierName:([BIIZ)V
       7: return

  public static void isLegalTableQualifierName(byte[], int, int, boolean);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_1
       4: if_icmpge     26
       7: new           #4                  // class java/lang/IllegalArgumentException
      10: dup
      11: iload_3
      12: ifeq          20
      15: ldc           #12                 // String Snapshot
      17: goto          22
      20: ldc           #13                 // String Table qualifier must not be empty
      22: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: iload_1
      28: baload
      29: bipush        46
      31: if_icmpeq     42
      34: aload_0
      35: iload_1
      36: baload
      37: bipush        45
      39: if_icmpne     104
      42: new           #4                  // class java/lang/IllegalArgumentException
      45: dup
      46: new           #14                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #16                 // String Illegal first character <
      55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: iload_1
      60: baload
      61: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #19                 // String > at 0.
      66: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: iload_3
      70: ifeq          78
      73: ldc           #12                 // String Snapshot
      75: goto          80
      78: ldc           #20                 // String User-space table
      80: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #21                 // String  qualifiers can only start with 'alphanumeric characters' from any language:
      85: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: iload_1
      90: iload_2
      91: invokestatic  #22                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([BII)Ljava/lang/String;
      94: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: new           #24                 // class java/lang/String
     107: dup
     108: aload_0
     109: iload_1
     110: iload_2
     111: iload_1
     112: isub
     113: getstatic     #25                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     116: invokespecial #26                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     119: astore        4
     121: aload         4
     123: ldc           #27                 // String zookeeper
     125: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifeq          141
     131: new           #4                  // class java/lang/IllegalArgumentException
     134: dup
     135: ldc           #29                 // String Tables may not be named 'zookeeper'
     137: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: iconst_0
     142: istore        5
     144: iload         5
     146: aload         4
     148: invokevirtual #30                 // Method java/lang/String.length:()I
     151: if_icmpge     286
     154: aload         4
     156: iload         5
     158: invokevirtual #31                 // Method java/lang/String.charAt:(I)C
     161: istore        6
     163: iload         6
     165: invokestatic  #32                 // Method java/lang/Character.isAlphabetic:(I)Z
     168: ifne          280
     171: iload         6
     173: invokestatic  #33                 // Method java/lang/Character.isDigit:(C)Z
     176: ifne          280
     179: iload         6
     181: bipush        95
     183: if_icmpeq     280
     186: iload         6
     188: bipush        45
     190: if_icmpeq     280
     193: iload         6
     195: bipush        46
     197: if_icmpne     203
     200: goto          280
     203: new           #4                  // class java/lang/IllegalArgumentException
     206: dup
     207: new           #14                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #34                 // String Illegal character code:
     216: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: iload         6
     221: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     224: ldc           #35                 // String , <
     226: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: iload         6
     231: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     234: ldc           #37                 // String > at
     236: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: iload         5
     241: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     244: ldc           #38                 // String .
     246: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: iload_3
     250: ifeq          258
     253: ldc           #12                 // String Snapshot
     255: goto          260
     258: ldc           #20                 // String User-space table
     260: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: ldc           #39                 // String  qualifiers may only contain 'alphanumeric characters' and digits:
     265: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload         4
     270: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     276: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     279: athrow
     280: iinc          5, 1
     283: goto          144
     286: return

  public static void isLegalNamespaceName(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #9                  // Method isLegalNamespaceName:([BII)V
       7: return

  public static void isLegalNamespaceName(byte[], int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_1
       4: if_icmpge     17
       7: new           #4                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #40                 // String Namespace name must not be empty
      13: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #24                 // class java/lang/String
      20: dup
      21: aload_0
      22: iload_1
      23: iload_2
      24: iload_1
      25: isub
      26: getstatic     #25                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      29: invokespecial #26                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      32: astore_3
      33: aload_3
      34: ldc           #27                 // String zookeeper
      36: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          52
      42: new           #4                  // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #29                 // String Tables may not be named 'zookeeper'
      48: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iconst_0
      53: istore        4
      55: iload         4
      57: aload_3
      58: invokevirtual #30                 // Method java/lang/String.length:()I
      61: if_icmpge     151
      64: aload_3
      65: iload         4
      67: invokevirtual #31                 // Method java/lang/String.charAt:(I)C
      70: istore        5
      72: iload         5
      74: invokestatic  #32                 // Method java/lang/Character.isAlphabetic:(I)Z
      77: ifne          145
      80: iload         5
      82: invokestatic  #33                 // Method java/lang/Character.isDigit:(C)Z
      85: ifne          145
      88: iload         5
      90: bipush        95
      92: if_icmpne     98
      95: goto          145
      98: new           #4                  // class java/lang/IllegalArgumentException
     101: dup
     102: new           #14                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #41                 // String Illegal character <
     111: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: iload         5
     116: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     119: ldc           #37                 // String > at
     121: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: iload         4
     126: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #42                 // String . Namespaces may only contain 'alphanumeric characters' from any language and digits:
     131: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_3
     135: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: iinc          4, 1
     148: goto          55
     151: return

  public byte[] getName();
    Code:
       0: aload_0
       1: getfield      #43                 // Field name:[B
       4: areturn

  public java.lang.String getNameAsString();
    Code:
       0: aload_0
       1: getfield      #44                 // Field nameAsString:Ljava/lang/String;
       4: areturn

  public byte[] getNamespace();
    Code:
       0: aload_0
       1: getfield      #45                 // Field namespace:[B
       4: areturn

  public java.lang.String getNamespaceAsString();
    Code:
       0: aload_0
       1: getfield      #46                 // Field namespaceAsString:Ljava/lang/String;
       4: areturn

  public java.lang.String getNameWithNamespaceInclAsString();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getNamespaceAsString:()Ljava/lang/String;
       4: getstatic     #48                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
       7: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          42
      13: new           #14                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      20: getstatic     #48                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
      23: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        58
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #49                 // Method getNameAsString:()Ljava/lang/String;
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
      42: aload_0
      43: invokevirtual #49                 // Method getNameAsString:()Ljava/lang/String;
      46: areturn

  public byte[] getQualifier();
    Code:
       0: aload_0
       1: getfield      #50                 // Field qualifier:[B
       4: areturn

  public java.lang.String getQualifierAsString();
    Code:
       0: aload_0
       1: getfield      #51                 // Field qualifierAsString:Ljava/lang/String;
       4: areturn

  public byte[] toBytes();
    Code:
       0: aload_0
       1: getfield      #43                 // Field name:[B
       4: areturn

  public boolean isSystemTable();
    Code:
       0: aload_0
       1: getfield      #52                 // Field systemTable:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #44                 // Field nameAsString:Ljava/lang/String;
       4: areturn

  public static org.apache.hadoop.hbase.TableName valueOf(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_0
       5: invokevirtual #30                 // Method java/lang/String.length:()I
       8: iconst_1
       9: if_icmpge     16
      12: getstatic     #48                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
      15: astore_0
      16: getstatic     #71                 // Field tableCache:Ljava/util/Set;
      19: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          71
      34: aload_2
      35: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokevirtual #83                 // Method getQualifierAsString:()Ljava/lang/String;
      49: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          68
      55: aload_0
      56: aload_3
      57: invokevirtual #47                 // Method getNamespaceAsString:()Ljava/lang/String;
      60: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          68
      66: aload_3
      67: areturn
      68: goto          25
      71: aload_0
      72: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      75: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      78: aload_1
      79: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      82: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      85: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      88: areturn

  public static org.apache.hadoop.hbase.TableName valueOf(byte[]) throws java.lang.IllegalArgumentException;
    Code:
       0: getstatic     #71                 // Field tableCache:Ljava/util/Set;
       3: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          44
      18: aload_1
      19: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
      27: astore_2
      28: aload_2
      29: invokevirtual #86                 // Method getName:()[B
      32: aload_0
      33: invokestatic  #87                 // Method java/util/Arrays.equals:([B[B)Z
      36: ifeq          41
      39: aload_2
      40: areturn
      41: goto          9
      44: aload_0
      45: bipush        58
      47: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/primitives/Bytes.lastIndexOf:([BB)I
      50: istore_1
      51: iload_1
      52: ifge          69
      55: getstatic     #63                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME:[B
      58: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      61: aload_0
      62: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      65: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      68: areturn
      69: aload_0
      70: iconst_0
      71: iload_1
      72: invokestatic  #88                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      75: aload_0
      76: iload_1
      77: iconst_1
      78: iadd
      79: aload_0
      80: arraylength
      81: iload_1
      82: iconst_1
      83: iadd
      84: isub
      85: invokestatic  #88                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      88: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      91: areturn

  public static org.apache.hadoop.hbase.TableName valueOf(java.lang.String);
    Code:
       0: getstatic     #71                 // Field tableCache:Ljava/util/Set;
       3: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          44
      18: aload_1
      19: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #49                 // Method getNameAsString:()Ljava/lang/String;
      33: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_2
      40: areturn
      41: goto          9
      44: aload_0
      45: bipush        58
      47: invokevirtual #89                 // Method java/lang/String.indexOf:(I)I
      50: istore_1
      51: iload_1
      52: ifge          72
      55: getstatic     #63                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME:[B
      58: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      61: aload_0
      62: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      65: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      68: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      71: areturn
      72: aload_0
      73: iconst_0
      74: iload_1
      75: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      78: astore_2
      79: aload_0
      80: iload_1
      81: iconst_1
      82: iadd
      83: invokevirtual #91                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      86: astore_3
      87: aload_2
      88: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      91: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      94: aload_3
      95: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      98: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     101: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
     104: areturn

  public static org.apache.hadoop.hbase.TableName valueOf(byte[], byte[]);
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: arraylength
       6: iconst_1
       7: if_icmpge     14
      10: getstatic     #63                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME:[B
      13: astore_0
      14: getstatic     #71                 // Field tableCache:Ljava/util/Set;
      17: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          69
      32: aload_2
      33: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
      41: astore_3
      42: aload_3
      43: invokevirtual #75                 // Method getQualifier:()[B
      46: aload_1
      47: invokestatic  #87                 // Method java/util/Arrays.equals:([B[B)Z
      50: ifeq          66
      53: aload_3
      54: invokevirtual #76                 // Method getNamespace:()[B
      57: aload_0
      58: invokestatic  #87                 // Method java/util/Arrays.equals:([B[B)Z
      61: ifeq          66
      64: aload_3
      65: areturn
      66: goto          23
      69: aload_0
      70: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      73: aload_1
      74: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      77: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      80: areturn

  public static org.apache.hadoop.hbase.TableName valueOf(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_0
       5: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
       8: iconst_1
       9: if_icmpge     23
      12: getstatic     #63                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.DEFAULT_NAMESPACE_NAME:[B
      15: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      18: aload_1
      19: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      22: areturn
      23: aload_0
      24: aload_1
      25: invokestatic  #85                 // Method createTableNameIfNecessary:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
      28: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
      28: astore_2
      29: aload_1
      30: invokevirtual #93                 // Method java/lang/Object.hashCode:()I
      33: aload_0
      34: getfield      #69                 // Field hashCode:I
      37: if_icmpne     58
      40: aload_0
      41: getfield      #44                 // Field nameAsString:Ljava/lang/String;
      44: aload_2
      45: getfield      #44                 // Field nameAsString:Ljava/lang/String;
      48: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #69                 // Field hashCode:I
       4: ireturn

  public int compareTo(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #69                 // Field hashCode:I
      11: aload_1
      12: invokevirtual #94                 // Method hashCode:()I
      15: if_icmpge     20
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: getfield      #69                 // Field hashCode:I
      24: aload_1
      25: invokevirtual #94                 // Method hashCode:()I
      28: if_icmple     33
      31: iconst_1
      32: ireturn
      33: aload_0
      34: getfield      #44                 // Field nameAsString:Ljava/lang/String;
      37: aload_1
      38: invokevirtual #49                 // Method getNameAsString:()Ljava/lang/String;
      41: invokevirtual #95                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      44: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class org/apache/hadoop/hbase/TableName
       5: invokevirtual #96                 // Method compareTo:(Lorg/apache/hadoop/hbase/TableName;)I
       8: ireturn

  static {};
    Code:
       0: new           #97                 // class java/util/concurrent/CopyOnWriteArraySet
       3: dup
       4: invokespecial #98                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
       7: putstatic     #71                 // Field tableCache:Ljava/util/Set;
      10: getstatic     #66                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.SYSTEM_NAMESPACE_NAME_STR:Ljava/lang/String;
      13: ldc           #99                 // String meta
      15: invokestatic  #100                // Method valueOf:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      18: putstatic     #2                  // Field META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      21: getstatic     #66                 // Field org/apache/hadoop/hbase/NamespaceDescriptor.SYSTEM_NAMESPACE_NAME_STR:Ljava/lang/String;
      24: ldc           #101                // String namespace
      26: invokestatic  #100                // Method valueOf:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      29: putstatic     #102                // Field NAMESPACE_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      32: ldc           #58                 // String -ROOT-
      34: invokestatic  #103                // Method getADummyTableName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      37: putstatic     #104                // Field OLD_ROOT_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      40: ldc           #60                 // String .META.
      42: invokestatic  #103                // Method getADummyTableName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      45: putstatic     #105                // Field OLD_META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      48: return
}
