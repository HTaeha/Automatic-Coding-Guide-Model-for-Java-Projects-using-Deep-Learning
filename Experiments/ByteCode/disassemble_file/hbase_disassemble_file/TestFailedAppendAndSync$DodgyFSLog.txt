Compiled from "TestFailedAppendAndSync.java"
class org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync$DodgyFSLog extends org.apache.hadoop.hbase.regionserver.wal.FSHLog {
  volatile boolean throwSyncException;

  volatile boolean throwAppendException;

  final java.util.concurrent.atomic.AtomicLong rolls;

  final org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync this$0;

  public org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync$DodgyFSLog(org.apache.hadoop.hbase.regionserver.TestFailedAppendAndSync, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, java.lang.String, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/regionserver/TestFailedAppendAndSync;
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokespecial #2                  // Method org/apache/hadoop/hbase/regionserver/wal/FSHLog."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
      15: aload_0
      16: iconst_0
      17: putfield      #3                  // Field throwSyncException:Z
      20: aload_0
      21: iconst_0
      22: putfield      #4                  // Field throwAppendException:Z
      25: aload_0
      26: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      29: dup
      30: lconst_0
      31: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      34: putfield      #7                  // Field rolls:Ljava/util/concurrent/atomic/AtomicLong;
      37: return

  public byte[][] rollWriter(boolean) throws org.apache.hadoop.hbase.regionserver.wal.FailedLogCloseException, java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method org/apache/hadoop/hbase/regionserver/wal/FSHLog.rollWriter:(Z)[[B
       5: astore_2
       6: aload_0
       7: getfield      #7                  // Field rolls:Ljava/util/concurrent/atomic/AtomicLong;
      10: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      13: pop2
      14: aload_2
      15: areturn

  protected org.apache.hadoop.hbase.wal.WALProvider$Writer createWriterInstance(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/wal/FSHLog.createWriterInstance:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: astore_2
       6: new           #11                 // class org/apache/hadoop/hbase/regionserver/TestFailedAppendAndSync$DodgyFSLog$1
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #12                 // Method org/apache/hadoop/hbase/regionserver/TestFailedAppendAndSync$DodgyFSLog$1."<init>":(Lorg/apache/hadoop/hbase/regionserver/TestFailedAppendAndSync$DodgyFSLog;Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;)V
      15: areturn

  protected org.apache.hadoop.hbase.wal.WALProvider$WriterBase createWriterInstance(org.apache.hadoop.fs.Path) throws java.io.IOException, org.apache.hadoop.hbase.util.CommonFSUtils$StreamLacksCapabilityException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method createWriterInstance:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: areturn
}
