Compiled from "TestMasterProcedureScheduler.java"
public class org.apache.hadoop.hbase.master.procedure.TestMasterProcedureScheduler$TestTableProcedure extends org.apache.hadoop.hbase.procedure2.ProcedureTestingUtility$TestProcedure implements org.apache.hadoop.hbase.master.procedure.TableProcedureInterface {
  public org.apache.hadoop.hbase.master.procedure.TestMasterProcedureScheduler$TestTableProcedure();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/procedure2/ProcedureTestingUtility$TestProcedure."<init>":()V
       4: new           #2                  // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #3                  // String recovery should not be triggered here
      10: invokespecial #4                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow

  public org.apache.hadoop.hbase.master.procedure.TestMasterProcedureScheduler$TestTableProcedure(long, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.master.procedure.TableProcedureInterface$TableOperationType);
    Code:
       0: aload_0
       1: ldc2_w        #5                  // long -1l
       4: lload_1
       5: aload_3
       6: aload         4
       8: invokespecial #7                  // Method "<init>":(JJLorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;)V
      11: return

  public org.apache.hadoop.hbase.master.procedure.TestMasterProcedureScheduler$TestTableProcedure(long, long, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.master.procedure.TableProcedureInterface$TableOperationType);
    Code:
       0: aload_0
       1: ldc2_w        #5                  // long -1l
       4: lload_1
       5: lload_3
       6: aload         5
       8: aload         6
      10: invokespecial #8                  // Method "<init>":(JJJLorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;)V
      13: return

  public org.apache.hadoop.hbase.master.procedure.TestMasterProcedureScheduler$TestTableProcedure(long, long, long, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.master.procedure.TableProcedureInterface$TableOperationType);
    Code:
       0: aload_0
       1: lload         5
       3: lload_3
       4: lload_1
       5: aconst_null
       6: invokespecial #9                  // Method org/apache/hadoop/hbase/procedure2/ProcedureTestingUtility$TestProcedure."<init>":(JJJ[B)V
       9: aload_0
      10: aload         7
      12: putfield      #10                 // Field tableName:Lorg/apache/hadoop/hbase/TableName;
      15: aload_0
      16: aload         8
      18: putfield      #11                 // Field opType:Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
      21: return

  public org.apache.hadoop.hbase.TableName getTableName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field tableName:Lorg/apache/hadoop/hbase/TableName;
       4: areturn

  public org.apache.hadoop.hbase.master.procedure.TableProcedureInterface$TableOperationType getTableOperationType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field opType:Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
       4: areturn

  public void toStringClassDetails(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #13                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       8: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: pop
      12: aload_1
      13: ldc           #15                 // String (table=
      15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: aload_0
      21: invokevirtual #16                 // Method getTableName:()Lorg/apache/hadoop/hbase/TableName;
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: pop
      28: aload_1
      29: ldc           #18                 // String )
      31: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: return
}
