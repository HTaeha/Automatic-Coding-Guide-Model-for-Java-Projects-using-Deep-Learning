Compiled from "TestChoreService.java"
public class org.apache.hadoop.hbase.TestChoreService$ScheduledChoreSamples$CountingChore extends org.apache.hadoop.hbase.ScheduledChore {
  public org.apache.hadoop.hbase.TestChoreService$ScheduledChoreSamples$CountingChore(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/apache/hadoop/hbase/TestChoreService$ScheduledChoreSamples$SampleStopper
       5: dup
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/TestChoreService$ScheduledChoreSamples$SampleStopper."<init>":()V
       9: iload_2
      10: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;I)V
      13: return

  public org.apache.hadoop.hbase.TestChoreService$ScheduledChoreSamples$CountingChore(java.lang.String, org.apache.hadoop.hbase.Stoppable, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;IZ)V
       8: return

  public org.apache.hadoop.hbase.TestChoreService$ScheduledChoreSamples$CountingChore(java.lang.String, org.apache.hadoop.hbase.Stoppable, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #5                  // Method org/apache/hadoop/hbase/ScheduledChore."<init>":(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;I)V
       7: aload_0
       8: iconst_0
       9: putfield      #6                  // Field outputOnTicks:Z
      12: aload_0
      13: iconst_0
      14: putfield      #7                  // Field countOfChoreCalls:I
      17: aload_0
      18: iload         4
      20: putfield      #6                  // Field outputOnTicks:Z
      23: return

  protected boolean initialChore();
    Code:
       0: aload_0
       1: dup
       2: getfield      #7                  // Field countOfChoreCalls:I
       5: iconst_1
       6: iadd
       7: putfield      #7                  // Field countOfChoreCalls:I
      10: aload_0
      11: getfield      #6                  // Field outputOnTicks:Z
      14: ifeq          21
      17: aload_0
      18: invokespecial #8                  // Method outputTickCount:()V
      21: iconst_1
      22: ireturn

  protected void chore();
    Code:
       0: aload_0
       1: dup
       2: getfield      #7                  // Field countOfChoreCalls:I
       5: iconst_1
       6: iadd
       7: putfield      #7                  // Field countOfChoreCalls:I
      10: aload_0
      11: getfield      #6                  // Field outputOnTicks:Z
      14: ifeq          21
      17: aload_0
      18: invokespecial #8                  // Method outputTickCount:()V
      21: return

  public int getCountOfChoreCalls();
    Code:
       0: aload_0
       1: getfield      #7                  // Field countOfChoreCalls:I
       4: ireturn

  public boolean isOutputtingOnTicks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field outputOnTicks:Z
       4: ireturn

  public void setOutputOnTicks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field outputOnTicks:Z
       5: return
}
