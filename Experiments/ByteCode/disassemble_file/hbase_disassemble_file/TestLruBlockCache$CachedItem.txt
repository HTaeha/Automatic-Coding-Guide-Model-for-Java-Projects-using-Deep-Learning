Compiled from "TestLruBlockCache.java"
class org.apache.hadoop.hbase.io.hfile.TestLruBlockCache$CachedItem implements org.apache.hadoop.hbase.io.hfile.Cacheable {
  org.apache.hadoop.hbase.io.hfile.BlockCacheKey cacheKey;

  int size;

  org.apache.hadoop.hbase.io.hfile.TestLruBlockCache$CachedItem(java.lang.String, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/hbase/io/hfile/BlockCacheKey
       8: dup
       9: aload_1
      10: iload_3
      11: i2l
      12: invokespecial #3                  // Method org/apache/hadoop/hbase/io/hfile/BlockCacheKey."<init>":(Ljava/lang/String;J)V
      15: putfield      #4                  // Field cacheKey:Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
      18: aload_0
      19: iload_2
      20: putfield      #5                  // Field size:I
      23: return

  org.apache.hadoop.hbase.io.hfile.TestLruBlockCache$CachedItem(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/hadoop/hbase/io/hfile/BlockCacheKey
       8: dup
       9: aload_1
      10: lconst_0
      11: invokespecial #3                  // Method org/apache/hadoop/hbase/io/hfile/BlockCacheKey."<init>":(Ljava/lang/String;J)V
      14: putfield      #4                  // Field cacheKey:Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
      17: aload_0
      18: iload_2
      19: putfield      #5                  // Field size:I
      22: return

  public long heapSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
       7: i2l
       8: lreturn

  public long cacheBlockHeapSize();
    Code:
       0: getstatic     #7                  // Field org/apache/hadoop/hbase/io/hfile/LruCachedBlock.PER_BLOCK_OVERHEAD:J
       3: aload_0
       4: getfield      #4                  // Field cacheKey:Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
       7: invokevirtual #8                  // Method org/apache/hadoop/hbase/io/hfile/BlockCacheKey.heapSize:()J
      10: invokestatic  #9                  // Method org/apache/hadoop/hbase/util/ClassSize.align:(J)J
      13: ladd
      14: aload_0
      15: getfield      #5                  // Field size:I
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      21: i2l
      22: ladd
      23: lreturn

  public int getSerializedLength();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hbase.io.hfile.CacheableDeserializer<org.apache.hadoop.hbase.io.hfile.Cacheable> getDeserializer();
    Code:
       0: aconst_null
       1: areturn

  public void serialize(java.nio.ByteBuffer, boolean);
    Code:
       0: return

  public org.apache.hadoop.hbase.io.hfile.BlockType getBlockType();
    Code:
       0: getstatic     #10                 // Field org/apache/hadoop/hbase/io/hfile/BlockType.DATA:Lorg/apache/hadoop/hbase/io/hfile/BlockType;
       3: areturn

  public org.apache.hadoop.hbase.io.hfile.Cacheable$MemoryType getMemoryType();
    Code:
       0: getstatic     #11                 // Field org/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType.EXCLUSIVE:Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
       3: areturn
}
