Compiled from "WALEdit.java"
public class org.apache.hadoop.hbase.wal.WALEdit implements org.apache.hadoop.hbase.io.HeapSize {
  public static final byte[] METAFAMILY;

  public static final byte[] METAROW;

  public static final byte[] COMPACTION;

  public static final byte[] FLUSH;

  public static final byte[] REGION_EVENT;

  public static final byte[] BULK_LOAD;

  public org.apache.hadoop.hbase.wal.WALEdit();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.apache.hadoop.hbase.wal.WALEdit(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokespecial #2                  // Method "<init>":(IZ)V
       6: return

  public org.apache.hadoop.hbase.wal.WALEdit(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #2                  // Method "<init>":(IZ)V
       6: return

  public org.apache.hadoop.hbase.wal.WALEdit(int, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #4                  // Field cells:Ljava/util/ArrayList;
       9: aload_0
      10: aconst_null
      11: putfield      #5                  // Field families:Ljava/util/Set;
      14: aload_0
      15: iload_2
      16: putfield      #6                  // Field replay:Z
      19: aload_0
      20: new           #7                  // class java/util/ArrayList
      23: dup
      24: iload_1
      25: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      28: putfield      #4                  // Field cells:Ljava/util/ArrayList;
      31: return

  public java.util.Set<byte[]> getFamilies();
    Code:
       0: aload_0
       1: getfield      #5                  // Field families:Ljava/util/Set;
       4: areturn

  public static boolean isMetaEditFamily(byte[]);
    Code:
       0: getstatic     #12                 // Field METAFAMILY:[B
       3: aload_0
       4: invokestatic  #13                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
       7: ireturn

  public static boolean isMetaEditFamily(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field METAFAMILY:[B
       4: invokestatic  #14                 // Method org/apache/hadoop/hbase/CellUtil.matchingFamily:(Lorg/apache/hadoop/hbase/Cell;[B)Z
       7: ireturn

  public boolean isMetaEdit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       4: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          39
      17: aload_1
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #18                 // class org/apache/hadoop/hbase/Cell
      26: astore_2
      27: aload_2
      28: invokestatic  #19                 // Method isMetaEditFamily:(Lorg/apache/hadoop/hbase/Cell;)Z
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: goto          8
      39: iconst_1
      40: ireturn

  public boolean isReplay();
    Code:
       0: aload_0
       1: getfield      #6                  // Field replay:Z
       4: ireturn

  public org.apache.hadoop.hbase.wal.WALEdit add(org.apache.hadoop.hbase.Cell, byte[]);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method getOrCreateFamilies:()Ljava/util/Set;
       4: aload_2
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokespecial #22                 // Method addCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/wal/WALEdit;
      16: areturn

  public org.apache.hadoop.hbase.wal.WALEdit add(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #23                 // Method org/apache/hadoop/hbase/CellUtil.cloneFamily:(Lorg/apache/hadoop/hbase/Cell;)[B
       6: invokevirtual #24                 // Method add:(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       4: invokevirtual #25                 // Method java/util/ArrayList.isEmpty:()Z
       7: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       4: invokevirtual #26                 // Method java/util/ArrayList.size:()I
       7: ireturn

  public java.util.ArrayList<org.apache.hadoop.hbase.Cell> getCells();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       4: areturn

  public void setCells(java.util.ArrayList<org.apache.hadoop.hbase.Cell>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field cells:Ljava/util/ArrayList;
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field families:Ljava/util/Set;
      10: return

  public int readFromCells(org.apache.hadoop.hbase.codec.Codec$Decoder, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       4: invokevirtual #27                 // Method java/util/ArrayList.clear:()V
       7: aload_0
       8: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      11: iload_2
      12: invokevirtual #28                 // Method java/util/ArrayList.ensureCapacity:(I)V
      15: aload_0
      16: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      19: invokevirtual #26                 // Method java/util/ArrayList.size:()I
      22: iload_2
      23: if_icmpge     52
      26: aload_1
      27: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/hbase/codec/Codec$Decoder.advance:()Z
      32: ifeq          52
      35: aload_0
      36: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      39: aload_1
      40: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/hbase/codec/Codec$Decoder.current:()Lorg/apache/hadoop/hbase/Cell;
      45: invokevirtual #31                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      48: pop
      49: goto          15
      52: aload_0
      53: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      56: invokevirtual #26                 // Method java/util/ArrayList.size:()I
      59: ireturn

  public long heapSize();
    Code:
       0: getstatic     #32                 // Field org/apache/hadoop/hbase/util/ClassSize.ARRAYLIST:I
       3: i2l
       4: lstore_1
       5: aload_0
       6: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       9: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          46
      22: aload_3
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #18                 // class org/apache/hadoop/hbase/Cell
      31: astore        4
      33: lload_1
      34: aload         4
      36: invokeinterface #33,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.heapSize:()J
      41: ladd
      42: lstore_1
      43: goto          13
      46: lload_1
      47: lreturn

  public long estimatedSerializedSizeOf();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #4                  // Field cells:Ljava/util/ArrayList;
       6: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #18                 // class org/apache/hadoop/hbase/Cell
      28: astore        4
      30: lload_1
      31: aload         4
      33: invokestatic  #34                 // Method org/apache/hadoop/hbase/PrivateCellUtil.estimatedSerializedSizeOf:(Lorg/apache/hadoop/hbase/Cell;)I
      36: i2l
      37: ladd
      38: lstore_1
      39: goto          10
      42: lload_1
      43: lreturn

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #35                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #37                 // String [#edits:
      18: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      25: invokevirtual #26                 // Method java/util/ArrayList.size:()I
      28: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #40                 // String  = <
      33: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_0
      44: getfield      #4                  // Field cells:Ljava/util/ArrayList;
      47: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      50: astore_2
      51: aload_2
      52: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          86
      60: aload_2
      61: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #18                 // class org/apache/hadoop/hbase/Cell
      69: astore_3
      70: aload_1
      71: aload_3
      72: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: ldc           #43                 // String ;
      79: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: goto          51
      86: aload_1
      87: ldc           #44                 // String >]
      89: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  public static org.apache.hadoop.hbase.wal.WALEdit createFlushWALEdit(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$FlushDescriptor);
    Code:
       0: new           #45                 // class org/apache/hadoop/hbase/KeyValue
       3: dup
       4: aload_0
       5: invokestatic  #46                 // Method getRowForRegion:(Lorg/apache/hadoop/hbase/client/RegionInfo;)[B
       8: getstatic     #12                 // Field METAFAMILY:[B
      11: getstatic     #47                 // Field FLUSH:[B
      14: invokestatic  #48                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      17: aload_1
      18: invokevirtual #49                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor.toByteArray:()[B
      21: invokespecial #50                 // Method org/apache/hadoop/hbase/KeyValue."<init>":([B[B[BJ[B)V
      24: astore_2
      25: new           #51                 // class org/apache/hadoop/hbase/wal/WALEdit
      28: dup
      29: invokespecial #52                 // Method "<init>":()V
      32: aload_2
      33: getstatic     #12                 // Field METAFAMILY:[B
      36: invokevirtual #24                 // Method add:(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
      39: areturn

  public static org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$FlushDescriptor getFlushDescriptor(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #12                 // Field METAFAMILY:[B
       4: getstatic     #47                 // Field FLUSH:[B
       7: invokestatic  #53                 // Method org/apache/hadoop/hbase/CellUtil.matchingColumn:(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
      10: ifeq          21
      13: aload_0
      14: invokestatic  #54                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
      17: invokestatic  #55                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;
      20: areturn
      21: aconst_null
      22: areturn

  public static org.apache.hadoop.hbase.wal.WALEdit createRegionEventWALEdit(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$RegionEventDescriptor);
    Code:
       0: new           #45                 // class org/apache/hadoop/hbase/KeyValue
       3: dup
       4: aload_0
       5: invokestatic  #46                 // Method getRowForRegion:(Lorg/apache/hadoop/hbase/client/RegionInfo;)[B
       8: getstatic     #12                 // Field METAFAMILY:[B
      11: getstatic     #56                 // Field REGION_EVENT:[B
      14: invokestatic  #48                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      17: aload_1
      18: invokevirtual #57                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor.toByteArray:()[B
      21: invokespecial #50                 // Method org/apache/hadoop/hbase/KeyValue."<init>":([B[B[BJ[B)V
      24: astore_2
      25: new           #51                 // class org/apache/hadoop/hbase/wal/WALEdit
      28: dup
      29: invokespecial #52                 // Method "<init>":()V
      32: aload_2
      33: getstatic     #12                 // Field METAFAMILY:[B
      36: invokevirtual #24                 // Method add:(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
      39: areturn

  public static org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$RegionEventDescriptor getRegionEventDescriptor(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #12                 // Field METAFAMILY:[B
       4: getstatic     #56                 // Field REGION_EVENT:[B
       7: invokestatic  #53                 // Method org/apache/hadoop/hbase/CellUtil.matchingColumn:(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
      10: ifeq          21
      13: aload_0
      14: invokestatic  #54                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
      17: invokestatic  #58                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;
      20: areturn
      21: aconst_null
      22: areturn

  public static org.apache.hadoop.hbase.wal.WALEdit createCompaction(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$CompactionDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor.toByteArray:()[B
       4: astore_2
       5: new           #45                 // class org/apache/hadoop/hbase/KeyValue
       8: dup
       9: aload_0
      10: invokestatic  #46                 // Method getRowForRegion:(Lorg/apache/hadoop/hbase/client/RegionInfo;)[B
      13: getstatic     #12                 // Field METAFAMILY:[B
      16: getstatic     #60                 // Field COMPACTION:[B
      19: invokestatic  #48                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      22: aload_2
      23: invokespecial #50                 // Method org/apache/hadoop/hbase/KeyValue."<init>":([B[B[BJ[B)V
      26: astore_3
      27: new           #51                 // class org/apache/hadoop/hbase/wal/WALEdit
      30: dup
      31: invokespecial #52                 // Method "<init>":()V
      34: aload_3
      35: getstatic     #12                 // Field METAFAMILY:[B
      38: invokevirtual #24                 // Method add:(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
      41: areturn

  public static byte[] getRowForRegion(org.apache.hadoop.hbase.client.RegionInfo);
    Code:
       0: aload_0
       1: invokeinterface #61,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getStartKey:()[B
       6: astore_1
       7: aload_1
       8: arraylength
       9: ifne          20
      12: iconst_1
      13: newarray       byte
      15: dup
      16: iconst_0
      17: iconst_0
      18: bastore
      19: areturn
      20: aload_1
      21: areturn

  public static org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$CompactionDescriptor getCompaction(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method isCompactionMarker:(Lorg/apache/hadoop/hbase/Cell;)Z
       4: ifeq          15
       7: aload_0
       8: invokestatic  #54                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
      11: invokestatic  #63                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;
      14: areturn
      15: aconst_null
      16: areturn

  public static boolean isCompactionMarker(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: getstatic     #12                 // Field METAFAMILY:[B
       4: getstatic     #60                 // Field COMPACTION:[B
       7: invokestatic  #53                 // Method org/apache/hadoop/hbase/CellUtil.matchingColumn:(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
      10: ireturn

  public static org.apache.hadoop.hbase.wal.WALEdit createBulkLoadEvent(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$BulkLoadDescriptor);
    Code:
       0: new           #45                 // class org/apache/hadoop/hbase/KeyValue
       3: dup
       4: aload_0
       5: invokestatic  #46                 // Method getRowForRegion:(Lorg/apache/hadoop/hbase/client/RegionInfo;)[B
       8: getstatic     #12                 // Field METAFAMILY:[B
      11: getstatic     #64                 // Field BULK_LOAD:[B
      14: invokestatic  #48                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      17: aload_1
      18: invokevirtual #65                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor.toByteArray:()[B
      21: invokespecial #50                 // Method org/apache/hadoop/hbase/KeyValue."<init>":([B[B[BJ[B)V
      24: astore_2
      25: new           #51                 // class org/apache/hadoop/hbase/wal/WALEdit
      28: dup
      29: invokespecial #52                 // Method "<init>":()V
      32: aload_2
      33: getstatic     #12                 // Field METAFAMILY:[B
      36: invokevirtual #24                 // Method add:(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
      39: areturn

  public static org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$BulkLoadDescriptor getBulkLoadDescriptor(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #12                 // Field METAFAMILY:[B
       4: getstatic     #64                 // Field BULK_LOAD:[B
       7: invokestatic  #53                 // Method org/apache/hadoop/hbase/CellUtil.matchingColumn:(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
      10: ifeq          21
      13: aload_0
      14: invokestatic  #54                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
      17: invokestatic  #66                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;
      20: areturn
      21: aconst_null
      22: areturn

  public void add(java.util.Map<byte[], java.util.List<org.apache.hadoop.hbase.Cell>>);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          103
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #69                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #70,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #71                 // class java/util/List
      40: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
      45: istore        4
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload         4
      54: if_icmpge     87
      57: aload_0
      58: aload_3
      59: invokeinterface #70,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #71                 // class java/util/List
      67: iload         5
      69: invokeinterface #73,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #18                 // class org/apache/hadoop/hbase/Cell
      77: invokespecial #22                 // Method addCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/wal/WALEdit;
      80: pop
      81: iinc          5, 1
      84: goto          50
      87: aload_0
      88: aload_3
      89: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      94: checkcast     #75                 // class "[B"
      97: invokespecial #76                 // Method addFamily:([B)V
     100: goto          12
     103: return

  static {};
    Code:
       0: ldc           #77                 // String METAFAMILY
       2: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       5: putstatic     #12                 // Field METAFAMILY:[B
       8: ldc           #79                 // String METAROW
      10: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      13: putstatic     #80                 // Field METAROW:[B
      16: ldc           #81                 // String HBASE::COMPACTION
      18: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      21: putstatic     #60                 // Field COMPACTION:[B
      24: ldc           #82                 // String HBASE::FLUSH
      26: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      29: putstatic     #47                 // Field FLUSH:[B
      32: ldc           #83                 // String HBASE::REGION_EVENT
      34: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      37: putstatic     #56                 // Field REGION_EVENT:[B
      40: ldc           #84                 // String HBASE::BULK_LOAD
      42: invokestatic  #78                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      45: putstatic     #64                 // Field BULK_LOAD:[B
      48: return
}
