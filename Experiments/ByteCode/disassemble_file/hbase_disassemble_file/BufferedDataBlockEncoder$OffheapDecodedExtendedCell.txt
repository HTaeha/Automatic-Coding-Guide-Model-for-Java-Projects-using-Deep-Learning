Compiled from "BufferedDataBlockEncoder.java"
public class org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$OffheapDecodedExtendedCell extends org.apache.hadoop.hbase.ByteBufferExtendedCell {
  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$OffheapDecodedExtendedCell(java.nio.ByteBuffer, short, int, byte, int, int, long, byte, java.nio.ByteBuffer, int, int, long, java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: getstatic     #2                  // Field $assertionsDisabled:Z
       7: ifne          25
      10: aload_1
      11: invokevirtual #3                  // Method java/nio/ByteBuffer.hasArray:()Z
      14: ifne          25
      17: new           #4                  // class java/lang/AssertionError
      20: dup
      21: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: getstatic     #2                  // Field $assertionsDisabled:Z
      28: ifne          46
      31: aload_1
      32: invokevirtual #6                  // Method java/nio/ByteBuffer.arrayOffset:()I
      35: ifeq          46
      38: new           #4                  // class java/lang/AssertionError
      41: dup
      42: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
      51: aload_0
      52: iload_2
      53: putfield      #8                  // Field rowLength:S
      56: aload_0
      57: iload_3
      58: putfield      #9                  // Field familyOffset:I
      61: aload_0
      62: iload         4
      64: putfield      #10                 // Field familyLength:B
      67: aload_0
      68: iload         5
      70: putfield      #11                 // Field qualifierOffset:I
      73: aload_0
      74: iload         6
      76: putfield      #12                 // Field qualifierLength:I
      79: aload_0
      80: lload         7
      82: putfield      #13                 // Field timestamp:J
      85: aload_0
      86: iload         9
      88: putfield      #14                 // Field typeByte:B
      91: aload_0
      92: aload         10
      94: putfield      #15                 // Field valueBuffer:Ljava/nio/ByteBuffer;
      97: aload_0
      98: iload         11
     100: putfield      #16                 // Field valueOffset:I
     103: aload_0
     104: iload         12
     106: putfield      #17                 // Field valueLength:I
     109: aload_0
     110: aload         15
     112: putfield      #18                 // Field tagsBuffer:Ljava/nio/ByteBuffer;
     115: aload_0
     116: iload         16
     118: putfield      #19                 // Field tagsOffset:I
     121: aload_0
     122: iload         17
     124: putfield      #20                 // Field tagsLength:I
     127: aload_0
     128: lload         13
     130: invokevirtual #21                 // Method setSequenceId:(J)V
     133: return

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRowPosition:()I
       4: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rowLength:S
       4: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getFamilyPosition:()I
       4: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: getfield      #10                 // Field familyLength:B
       4: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getQualifierPosition:()I
       4: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qualifierLength:I
       4: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: getfield      #13                 // Field timestamp:J
       4: lreturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #14                 // Field typeByte:B
       4: ireturn

  public long getSequenceId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field seqId:J
       4: lreturn

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #17                 // Field valueLength:I
       4: ireturn

  public byte[] getTagsArray();
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method org/apache/hadoop/hbase/CellUtil.cloneTags:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: aload_0
       1: getfield      #20                 // Field tagsLength:I
       4: ireturn

  public java.nio.ByteBuffer getRowByteBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getRowPosition();
    Code:
       0: iconst_2
       1: ireturn

  public java.nio.ByteBuffer getFamilyByteBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getFamilyPosition();
    Code:
       0: aload_0
       1: getfield      #9                  // Field familyOffset:I
       4: ireturn

  public java.nio.ByteBuffer getQualifierByteBuffer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getQualifierPosition();
    Code:
       0: aload_0
       1: getfield      #11                 // Field qualifierOffset:I
       4: ireturn

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: aload_0
       1: getfield      #15                 // Field valueBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getValuePosition();
    Code:
       0: aload_0
       1: getfield      #16                 // Field valueOffset:I
       4: ireturn

  public java.nio.ByteBuffer getTagsByteBuffer();
    Code:
       0: aload_0
       1: getfield      #18                 // Field tagsBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getTagsPosition();
    Code:
       0: aload_0
       1: getfield      #19                 // Field tagsOffset:I
       4: ireturn

  public long heapSize();
    Code:
       0: getstatic     #30                 // Field FIXED_OVERHEAD:J
       3: lreturn

  public void setSequenceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #26                 // Field seqId:J
       5: return

  public int write(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #31                 // Method getSerializedSize:(Z)I
       5: istore_3
       6: aload_1
       7: aload_0
       8: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #32                 // Method java/nio/ByteBuffer.capacity:()I
      14: invokestatic  #33                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.putInt:(Ljava/io/OutputStream;I)V
      17: aload_1
      18: aload_0
      19: getfield      #17                 // Field valueLength:I
      22: invokestatic  #33                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.putInt:(Ljava/io/OutputStream;I)V
      25: aload_1
      26: aload_0
      27: getfield      #7                  // Field keyBuffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #22                 // Method java/nio/ByteBuffer.array:()[B
      33: invokevirtual #34                 // Method java/io/OutputStream.write:([B)V
      36: aload_1
      37: aload_0
      38: getfield      #15                 // Field valueBuffer:Ljava/nio/ByteBuffer;
      41: aload_0
      42: getfield      #16                 // Field valueOffset:I
      45: aload_0
      46: getfield      #17                 // Field valueLength:I
      49: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyBufferToStream:(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
      52: iload_2
      53: ifeq          108
      56: aload_0
      57: getfield      #20                 // Field tagsLength:I
      60: ifle          108
      63: aload_1
      64: sipush        255
      67: aload_0
      68: getfield      #20                 // Field tagsLength:I
      71: bipush        8
      73: ishr
      74: iand
      75: i2b
      76: invokevirtual #36                 // Method java/io/OutputStream.write:(I)V
      79: aload_1
      80: sipush        255
      83: aload_0
      84: getfield      #20                 // Field tagsLength:I
      87: iand
      88: i2b
      89: invokevirtual #36                 // Method java/io/OutputStream.write:(I)V
      92: aload_1
      93: aload_0
      94: getfield      #18                 // Field tagsBuffer:Ljava/nio/ByteBuffer;
      97: aload_0
      98: getfield      #19                 // Field tagsOffset:I
     101: aload_0
     102: getfield      #20                 // Field tagsLength:I
     105: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyBufferToStream:(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
     108: iload_3
     109: ireturn

  public int getSerializedSize(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field rowLength:S
       4: aload_0
       5: getfield      #10                 // Field familyLength:B
       8: aload_0
       9: getfield      #12                 // Field qualifierLength:I
      12: aload_0
      13: getfield      #17                 // Field valueLength:I
      16: aload_0
      17: getfield      #20                 // Field tagsLength:I
      20: iload_1
      21: invokestatic  #37                 // Method org/apache/hadoop/hbase/KeyValueUtil.length:(SBIIIZ)I
      24: ireturn

  public void setTimestamp(long) throws java.io.IOException;
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setTimestamp(byte[]) throws java.io.IOException;
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void write(java.nio.ByteBuffer, int);
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.hbase.ExtendedCell deepClone();
    Code:
       0: new           #38                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: ldc           #40                 // class org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder
       2: invokevirtual #41                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #2                  // Field $assertionsDisabled:Z
      16: getstatic     #42                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
      19: iconst_3
      20: getstatic     #43                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
      23: imul
      24: iadd
      25: bipush        16
      27: iadd
      28: bipush        28
      30: iadd
      31: iconst_2
      32: iadd
      33: iconst_2
      34: iadd
      35: iconst_3
      36: getstatic     #44                 // Field org/apache/hadoop/hbase/util/ClassSize.BYTE_BUFFER:I
      39: imul
      40: iadd
      41: invokestatic  #45                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      44: i2l
      45: putstatic     #30                 // Field FIXED_OVERHEAD:J
      48: return
}
