Compiled from "ReplicationStatusTmplImpl.java"
public class org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmplImpl extends org.jamon.AbstractTemplateImpl implements org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmpl$Intf {
  protected static org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmpl$ImplData __jamon_setOptionalArguments(org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmpl$ImplData);
    Code:
       0: aload_0
       1: areturn

  public org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmplImpl(org.jamon.TemplateManager, org.apache.hadoop.hbase.tmpl.regionserver.ReplicationStatusTmpl$ImplData);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method __jamon_setOptionalArguments:(Lorg/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData;)Lorg/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData;
       6: invokespecial #2                  // Method org/jamon/AbstractTemplateImpl."<init>":(Lorg/jamon/TemplateManager;Lorg/jamon/AbstractTemplateProxy$ImplData;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData.getRegionServer:()Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
      14: putfield      #4                  // Field regionServer:Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
      17: return

  public void renderNoFlush(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field regionServer:Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
       4: invokevirtual #5                  // Method org/apache/hadoop/hbase/regionserver/HRegionServer.getWalGroupsReplicationStatus:()Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: ifnull        54
      12: aload_2
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      18: ifle          54
      21: aload_1
      22: ldc           #7                  // String \n\n    <div class=\"tabbable\">\n        <ul class=\"nav nav-pills\">\n            <li class=\"active\"><a href=\"#tab_currentLog\" data-toggle=\"tab\">Current Log</a> </li>\n            <li class=\"\"><a href=\"#tab_replicationDelay\" data-toggle=\"tab\">Replication Delay</a></li>\n        </ul>\n        <div class=\"tab-content\" style=\"padding-bottom: 9px; border-bottom: 1px solid #ddd;\">\n            <div class=\"tab-pane active\" id=\"tab_currentLog\">\n
      24: invokevirtual #8                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #9                  // Method __jamon_innerUnit__currentLog:(Ljava/io/Writer;Ljava/util/Map;)V
      33: aload_1
      34: ldc           #10                 // String \n            </div>\n            <div class=\"tab-pane\" id=\"tab_replicationDelay\">\n
      36: invokevirtual #8                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokespecial #11                 // Method __jamon_innerUnit__replicationDelay:(Ljava/io/Writer;Ljava/util/Map;)V
      45: aload_1
      46: ldc           #12                 // String \n            </div>\n        </div>\n    </div>\n    <p> If the replication delay is UNKNOWN, that means this walGroup doesn't start replicate yet and it may get disabled.\n    If the size of log is 0, it means we are replicating current HLog, thus we can't get accurate size since it's not closed yet.</p>\n\n
      48: invokevirtual #8                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      51: goto          60
      54: aload_1
      55: ldc           #13                 // String \n    <p>No Replication Metrics for Peers</p>\n
      57: invokevirtual #8                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      60: aload_1
      61: ldc           #14                 // String \n\n
      63: invokevirtual #8                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      66: return
}
