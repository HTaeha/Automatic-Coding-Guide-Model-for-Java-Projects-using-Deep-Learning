Compiled from "CompressionState.java"
class org.apache.hadoop.hbase.io.encoding.CompressionState {
  int keyLength;

  int valueLength;

  short rowLength;

  int prevOffset;

  byte familyLength;

  int qualifierLength;

  byte type;

  org.apache.hadoop.hbase.io.encoding.CompressionState();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #3                  // Field prevOffset:I
       9: return

  boolean isFirst();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prevOffset:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  void readKey(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: aconst_null
       6: invokevirtual #4                  // Method readKey:(Ljava/nio/ByteBuffer;IIILorg/apache/hadoop/hbase/io/encoding/CompressionState;)V
       9: return

  void readKey(java.nio.ByteBuffer, int, int, int, org.apache.hadoop.hbase.io.encoding.CompressionState);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #5                  // Field keyLength:I
       5: aload_0
       6: iload_3
       7: putfield      #6                  // Field valueLength:I
      10: aload_1
      11: invokevirtual #7                  // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
      14: pop
      15: iload         4
      17: iconst_2
      18: if_icmpge     79
      21: aload_0
      22: aload_1
      23: invokevirtual #9                  // Method java/nio/ByteBuffer.getShort:()S
      26: putfield      #10                 // Field rowLength:S
      29: aload_1
      30: aload_0
      31: getfield      #10                 // Field rowLength:S
      34: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.skip:(Ljava/nio/ByteBuffer;I)V
      37: aload_0
      38: aload_1
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      42: putfield      #13                 // Field familyLength:B
      45: aload_0
      46: iload_2
      47: aload_0
      48: getfield      #10                 // Field rowLength:S
      51: isub
      52: aload_0
      53: getfield      #13                 // Field familyLength:B
      56: isub
      57: bipush        12
      59: isub
      60: putfield      #14                 // Field qualifierLength:I
      63: aload_1
      64: aload_0
      65: getfield      #13                 // Field familyLength:B
      68: aload_0
      69: getfield      #14                 // Field qualifierLength:I
      72: iadd
      73: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.skip:(Ljava/nio/ByteBuffer;I)V
      76: goto          134
      79: aload_0
      80: aload         5
      82: getfield      #10                 // Field rowLength:S
      85: putfield      #10                 // Field rowLength:S
      88: aload_0
      89: aload         5
      91: getfield      #13                 // Field familyLength:B
      94: putfield      #13                 // Field familyLength:B
      97: aload_0
      98: aload         5
     100: getfield      #14                 // Field qualifierLength:I
     103: iload_2
     104: iadd
     105: aload         5
     107: getfield      #5                  // Field keyLength:I
     110: isub
     111: putfield      #14                 // Field qualifierLength:I
     114: aload_1
     115: iconst_3
     116: aload_0
     117: getfield      #10                 // Field rowLength:S
     120: iadd
     121: aload_0
     122: getfield      #13                 // Field familyLength:B
     125: iadd
     126: aload_0
     127: getfield      #14                 // Field qualifierLength:I
     130: iadd
     131: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.skip:(Ljava/nio/ByteBuffer;I)V
     134: aload_0
     135: aload_1
     136: invokevirtual #15                 // Method readTimestamp:(Ljava/nio/ByteBuffer;)V
     139: aload_0
     140: aload_1
     141: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
     144: putfield      #16                 // Field type:B
     147: aload_1
     148: invokevirtual #17                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     151: pop
     152: return

  protected void readTimestamp(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: bipush        8
       3: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.skip:(Ljava/nio/ByteBuffer;I)V
       6: return

  void copyFrom(org.apache.hadoop.hbase.io.encoding.CompressionState);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field keyLength:I
       5: putfield      #5                  // Field keyLength:I
       8: aload_0
       9: aload_1
      10: getfield      #6                  // Field valueLength:I
      13: putfield      #6                  // Field valueLength:I
      16: aload_0
      17: aload_1
      18: getfield      #10                 // Field rowLength:S
      21: putfield      #10                 // Field rowLength:S
      24: aload_0
      25: aload_1
      26: getfield      #3                  // Field prevOffset:I
      29: putfield      #3                  // Field prevOffset:I
      32: aload_0
      33: aload_1
      34: getfield      #13                 // Field familyLength:B
      37: putfield      #13                 // Field familyLength:B
      40: aload_0
      41: aload_1
      42: getfield      #14                 // Field qualifierLength:I
      45: putfield      #14                 // Field qualifierLength:I
      48: aload_0
      49: aload_1
      50: getfield      #16                 // Field type:B
      53: putfield      #16                 // Field type:B
      56: return
}
