Compiled from "HBaseSaslRpcServer.java"
public class org.apache.hadoop.hbase.security.HBaseSaslRpcServer {
  public org.apache.hadoop.hbase.security.HBaseSaslRpcServer(org.apache.hadoop.hbase.security.AuthMethod, java.util.Map<java.lang.String, java.lang.String>, org.apache.hadoop.security.token.SecretManager<org.apache.hadoop.security.token.TokenIdentifier>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: getstatic     #4                  // Field org/apache/hadoop/hbase/security/HBaseSaslRpcServer$2.$SwitchMap$org$apache$hadoop$hbase$security$AuthMethod:[I
       7: aload_1
       8: invokevirtual #5                  // Method org/apache/hadoop/hbase/security/AuthMethod.ordinal:()I
      11: iaload
      12: lookupswitch  { // 2
                     1: 40
                     2: 83
               default: 214
          }
      40: aload_3
      41: ifnonnull     54
      44: new           #6                  // class org/apache/hadoop/hbase/security/AccessDeniedException
      47: dup
      48: ldc           #7                  // String Server is not configured to do DIGEST authentication.
      50: invokespecial #8                  // Method org/apache/hadoop/hbase/security/AccessDeniedException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getstatic     #9                  // Field org/apache/hadoop/hbase/security/AuthMethod.DIGEST:Lorg/apache/hadoop/hbase/security/AuthMethod;
      58: invokevirtual #10                 // Method org/apache/hadoop/hbase/security/AuthMethod.getMechanismName:()Ljava/lang/String;
      61: aconst_null
      62: ldc           #12                 // String default
      64: aload_2
      65: new           #13                 // class org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslDigestCallbackHandler
      68: dup
      69: aload_0
      70: aload_3
      71: invokespecial #14                 // Method org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslDigestCallbackHandler."<init>":(Lorg/apache/hadoop/hbase/security/HBaseSaslRpcServer;Lorg/apache/hadoop/security/token/SecretManager;)V
      74: invokestatic  #15                 // Method javax/security/sasl/Sasl.createSaslServer:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
      77: putfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
      80: goto          241
      83: invokestatic  #17                 // Method org/apache/hadoop/security/UserGroupInformation.getCurrentUser:()Lorg/apache/hadoop/security/UserGroupInformation;
      86: astore        4
      88: aload         4
      90: invokevirtual #18                 // Method org/apache/hadoop/security/UserGroupInformation.getUserName:()Ljava/lang/String;
      93: astore        5
      95: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      98: invokeinterface #19,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     103: ifeq          134
     106: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     109: new           #20                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #22                 // String Kerberos principal name is
     118: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         5
     123: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     134: aload         5
     136: invokestatic  #26                 // Method org/apache/hadoop/hbase/security/SaslUtil.splitKerberosName:(Ljava/lang/String;)[Ljava/lang/String;
     139: astore        6
     141: aload         6
     143: arraylength
     144: iconst_3
     145: if_icmpeq     176
     148: new           #6                  // class org/apache/hadoop/hbase/security/AccessDeniedException
     151: dup
     152: new           #20                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #27                 // String Kerberos principal name does NOT have the expected hostname part:
     161: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload         5
     166: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokespecial #8                  // Method org/apache/hadoop/hbase/security/AccessDeniedException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: aload_0
     177: aload         4
     179: new           #28                 // class org/apache/hadoop/hbase/security/HBaseSaslRpcServer$1
     182: dup
     183: aload_0
     184: aload         6
     186: aload_2
     187: invokespecial #29                 // Method org/apache/hadoop/hbase/security/HBaseSaslRpcServer$1."<init>":(Lorg/apache/hadoop/hbase/security/HBaseSaslRpcServer;[Ljava/lang/String;Ljava/util/Map;)V
     190: invokevirtual #30                 // Method org/apache/hadoop/security/UserGroupInformation.doAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     193: checkcast     #31                 // class javax/security/sasl/SaslServer
     196: putfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
     199: goto          241
     202: astore        7
     204: new           #33                 // class java/lang/AssertionError
     207: dup
     208: aload         7
     210: invokespecial #34                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     213: athrow
     214: new           #35                 // class java/io/IOException
     217: dup
     218: new           #20                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #36                 // String Unknown authentication method
     227: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_1
     231: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     234: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     240: athrow
     241: return
    Exception table:
       from    to  target type
         176   199   202   Class java/lang/InterruptedException

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: invokeinterface #39,  1           // InterfaceMethod javax/security/sasl/SaslServer.isComplete:()Z
       9: ireturn

  public byte[] evaluateResponse(byte[]) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod javax/security/sasl/SaslServer.evaluateResponse:([B)[B
      10: areturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: invokestatic  #41                 // Method org/apache/hadoop/hbase/security/SaslUtil.safeDispose:(Ljavax/security/sasl/SaslServer;)V
       7: return

  public org.apache.hadoop.security.UserGroupInformation getAttemptingUser();
    Code:
       0: aload_0
       1: getfield      #2                  // Field attemptingUser:Lorg/apache/hadoop/security/UserGroupInformation;
       4: areturn

  public byte[] wrap(byte[], int, int) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #42,  4           // InterfaceMethod javax/security/sasl/SaslServer.wrap:([BII)[B
      12: areturn

  public byte[] unwrap(byte[], int, int) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #43,  4           // InterfaceMethod javax/security/sasl/SaslServer.unwrap:([BII)[B
      12: areturn

  public java.lang.String getNegotiatedQop();
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: ldc           #45                 // String javax.security.sasl.qop
       6: invokeinterface #46,  2           // InterfaceMethod javax/security/sasl/SaslServer.getNegotiatedProperty:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #47                 // class java/lang/String
      14: areturn

  public java.lang.String getAuthorizationID();
    Code:
       0: aload_0
       1: getfield      #16                 // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: invokeinterface #48,  1           // InterfaceMethod javax/security/sasl/SaslServer.getAuthorizationID:()Ljava/lang/String;
       9: areturn

  public static <T extends org.apache.hadoop.security.token.TokenIdentifier> T getIdentifier(java.lang.String, org.apache.hadoop.security.token.SecretManager<T>) throws org.apache.hadoop.security.token.SecretManager$InvalidToken;
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method org/apache/hadoop/hbase/security/SaslUtil.decodeIdentifier:(Ljava/lang/String;)[B
       4: astore_2
       5: aload_1
       6: invokevirtual #50                 // Method org/apache/hadoop/security/token/SecretManager.createIdentifier:()Lorg/apache/hadoop/security/token/TokenIdentifier;
       9: astore_3
      10: aload_3
      11: new           #51                 // class java/io/DataInputStream
      14: dup
      15: new           #52                 // class java/io/ByteArrayInputStream
      18: dup
      19: aload_2
      20: invokespecial #53                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      23: invokespecial #54                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      26: invokevirtual #55                 // Method org/apache/hadoop/security/token/TokenIdentifier.readFields:(Ljava/io/DataInput;)V
      29: goto          52
      32: astore        4
      34: new           #56                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      37: dup
      38: ldc           #57                 // String Can't de-serialize tokenIdentifier
      40: invokespecial #58                 // Method org/apache/hadoop/security/token/SecretManager$InvalidToken."<init>":(Ljava/lang/String;)V
      43: aload         4
      45: invokevirtual #59                 // Method org/apache/hadoop/security/token/SecretManager$InvalidToken.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      48: checkcast     #56                 // class org/apache/hadoop/security/token/SecretManager$InvalidToken
      51: athrow
      52: aload_3
      53: areturn
    Exception table:
       from    to  target type
          10    29    32   Class java/io/IOException

  static org.apache.hadoop.security.UserGroupInformation access$102(org.apache.hadoop.hbase.security.HBaseSaslRpcServer, org.apache.hadoop.security.UserGroupInformation);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field attemptingUser:Lorg/apache/hadoop/security/UserGroupInformation;
       6: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #60                 // class org/apache/hadoop/hbase/security/HBaseSaslRpcServer
       2: invokestatic  #61                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
