Compiled from "AccessControlFilter.java"
class org.apache.hadoop.hbase.security.access.AccessControlFilter extends org.apache.hadoop.hbase.filter.FilterBase {
  org.apache.hadoop.hbase.security.access.AccessControlFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/FilterBase."<init>":()V
       4: return

  org.apache.hadoop.hbase.security.access.AccessControlFilter(org.apache.hadoop.hbase.security.access.AuthManager, org.apache.hadoop.hbase.security.User, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.security.access.AccessControlFilter$Strategy, java.util.Map<org.apache.hadoop.hbase.util.ByteRange, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/FilterBase."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
      19: aload_0
      20: aload_3
      21: invokevirtual #5                  // Method org/apache/hadoop/hbase/TableName.isSystemTable:()Z
      24: putfield      #6                  // Field isSystemTable:Z
      27: aload_0
      28: aload         4
      30: putfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
      33: aload_0
      34: aload         5
      36: putfield      #8                  // Field cfVsMaxVersions:Ljava/util/Map;
      39: aload_0
      40: new           #9                  // class org/apache/hadoop/hbase/util/SimpleMutableByteRange
      43: dup
      44: invokespecial #10                 // Method org/apache/hadoop/hbase/util/SimpleMutableByteRange."<init>":()V
      47: putfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      50: aload_0
      51: new           #9                  // class org/apache/hadoop/hbase/util/SimpleMutableByteRange
      54: dup
      55: invokespecial #10                 // Method org/apache/hadoop/hbase/util/SimpleMutableByteRange."<init>":()V
      58: putfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
      61: return

  public boolean filterRowKey(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hbase.filter.Filter$ReturnCode filterCell(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: getfield      #6                  // Field isSystemTable:Z
       4: ifeq          11
       7: getstatic     #13                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      10: areturn
      11: aload_0
      12: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      15: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getBytes:()[B
      20: ifnull        57
      23: aload_1
      24: aload_0
      25: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      28: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getBytes:()[B
      33: aload_0
      34: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      37: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getOffset:()I
      42: aload_0
      43: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      46: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getLength:()I
      51: invokestatic  #17                 // Method org/apache/hadoop/hbase/PrivateCellUtil.matchingFamily:(Lorg/apache/hadoop/hbase/Cell;[BII)Z
      54: ifne          118
      57: aload_0
      58: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      61: aload_1
      62: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyArray:()[B
      67: aload_1
      68: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyOffset:()I
      73: aload_1
      74: invokeinterface #20,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyLength:()B
      79: invokeinterface #21,  4           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.set:([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
      84: pop
      85: aload_0
      86: aload_0
      87: getfield      #8                  // Field cfVsMaxVersions:Ljava/util/Map;
      90: aload_0
      91: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
      94: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #23                 // class java/lang/Integer
     102: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
     105: putfield      #25                 // Field familyMaxVersions:I
     108: aload_0
     109: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     112: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.unset:()Lorg/apache/hadoop/hbase/util/ByteRange;
     117: pop
     118: aload_0
     119: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     122: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getBytes:()[B
     127: ifnull        164
     130: aload_1
     131: aload_0
     132: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     135: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getBytes:()[B
     140: aload_0
     141: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     144: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getOffset:()I
     149: aload_0
     150: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     153: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getLength:()I
     158: invokestatic  #27                 // Method org/apache/hadoop/hbase/PrivateCellUtil.matchingQualifier:(Lorg/apache/hadoop/hbase/Cell;[BII)Z
     161: ifne          197
     164: aload_0
     165: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
     168: aload_1
     169: invokeinterface #28,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     174: aload_1
     175: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     180: aload_1
     181: invokeinterface #30,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     186: invokeinterface #21,  4           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.set:([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
     191: pop
     192: aload_0
     193: iconst_0
     194: putfield      #31                 // Field currentVersions:I
     197: aload_0
     198: dup
     199: getfield      #31                 // Field currentVersions:I
     202: iconst_1
     203: iadd
     204: putfield      #31                 // Field currentVersions:I
     207: aload_0
     208: getfield      #31                 // Field currentVersions:I
     211: aload_0
     212: getfield      #25                 // Field familyMaxVersions:I
     215: if_icmple     222
     218: getstatic     #32                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.SKIP:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     221: areturn
     222: aload_1
     223: invokestatic  #33                 // Method org/apache/hadoop/hbase/CellUtil.cloneFamily:(Lorg/apache/hadoop/hbase/Cell;)[B
     226: astore_2
     227: aload_1
     228: invokestatic  #34                 // Method org/apache/hadoop/hbase/CellUtil.cloneQualifier:(Lorg/apache/hadoop/hbase/Cell;)[B
     231: astore_3
     232: getstatic     #35                 // Field org/apache/hadoop/hbase/security/access/AccessControlFilter$1.$SwitchMap$org$apache$hadoop$hbase$security$access$AccessControlFilter$Strategy:[I
     235: aload_0
     236: getfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
     239: invokevirtual #36                 // Method org/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy.ordinal:()I
     242: iaload
     243: lookupswitch  { // 2
                     1: 268
                     2: 295
               default: 344
          }
     268: aload_0
     269: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
     272: aload_0
     273: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
     276: aload_0
     277: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
     280: aload_2
     281: aload_3
     282: getstatic     #37                 // Field org/apache/hadoop/hbase/security/access/Permission$Action.READ:Lorg/apache/hadoop/hbase/security/access/Permission$Action;
     285: invokevirtual #38                 // Method org/apache/hadoop/hbase/security/access/AuthManager.authorizeUserTable:(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
     288: ifeq          374
     291: getstatic     #13                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     294: areturn
     295: aload_0
     296: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
     299: aload_0
     300: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
     303: aload_0
     304: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
     307: aload_2
     308: aload_3
     309: getstatic     #37                 // Field org/apache/hadoop/hbase/security/access/Permission$Action.READ:Lorg/apache/hadoop/hbase/security/access/Permission$Action;
     312: invokevirtual #38                 // Method org/apache/hadoop/hbase/security/access/AuthManager.authorizeUserTable:(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
     315: ifne          340
     318: aload_0
     319: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
     322: aload_0
     323: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
     326: aload_0
     327: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
     330: aload_1
     331: getstatic     #37                 // Field org/apache/hadoop/hbase/security/access/Permission$Action.READ:Lorg/apache/hadoop/hbase/security/access/Permission$Action;
     334: invokevirtual #39                 // Method org/apache/hadoop/hbase/security/access/AuthManager.authorizeCell:(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
     337: ifeq          374
     340: getstatic     #13                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     343: areturn
     344: new           #40                 // class java/lang/RuntimeException
     347: dup
     348: new           #41                 // class java/lang/StringBuilder
     351: dup
     352: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     355: ldc           #43                 // String Unhandled strategy
     357: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     360: aload_0
     361: getfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
     364: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     367: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     370: invokespecial #47                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     373: athrow
     374: getstatic     #32                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.SKIP:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     377: areturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field prevFam:Lorg/apache/hadoop/hbase/util/ByteRange;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.unset:()Lorg/apache/hadoop/hbase/util/ByteRange;
       9: pop
      10: aload_0
      11: getfield      #12                 // Field prevQual:Lorg/apache/hadoop/hbase/util/ByteRange;
      14: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.unset:()Lorg/apache/hadoop/hbase/util/ByteRange;
      19: pop
      20: aload_0
      21: iconst_0
      22: putfield      #25                 // Field familyMaxVersions:I
      25: aload_0
      26: iconst_0
      27: putfield      #31                 // Field currentVersions:I
      30: return

  public byte[] toByteArray();
    Code:
       0: new           #48                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #49                 // String Serialization not supported.  Intended for server-side use only.
       6: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public static org.apache.hadoop.hbase.security.access.AccessControlFilter parseFrom(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException;
    Code:
       0: new           #48                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #49                 // String Serialization not supported.  Intended for server-side use only.
       6: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #51                 // class org/apache/hadoop/hbase/security/access/AccessControlFilter
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_1
      17: checkcast     #51                 // class org/apache/hadoop/hbase/security/access/AccessControlFilter
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
      25: aload_2
      26: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
      29: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          97
      35: aload_0
      36: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
      39: aload_2
      40: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
      43: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      46: ifeq          97
      49: aload_0
      50: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
      53: aload_2
      54: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
      57: invokevirtual #54                 // Method org/apache/hadoop/hbase/security/User.equals:(Ljava/lang/Object;)Z
      60: ifeq          97
      63: aload_0
      64: getfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
      67: aload_2
      68: getfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
      71: invokevirtual #55                 // Method org/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy.equals:(Ljava/lang/Object;)Z
      74: ifeq          97
      77: aload_0
      78: getfield      #8                  // Field cfVsMaxVersions:Ljava/util/Map;
      81: aload_2
      82: getfield      #8                  // Field cfVsMaxVersions:Ljava/util/Map;
      85: invokeinterface #56,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      90: ifeq          97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: ireturn

  public int hashCode();
    Code:
       0: iconst_5
       1: anewarray     #57                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field authManager:Lorg/apache/hadoop/hbase/security/access/AuthManager;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field table:Lorg/apache/hadoop/hbase/TableName;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #7                  // Field strategy:Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #4                  // Field user:Lorg/apache/hadoop/hbase/security/User;
      31: aastore
      32: dup
      33: iconst_4
      34: aload_0
      35: getfield      #8                  // Field cfVsMaxVersions:Ljava/util/Map;
      38: aastore
      39: invokestatic  #58                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      42: ireturn
}
