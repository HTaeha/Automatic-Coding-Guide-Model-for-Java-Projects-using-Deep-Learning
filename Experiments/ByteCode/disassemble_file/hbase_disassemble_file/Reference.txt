Compiled from "Reference.java"
public class org.apache.hadoop.hbase.io.Reference {
  public static org.apache.hadoop.hbase.io.Reference createTopReference(byte[]);
    Code:
       0: new           #1                  // class org/apache/hadoop/hbase/io/Reference
       3: dup
       4: aload_0
       5: getstatic     #2                  // Field org/apache/hadoop/hbase/io/Reference$Range.top:Lorg/apache/hadoop/hbase/io/Reference$Range;
       8: invokespecial #3                  // Method "<init>":([BLorg/apache/hadoop/hbase/io/Reference$Range;)V
      11: areturn

  public static org.apache.hadoop.hbase.io.Reference createBottomReference(byte[]);
    Code:
       0: new           #1                  // class org/apache/hadoop/hbase/io/Reference
       3: dup
       4: aload_0
       5: getstatic     #4                  // Field org/apache/hadoop/hbase/io/Reference$Range.bottom:Lorg/apache/hadoop/hbase/io/Reference$Range;
       8: invokespecial #3                  // Method "<init>":([BLorg/apache/hadoop/hbase/io/Reference$Range;)V
      11: areturn

  org.apache.hadoop.hbase.io.Reference(byte[], org.apache.hadoop.hbase.io.Reference$Range);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          20
      13: aload_1
      14: invokestatic  #6                  // Method org/apache/hadoop/hbase/KeyValueUtil.createFirstOnRow:([B)Lorg/apache/hadoop/hbase/KeyValue;
      17: invokevirtual #7                  // Method org/apache/hadoop/hbase/KeyValue.getKey:()[B
      20: putfield      #8                  // Field splitkey:[B
      23: aload_0
      24: aload_2
      25: putfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      28: return

  public org.apache.hadoop.hbase.io.Reference();
    Code:
       0: aload_0
       1: aconst_null
       2: getstatic     #4                  // Field org/apache/hadoop/hbase/io/Reference$Range.bottom:Lorg/apache/hadoop/hbase/io/Reference$Range;
       5: invokespecial #3                  // Method "<init>":([BLorg/apache/hadoop/hbase/io/Reference$Range;)V
       8: return

  public org.apache.hadoop.hbase.io.Reference$Range getFileRegion();
    Code:
       0: aload_0
       1: getfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
       4: areturn

  public byte[] getSplitKey();
    Code:
       0: aload_0
       1: getfield      #8                  // Field splitkey:[B
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public static boolean isTopFileRegion(org.apache.hadoop.hbase.io.Reference$Range);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/hadoop/hbase/io/Reference$Range.top:Lorg/apache/hadoop/hbase/io/Reference$Range;
       4: invokevirtual #16                 // Method org/apache/hadoop/hbase/io/Reference$Range.equals:(Ljava/lang/Object;)Z
       7: ireturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
       6: istore_2
       7: aload_0
       8: iload_2
       9: ifeq          18
      12: getstatic     #2                  // Field org/apache/hadoop/hbase/io/Reference$Range.top:Lorg/apache/hadoop/hbase/io/Reference$Range;
      15: goto          21
      18: getstatic     #4                  // Field org/apache/hadoop/hbase/io/Reference$Range.bottom:Lorg/apache/hadoop/hbase/io/Reference$Range;
      21: putfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      24: aload_0
      25: aload_1
      26: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Bytes.readByteArray:(Ljava/io/DataInput;)[B
      29: putfield      #8                  // Field splitkey:[B
      32: return

  public org.apache.hadoop.fs.Path write(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_0
       3: invokevirtual #19                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
       6: astore_3
       7: aload_3
       8: aload_0
       9: invokevirtual #20                 // Method toByteArray:()[B
      12: invokevirtual #21                 // Method org/apache/hadoop/fs/FSDataOutputStream.write:([B)V
      15: aload_3
      16: invokevirtual #22                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      19: goto          31
      22: astore        4
      24: aload_3
      25: invokevirtual #22                 // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      28: aload         4
      30: athrow
      31: aload_2
      32: areturn
    Exception table:
       from    to  target type
           7    15    22   any
          22    24    22   any

  public static org.apache.hadoop.hbase.io.Reference read(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
       5: astore_2
       6: aload_2
       7: invokevirtual #24                 // Method java/io/InputStream.markSupported:()Z
      10: ifeq          17
      13: aload_2
      14: goto          25
      17: new           #25                 // class java/io/BufferedInputStream
      20: dup
      21: aload_2
      22: invokespecial #26                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      25: astore_2
      26: invokestatic  #27                 // Method org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.lengthOfPBMagic:()I
      29: istore_3
      30: aload_2
      31: iload_3
      32: invokevirtual #28                 // Method java/io/InputStream.mark:(I)V
      35: iload_3
      36: newarray       byte
      38: astore        4
      40: aload_2
      41: aload         4
      43: invokevirtual #29                 // Method java/io/InputStream.read:([B)I
      46: istore        5
      48: iload         5
      50: iload_3
      51: if_icmpeq     91
      54: new           #30                 // class java/io/IOException
      57: dup
      58: new           #10                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #31                 // String read=
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload         5
      72: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc           #33                 // String , wanted=
      77: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: iload_3
      81: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #34                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload         4
      93: invokestatic  #35                 // Method org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.isPBMagicPrefix:([B)Z
      96: ifeq          115
      99: aload_2
     100: invokestatic  #36                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference.parseFrom:(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;
     103: invokestatic  #37                 // Method convert:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;)Lorg/apache/hadoop/hbase/io/Reference;
     106: astore        6
     108: aload_2
     109: invokevirtual #38                 // Method java/io/InputStream.close:()V
     112: aload         6
     114: areturn
     115: aload_2
     116: invokevirtual #39                 // Method java/io/InputStream.reset:()V
     119: new           #1                  // class org/apache/hadoop/hbase/io/Reference
     122: dup
     123: invokespecial #40                 // Method "<init>":()V
     126: astore        6
     128: new           #41                 // class java/io/DataInputStream
     131: dup
     132: aload_2
     133: invokespecial #42                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     136: astore        7
     138: aload         7
     140: astore_2
     141: aload         6
     143: aload         7
     145: invokevirtual #43                 // Method readFields:(Ljava/io/DataInput;)V
     148: aload         6
     150: astore        8
     152: aload_2
     153: invokevirtual #38                 // Method java/io/InputStream.close:()V
     156: aload         8
     158: areturn
     159: astore        9
     161: aload_2
     162: invokevirtual #38                 // Method java/io/InputStream.close:()V
     165: aload         9
     167: athrow
    Exception table:
       from    to  target type
           6   108   159   any
         115   152   159   any
         159   161   159   any

  public org.apache.hadoop.hbase.shaded.protobuf.generated.FSProtos$Reference convert();
    Code:
       0: invokestatic  #44                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #45                 // Method getFileRegion:()Lorg/apache/hadoop/hbase/io/Reference$Range;
       9: invokestatic  #46                 // Method isTopFileRegion:(Lorg/apache/hadoop/hbase/io/Reference$Range;)Z
      12: ifeq          21
      15: getstatic     #47                 // Field org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range.TOP:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range;
      18: goto          24
      21: getstatic     #48                 // Field org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range.BOTTOM:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range;
      24: invokevirtual #49                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder.setRange:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder;
      27: pop
      28: aload_1
      29: aload_0
      30: invokevirtual #50                 // Method getSplitKey:()[B
      33: invokestatic  #51                 // Method org/apache/hbase/thirdparty/com/google/protobuf/UnsafeByteOperations.unsafeWrap:([B)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      36: invokevirtual #52                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder.setSplitkey:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder;
      39: pop
      40: aload_1
      41: invokevirtual #53                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;
      44: areturn

  public static org.apache.hadoop.hbase.io.Reference convert(org.apache.hadoop.hbase.shaded.protobuf.generated.FSProtos$Reference);
    Code:
       0: new           #1                  // class org/apache/hadoop/hbase/io/Reference
       3: dup
       4: invokespecial #40                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #54                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference.getSplitkey:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      13: invokevirtual #55                 // Method org/apache/hbase/thirdparty/com/google/protobuf/ByteString.toByteArray:()[B
      16: putfield      #8                  // Field splitkey:[B
      19: aload_1
      20: aload_0
      21: invokevirtual #56                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference.getRange:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range;
      24: getstatic     #47                 // Field org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range.TOP:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference$Range;
      27: if_acmpne     36
      30: getstatic     #2                  // Field org/apache/hadoop/hbase/io/Reference$Range.top:Lorg/apache/hadoop/hbase/io/Reference$Range;
      33: goto          39
      36: getstatic     #4                  // Field org/apache/hadoop/hbase/io/Reference$Range.bottom:Lorg/apache/hadoop/hbase/io/Reference$Range;
      39: putfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      42: aload_1
      43: areturn

  byte[] toByteArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method convert:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;
       4: invokevirtual #58                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference.toByteArray:()[B
       7: invokestatic  #59                 // Method org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.prependPBMagic:([B)[B
      10: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field splitkey:[B
       4: invokestatic  #60                 // Method java/util/Arrays.hashCode:([B)I
       7: aload_0
       8: getfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      11: invokevirtual #61                 // Method org/apache/hadoop/hbase/io/Reference$Range.hashCode:()I
      14: iadd
      15: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #1                  // class org/apache/hadoop/hbase/io/Reference
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #1                  // class org/apache/hadoop/hbase/io/Reference
      26: astore_2
      27: aload_0
      28: getfield      #8                  // Field splitkey:[B
      31: ifnull        43
      34: aload_2
      35: getfield      #8                  // Field splitkey:[B
      38: ifnonnull     43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #8                  // Field splitkey:[B
      47: ifnonnull     59
      50: aload_2
      51: getfield      #8                  // Field splitkey:[B
      54: ifnull        59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: getfield      #8                  // Field splitkey:[B
      63: ifnull        82
      66: aload_0
      67: getfield      #8                  // Field splitkey:[B
      70: aload_2
      71: getfield      #8                  // Field splitkey:[B
      74: invokestatic  #62                 // Method java/util/Arrays.equals:([B[B)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: getfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      86: aload_2
      87: getfield      #9                  // Field region:Lorg/apache/hadoop/hbase/io/Reference$Range;
      90: invokevirtual #16                 // Method org/apache/hadoop/hbase/io/Reference$Range.equals:(Ljava/lang/Object;)Z
      93: ireturn
}
