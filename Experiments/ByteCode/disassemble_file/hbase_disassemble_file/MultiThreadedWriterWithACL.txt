Compiled from "MultiThreadedWriterWithACL.java"
public class org.apache.hadoop.hbase.util.MultiThreadedWriterWithACL extends org.apache.hadoop.hbase.util.MultiThreadedWriter {
  public org.apache.hadoop.hbase.util.MultiThreadedWriterWithACL(org.apache.hadoop.hbase.util.test.LoadTestDataGenerator, org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.security.User) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method org/apache/hadoop/hbase/util/MultiThreadedWriter."<init>":(Lorg/apache/hadoop/hbase/util/test/LoadTestDataGenerator;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field userOwner:Lorg/apache/hadoop/hbase/security/User;
      13: return

  public void start(long, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: invokespecial #5                  // Method org/apache/hadoop/hbase/util/MultiThreadedWriter.start:(JJI)V
       8: return

  protected void createWriterThreads(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     34
       7: new           #6                  // class org/apache/hadoop/hbase/util/MultiThreadedWriterWithACL$HBaseWriterThreadWithACL
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #7                  // Method org/apache/hadoop/hbase/util/MultiThreadedWriterWithACL$HBaseWriterThreadWithACL."<init>":(Lorg/apache/hadoop/hbase/util/MultiThreadedWriterWithACL;I)V
      16: astore_3
      17: aload_0
      18: getfield      #8                  // Field writers:Ljava/util/Set;
      21: aload_3
      22: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: iinc          2, 1
      31: goto          2
      34: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.hadoop.hbase.security.User access$100(org.apache.hadoop.hbase.util.MultiThreadedWriterWithACL);
    Code:
       0: aload_0
       1: getfield      #2                  // Field userOwner:Lorg/apache/hadoop/hbase/security/User;
       4: areturn

  static void access$200(org.apache.hadoop.hbase.util.MultiThreadedWriterWithACL, org.apache.hadoop.hbase.client.Table, org.apache.hadoop.hbase.client.Put, long, long, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: lload         5
       6: aload         7
       8: invokespecial #1                  // Method recordFailure:(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Put;JJLjava/io/IOException;)V
      11: return

  static {};
    Code:
       0: ldc           #34                 // class org/apache/hadoop/hbase/util/MultiThreadedWriterWithACL
       2: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
