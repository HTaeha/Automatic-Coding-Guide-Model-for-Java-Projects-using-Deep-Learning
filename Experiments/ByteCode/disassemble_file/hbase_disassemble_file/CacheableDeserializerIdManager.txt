Compiled from "CacheableDeserializerIdManager.java"
public class org.apache.hadoop.hbase.io.hfile.CacheableDeserializerIdManager {
  public org.apache.hadoop.hbase.io.hfile.CacheableDeserializerIdManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int registerDeserializer(org.apache.hadoop.hbase.io.hfile.CacheableDeserializer<org.apache.hadoop.hbase.io.hfile.Cacheable>);
    Code:
       0: getstatic     #2                  // Field identifier:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       6: istore_1
       7: getstatic     #4                  // Field registeredDeserializers:Ljava/util/Map;
      10: iload_1
      11: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: aload_0
      15: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: iload_1
      22: ireturn

  public static org.apache.hadoop.hbase.io.hfile.CacheableDeserializer<org.apache.hadoop.hbase.io.hfile.Cacheable> getDeserializer(int);
    Code:
       0: getstatic     #4                  // Field registeredDeserializers:Ljava/util/Map;
       3: iload_0
       4: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #8                  // class org/apache/hadoop/hbase/io/hfile/CacheableDeserializer
      15: areturn

  public static java.util.Map<java.lang.Integer, java.lang.String> save();
    Code:
       0: getstatic     #4                  // Field registeredDeserializers:Ljava/util/Map;
       3: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      13: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      18: invokedynamic #12,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      23: invokestatic  #13                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      26: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #15                 // class java/util/Map
      34: areturn

  static {};
    Code:
       0: new           #19                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #20                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #4                  // Field registeredDeserializers:Ljava/util/Map;
      10: new           #21                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_0
      15: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putstatic     #2                  // Field identifier:Ljava/util/concurrent/atomic/AtomicInteger;
      21: return
}
