Compiled from "WALKeyImpl.java"
public class org.apache.hadoop.hbase.wal.WALKeyImpl implements org.apache.hadoop.hbase.wal.WALKey {
  public static final org.apache.hadoop.hbase.wal.WALKeyImpl EMPTY_WALKEYIMPL;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl getMvcc();
    Code:
       0: aload_0
       1: getfield      #1                  // Field mvcc:Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
       4: areturn

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry getWriteEntry();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeEntry:Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
       4: areturn

  public void setWriteEntry(org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #2                  // Field writeEntry:Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
      10: ifnull        21
      13: new           #4                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field writeEntry:Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
      26: aload_0
      27: aload_1
      28: invokevirtual #6                  // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
      31: putfield      #7                  // Field sequenceId:J
      34: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aconst_null
      21: aconst_null
      22: lconst_0
      23: ldc2_w        #13                 // long 9223372036854775807l
      26: new           #15                 // class java/util/ArrayList
      29: dup
      30: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      33: lconst_0
      34: lconst_0
      35: aconst_null
      36: aconst_null
      37: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      40: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aconst_null
      21: aconst_null
      22: lconst_0
      23: ldc2_w        #13                 // long 9223372036854775807l
      26: new           #15                 // class java/util/ArrayList
      29: dup
      30: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      33: lconst_0
      34: lconst_0
      35: aconst_null
      36: aload_1
      37: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      40: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, long, java.util.UUID);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: new           #15                 // class java/util/ArrayList
      22: dup
      23: iconst_1
      24: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
      27: astore        8
      29: aload         8
      31: aload         7
      33: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: aload_1
      41: aload_2
      42: lload_3
      43: lload         5
      45: aload         8
      47: lconst_0
      48: lconst_0
      49: aconst_null
      50: aconst_null
      51: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      54: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, long, java.util.UUID, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: new           #15                 // class java/util/ArrayList
      22: dup
      23: iconst_1
      24: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
      27: astore        9
      29: aload         9
      31: aload         7
      33: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: aload_1
      41: aload_2
      42: lload_3
      43: lload         5
      45: aload         9
      47: lconst_0
      48: lconst_0
      49: aload         8
      51: aconst_null
      52: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      55: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: getstatic     #23                 // Field EMPTY_UUIDS:Ljava/util/List;
      29: lconst_0
      30: lconst_0
      31: aconst_null
      32: aconst_null
      33: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      36: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: getstatic     #23                 // Field EMPTY_UUIDS:Ljava/util/List;
      29: lconst_0
      30: lconst_0
      31: aconst_null
      32: aload         5
      34: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      37: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl, java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: getstatic     #23                 // Field EMPTY_UUIDS:Ljava/util/List;
      29: lconst_0
      30: lconst_0
      31: aload         5
      33: aload         6
      35: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      38: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: getstatic     #23                 // Field EMPTY_UUIDS:Ljava/util/List;
      29: lconst_0
      30: lconst_0
      31: aload         5
      33: aconst_null
      34: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      37: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, long, java.util.List<java.util.UUID>, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl, java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: lload_3
      23: lload         5
      25: aload         7
      27: lload         8
      29: lload         10
      31: aload         12
      33: aload         13
      35: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      38: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, long, java.util.List<java.util.UUID>, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: lload_3
      23: lload         5
      25: aload         7
      27: lload         8
      29: lload         10
      31: aload         12
      33: aconst_null
      34: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      37: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, java.util.List<java.util.UUID>, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: aload         5
      28: lload         6
      30: lload         8
      32: aload         10
      34: aconst_null
      35: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      38: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, java.util.List<java.util.UUID>, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl, java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc2_w        #21                 // long -1l
      25: lload_3
      26: aload         5
      28: lload         6
      30: lload         8
      32: aload         10
      34: aload         11
      36: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      39: return

  public org.apache.hadoop.hbase.wal.WALKeyImpl(byte[], org.apache.hadoop.hbase.TableName, long, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #9                  // Field origLogSeqNum:J
       9: aload_0
      10: lconst_0
      11: putfield      #11                 // Field nonceGroup:J
      14: aload_0
      15: lconst_0
      16: putfield      #12                 // Field nonce:J
      19: aload_0
      20: aload_1
      21: aload_2
      22: lload_3
      23: invokestatic  #24                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      26: getstatic     #23                 // Field EMPTY_UUIDS:Ljava/util/List;
      29: lload         5
      31: lload         7
      33: aload         9
      35: aconst_null
      36: invokevirtual #17                 // Method init:([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
      39: return

  protected void init(byte[], org.apache.hadoop.hbase.TableName, long, long, java.util.List<java.util.UUID>, long, long, org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl, java.util.NavigableMap<byte[], java.lang.Integer>);
    Code:
       0: aload_0
       1: lload_3
       2: putfield      #7                  // Field sequenceId:J
       5: aload_0
       6: lload         5
       8: putfield      #25                 // Field writeTime:J
      11: aload_0
      12: aload         7
      14: putfield      #26                 // Field clusterIds:Ljava/util/List;
      17: aload_0
      18: aload_1
      19: putfield      #27                 // Field encodedRegionName:[B
      22: aload_0
      23: aload_2
      24: putfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      27: aload_0
      28: lload         8
      30: putfield      #11                 // Field nonceGroup:J
      33: aload_0
      34: lload         10
      36: putfield      #12                 // Field nonce:J
      39: aload_0
      40: aload         12
      42: putfield      #1                  // Field mvcc:Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
      45: lload_3
      46: ldc2_w        #21                 // long -1l
      49: lcmp
      50: ifeq          58
      53: aload_0
      54: lload_3
      55: invokevirtual #29                 // Method setSequenceId:(J)V
      58: aload_0
      59: aload         13
      61: putfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
      64: return

  protected void setSequenceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field sequenceId:J
       5: return

  public byte[] getEncodedRegionName();
    Code:
       0: aload_0
       1: getfield      #27                 // Field encodedRegionName:[B
       4: areturn

  public org.apache.hadoop.hbase.TableName getTableName();
    Code:
       0: aload_0
       1: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
       4: areturn

  public void setOrigLogSeqNum(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field origLogSeqNum:J
       5: return

  public long getOrigLogSeqNum();
    Code:
       0: aload_0
       1: getfield      #9                  // Field origLogSeqNum:J
       4: lreturn

  public long getSequenceId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sequenceId:J
       4: lreturn

  public long getWriteTime();
    Code:
       0: aload_0
       1: getfield      #25                 // Field writeTime:J
       4: lreturn

  public java.util.NavigableMap<byte[], java.lang.Integer> getReplicationScopes();
    Code:
       0: aload_0
       1: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
       4: areturn

  public long getNonceGroup();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nonceGroup:J
       4: lreturn

  public long getNonce();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nonce:J
       4: lreturn

  public void clearReplicationScope();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #31                 // Method setReplicationScope:(Ljava/util/NavigableMap;)V
       5: return

  public void addClusterId(java.util.UUID);
    Code:
       0: aload_0
       1: getfield      #26                 // Field clusterIds:Ljava/util/List;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: getfield      #26                 // Field clusterIds:Ljava/util/List;
      17: aload_1
      18: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public java.util.List<java.util.UUID> getClusterIds();
    Code:
       0: aload_0
       1: getfield      #26                 // Field clusterIds:Ljava/util/List;
       4: areturn

  public java.util.UUID getOriginatingClusterId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field clusterIds:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          18
      12: getstatic     #34                 // Field org/apache/hadoop/hbase/HConstants.DEFAULT_CLUSTER_ID:Ljava/util/UUID;
      15: goto          31
      18: aload_0
      19: getfield      #26                 // Field clusterIds:Ljava/util/List;
      22: iconst_0
      23: invokeinterface #35,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #36                 // class java/util/UUID
      31: areturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #40                 // String /
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #27                 // Field encodedRegionName:[B
      23: invokestatic  #42                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      26: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #40                 // String /
      31: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #7                  // Field sequenceId:J
      38: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: checkcast     #46                 // class org/apache/hadoop/hbase/wal/WALKey
      29: invokevirtual #47                 // Method compareTo:(Lorg/apache/hadoop/hbase/wal/WALKey;)I
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #27                 // Field encodedRegionName:[B
       4: invokestatic  #48                 // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
       7: istore_1
       8: iload_1
       9: i2l
      10: aload_0
      11: invokevirtual #49                 // Method getSequenceId:()J
      14: lxor
      15: l2i
      16: istore_1
      17: iload_1
      18: i2l
      19: aload_0
      20: getfield      #25                 // Field writeTime:J
      23: lxor
      24: l2i
      25: istore_1
      26: iload_1
      27: ireturn

  public int compareTo(org.apache.hadoop.hbase.wal.WALKey);
    Code:
       0: aload_0
       1: getfield      #27                 // Field encodedRegionName:[B
       4: aload_1
       5: invokeinterface #50,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getEncodedRegionName:()[B
      10: invokestatic  #51                 // Method org/apache/hadoop/hbase/util/Bytes.compareTo:([B[B)I
      13: istore_2
      14: iload_2
      15: ifne          91
      18: aload_0
      19: invokevirtual #49                 // Method getSequenceId:()J
      22: lstore_3
      23: aload_1
      24: invokeinterface #52,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getSequenceId:()J
      29: lstore        5
      31: lload_3
      32: lload         5
      34: lcmp
      35: ifge          43
      38: iconst_m1
      39: istore_2
      40: goto          52
      43: lload_3
      44: lload         5
      46: lcmp
      47: ifle          52
      50: iconst_1
      51: istore_2
      52: iload_2
      53: ifne          91
      56: aload_0
      57: getfield      #25                 // Field writeTime:J
      60: aload_1
      61: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getWriteTime:()J
      66: lcmp
      67: ifge          75
      70: iconst_m1
      71: istore_2
      72: goto          91
      75: aload_0
      76: getfield      #25                 // Field writeTime:J
      79: aload_1
      80: invokeinterface #53,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getWriteTime:()J
      85: lcmp
      86: ifle          91
      89: iconst_1
      90: ireturn
      91: iload_2
      92: ireturn

  void internTableName(org.apache.hadoop.hbase.TableName);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: aload_0
       8: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      11: invokevirtual #54                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      14: ifne          25
      17: new           #4                  // class java/lang/AssertionError
      20: dup
      21: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: aload_1
      27: putfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      30: return

  void internEncodedRegionName(byte[]);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_0
       7: getfield      #27                 // Field encodedRegionName:[B
      10: aload_1
      11: invokestatic  #55                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
      14: ifne          25
      17: new           #4                  // class java/lang/AssertionError
      20: dup
      21: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: aload_1
      27: putfield      #27                 // Field encodedRegionName:[B
      30: return

  public org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALKey$Builder getBuilder(org.apache.hadoop.hbase.regionserver.wal.WALCellCodec$ByteStringCompressor) throws java.io.IOException;
    Code:
       0: invokestatic  #56                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
       3: astore_2
       4: aload_2
       5: aload_1
       6: aload_0
       7: getfield      #27                 // Field encodedRegionName:[B
      10: getstatic     #57                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.REGION:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
      13: invokeinterface #58,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor.compress:([BLjava/lang/Enum;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      18: invokevirtual #59                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setEncodedRegionName:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      21: pop
      22: aload_2
      23: aload_1
      24: aload_0
      25: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      28: invokevirtual #60                 // Method org/apache/hadoop/hbase/TableName.getName:()[B
      31: getstatic     #61                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.TABLE:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
      34: invokeinterface #58,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor.compress:([BLjava/lang/Enum;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      39: invokevirtual #62                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setTableName:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      42: pop
      43: aload_2
      44: aload_0
      45: invokevirtual #49                 // Method getSequenceId:()J
      48: invokevirtual #63                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setLogSequenceNumber:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      51: pop
      52: aload_2
      53: aload_0
      54: getfield      #25                 // Field writeTime:J
      57: invokevirtual #64                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setWriteTime:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      60: pop
      61: aload_0
      62: getfield      #9                  // Field origLogSeqNum:J
      65: lconst_0
      66: lcmp
      67: ifle          79
      70: aload_2
      71: aload_0
      72: getfield      #9                  // Field origLogSeqNum:J
      75: invokevirtual #65                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setOrigSequenceNumber:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      78: pop
      79: aload_0
      80: getfield      #12                 // Field nonce:J
      83: lconst_0
      84: lcmp
      85: ifeq          97
      88: aload_2
      89: aload_0
      90: getfield      #12                 // Field nonce:J
      93: invokevirtual #66                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setNonce:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      96: pop
      97: aload_0
      98: getfield      #11                 // Field nonceGroup:J
     101: lconst_0
     102: lcmp
     103: ifeq          115
     106: aload_2
     107: aload_0
     108: getfield      #11                 // Field nonceGroup:J
     111: invokevirtual #67                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setNonceGroup:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
     114: pop
     115: invokestatic  #68                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder;
     118: astore_3
     119: aload_0
     120: getfield      #26                 // Field clusterIds:Ljava/util/List;
     123: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     128: astore        4
     130: aload         4
     132: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          184
     140: aload         4
     142: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #36                 // class java/util/UUID
     150: astore        5
     152: aload_3
     153: aload         5
     155: invokevirtual #72                 // Method java/util/UUID.getLeastSignificantBits:()J
     158: invokevirtual #73                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder.setLeastSigBits:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder;
     161: pop
     162: aload_3
     163: aload         5
     165: invokevirtual #74                 // Method java/util/UUID.getMostSignificantBits:()J
     168: invokevirtual #75                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder.setMostSigBits:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder;
     171: pop
     172: aload_2
     173: aload_3
     174: invokevirtual #76                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID;
     177: invokevirtual #77                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.addClusterIds:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
     180: pop
     181: goto          130
     184: aload_0
     185: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     188: ifnull        285
     191: aload_0
     192: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     195: invokeinterface #78,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
     200: invokeinterface #79,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     205: astore        4
     207: aload         4
     209: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     214: ifeq          285
     217: aload         4
     219: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     224: checkcast     #80                 // class java/util/Map$Entry
     227: astore        5
     229: aload_1
     230: aload         5
     232: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     237: checkcast     #82                 // class "[B"
     240: getstatic     #83                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.FAMILY:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
     243: invokeinterface #58,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor.compress:([BLjava/lang/Enum;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
     248: astore        6
     250: aload_2
     251: invokestatic  #84                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder;
     254: aload         6
     256: invokevirtual #85                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder.setFamily:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder;
     259: aload         5
     261: invokeinterface #86,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     266: checkcast     #87                 // class java/lang/Integer
     269: invokevirtual #88                 // Method java/lang/Integer.intValue:()I
     272: invokestatic  #89                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$ScopeType.forNumber:(I)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$ScopeType;
     275: invokevirtual #90                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder.setScopeType:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$ScopeType;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder;
     278: invokevirtual #91                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.addScopes:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope$Builder;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
     281: pop
     282: goto          207
     285: aload_2
     286: areturn

  public void readFieldsFromPb(org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALKey, org.apache.hadoop.hbase.regionserver.wal.WALCellCodec$ByteStringUncompressor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #92                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getEncodedRegionName:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
       6: getstatic     #57                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.REGION:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
       9: invokeinterface #93,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor.uncompress:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Ljava/lang/Enum;)[B
      14: putfield      #27                 // Field encodedRegionName:[B
      17: aload_2
      18: aload_1
      19: invokevirtual #94                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getTableName:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      22: getstatic     #61                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.TABLE:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
      25: invokeinterface #93,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor.uncompress:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Ljava/lang/Enum;)[B
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokestatic  #95                 // Method org/apache/hadoop/hbase/TableName.valueOf:([B)Lorg/apache/hadoop/hbase/TableName;
      36: putfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      39: aload_0
      40: getfield      #26                 // Field clusterIds:Ljava/util/List;
      43: invokeinterface #96,  1           // InterfaceMethod java/util/List.clear:()V
      48: aload_1
      49: invokevirtual #97                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getClusterIdsList:()Ljava/util/List;
      52: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore        4
      59: aload         4
      61: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          111
      69: aload         4
      71: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #98                 // class org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID
      79: astore        5
      81: aload_0
      82: getfield      #26                 // Field clusterIds:Ljava/util/List;
      85: new           #36                 // class java/util/UUID
      88: dup
      89: aload         5
      91: invokevirtual #99                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID.getMostSigBits:()J
      94: aload         5
      96: invokevirtual #100                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$UUID.getLeastSigBits:()J
      99: invokespecial #101                // Method java/util/UUID."<init>":(JJ)V
     102: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: goto          59
     111: aload_1
     112: invokevirtual #102                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.hasNonceGroup:()Z
     115: ifeq          126
     118: aload_0
     119: aload_1
     120: invokevirtual #103                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getNonceGroup:()J
     123: putfield      #11                 // Field nonceGroup:J
     126: aload_1
     127: invokevirtual #104                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.hasNonce:()Z
     130: ifeq          141
     133: aload_0
     134: aload_1
     135: invokevirtual #105                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getNonce:()J
     138: putfield      #12                 // Field nonce:J
     141: aload_0
     142: aconst_null
     143: putfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     146: aload_1
     147: invokevirtual #106                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getScopesCount:()I
     150: ifle          242
     153: aload_0
     154: new           #107                // class java/util/TreeMap
     157: dup
     158: getstatic     #108                // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
     161: invokespecial #109                // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
     164: putfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     167: aload_1
     168: invokevirtual #110                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getScopesList:()Ljava/util/List;
     171: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     176: astore        4
     178: aload         4
     180: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     185: ifeq          242
     188: aload         4
     190: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     195: checkcast     #111                // class org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope
     198: astore        5
     200: aload_2
     201: aload         5
     203: invokevirtual #112                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope.getFamily:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
     206: getstatic     #83                 // Field org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex.FAMILY:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
     209: invokeinterface #93,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor.uncompress:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Ljava/lang/Enum;)[B
     214: astore        6
     216: aload_0
     217: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     220: aload         6
     222: aload         5
     224: invokevirtual #113                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FamilyScope.getScopeType:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$ScopeType;
     227: invokevirtual #114                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$ScopeType.getNumber:()I
     230: invokestatic  #115                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     233: invokeinterface #116,  3          // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     238: pop
     239: goto          178
     242: aload_0
     243: aload_1
     244: invokevirtual #117                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getLogSequenceNumber:()J
     247: invokevirtual #29                 // Method setSequenceId:(J)V
     250: aload_0
     251: aload_1
     252: invokevirtual #118                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getWriteTime:()J
     255: putfield      #25                 // Field writeTime:J
     258: aload_1
     259: invokevirtual #119                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.hasOrigSequenceNumber:()Z
     262: ifeq          273
     265: aload_0
     266: aload_1
     267: invokevirtual #120                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.getOrigSequenceNumber:()J
     270: putfield      #9                  // Field origLogSeqNum:J
     273: return

  public long estimatedSerializedSizeOf();
    Code:
       0: aload_0
       1: getfield      #27                 // Field encodedRegionName:[B
       4: ifnull        16
       7: aload_0
       8: getfield      #27                 // Field encodedRegionName:[B
      11: arraylength
      12: i2l
      13: goto          17
      16: lconst_0
      17: lstore_1
      18: lload_1
      19: aload_0
      20: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      23: ifnull        38
      26: aload_0
      27: getfield      #28                 // Field tablename:Lorg/apache/hadoop/hbase/TableName;
      30: invokevirtual #121                // Method org/apache/hadoop/hbase/TableName.toBytes:()[B
      33: arraylength
      34: i2l
      35: goto          39
      38: lconst_0
      39: ladd
      40: lstore_1
      41: aload_0
      42: getfield      #26                 // Field clusterIds:Ljava/util/List;
      45: ifnull        64
      48: lload_1
      49: bipush        16
      51: aload_0
      52: getfield      #26                 // Field clusterIds:Ljava/util/List;
      55: invokeinterface #122,  1          // InterfaceMethod java/util/List.size:()I
      60: imul
      61: i2l
      62: ladd
      63: lstore_1
      64: aload_0
      65: getfield      #11                 // Field nonceGroup:J
      68: lconst_0
      69: lcmp
      70: ifeq          79
      73: lload_1
      74: ldc2_w        #124                // long 8l
      77: ladd
      78: lstore_1
      79: aload_0
      80: getfield      #12                 // Field nonce:J
      83: lconst_0
      84: lcmp
      85: ifeq          94
      88: lload_1
      89: ldc2_w        #124                // long 8l
      92: ladd
      93: lstore_1
      94: aload_0
      95: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
      98: ifnull        160
     101: aload_0
     102: getfield      #30                 // Field replicationScope:Ljava/util/NavigableMap;
     105: invokeinterface #78,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
     110: invokeinterface #79,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     115: astore_3
     116: aload_3
     117: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          160
     125: aload_3
     126: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #80                 // class java/util/Map$Entry
     134: astore        4
     136: lload_1
     137: aload         4
     139: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     144: checkcast     #82                 // class "[B"
     147: arraylength
     148: i2l
     149: ladd
     150: lstore_1
     151: lload_1
     152: ldc2_w        #126                // long 4l
     155: ladd
     156: lstore_1
     157: goto          116
     160: lload_1
     161: ldc2_w        #124                // long 8l
     164: ladd
     165: lstore_1
     166: lload_1
     167: ldc2_w        #124                // long 8l
     170: ladd
     171: lstore_1
     172: aload_0
     173: getfield      #9                  // Field origLogSeqNum:J
     176: lconst_0
     177: lcmp
     178: ifle          187
     181: lload_1
     182: ldc2_w        #124                // long 8l
     185: ladd
     186: lstore_1
     187: lload_1
     188: lreturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #46                 // class org/apache/hadoop/hbase/wal/WALKey
       5: invokevirtual #47                 // Method compareTo:(Lorg/apache/hadoop/hbase/wal/WALKey;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #128                // class org/apache/hadoop/hbase/wal/WALKeyImpl
       2: invokevirtual #129                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: new           #128                // class org/apache/hadoop/hbase/wal/WALKeyImpl
      19: dup
      20: invokespecial #130                // Method "<init>":()V
      23: putstatic     #131                // Field EMPTY_WALKEYIMPL:Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
      26: return
}
