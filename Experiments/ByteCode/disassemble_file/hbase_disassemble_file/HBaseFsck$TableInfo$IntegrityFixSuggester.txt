Compiled from "HBaseFsck.java"
class org.apache.hadoop.hbase.util.HBaseFsck$TableInfo$IntegrityFixSuggester extends org.apache.hadoop.hbase.util.hbck.TableIntegrityErrorHandlerImpl {
  org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter errors;

  final org.apache.hadoop.hbase.util.HBaseFsck$TableInfo this$1;

  org.apache.hadoop.hbase.util.HBaseFsck$TableInfo$IntegrityFixSuggester(org.apache.hadoop.hbase.util.HBaseFsck$TableInfo, org.apache.hadoop.hbase.util.HBaseFsck$TableInfo, org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/util/hbck/TableIntegrityErrorHandlerImpl."<init>":()V
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
      14: aload_0
      15: aload_2
      16: invokevirtual #4                  // Method setTableInfo:(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
      19: return

  public void handleRegionStartKeyNotEmpty(org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       4: getstatic     #5                  // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.FIRST_REGION_STARTKEY_NOT_EMPTY:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
       7: ldc           #6                  // String First region should start with an empty key.  You need to  create a new region and regioninfo in HDFS to plug the hole.
       9: aload_0
      10: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      13: aload_1
      14: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      19: return

  public void handleRegionEndKeyNotEmpty(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       4: getstatic     #9                  // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.LAST_REGION_ENDKEY_NOT_EMPTY:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
       7: ldc           #10                 // String Last region should end with an empty key. You need to create a new region and regioninfo in HDFS to plug the hole.
       9: aload_0
      10: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      13: invokeinterface #11,  4           // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
      18: return

  public void handleDegenerateRegion(org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       4: getstatic     #12                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.DEGENERATE_REGION:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
       7: ldc           #13                 // String Region has the same start and end key.
       9: aload_0
      10: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      13: aload_1
      14: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      19: return

  public void handleDuplicateStartKeys(org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/hadoop/hbase/util/HBaseFsck$HbckInfo.getStartKey:()[B
       4: astore_3
       5: aload_0
       6: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       9: getstatic     #15                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.DUPE_STARTKEYS:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #18                 // String Multiple regions have the same startkey:
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_3
      25: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: aload_0
      35: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      38: aload_1
      39: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      44: aload_0
      45: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
      48: getstatic     #15                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.DUPE_STARTKEYS:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
      51: new           #16                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #18                 // String Multiple regions have the same startkey:
      60: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: aload_0
      74: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      77: aload_2
      78: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      83: return

  public void handleSplit(org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/hadoop/hbase/util/HBaseFsck$HbckInfo.getStartKey:()[B
       4: astore_3
       5: aload_0
       6: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       9: getstatic     #22                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.DUPE_ENDKEYS:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #23                 // String Multiple regions have the same regionID:
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_3
      25: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: aload_0
      35: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      38: aload_1
      39: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      44: aload_0
      45: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
      48: getstatic     #22                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.DUPE_ENDKEYS:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
      51: new           #16                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #23                 // String Multiple regions have the same regionID:
      60: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: aload_0
      74: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      77: aload_2
      78: invokeinterface #8,  5            // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      83: return

  public void handleOverlapInRegionChain(org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       4: getstatic     #24                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.OVERLAP_IN_REGION_CHAIN:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
       7: ldc           #25                 // String There is an overlap in the region chain.
       9: aload_0
      10: invokevirtual #7                  // Method getTableInfo:()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
      13: aload_1
      14: aload_2
      15: invokeinterface #26,  6           // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
      20: return

  public void handleHoleInRegionChain(byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field errors:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
       4: getstatic     #27                 // Field org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE.HOLE_IN_REGION_CHAIN:Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
       7: new           #16                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #28                 // String There is a hole in the region chain between
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #29                 // String  and
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      35: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #30                 // String .  You need to create a new .regioninfo and region dir in hdfs to plug the hole.
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #31,  3           // InterfaceMethod org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter.reportError:(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;)V
      51: return
}
