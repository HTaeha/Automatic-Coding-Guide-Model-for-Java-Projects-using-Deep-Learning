Compiled from "KeyOnlyFilter.java"
class org.apache.hadoop.hbase.filter.KeyOnlyFilter$KeyOnlyByteBufferExtendedCell extends org.apache.hadoop.hbase.ByteBufferExtendedCell {
  public static final int FIXED_OVERHEAD;

  public org.apache.hadoop.hbase.filter.KeyOnlyFilter$KeyOnlyByteBufferExtendedCell(org.apache.hadoop.hbase.ByteBufferExtendedCell, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field lenAsVal:Z
      14: return

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #4                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getRowArray:()[B
       7: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #5                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getRowOffset:()I
       7: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #6                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getRowLength:()S
       7: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #7                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getFamilyArray:()[B
       7: areturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #8                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getFamilyOffset:()I
       7: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #9                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getFamilyLength:()B
       7: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #10                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getQualifierArray:()[B
       7: areturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #11                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getQualifierOffset:()I
       7: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #12                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getQualifierLength:()I
       7: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #13                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getTimestamp:()J
       7: lreturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #14                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getTypeByte:()B
       7: ireturn

  public void setSequenceId(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: lload_1
       5: invokevirtual #15                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.setSequenceId:(J)V
       8: return

  public void setTimestamp(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: lload_1
       5: invokevirtual #16                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.setTimestamp:(J)V
       8: return

  public void setTimestamp(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: aload_1
       5: invokevirtual #17                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.setTimestamp:([B)V
       8: return

  public long getSequenceId();
    Code:
       0: lconst_0
       1: lreturn

  public org.apache.hadoop.hbase.Cell$Type getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #18                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getType:()Lorg/apache/hadoop/hbase/Cell$Type;
       7: areturn

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenAsVal:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
      11: invokevirtual #19                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getValueLength:()I
      14: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(I)[B
      17: areturn
      18: getstatic     #21                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
      21: areturn

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenAsVal:Z
       4: ifeq          9
       7: iconst_4
       8: ireturn
       9: iconst_0
      10: ireturn

  public byte[] getTagsArray();
    Code:
       0: getstatic     #21                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
       3: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.ByteBuffer getRowByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #23                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getRowByteBuffer:()Ljava/nio/ByteBuffer;
       7: areturn

  public int getRowPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #24                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getRowPosition:()I
       7: ireturn

  public java.nio.ByteBuffer getFamilyByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #25                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getFamilyByteBuffer:()Ljava/nio/ByteBuffer;
       7: areturn

  public int getFamilyPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #26                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getFamilyPosition:()I
       7: ireturn

  public java.nio.ByteBuffer getQualifierByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #27                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getQualifierByteBuffer:()Ljava/nio/ByteBuffer;
       7: areturn

  public int getQualifierPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #28                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getQualifierPosition:()I
       7: ireturn

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenAsVal:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
      11: invokevirtual #19                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getValueLength:()I
      14: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(I)[B
      17: invokestatic  #29                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      20: areturn
      21: getstatic     #30                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      24: areturn

  public int getValuePosition();
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.ByteBuffer getTagsByteBuffer();
    Code:
       0: getstatic     #30                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
       3: areturn

  public int getTagsPosition();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Iterator<org.apache.hadoop.hbase.Tag> getTags();
    Code:
       0: invokestatic  #31                 // Method java/util/Collections.emptyIterator:()Ljava/util/Iterator;
       3: areturn

  public java.util.Optional<org.apache.hadoop.hbase.Tag> getTag(byte);
    Code:
       0: invokestatic  #32                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public long heapSize();
    Code:
       0: getstatic     #33                 // Field FIXED_OVERHEAD:I
       3: i2l
       4: aload_0
       5: getfield      #2                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       8: invokevirtual #34                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.heapSize:()J
      11: ladd
      12: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(J)J
      15: lreturn

  static {};
    Code:
       0: getstatic     #36                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
       3: getstatic     #37                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       6: iadd
       7: iconst_1
       8: iadd
       9: putstatic     #33                 // Field FIXED_OVERHEAD:I
      12: return
}
