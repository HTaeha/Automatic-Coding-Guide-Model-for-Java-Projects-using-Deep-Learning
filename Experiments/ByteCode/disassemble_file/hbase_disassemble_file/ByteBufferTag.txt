Compiled from "ByteBufferTag.java"
public class org.apache.hadoop.hbase.ByteBufferTag implements org.apache.hadoop.hbase.Tag {
  public org.apache.hadoop.hbase.ByteBufferTag(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field length:I
      19: aload_0
      20: aload_1
      21: iload_2
      22: iconst_2
      23: iadd
      24: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toByte:(Ljava/nio/ByteBuffer;I)B
      27: putfield      #7                  // Field type:B
      30: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:B
       4: ireturn

  public int getValueOffset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field offset:I
       4: iconst_3
       5: iadd
       6: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: iconst_3
       5: isub
       6: ireturn

  public boolean hasArray();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] getValueArray();
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Tag is backed by an off heap buffer. Use getValueByteBuffer()
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String [Tag type :
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field type:B
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #16                 // String , value :
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      28: aload_0
      29: invokevirtual #17                 // Method getValueOffset:()I
      32: aload_0
      33: invokevirtual #18                 // Method getValueLength:()I
      36: invokestatic  #19                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toStringBinary:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #20                 // String ]
      44: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn
}
