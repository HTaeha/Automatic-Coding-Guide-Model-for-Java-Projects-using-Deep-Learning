Compiled from "StochasticLoadBalancer.java"
abstract class org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer$CandidateGenerator {
  org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer$CandidateGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  abstract org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster$Action generate(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster);

  protected int pickRandomRegion(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster, int, double);
    Code:
       0: aload_1
       1: getfield      #2                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.regionsPerServer:[[I
       4: iload_2
       5: aaload
       6: arraylength
       7: ifeq          22
      10: getstatic     #3                  // Field org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.RANDOM:Ljava/util/Random;
      13: invokevirtual #4                  // Method java/util/Random.nextFloat:()F
      16: f2d
      17: dload_3
      18: dcmpg
      19: ifge          24
      22: iconst_m1
      23: ireturn
      24: getstatic     #3                  // Field org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.RANDOM:Ljava/util/Random;
      27: aload_1
      28: getfield      #2                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.regionsPerServer:[[I
      31: iload_2
      32: aaload
      33: arraylength
      34: invokevirtual #5                  // Method java/util/Random.nextInt:(I)I
      37: istore        5
      39: aload_1
      40: getfield      #2                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.regionsPerServer:[[I
      43: iload_2
      44: aaload
      45: iload         5
      47: iaload
      48: ireturn

  protected int pickRandomServer(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster);
    Code:
       0: aload_1
       1: getfield      #6                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numServers:I
       4: iconst_1
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: getstatic     #3                  // Field org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.RANDOM:Ljava/util/Random;
      13: aload_1
      14: getfield      #6                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numServers:I
      17: invokevirtual #5                  // Method java/util/Random.nextInt:(I)I
      20: ireturn

  protected int pickRandomRack(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster);
    Code:
       0: aload_1
       1: getfield      #7                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numRacks:I
       4: iconst_1
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: getstatic     #3                  // Field org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.RANDOM:Ljava/util/Random;
      13: aload_1
      14: getfield      #7                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numRacks:I
      17: invokevirtual #5                  // Method java/util/Random.nextInt:(I)I
      20: ireturn

  protected int pickOtherRandomServer(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster, int);
    Code:
       0: aload_1
       1: getfield      #6                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numServers:I
       4: iconst_2
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: aload_0
      11: aload_1
      12: invokevirtual #8                  // Method pickRandomServer:(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;)I
      15: istore_3
      16: iload_3
      17: iload_2
      18: if_icmpeq     23
      21: iload_3
      22: ireturn
      23: goto          10

  protected int pickOtherRandomRack(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster, int);
    Code:
       0: aload_1
       1: getfield      #7                  // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.numRacks:I
       4: iconst_2
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: aload_0
      11: aload_1
      12: invokevirtual #9                  // Method pickRandomRack:(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;)I
      15: istore_3
      16: iload_3
      17: iload_2
      18: if_icmpeq     23
      21: iload_3
      22: ireturn
      23: goto          10

  protected org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster$Action pickRandomRegions(org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster, int, int);
    Code:
       0: iload_2
       1: iflt          8
       4: iload_3
       5: ifge          12
       8: getstatic     #10                 // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.NullAction:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
      11: areturn
      12: aload_1
      13: iload_2
      14: invokevirtual #11                 // Method org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.getNumRegions:(I)I
      17: istore        4
      19: aload_1
      20: iload_3
      21: invokevirtual #11                 // Method org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.getNumRegions:(I)I
      24: istore        5
      26: iload         4
      28: iload         5
      30: if_icmple     37
      33: dconst_0
      34: goto          40
      37: ldc2_w        #12                 // double 0.5d
      40: dstore        6
      42: iload         4
      44: iload         5
      46: if_icmpgt     53
      49: dconst_0
      50: goto          56
      53: ldc2_w        #12                 // double 0.5d
      56: dstore        8
      58: aload_0
      59: aload_1
      60: iload_2
      61: dload         6
      63: invokevirtual #14                 // Method pickRandomRegion:(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;ID)I
      66: istore        10
      68: aload_0
      69: aload_1
      70: iload_3
      71: dload         8
      73: invokevirtual #14                 // Method pickRandomRegion:(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster;ID)I
      76: istore        11
      78: aload_0
      79: iload_2
      80: iload         10
      82: iload_3
      83: iload         11
      85: invokevirtual #15                 // Method getAction:(IIII)Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
      88: areturn

  protected org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer$Cluster$Action getAction(int, int, int, int);
    Code:
       0: iload_1
       1: iflt          8
       4: iload_3
       5: ifge          12
       8: getstatic     #10                 // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.NullAction:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
      11: areturn
      12: iload_2
      13: ifle          34
      16: iload         4
      18: ifle          34
      21: new           #16                 // class org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$SwapRegionsAction
      24: dup
      25: iload_1
      26: iload_2
      27: iload_3
      28: iload         4
      30: invokespecial #17                 // Method org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$SwapRegionsAction."<init>":(IIII)V
      33: areturn
      34: iload_2
      35: ifle          49
      38: new           #18                 // class org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction
      41: dup
      42: iload_2
      43: iload_1
      44: iload_3
      45: invokespecial #19                 // Method org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction."<init>":(III)V
      48: areturn
      49: iload         4
      51: ifle          66
      54: new           #18                 // class org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction
      57: dup
      58: iload         4
      60: iload_3
      61: iload_1
      62: invokespecial #19                 // Method org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction."<init>":(III)V
      65: areturn
      66: getstatic     #10                 // Field org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster.NullAction:Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
      69: areturn

  protected java.util.List<java.lang.Integer> getRandomIterationOrder(int);
    Code:
       0: new           #20                 // class java/util/ArrayList
       3: dup
       4: iload_1
       5: invokespecial #21                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     31
      16: aload_2
      17: iload_3
      18: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokevirtual #23                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      24: pop
      25: iinc          3, 1
      28: goto          11
      31: aload_2
      32: invokestatic  #24                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      35: aload_2
      36: areturn
}
