Compiled from "TestLruBlockCache.java"
class org.apache.hadoop.hbase.io.hfile.TestLruBlockCache$1 implements java.lang.Runnable {
  final int val$blocksPerThread;

  final org.apache.hadoop.hbase.io.hfile.LruBlockCache val$cache;

  final long val$blockSize;

  final java.util.concurrent.atomic.AtomicInteger val$blockCount;

  final org.apache.hadoop.hbase.io.hfile.TestLruBlockCache this$0;

  org.apache.hadoop.hbase.io.hfile.TestLruBlockCache$1(org.apache.hadoop.hbase.io.hfile.TestLruBlockCache, int, org.apache.hadoop.hbase.io.hfile.LruBlockCache, long, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/io/hfile/TestLruBlockCache;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$blocksPerThread:I
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$cache:Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
      15: aload_0
      16: lload         4
      18: putfield      #4                  // Field val$blockSize:J
      21: aload_0
      22: aload         6
      24: putfield      #5                  // Field val$blockCount:Ljava/util/concurrent/atomic/AtomicInteger;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void run();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #2                  // Field val$blocksPerThread:I
       7: if_icmplt     20
      10: aload_0
      11: getfield      #3                  // Field val$cache:Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
      14: invokevirtual #7                  // Method org/apache/hadoop/hbase/io/hfile/LruBlockCache.isEvictionInProgress:()Z
      17: ifne          77
      20: new           #8                  // class org/apache/hadoop/hbase/io/hfile/TestLruBlockCache$CachedItem
      23: dup
      24: ldc           #9                  // String hfile
      26: aload_0
      27: getfield      #4                  // Field val$blockSize:J
      30: l2i
      31: aload_0
      32: getfield      #5                  // Field val$blockCount:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      38: invokespecial #11                 // Method org/apache/hadoop/hbase/io/hfile/TestLruBlockCache$CachedItem."<init>":(Ljava/lang/String;II)V
      41: astore_2
      42: invokestatic  #12                 // Method java/lang/Math.random:()D
      45: ldc2_w        #13                 // double 0.5d
      48: dcmpl
      49: ifle          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore_3
      58: aload_0
      59: getfield      #3                  // Field val$cache:Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
      62: aload_2
      63: getfield      #15                 // Field org/apache/hadoop/hbase/io/hfile/TestLruBlockCache$CachedItem.cacheKey:Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
      66: aload_2
      67: iload_3
      68: invokevirtual #16                 // Method org/apache/hadoop/hbase/io/hfile/LruBlockCache.cacheBlock:(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
      71: iinc          1, 1
      74: goto          2
      77: aload_0
      78: getfield      #3                  // Field val$cache:Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
      81: ldc           #9                  // String hfile
      83: invokevirtual #17                 // Method org/apache/hadoop/hbase/io/hfile/LruBlockCache.evictBlocksByHfileName:(Ljava/lang/String;)I
      86: pop
      87: return
}
