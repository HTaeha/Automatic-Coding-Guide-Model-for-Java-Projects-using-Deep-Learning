Compiled from "FanOutOneBlockAsyncDFSOutput.java"
public class org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput implements org.apache.hadoop.hbase.io.asyncfs.AsyncFSOutput {
  org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.util.FSUtils, org.apache.hadoop.hdfs.DistributedFileSystem, org.apache.hadoop.hdfs.DFSClient, org.apache.hadoop.hdfs.protocol.ClientProtocol, java.lang.String, java.lang.String, long, org.apache.hadoop.hdfs.protocol.LocatedBlock, org.apache.hadoop.crypto.Encryptor, java.util.List<org.apache.hbase.thirdparty.io.netty.channel.Channel>, org.apache.hadoop.util.DataChecksum, org.apache.hbase.thirdparty.io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #52                 // class java/util/concurrent/ConcurrentLinkedDeque
       8: dup
       9: invokespecial #53                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      12: putfield      #8                  // Field waitingAckQueue:Ljava/util/concurrent/ConcurrentLinkedDeque;
      15: aload_0
      16: lconst_0
      17: putfield      #19                 // Field ackedBlockLength:J
      20: aload_0
      21: lconst_0
      22: putfield      #54                 // Field nextPacketOffsetInBlock:J
      25: aload_0
      26: iconst_0
      27: putfield      #55                 // Field trailingPartialChunkLength:I
      30: aload_0
      31: lconst_0
      32: putfield      #56                 // Field nextPacketSeqno:J
      35: aload_0
      36: new           #57                 // class org/apache/hadoop/hbase/io/asyncfs/SendBufSizePredictor
      39: dup
      40: invokespecial #58                 // Method org/apache/hadoop/hbase/io/asyncfs/SendBufSizePredictor."<init>":()V
      43: putfield      #59                 // Field sendBufSizePRedictor:Lorg/apache/hadoop/hbase/io/asyncfs/SendBufSizePredictor;
      46: aload_0
      47: aload_1
      48: putfield      #60                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      51: aload_0
      52: aload_2
      53: putfield      #61                 // Field fsUtils:Lorg/apache/hadoop/hbase/util/FSUtils;
      56: aload_0
      57: aload_3
      58: putfield      #62                 // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      61: aload_0
      62: aload         4
      64: putfield      #63                 // Field client:Lorg/apache/hadoop/hdfs/DFSClient;
      67: aload_0
      68: aload         5
      70: putfield      #64                 // Field namenode:Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      73: aload_0
      74: lload         8
      76: putfield      #65                 // Field fileId:J
      79: aload_0
      80: aload         6
      82: putfield      #66                 // Field clientName:Ljava/lang/String;
      85: aload_0
      86: aload         7
      88: putfield      #67                 // Field src:Ljava/lang/String;
      91: aload_0
      92: aload         10
      94: invokevirtual #68                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getBlock:()Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
      97: putfield      #3                  // Field block:Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
     100: aload_0
     101: aload         10
     103: invokevirtual #69                 // Method org/apache/hadoop/hdfs/protocol/LocatedBlock.getLocations:()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
     106: putfield      #70                 // Field locations:[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
     109: aload_0
     110: aload         11
     112: putfield      #71                 // Field encryptor:Lorg/apache/hadoop/crypto/Encryptor;
     115: aload_0
     116: aload         12
     118: putfield      #31                 // Field datanodeList:Ljava/util/List;
     121: aload_0
     122: aload         13
     124: putfield      #72                 // Field summer:Lorg/apache/hadoop/util/DataChecksum;
     127: aload_0
     128: ldc           #74                 // int 12582912
     130: ldc           #74                 // int 12582912
     132: aload         13
     134: invokevirtual #75                 // Method org/apache/hadoop/util/DataChecksum.getBytesPerChecksum:()I
     137: irem
     138: isub
     139: putfield      #76                 // Field maxDataLen:I
     142: aload_0
     143: aload         14
     145: putfield      #4                  // Field alloc:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBufAllocator;
     148: aload_0
     149: aload         14
     151: aload_0
     152: getfield      #59                 // Field sendBufSizePRedictor:Lorg/apache/hadoop/hbase/io/asyncfs/SendBufSizePredictor;
     155: invokevirtual #77                 // Method org/apache/hadoop/hbase/io/asyncfs/SendBufSizePredictor.initialSize:()I
     158: invokeinterface #78,  2           // InterfaceMethod org/apache/hbase/thirdparty/io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
     163: putfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
     166: aload_0
     167: getstatic     #80                 // Field org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State.STREAMING:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
     170: putfield      #5                  // Field state:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
     173: aload_0
     174: aload_1
     175: ldc           #81                 // String dfs.client.socket-timeout
     177: ldc           #82                 // int 60000
     179: invokevirtual #83                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     182: invokespecial #84                 // Method setupReceiver:(I)V
     185: return

  public void writeInt(int);
    Code:
       0: aload_0
       1: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       4: iconst_4
       5: invokevirtual #85                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.ensureWritable:(I)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       8: pop
       9: aload_0
      10: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      13: iload_1
      14: invokevirtual #86                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.writeInt:(I)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      17: pop
      18: return

  public void write(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       4: aload_1
       5: invokevirtual #87                 // Method java/nio/ByteBuffer.remaining:()I
       8: invokevirtual #85                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.ensureWritable:(I)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      11: pop
      12: aload_0
      13: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      16: aload_1
      17: invokevirtual #88                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/ByteBuffer;)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      20: pop
      21: return

  public void write(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #89                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       4: iload_3
       5: invokevirtual #85                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.ensureWritable:(I)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       8: pop
       9: aload_0
      10: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #90                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.writeBytes:([BII)Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
      19: pop
      20: return

  public int buffered();
    Code:
       0: aload_0
       1: getfield      #79                 // Field buf:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBuf;
       4: invokevirtual #91                 // Method org/apache/hbase/thirdparty/io/netty/buffer/ByteBuf.readableBytes:()I
       7: ireturn

  public org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getPipeline();
    Code:
       0: aload_0
       1: getfield      #70                 // Field locations:[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
       4: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Long> flush(boolean);
    Code:
       0: new           #116                // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #117                // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: iload_1
      11: invokespecial #121                // Method flush0:(Ljava/util/concurrent/CompletableFuture;Z)V
      14: aload_2
      15: areturn

  public void recoverAndClose(org.apache.hadoop.hbase.util.CancelableProgressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field datanodeList:Ljava/util/List;
       4: invokedynamic #136,  0            // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      14: aload_0
      15: getfield      #31                 // Field datanodeList:Ljava/util/List;
      18: invokedynamic #137,  0            // InvokeDynamic #4:accept:()Ljava/util/function/Consumer;
      23: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      28: aload_0
      29: getfield      #63                 // Field client:Lorg/apache/hadoop/hdfs/DFSClient;
      32: aload_0
      33: getfield      #65                 // Field fileId:J
      36: invokestatic  #138                // Method org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.endFileLease:(Lorg/apache/hadoop/hdfs/DFSClient;J)V
      39: aload_0
      40: getfield      #61                 // Field fsUtils:Lorg/apache/hadoop/hbase/util/FSUtils;
      43: aload_0
      44: getfield      #62                 // Field dfs:Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      47: new           #139                // class org/apache/hadoop/fs/Path
      50: dup
      51: aload_0
      52: getfield      #67                 // Field src:Ljava/lang/String;
      55: invokespecial #140                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      58: aload_0
      59: getfield      #60                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      62: aload_1
      63: ifnonnull     80
      66: new           #141                // class org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper$CancelOnClose
      69: dup
      70: aload_0
      71: getfield      #63                 // Field client:Lorg/apache/hadoop/hdfs/DFSClient;
      74: invokespecial #142                // Method org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper$CancelOnClose."<init>":(Lorg/apache/hadoop/hdfs/DFSClient;)V
      77: goto          81
      80: aload_1
      81: invokevirtual #143                // Method org/apache/hadoop/hbase/util/FSUtils.recoverFileLease:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
      84: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #144                // Method endBlock:()V
       4: aload_0
       5: getstatic     #24                 // Field org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State.CLOSED:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
       8: putfield      #5                  // Field state:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
      11: aload_0
      12: getfield      #31                 // Field datanodeList:Ljava/util/List;
      15: invokedynamic #145,  0            // InvokeDynamic #5:accept:()Ljava/util/function/Consumer;
      20: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      25: aload_0
      26: getfield      #31                 // Field datanodeList:Ljava/util/List;
      29: invokedynamic #146,  0            // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
      34: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      39: aload_0
      40: getfield      #3                  // Field block:Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
      43: aload_0
      44: getfield      #19                 // Field ackedBlockLength:J
      47: invokevirtual #147                // Method org/apache/hadoop/hdfs/protocol/ExtendedBlock.setNumBytes:(J)V
      50: aload_0
      51: getfield      #63                 // Field client:Lorg/apache/hadoop/hdfs/DFSClient;
      54: aload_0
      55: getfield      #64                 // Field namenode:Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
      58: aload_0
      59: getfield      #67                 // Field src:Ljava/lang/String;
      62: aload_0
      63: getfield      #66                 // Field clientName:Ljava/lang/String;
      66: aload_0
      67: getfield      #3                  // Field block:Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
      70: aload_0
      71: getfield      #65                 // Field fileId:J
      74: invokestatic  #148                // Method org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.completeFile:(Lorg/apache/hadoop/hdfs/DFSClient;Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;J)V
      77: return

  public boolean isBroken();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
       4: getstatic     #23                 // Field org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State.BROKEN:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  static void access$300(org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput, org.apache.hbase.thirdparty.io.netty.channel.Channel, java.util.function.Supplier);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method failed:(Lorg/apache/hbase/thirdparty/io/netty/channel/Channel;Ljava/util/function/Supplier;)V
       6: return

  static void access$400(org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput, org.apache.hbase.thirdparty.io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method completed:(Lorg/apache/hbase/thirdparty/io/netty/channel/Channel;)V
       5: return

  static org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput$State access$500(org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput);
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput$State;
       4: areturn

  static org.apache.hbase.thirdparty.io.netty.buffer.ByteBufAllocator access$600(org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput);
    Code:
       0: aload_0
       1: getfield      #4                  // Field alloc:Lorg/apache/hbase/thirdparty/io/netty/buffer/ByteBufAllocator;
       4: areturn

  static org.apache.hadoop.hdfs.protocol.ExtendedBlock access$700(org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutput);
    Code:
       0: aload_0
       1: getfield      #3                  // Field block:Lorg/apache/hadoop/hdfs/protocol/ExtendedBlock;
       4: areturn
}
