Compiled from "TimeoutExceptionInjector.java"
public class org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector {
  public org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector(org.apache.hadoop.hbase.errorhandling.ForeignExceptionListener, long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long -1l
       8: putfield      #2                  // Field start:J
      11: aload_0
      12: lload_2
      13: putfield      #7                  // Field maxTime:J
      16: aload_0
      17: new           #8                  // class java/util/Timer
      20: dup
      21: invokespecial #9                  // Method java/util/Timer."<init>":()V
      24: putfield      #1                  // Field timer:Ljava/util/Timer;
      27: aload_0
      28: new           #10                 // class org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector$1
      31: dup
      32: aload_0
      33: lload_2
      34: aload_1
      35: invokespecial #11                 // Method org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector$1."<init>":(Lorg/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector;JLorg/apache/hadoop/hbase/errorhandling/ForeignExceptionListener;)V
      38: putfield      #12                 // Field timerTask:Ljava/util/TimerTask;
      41: return

  public long getMaxTime();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxTime:J
       4: lreturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field timerTask:Ljava/util/TimerTask;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field complete:Z
      11: ifeq          27
      14: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #14                 // String Timer already marked completed, ignoring!
      19: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      24: aload_1
      25: monitorexit
      26: return
      27: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      30: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      35: ifeq          48
      38: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      41: ldc           #17                 // String Marking timer as complete - no error notifications will be received for this timer.
      43: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      48: aload_0
      49: iconst_1
      50: putfield      #3                  // Field complete:Z
      53: aload_1
      54: monitorexit
      55: goto          63
      58: astore_2
      59: aload_1
      60: monitorexit
      61: aload_2
      62: athrow
      63: aload_0
      64: getfield      #1                  // Field timer:Ljava/util/Timer;
      67: invokevirtual #19                 // Method java/util/Timer.cancel:()V
      70: return
    Exception table:
       from    to  target type
           7    26    58   any
          27    55    58   any
          58    61    58   any

  public synchronized void start() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field start:J
       4: lconst_0
       5: lcmp
       6: iflt          20
       9: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc           #20                 // String Timer already started, can't be started again. Ignoring second request.
      14: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      19: return
      20: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      23: new           #21                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #23                 // String Scheduling process timer to run in:
      32: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #7                  // Field maxTime:J
      39: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: ldc           #26                 // String  ms
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      55: aload_0
      56: getfield      #1                  // Field timer:Ljava/util/Timer;
      59: aload_0
      60: getfield      #12                 // Field timerTask:Ljava/util/TimerTask;
      63: aload_0
      64: getfield      #7                  // Field maxTime:J
      67: invokevirtual #28                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      70: aload_0
      71: invokestatic  #29                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      74: putfield      #2                  // Field start:J
      77: return

  public void trigger();
    Code:
       0: aload_0
       1: getfield      #12                 // Field timerTask:Ljava/util/TimerTask;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field complete:Z
      11: ifeq          27
      14: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #30                 // String Timer already completed, not triggering.
      19: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      24: aload_1
      25: monitorexit
      26: return
      27: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #31                 // String Triggering timer immediately!
      32: invokeinterface #18,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: aload_0
      38: getfield      #1                  // Field timer:Ljava/util/Timer;
      41: invokevirtual #19                 // Method java/util/Timer.cancel:()V
      44: aload_0
      45: getfield      #12                 // Field timerTask:Ljava/util/TimerTask;
      48: invokevirtual #32                 // Method java/util/TimerTask.run:()V
      51: aload_1
      52: monitorexit
      53: goto          61
      56: astore_2
      57: aload_1
      58: monitorexit
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
           7    26    56   any
          27    53    56   any
          56    59    56   any

  static boolean access$000(org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector);
    Code:
       0: aload_0
       1: getfield      #3                  // Field complete:Z
       4: ireturn

  static boolean access$002(org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field complete:Z
       6: ireturn

  static long access$100(org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field start:J
       4: lreturn

  static java.util.Timer access$200(org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field timer:Ljava/util/Timer;
       4: areturn

  static {};
    Code:
       0: ldc           #33                 // class org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector
       2: invokestatic  #34                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
