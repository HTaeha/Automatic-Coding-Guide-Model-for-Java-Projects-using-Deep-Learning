Compiled from "TestProcedureMetrics.java"
public class org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics extends org.apache.hadoop.hbase.procedure2.SequentialProcedure<org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv> {
  public static long beginCount;

  public static long successCount;

  public static long failedCount;

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #2                  // Method "<init>":(ZZ)V
       6: return

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #3                  // Method "<init>":(ZZI)V
       7: return

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics(boolean, boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #4                  // Method "<init>":(ZZI[Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$ProcedureMetrics;)V
       8: return

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics(boolean, org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics[]);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: iconst_1
       4: aload_2
       5: invokespecial #4                  // Method "<init>":(ZZI[Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$ProcedureMetrics;)V
       8: return

  public org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics(boolean, boolean, int, org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$ProcedureMetrics[]);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/hbase/procedure2/SequentialProcedure."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field subprocs:[Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$ProcedureMetrics;
       9: aload_0
      10: iload_1
      11: putfield      #7                  // Field success:Z
      14: aload_0
      15: iload_2
      16: putfield      #8                  // Field yield:Z
      19: aload_0
      20: iload_3
      21: putfield      #9                  // Field yieldCount:I
      24: aload_0
      25: aload         4
      27: putfield      #6                  // Field subprocs:[Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$ProcedureMetrics;
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field yieldNum:I
      35: return

  protected void updateMetricsOnSubmit(org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv);
    Code:
       0: getstatic     #11                 // Field beginCount:J
       3: lconst_1
       4: ladd
       5: putstatic     #11                 // Field beginCount:J
       8: return

  protected org.apache.hadoop.hbase.procedure2.Procedure[] execute(org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv) throws org.apache.hadoop.hbase.procedure2.ProcedureYieldException, org.apache.hadoop.hbase.procedure2.ProcedureSuspendedException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field yield:Z
       4: ifeq          36
       7: aload_0
       8: getfield      #10                 // Field yieldNum:I
      11: aload_0
      12: getfield      #9                  // Field yieldCount:I
      15: if_icmpge     36
      18: aload_0
      19: dup
      20: getfield      #10                 // Field yieldNum:I
      23: iconst_1
      24: iadd
      25: putfield      #10                 // Field yieldNum:I
      28: new           #12                 // class org/apache/hadoop/hbase/procedure2/ProcedureYieldException
      31: dup
      32: invokespecial #13                 // Method org/apache/hadoop/hbase/procedure2/ProcedureYieldException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #7                  // Field success:Z
      40: ifne          60
      43: aload_0
      44: ldc           #14                 // String Failed
      46: new           #15                 // class java/lang/InterruptedException
      49: dup
      50: ldc           #14                 // String Failed
      52: invokespecial #16                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
      55: invokevirtual #17                 // Method setFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aconst_null
      59: areturn
      60: aload_0
      61: getfield      #6                  // Field subprocs:[Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$ProcedureMetrics;
      64: areturn

  protected void rollback(org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: return

  protected boolean abort(org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv);
    Code:
       0: iconst_0
       1: ireturn

  protected void updateMetricsOnFinish(org.apache.hadoop.hbase.procedure2.TestProcedureMetrics$TestProcEnv, long, boolean);
    Code:
       0: iload         4
       2: ifeq          16
       5: getstatic     #18                 // Field successCount:J
       8: lconst_1
       9: ladd
      10: putstatic     #18                 // Field successCount:J
      13: goto          24
      16: getstatic     #19                 // Field failedCount:J
      19: lconst_1
      20: ladd
      21: putstatic     #19                 // Field failedCount:J
      24: return

  protected void updateMetricsOnFinish(java.lang.Object, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv
       5: lload_2
       6: iload         4
       8: invokevirtual #21                 // Method updateMetricsOnFinish:(Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv;JZ)V
      11: return

  protected void updateMetricsOnSubmit(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv
       5: invokevirtual #22                 // Method updateMetricsOnSubmit:(Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv;)V
       8: return

  protected boolean abort(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv
       5: invokevirtual #23                 // Method abort:(Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv;)Z
       8: ireturn

  protected void rollback(java.lang.Object) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv
       5: invokevirtual #24                 // Method rollback:(Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv;)V
       8: return

  protected org.apache.hadoop.hbase.procedure2.Procedure[] execute(java.lang.Object) throws org.apache.hadoop.hbase.procedure2.ProcedureYieldException, org.apache.hadoop.hbase.procedure2.ProcedureSuspendedException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv
       5: invokevirtual #25                 // Method execute:(Lorg/apache/hadoop/hbase/procedure2/TestProcedureMetrics$TestProcEnv;)[Lorg/apache/hadoop/hbase/procedure2/Procedure;
       8: areturn

  static {};
    Code:
       0: lconst_0
       1: putstatic     #11                 // Field beginCount:J
       4: lconst_0
       5: putstatic     #18                 // Field successCount:J
       8: lconst_0
       9: putstatic     #19                 // Field failedCount:J
      12: return
}
