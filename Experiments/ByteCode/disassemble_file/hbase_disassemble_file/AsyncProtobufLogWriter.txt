Compiled from "AsyncProtobufLogWriter.java"
public class org.apache.hadoop.hbase.regionserver.wal.AsyncProtobufLogWriter extends org.apache.hadoop.hbase.regionserver.wal.AbstractProtobufLogWriter implements org.apache.hadoop.hbase.wal.AsyncFSWALProvider$AsyncWriter {
  public org.apache.hadoop.hbase.regionserver.wal.AsyncProtobufLogWriter(org.apache.hbase.thirdparty.io.netty.channel.EventLoopGroup, java.lang.Class<? extends org.apache.hbase.thirdparty.io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/regionserver/wal/AbstractProtobufLogWriter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field eventLoopGroup:Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field channelClass:Ljava/lang/Class;
      14: return

  protected java.lang.String getWriterClassName();
    Code:
       0: ldc           #4                  // String ProtobufLogWriter
       2: areturn

  public void append(org.apache.hadoop.hbase.wal.WAL$Entry);
    Code:
       0: aload_0
       1: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput.buffered:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #7                  // Method org/apache/hadoop/hbase/wal/WAL$Entry.getKey:()Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
      14: aload_0
      15: getfield      #8                  // Field compressor:Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
      18: invokevirtual #9                  // Method org/apache/hadoop/hbase/wal/WALKeyImpl.getBuilder:(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      21: aload_1
      22: invokevirtual #10                 // Method org/apache/hadoop/hbase/wal/WAL$Entry.getEdit:()Lorg/apache/hadoop/hbase/wal/WALEdit;
      25: invokevirtual #11                 // Method org/apache/hadoop/hbase/wal/WALEdit.size:()I
      28: invokevirtual #12                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.setFollowingKvCount:(I)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
      31: invokevirtual #13                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;
      34: aload_0
      35: getfield      #14                 // Field asyncOutputWrapper:Ljava/io/OutputStream;
      38: invokevirtual #15                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey.writeDelimitedTo:(Ljava/io/OutputStream;)V
      41: goto          56
      44: astore_3
      45: new           #17                 // class java/lang/AssertionError
      48: dup
      49: ldc           #18                 // String should not happen
      51: aload_3
      52: invokespecial #19                 // Method java/lang/AssertionError."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: aload_1
      57: invokevirtual #10                 // Method org/apache/hadoop/hbase/wal/WAL$Entry.getEdit:()Lorg/apache/hadoop/hbase/wal/WALEdit;
      60: invokevirtual #20                 // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
      63: invokevirtual #21                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      66: astore_3
      67: aload_3
      68: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          101
      76: aload_3
      77: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #24                 // class org/apache/hadoop/hbase/Cell
      85: astore        4
      87: aload_0
      88: getfield      #25                 // Field cellEncoder:Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
      91: aload         4
      93: invokeinterface #26,  2           // InterfaceMethod org/apache/hadoop/hbase/codec/Codec$Encoder.write:(Lorg/apache/hadoop/hbase/Cell;)V
      98: goto          67
     101: goto          116
     104: astore_3
     105: new           #17                 // class java/lang/AssertionError
     108: dup
     109: ldc           #18                 // String should not happen
     111: aload_3
     112: invokespecial #19                 // Method java/lang/AssertionError."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     115: athrow
     116: aload_0
     117: getfield      #27                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
     120: aload_0
     121: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
     124: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput.buffered:()I
     129: iload_2
     130: isub
     131: i2l
     132: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     135: pop2
     136: return
    Exception table:
       from    to  target type
          10    41    44   Class java/io/IOException
          56   101   104   Class java/io/IOException

  public java.util.concurrent.CompletableFuture<java.lang.Long> sync();
    Code:
       0: aload_0
       1: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
       4: iconst_0
       5: invokeinterface #29,  2           // InterfaceMethod org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput.flush:(Z)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokevirtual #30                 // Method writeWALTrailer:()V
      12: aload_0
      13: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      16: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput.close:()V
      21: goto          46
      24: astore_1
      25: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #34                 // String normal close failed, try recover
      30: aload_1
      31: invokeinterface #35,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: aload_0
      37: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      40: aconst_null
      41: invokeinterface #36,  2           // InterfaceMethod org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput.recoverAndClose:(Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
      46: aload_0
      47: aconst_null
      48: putfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      51: return
    Exception table:
       from    to  target type
           8    21    24   Class java/lang/Exception

  public org.apache.hadoop.hbase.io.asyncfs.AsyncFSOutput getOutput();
    Code:
       0: aload_0
       1: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
       4: areturn

  protected void initOutput(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, int, short, long) throws java.io.IOException, org.apache.hadoop.hbase.util.CommonFSUtils$StreamLacksCapabilityException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: iload         5
       7: lload         6
       9: aload_0
      10: getfield      #2                  // Field eventLoopGroup:Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;
      13: aload_0
      14: getfield      #3                  // Field channelClass:Ljava/lang/Class;
      17: invokestatic  #37                 // Method org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutputHelper.createOutput:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      20: putfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      23: aload_0
      24: new           #38                 // class org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter$OutputStreamWrapper
      27: dup
      28: aload_0
      29: getfield      #5                  // Field output:Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
      32: invokespecial #39                 // Method org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter$OutputStreamWrapper."<init>":(Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;)V
      35: putfield      #14                 // Field asyncOutputWrapper:Ljava/io/OutputStream;
      38: return

  protected long writeMagicAndWALHeader(byte[], org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #55,  0             // InvokeDynamic #0:accept:(Lorg/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter;[BLorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader;)Ljava/util/function/Consumer;
       9: invokespecial #56                 // Method write:(Ljava/util/function/Consumer;)J
      12: lreturn

  protected long writeWALTrailerAndMagic(org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALTrailer, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #57,  0             // InvokeDynamic #1:accept:(Lorg/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;[B)Ljava/util/function/Consumer;
       9: invokespecial #56                 // Method write:(Ljava/util/function/Consumer;)J
      12: lreturn

  protected java.io.OutputStream getOutputStreamForCellEncoder();
    Code:
       0: aload_0
       1: getfield      #14                 // Field asyncOutputWrapper:Ljava/io/OutputStream;
       4: areturn

  static {};
    Code:
       0: ldc           #69                 // class org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter
       2: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
