Compiled from "ColumnRangeFilter.java"
public class org.apache.hadoop.hbase.filter.ColumnRangeFilter extends org.apache.hadoop.hbase.filter.FilterBase {
  protected byte[] minColumn;

  protected boolean minColumnInclusive;

  protected byte[] maxColumn;

  protected boolean maxColumnInclusive;

  public org.apache.hadoop.hbase.filter.ColumnRangeFilter(byte[], boolean, byte[], boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/FilterBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field minColumn:[B
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field minColumnInclusive:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field maxColumn:[B
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field maxColumnInclusive:Z
      24: aload_0
      25: aload_1
      26: putfield      #2                  // Field minColumn:[B
      29: aload_0
      30: iload_2
      31: putfield      #3                  // Field minColumnInclusive:Z
      34: aload_0
      35: aload_3
      36: putfield      #4                  // Field maxColumn:[B
      39: aload_0
      40: iload         4
      42: putfield      #5                  // Field maxColumnInclusive:Z
      45: return

  public boolean isMinColumnInclusive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minColumnInclusive:Z
       4: ireturn

  public boolean isMaxColumnInclusive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxColumnInclusive:Z
       4: ireturn

  public byte[] getMinColumn();
    Code:
       0: aload_0
       1: getfield      #2                  // Field minColumn:[B
       4: areturn

  public boolean getMinColumnInclusive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minColumnInclusive:Z
       4: ireturn

  public byte[] getMaxColumn();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxColumn:[B
       4: areturn

  public boolean getMaxColumnInclusive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxColumnInclusive:Z
       4: ireturn

  public boolean filterRowKey(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hbase.filter.Filter$ReturnCode filterKeyValue(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method filterCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
       5: areturn

  public org.apache.hadoop.hbase.filter.Filter$ReturnCode filterCell(org.apache.hadoop.hbase.Cell);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field minColumn:[B
       6: ifnull        24
       9: aload_1
      10: aload_0
      11: getfield      #2                  // Field minColumn:[B
      14: iconst_0
      15: aload_0
      16: getfield      #2                  // Field minColumn:[B
      19: arraylength
      20: invokestatic  #7                  // Method org/apache/hadoop/hbase/CellUtil.compareQualifiers:(Lorg/apache/hadoop/hbase/Cell;[BII)I
      23: istore_2
      24: iload_2
      25: ifge          32
      28: getstatic     #8                  // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.SEEK_NEXT_USING_HINT:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      31: areturn
      32: aload_0
      33: getfield      #3                  // Field minColumnInclusive:Z
      36: ifne          47
      39: iload_2
      40: ifne          47
      43: getstatic     #9                  // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.NEXT_COL:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      46: areturn
      47: aload_0
      48: getfield      #4                  // Field maxColumn:[B
      51: ifnonnull     58
      54: getstatic     #10                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      57: areturn
      58: aload_1
      59: aload_0
      60: getfield      #4                  // Field maxColumn:[B
      63: iconst_0
      64: aload_0
      65: getfield      #4                  // Field maxColumn:[B
      68: arraylength
      69: invokestatic  #7                  // Method org/apache/hadoop/hbase/CellUtil.compareQualifiers:(Lorg/apache/hadoop/hbase/Cell;[BII)I
      72: istore_3
      73: aload_0
      74: getfield      #5                  // Field maxColumnInclusive:Z
      77: ifeq          84
      80: iload_3
      81: ifle          95
      84: aload_0
      85: getfield      #5                  // Field maxColumnInclusive:Z
      88: ifne          99
      91: iload_3
      92: ifge          99
      95: getstatic     #10                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      98: areturn
      99: getstatic     #11                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.NEXT_ROW:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     102: areturn

  public static org.apache.hadoop.hbase.filter.Filter createFilterFromArguments(java.util.ArrayList<byte[]>);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/util/ArrayList.size:()I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #13                 // String Expected 4 but got: %s
      15: aload_0
      16: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      19: invokestatic  #14                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      22: aload_0
      23: iconst_0
      24: invokevirtual #15                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      27: checkcast     #16                 // class "[B"
      30: invokestatic  #17                 // Method org/apache/hadoop/hbase/filter/ParseFilter.removeQuotesFromByteArray:([B)[B
      33: astore_1
      34: aload_0
      35: iconst_1
      36: invokevirtual #15                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      39: checkcast     #16                 // class "[B"
      42: invokestatic  #18                 // Method org/apache/hadoop/hbase/filter/ParseFilter.convertByteArrayToBoolean:([B)Z
      45: istore_2
      46: aload_0
      47: iconst_2
      48: invokevirtual #15                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      51: checkcast     #16                 // class "[B"
      54: invokestatic  #17                 // Method org/apache/hadoop/hbase/filter/ParseFilter.removeQuotesFromByteArray:([B)[B
      57: astore_3
      58: aload_0
      59: iconst_3
      60: invokevirtual #15                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      63: checkcast     #16                 // class "[B"
      66: invokestatic  #18                 // Method org/apache/hadoop/hbase/filter/ParseFilter.convertByteArrayToBoolean:([B)Z
      69: istore        4
      71: aload_1
      72: arraylength
      73: ifne          78
      76: aconst_null
      77: astore_1
      78: aload_3
      79: arraylength
      80: ifne          85
      83: aconst_null
      84: astore_3
      85: new           #19                 // class org/apache/hadoop/hbase/filter/ColumnRangeFilter
      88: dup
      89: aload_1
      90: iload_2
      91: aload_3
      92: iload         4
      94: invokespecial #20                 // Method "<init>":([BZ[BZ)V
      97: areturn

  public byte[] toByteArray();
    Code:
       0: invokestatic  #21                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder;
       3: astore_1
       4: aload_0
       5: getfield      #2                  // Field minColumn:[B
       8: ifnull        23
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field minColumn:[B
      16: invokestatic  #22                 // Method org/apache/hbase/thirdparty/com/google/protobuf/UnsafeByteOperations.unsafeWrap:([B)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      19: invokevirtual #23                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder.setMinColumn:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder;
      22: pop
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field minColumnInclusive:Z
      28: invokevirtual #24                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder.setMinColumnInclusive:(Z)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder;
      31: pop
      32: aload_0
      33: getfield      #4                  // Field maxColumn:[B
      36: ifnull        51
      39: aload_1
      40: aload_0
      41: getfield      #4                  // Field maxColumn:[B
      44: invokestatic  #22                 // Method org/apache/hbase/thirdparty/com/google/protobuf/UnsafeByteOperations.unsafeWrap:([B)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      47: invokevirtual #25                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder.setMaxColumn:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder;
      50: pop
      51: aload_1
      52: aload_0
      53: getfield      #5                  // Field maxColumnInclusive:Z
      56: invokevirtual #26                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder.setMaxColumnInclusive:(Z)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder;
      59: pop
      60: aload_1
      61: invokevirtual #27                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter;
      64: invokevirtual #28                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.toByteArray:()[B
      67: areturn

  public static org.apache.hadoop.hbase.filter.ColumnRangeFilter parseFrom(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException;
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter;
       4: astore_1
       5: goto          18
       8: astore_2
       9: new           #31                 // class org/apache/hadoop/hbase/exceptions/DeserializationException
      12: dup
      13: aload_2
      14: invokespecial #32                 // Method org/apache/hadoop/hbase/exceptions/DeserializationException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
      18: new           #19                 // class org/apache/hadoop/hbase/filter/ColumnRangeFilter
      21: dup
      22: aload_1
      23: invokevirtual #33                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.hasMinColumn:()Z
      26: ifeq          39
      29: aload_1
      30: invokevirtual #34                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.getMinColumn:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      33: invokevirtual #35                 // Method org/apache/hbase/thirdparty/com/google/protobuf/ByteString.toByteArray:()[B
      36: goto          40
      39: aconst_null
      40: aload_1
      41: invokevirtual #36                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.getMinColumnInclusive:()Z
      44: aload_1
      45: invokevirtual #37                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.hasMaxColumn:()Z
      48: ifeq          61
      51: aload_1
      52: invokevirtual #38                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.getMaxColumn:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      55: invokevirtual #35                 // Method org/apache/hbase/thirdparty/com/google/protobuf/ByteString.toByteArray:()[B
      58: goto          62
      61: aconst_null
      62: aload_1
      63: invokevirtual #39                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnRangeFilter.getMaxColumnInclusive:()Z
      66: invokespecial #20                 // Method "<init>":([BZ[BZ)V
      69: areturn
    Exception table:
       from    to  target type
           0     5     8   Class org/apache/hbase/thirdparty/com/google/protobuf/InvalidProtocolBufferException

  boolean areSerializedFieldsEqual(org.apache.hadoop.hbase.filter.Filter);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #19                 // class org/apache/hadoop/hbase/filter/ColumnRangeFilter
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #19                 // class org/apache/hadoop/hbase/filter/ColumnRangeFilter
      20: astore_2
      21: aload_0
      22: invokevirtual #40                 // Method getMinColumn:()[B
      25: aload_2
      26: invokevirtual #40                 // Method getMinColumn:()[B
      29: invokestatic  #41                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
      32: ifeq          75
      35: aload_0
      36: invokevirtual #42                 // Method getMinColumnInclusive:()Z
      39: aload_2
      40: invokevirtual #42                 // Method getMinColumnInclusive:()Z
      43: if_icmpne     75
      46: aload_0
      47: invokevirtual #43                 // Method getMaxColumn:()[B
      50: aload_2
      51: invokevirtual #43                 // Method getMaxColumn:()[B
      54: invokestatic  #41                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
      57: ifeq          75
      60: aload_0
      61: invokevirtual #44                 // Method getMaxColumnInclusive:()Z
      64: aload_2
      65: invokevirtual #44                 // Method getMaxColumnInclusive:()Z
      68: if_icmpne     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public org.apache.hadoop.hbase.Cell getNextCellHint(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field minColumn:[B
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field minColumn:[B
      10: invokestatic  #45                 // Method org/apache/hadoop/hbase/util/Bytes.len:([B)I
      13: invokestatic  #46                 // Method org/apache/hadoop/hbase/PrivateCellUtil.createFirstOnRowCol:(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
      16: areturn

  public java.lang.String toString();
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #50                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #52                 // String
      19: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #3                  // Field minColumnInclusive:Z
      26: ifeq          34
      29: ldc           #53                 // String [
      31: goto          36
      34: ldc           #54                 // String (
      36: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #2                  // Field minColumn:[B
      43: invokestatic  #55                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      46: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #56                 // String ,
      51: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #4                  // Field maxColumn:[B
      58: invokestatic  #55                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      61: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #5                  // Field maxColumnInclusive:Z
      68: ifeq          76
      71: ldc           #57                 // String ]
      73: goto          78
      76: ldc           #58                 // String )
      78: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #60                 // class org/apache/hadoop/hbase/filter/Filter
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #60                 // class org/apache/hadoop/hbase/filter/Filter
      12: invokevirtual #61                 // Method areSerializedFieldsEqual:(Lorg/apache/hadoop/hbase/filter/Filter;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int hashCode();
    Code:
       0: iconst_4
       1: anewarray     #62                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #40                 // Method getMinColumn:()[B
      10: invokestatic  #63                 // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
      13: invokestatic  #64                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #42                 // Method getMinColumnInclusive:()Z
      23: invokestatic  #65                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_0
      30: invokevirtual #43                 // Method getMaxColumn:()[B
      33: invokestatic  #63                 // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
      36: invokestatic  #64                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: dup
      41: iconst_3
      42: aload_0
      43: invokevirtual #44                 // Method getMaxColumnInclusive:()Z
      46: invokestatic  #65                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      49: aastore
      50: invokestatic  #66                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      53: ireturn
}
