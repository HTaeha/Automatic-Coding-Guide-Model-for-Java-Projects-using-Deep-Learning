Compiled from "HFileSystem.java"
public class org.apache.hadoop.hbase.fs.HFileSystem extends org.apache.hadoop.fs.FilterFileSystem {
  public static final org.slf4j.Logger LOG;

  public org.apache.hadoop.hbase.fs.HFileSystem(org.apache.hadoop.conf.Configuration, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FilterFileSystem."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       9: putfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      12: aload_0
      13: iload_2
      14: putfield      #4                  // Field useHBaseChecksum:Z
      17: aload_0
      18: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      21: aload_1
      22: invokestatic  #5                  // Method getDefaultUri:(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
      25: aload_1
      26: invokevirtual #6                  // Method org/apache/hadoop/fs/FileSystem.initialize:(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
      29: aload_0
      30: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      33: instanceof    #7                  // class org/apache/hadoop/fs/LocalFileSystem
      36: ifeq          55
      39: aload_0
      40: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      43: iconst_0
      44: invokevirtual #8                  // Method org/apache/hadoop/fs/FileSystem.setWriteChecksum:(Z)V
      47: aload_0
      48: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      51: iconst_0
      52: invokevirtual #9                  // Method org/apache/hadoop/fs/FileSystem.setVerifyChecksum:(Z)V
      55: aload_1
      56: invokestatic  #10                 // Method addLocationsOrderInterceptor:(Lorg/apache/hadoop/conf/Configuration;)Z
      59: pop
      60: iload_2
      61: ifeq          114
      64: aload_0
      65: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      68: instanceof    #7                  // class org/apache/hadoop/fs/LocalFileSystem
      71: ifne          114
      74: new           #11                 // class org/apache/hadoop/conf/Configuration
      77: dup
      78: aload_1
      79: invokespecial #12                 // Method org/apache/hadoop/conf/Configuration."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      82: astore_1
      83: aload_1
      84: ldc           #13                 // String dfs.client.read.shortcircuit.skip.checksum
      86: iconst_1
      87: invokevirtual #14                 // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
      90: aload_0
      91: aload_0
      92: aload_1
      93: invokestatic  #15                 // Method newInstanceFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      96: aload_1
      97: invokespecial #16                 // Method maybeWrapFileSystem:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     100: putfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
     103: aload_0
     104: getfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
     107: iconst_0
     108: invokevirtual #9                  // Method org/apache/hadoop/fs/FileSystem.setVerifyChecksum:(Z)V
     111: goto          127
     114: aload_0
     115: aload_0
     116: aload_0
     117: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     120: aload_1
     121: invokespecial #16                 // Method maybeWrapFileSystem:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     124: putfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
     127: aload_0
     128: aload_0
     129: aload_0
     130: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     133: aload_1
     134: invokespecial #16                 // Method maybeWrapFileSystem:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     137: putfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     140: return

  public org.apache.hadoop.hbase.fs.HFileSystem(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/fs/FilterFileSystem."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       9: aload_0
      10: aload_1
      11: putfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field useHBaseChecksum:Z
      19: return

  public org.apache.hadoop.fs.FileSystem getNoChecksumFs();
    Code:
       0: aload_0
       1: getfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public org.apache.hadoop.fs.FileSystem getBackingFs() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  public void setStoragePolicy(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: aload_2
       6: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/FSUtils.setStoragePolicy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
       9: return

  public java.lang.String getStoragePolicyName(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: ldc           #19                 // String getStoragePolicy
       6: iconst_1
       7: anewarray     #20                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokestatic  #21                 // Method org/apache/hadoop/hbase/util/ReflectionUtils.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: aload_2
      19: ldc           #22                 // String getName
      21: iconst_0
      22: anewarray     #20                 // class java/lang/Object
      25: invokestatic  #21                 // Method org/apache/hadoop/hbase/util/ReflectionUtils.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #23                 // class java/lang/String
      31: areturn
      32: astore_2
      33: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      36: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      41: ifeq          55
      44: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #27                 // String Failed to get policy directly
      49: aload_2
      50: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: aload_0
      56: aload_1
      57: invokespecial #29                 // Method getStoragePolicyForOldHDFSVersion:(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
      60: areturn
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/Exception

  public boolean useHBaseChecksum();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useHBaseChecksum:Z
       4: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/apache/hadoop/fs/FilterFileSystem.close:()V
       4: aload_0
       5: getfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
       8: aload_0
       9: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      12: if_acmpeq     22
      15: aload_0
      16: getfield      #17                 // Field noChecksumFs:Lorg/apache/hadoop/fs/FileSystem;
      19: invokevirtual #54                 // Method org/apache/hadoop/fs/FileSystem.close:()V
      22: return

  public static boolean addLocationsOrderInterceptor(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #73                 // class org/apache/hadoop/hbase/fs/HFileSystem$ReorderWALBlocks
       4: dup
       5: invokespecial #74                 // Method org/apache/hadoop/hbase/fs/HFileSystem$ReorderWALBlocks."<init>":()V
       8: invokestatic  #75                 // Method addLocationsOrderInterceptor:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/fs/HFileSystem$ReorderBlocks;)Z
      11: ireturn

  static boolean addLocationsOrderInterceptor(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.fs.HFileSystem$ReorderBlocks);
    Code:
       0: aload_0
       1: ldc           #76                 // String hbase.filesystem.reorder.blocks
       3: iconst_1
       4: invokevirtual #77                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: ifne          22
      10: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      13: ldc           #78                 // String addLocationsOrderInterceptor configured to false
      15: invokeinterface #79,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      20: iconst_0
      21: ireturn
      22: aload_0
      23: invokestatic  #2                  // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      26: astore_2
      27: goto          44
      30: astore_3
      31: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #80                 // String Can't get the file system from the conf.
      36: aload_3
      37: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: iconst_0
      43: ireturn
      44: aload_2
      45: instanceof    #30                 // class org/apache/hadoop/hdfs/DistributedFileSystem
      48: ifne          63
      51: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      54: ldc           #81                 // String The file system is not a DistributedFileSystem. Skipping on block location reordering
      56: invokeinterface #79,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      61: iconst_0
      62: ireturn
      63: aload_2
      64: checkcast     #30                 // class org/apache/hadoop/hdfs/DistributedFileSystem
      67: astore_3
      68: aload_3
      69: invokevirtual #31                 // Method org/apache/hadoop/hdfs/DistributedFileSystem.getClient:()Lorg/apache/hadoop/hdfs/DFSClient;
      72: astore        4
      74: aload         4
      76: ifnonnull     91
      79: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      82: ldc           #82                 // String The DistributedFileSystem does not contain a DFSClient. Can't add the location block reordering interceptor. Continuing, but this is unexpected.
      84: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      89: iconst_0
      90: ireturn
      91: ldc           #84                 // class org/apache/hadoop/hdfs/DFSClient
      93: ldc           #85                 // String namenode
      95: invokevirtual #86                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      98: astore        5
     100: aload         5
     102: iconst_1
     103: invokevirtual #87                 // Method java/lang/reflect/Field.setAccessible:(Z)V
     106: ldc           #88                 // class java/lang/reflect/Field
     108: ldc           #89                 // String modifiers
     110: invokevirtual #86                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     113: astore        6
     115: aload         6
     117: iconst_1
     118: invokevirtual #87                 // Method java/lang/reflect/Field.setAccessible:(Z)V
     121: aload         6
     123: aload         5
     125: aload         5
     127: invokevirtual #90                 // Method java/lang/reflect/Field.getModifiers:()I
     130: bipush        -17
     132: iand
     133: invokevirtual #92                 // Method java/lang/reflect/Field.setInt:(Ljava/lang/Object;I)V
     136: aload         5
     138: aload         4
     140: invokevirtual #93                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     143: checkcast     #94                 // class org/apache/hadoop/hdfs/protocol/ClientProtocol
     146: astore        7
     148: aload         7
     150: ifnonnull     165
     153: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     156: ldc           #95                 // String The DFSClient is not linked to a namenode. Can't add the location block reordering interceptor. Continuing, but this is unexpected.
     158: invokeinterface #83,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     163: iconst_0
     164: ireturn
     165: aload         7
     167: aload_1
     168: aload_0
     169: invokestatic  #96                 // Method createReorderingProxy:(Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;Lorg/apache/hadoop/hbase/fs/HFileSystem$ReorderBlocks;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
     172: astore        8
     174: aload         5
     176: aload         4
     178: aload         8
     180: invokevirtual #97                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
     183: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     186: new           #45                 // class java/lang/StringBuilder
     189: dup
     190: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     193: ldc           #98                 // String Added intercepting call to namenode#getBlockLocations so can do block reordering using class
     195: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_1
     199: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     202: invokevirtual #100                // Method java/lang/Class.getName:()Ljava/lang/String;
     205: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #101,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     216: goto          251
     219: astore        5
     221: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     224: ldc           #103                // String Can't modify the DFSClient#namenode field to add the location reorder.
     226: aload         5
     228: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     233: iconst_0
     234: ireturn
     235: astore        5
     237: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     240: ldc           #103                // String Can't modify the DFSClient#namenode field to add the location reorder.
     242: aload         5
     244: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     249: iconst_0
     250: ireturn
     251: iconst_1
     252: ireturn
    Exception table:
       from    to  target type
          22    27    30   Class java/io/IOException
          91   164   219   Class java/lang/NoSuchFieldException
         165   216   219   Class java/lang/NoSuchFieldException
          91   164   235   Class java/lang/IllegalAccessException
         165   216   235   Class java/lang/IllegalAccessException

  public static org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #110                // class org/apache/hadoop/hbase/fs/HFileSystem
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #111                // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Z)V
       9: areturn

  public static org.apache.hadoop.fs.FileSystem getLocalFs(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #110                // class org/apache/hadoop/hbase/fs/HFileSystem
       3: dup
       4: aload_0
       5: invokestatic  #112                // Method org/apache/hadoop/fs/FileSystem.getLocal:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
       8: invokespecial #113                // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
      11: areturn

  public org.apache.hadoop.fs.FSDataOutputStream createNonRecursive(org.apache.hadoop.fs.Path, boolean, int, short, long, org.apache.hadoop.util.Progressable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: lload         5
      11: aload         7
      13: invokevirtual #114                // Method org/apache/hadoop/fs/FileSystem.createNonRecursive:(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      16: areturn

  static {};
    Code:
       0: ldc           #110                // class org/apache/hadoop/hbase/fs/HFileSystem
       2: invokestatic  #115                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
       8: bipush        -128
      10: putstatic     #35                 // Field unspecifiedStoragePolicyId:B
      13: return
}
