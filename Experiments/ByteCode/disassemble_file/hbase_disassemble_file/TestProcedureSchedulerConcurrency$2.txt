Compiled from "TestProcedureSchedulerConcurrency.java"
class org.apache.hadoop.hbase.procedure2.TestProcedureSchedulerConcurrency$2 extends java.lang.Thread {
  final org.apache.hadoop.hbase.procedure2.ProcedureScheduler val$sched;

  final java.util.concurrent.ConcurrentSkipListSet val$waitQueue;

  final java.util.concurrent.atomic.AtomicInteger val$waitCount;

  final org.apache.hadoop.hbase.procedure2.TestProcedureSchedulerConcurrency this$0;

  org.apache.hadoop.hbase.procedure2.TestProcedureSchedulerConcurrency$2(org.apache.hadoop.hbase.procedure2.TestProcedureSchedulerConcurrency, org.apache.hadoop.hbase.procedure2.ProcedureScheduler, java.util.concurrent.ConcurrentSkipListSet, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$sched:Lorg/apache/hadoop/hbase/procedure2/ProcedureScheduler;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$waitQueue:Ljava/util/concurrent/ConcurrentSkipListSet;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$waitCount:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Thread."<init>":()V
      25: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$sched:Lorg/apache/hadoop/hbase/procedure2/ProcedureScheduler;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/procedure2/ProcedureScheduler.poll:()Lorg/apache/hadoop/hbase/procedure2/Procedure;
       9: checkcast     #7                  // class org/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency$TestProcedureWithEvent
      12: astore_1
      13: aload_1
      14: ifnonnull     20
      17: goto          0
      20: aload_1
      21: invokevirtual #8                  // Method org/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency$TestProcedureWithEvent.getEvent:()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      24: invokevirtual #9                  // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.suspend:()V
      27: aload_0
      28: getfield      #3                  // Field val$waitQueue:Ljava/util/concurrent/ConcurrentSkipListSet;
      31: aload_1
      32: invokevirtual #10                 // Method java/util/concurrent/ConcurrentSkipListSet.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_1
      37: invokevirtual #8                  // Method org/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency$TestProcedureWithEvent.getEvent:()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      40: aload_1
      41: invokevirtual #11                 // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.suspendIfNotReady:(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
      44: pop
      45: invokestatic  #12                 // Method org/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency.access$000:()Lorg/slf4j/Logger;
      48: new           #13                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #15                 // String WAIT
      57: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #8                  // Method org/apache/hadoop/hbase/procedure2/TestProcedureSchedulerConcurrency$TestProcedureWithEvent.getEvent:()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #19,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      75: aload_0
      76: getfield      #4                  // Field val$waitCount:Ljava/util/concurrent/atomic/AtomicInteger;
      79: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      82: sipush        500
      85: if_icmplt     91
      88: goto          94
      91: goto          0
      94: return
}
