Compiled from "UserScanQueryMatcher.java"
public abstract class org.apache.hadoop.hbase.regionserver.querymatcher.UserScanQueryMatcher extends org.apache.hadoop.hbase.regionserver.querymatcher.ScanQueryMatcher {
  protected final boolean hasNullColumn;

  protected final org.apache.hadoop.hbase.filter.Filter filter;

  protected final byte[] stopRow;

  protected final org.apache.hadoop.hbase.io.TimeRange tr;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.hbase.regionserver.querymatcher.UserScanQueryMatcher(org.apache.hadoop.hbase.client.Scan, org.apache.hadoop.hbase.regionserver.ScanInfo, org.apache.hadoop.hbase.regionserver.querymatcher.ColumnTracker, boolean, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #5                  // Method createStartKey:(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;)Lorg/apache/hadoop/hbase/Cell;
       6: aload_2
       7: aload_3
       8: lload         5
      10: lload         7
      12: invokespecial #6                  // Method org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher."<init>":(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;JJ)V
      15: aload_0
      16: iconst_0
      17: putfield      #7                  // Field count:I
      20: aload_0
      21: aconst_null
      22: putfield      #8                  // Field curColCell:Lorg/apache/hadoop/hbase/Cell;
      25: aload_0
      26: iload         4
      28: putfield      #9                  // Field hasNullColumn:Z
      31: aload_0
      32: aload_1
      33: invokevirtual #10                 // Method org/apache/hadoop/hbase/client/Scan.getFilter:()Lorg/apache/hadoop/hbase/filter/Filter;
      36: putfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
      39: aload_0
      40: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
      43: ifnull        78
      46: aload_0
      47: aload_1
      48: invokevirtual #12                 // Method org/apache/hadoop/hbase/client/Scan.isRaw:()Z
      51: ifeq          61
      54: aload_1
      55: invokevirtual #13                 // Method org/apache/hadoop/hbase/client/Scan.getMaxVersions:()I
      58: goto          72
      61: aload_1
      62: invokevirtual #13                 // Method org/apache/hadoop/hbase/client/Scan.getMaxVersions:()I
      65: aload_2
      66: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/ScanInfo.getMaxVersions:()I
      69: invokestatic  #15                 // Method java/lang/Math.min:(II)I
      72: putfield      #16                 // Field versionsAfterFilter:I
      75: goto          83
      78: aload_0
      79: iconst_0
      80: putfield      #16                 // Field versionsAfterFilter:I
      83: aload_0
      84: aload_1
      85: invokevirtual #17                 // Method org/apache/hadoop/hbase/client/Scan.getStopRow:()[B
      88: putfield      #18                 // Field stopRow:[B
      91: aload_1
      92: invokevirtual #19                 // Method org/apache/hadoop/hbase/client/Scan.getColumnFamilyTimeRange:()Ljava/util/Map;
      95: aload_2
      96: invokevirtual #20                 // Method org/apache/hadoop/hbase/regionserver/ScanInfo.getFamily:()[B
      99: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #22                 // class org/apache/hadoop/hbase/io/TimeRange
     107: astore        9
     109: aload         9
     111: ifnonnull     125
     114: aload_0
     115: aload_1
     116: invokevirtual #23                 // Method org/apache/hadoop/hbase/client/Scan.getTimeRange:()Lorg/apache/hadoop/hbase/io/TimeRange;
     119: putfield      #24                 // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
     122: goto          131
     125: aload_0
     126: aload         9
     128: putfield      #24                 // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
     131: return

  public boolean hasNullColumnInQuery();
    Code:
       0: aload_0
       1: getfield      #9                  // Field hasNullColumn:Z
       4: ireturn

  public boolean isUserScan();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.hadoop.hbase.filter.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
       4: areturn

  public org.apache.hadoop.hbase.Cell getNextKeyHint(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
      13: aload_1
      14: invokevirtual #25                 // Method org/apache/hadoop/hbase/filter/Filter.getNextCellHint:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
      17: areturn

  public void beforeShipped() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher.beforeShipped:()V
       4: aload_0
       5: getfield      #8                  // Field curColCell:Lorg/apache/hadoop/hbase/Cell;
       8: ifnull        22
      11: aload_0
      12: aload_0
      13: getfield      #8                  // Field curColCell:Lorg/apache/hadoop/hbase/Cell;
      16: invokestatic  #27                 // Method org/apache/hadoop/hbase/KeyValueUtil.toNewKeyCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
      19: putfield      #8                  // Field curColCell:Lorg/apache/hadoop/hbase/Cell;
      22: return

  protected final org.apache.hadoop.hbase.regionserver.querymatcher.ScanQueryMatcher$MatchCode matchColumn(org.apache.hadoop.hbase.Cell, long, byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field tr:Lorg/apache/hadoop/hbase/io/TimeRange;
       4: lload_2
       5: invokevirtual #28                 // Method org/apache/hadoop/hbase/io/TimeRange.compare:(J)I
       8: istore        5
      10: iload         5
      12: ifle          19
      15: getstatic     #29                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.SKIP:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      18: areturn
      19: iload         5
      21: ifge          35
      24: aload_0
      25: getfield      #30                 // Field columns:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;
      28: aload_1
      29: invokeinterface #31,  2           // InterfaceMethod org/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker.getNextRowOrNextColumn:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      34: areturn
      35: aload_0
      36: getfield      #30                 // Field columns:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;
      39: aload_1
      40: iload         4
      42: invokeinterface #32,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker.checkColumn:(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      47: astore        6
      49: aload         6
      51: getstatic     #33                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      54: if_acmpeq     60
      57: aload         6
      59: areturn
      60: aload_0
      61: getfield      #30                 // Field columns:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;
      64: aload_1
      65: lload_2
      66: iload         4
      68: iconst_0
      69: invokeinterface #34,  6           // InterfaceMethod org/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker.checkVersions:(Lorg/apache/hadoop/hbase/Cell;JBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      74: astore        6
      76: getstatic     #35                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/UserScanQueryMatcher$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$querymatcher$ScanQueryMatcher$MatchCode:[I
      79: aload         6
      81: invokevirtual #36                 // Method org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.ordinal:()I
      84: iaload
      85: lookupswitch  { // 2
                     1: 112
                     2: 116
               default: 120
          }
     112: getstatic     #29                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.SKIP:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     115: areturn
     116: getstatic     #37                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.SEEK_NEXT_COL:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     119: areturn
     120: getstatic     #38                 // Field $assertionsDisabled:Z
     123: ifne          158
     126: aload         6
     128: getstatic     #33                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     131: if_acmpeq     158
     134: aload         6
     136: getstatic     #39                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE_AND_SEEK_NEXT_COL:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     139: if_acmpeq     158
     142: aload         6
     144: getstatic     #40                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE_AND_SEEK_NEXT_ROW:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     147: if_acmpeq     158
     150: new           #41                 // class java/lang/AssertionError
     153: dup
     154: invokespecial #42                 // Method java/lang/AssertionError."<init>":()V
     157: athrow
     158: aload_0
     159: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
     162: ifnonnull     170
     165: aload         6
     167: goto          185
     170: aload_0
     171: aload_1
     172: aload         6
     174: aload_0
     175: getfield      #11                 // Field filter:Lorg/apache/hadoop/hbase/filter/Filter;
     178: aload_1
     179: invokevirtual #43                 // Method org/apache/hadoop/hbase/filter/Filter.filterCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     182: invokespecial #44                 // Method mergeFilterResponse:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     185: areturn

  protected abstract boolean isGet();

  protected abstract boolean moreRowsMayExistsAfter(int);

  public boolean moreRowsMayExistAfter(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method isGet:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #18                 // Field stopRow:[B
      13: ifnull        24
      16: aload_0
      17: getfield      #18                 // Field stopRow:[B
      20: arraylength
      21: ifne          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: aload_0
      28: getfield      #55                 // Field rowComparator:Lorg/apache/hadoop/hbase/CellComparator;
      31: aload_1
      32: aload_0
      33: getfield      #18                 // Field stopRow:[B
      36: iconst_0
      37: aload_0
      38: getfield      #18                 // Field stopRow:[B
      41: arraylength
      42: invokeinterface #56,  5           // InterfaceMethod org/apache/hadoop/hbase/CellComparator.compareRows:(Lorg/apache/hadoop/hbase/Cell;[BII)I
      47: invokevirtual #57                 // Method moreRowsMayExistsAfter:(I)Z
      50: ireturn

  public static org.apache.hadoop.hbase.regionserver.querymatcher.UserScanQueryMatcher create(org.apache.hadoop.hbase.client.Scan, org.apache.hadoop.hbase.regionserver.ScanInfo, java.util.NavigableSet<byte[]>, long, long, org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        26
       4: aload_2
       5: invokeinterface #58,  1           // InterfaceMethod java/util/NavigableSet.size:()I
      10: ifeq          26
      13: aload_2
      14: invokeinterface #59,  1           // InterfaceMethod java/util/NavigableSet.first:()Ljava/lang/Object;
      19: checkcast     #60                 // class "[B"
      22: arraylength
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore        8
      33: aload         7
      35: aload_2
      36: aload_1
      37: lload_3
      38: aload_0
      39: invokestatic  #61                 // Method getTrackers:(Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;JLorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/util/Pair;
      42: astore        9
      44: aload         9
      46: invokevirtual #62                 // Method org/apache/hadoop/hbase/util/Pair.getFirst:()Ljava/lang/Object;
      49: checkcast     #63                 // class org/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker
      52: astore        10
      54: aload         9
      56: invokevirtual #64                 // Method org/apache/hadoop/hbase/util/Pair.getSecond:()Ljava/lang/Object;
      59: checkcast     #65                 // class org/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker
      62: astore        11
      64: aload_0
      65: invokevirtual #12                 // Method org/apache/hadoop/hbase/client/Scan.isRaw:()Z
      68: ifeq          84
      71: aload_0
      72: aload_1
      73: aload         11
      75: iload         8
      77: lload_3
      78: lload         5
      80: invokestatic  #66                 // Method org/apache/hadoop/hbase/regionserver/querymatcher/RawScanQueryMatcher.create:(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;ZJJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/RawScanQueryMatcher;
      83: areturn
      84: aload_0
      85: aload_1
      86: aload         11
      88: aload         10
      90: iload         8
      92: lload_3
      93: lload         5
      95: invokestatic  #67                 // Method org/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher.create:(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;ZJJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher;
      98: areturn

  static {};
    Code:
       0: ldc           #68                 // class org/apache/hadoop/hbase/regionserver/querymatcher/UserScanQueryMatcher
       2: invokevirtual #69                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #38                 // Field $assertionsDisabled:Z
      16: return
}
