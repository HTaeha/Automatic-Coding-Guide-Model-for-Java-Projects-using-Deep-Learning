Compiled from "NamespaceDescriptor.java"
public class org.apache.hadoop.hbase.NamespaceDescriptor {
  public static final byte[] SYSTEM_NAMESPACE_NAME;

  public static final java.lang.String SYSTEM_NAMESPACE_NAME_STR;

  public static final byte[] DEFAULT_NAMESPACE_NAME;

  public static final java.lang.String DEFAULT_NAMESPACE_NAME_STR;

  public static final org.apache.hadoop.hbase.NamespaceDescriptor DEFAULT_NAMESPACE;

  public static final org.apache.hadoop.hbase.NamespaceDescriptor SYSTEM_NAMESPACE;

  public static final java.util.Set<java.lang.String> RESERVED_NAMESPACES;

  public static final java.util.Set<byte[]> RESERVED_NAMESPACES_BYTES;

  public static final java.util.Comparator<org.apache.hadoop.hbase.NamespaceDescriptor> NAMESPACE_DESCRIPTOR_COMPARATOR;

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getConfigurationValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field configuration:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/lang/String
      13: areturn

  public java.util.Map<java.lang.String, java.lang.String> getConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field configuration:Ljava/util/Map;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setConfiguration(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: invokevirtual #8                  // Method removeConfiguration:(Ljava/lang/String;)V
       9: goto          24
      12: aload_0
      13: getfield      #2                  // Field configuration:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public void removeConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field configuration:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #15                 // String NAME
      18: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: ldc           #17                 // String  => '
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: getfield      #3                  // Field name:Ljava/lang/String;
      34: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #18                 // String '
      41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_0
      46: getfield      #2                  // Field configuration:Ljava/util/Map;
      49: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          147
      69: aload_2
      70: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #23                 // class java/util/Map$Entry
      78: astore_3
      79: aload_3
      80: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: checkcast     #6                  // class java/lang/String
      88: astore        4
      90: aload_3
      91: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: checkcast     #6                  // class java/lang/String
      99: astore        5
     101: aload         4
     103: ifnonnull     109
     106: goto          60
     109: aload_1
     110: ldc           #26                 // String ,
     112: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: pop
     116: aload_1
     117: aload         4
     119: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_1
     124: ldc           #17                 // String  => '
     126: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: pop
     130: aload_1
     131: aload         5
     133: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: pop
     137: aload_1
     138: ldc           #18                 // String '
     140: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: pop
     144: goto          60
     147: aload_1
     148: bipush        125
     150: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     153: pop
     154: aload_1
     155: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: areturn

  public static org.apache.hadoop.hbase.NamespaceDescriptor$Builder create(java.lang.String);
    Code:
       0: new           #28                 // class org/apache/hadoop/hbase/NamespaceDescriptor$Builder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #29                 // Method org/apache/hadoop/hbase/NamespaceDescriptor$Builder."<init>":(Ljava/lang/String;Lorg/apache/hadoop/hbase/NamespaceDescriptor$1;)V
       9: areturn

  public static org.apache.hadoop.hbase.NamespaceDescriptor$Builder create(org.apache.hadoop.hbase.NamespaceDescriptor);
    Code:
       0: new           #28                 // class org/apache/hadoop/hbase/NamespaceDescriptor$Builder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #30                 // Method org/apache/hadoop/hbase/NamespaceDescriptor$Builder."<init>":(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor$1;)V
       9: areturn

  static java.lang.String access$200(org.apache.hadoop.hbase.NamespaceDescriptor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  static java.util.Map access$300(org.apache.hadoop.hbase.NamespaceDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field configuration:Ljava/util/Map;
       4: areturn

  org.apache.hadoop.hbase.NamespaceDescriptor(java.lang.String, org.apache.hadoop.hbase.NamespaceDescriptor$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/String;)V
       5: return

  static java.util.Map access$302(org.apache.hadoop.hbase.NamespaceDescriptor, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field configuration:Ljava/util/Map;
       6: areturn

  static {};
    Code:
       0: ldc           #31                 // String hbase
       2: invokestatic  #32                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       5: putstatic     #33                 // Field SYSTEM_NAMESPACE_NAME:[B
       8: getstatic     #33                 // Field SYSTEM_NAMESPACE_NAME:[B
      11: invokestatic  #34                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      14: putstatic     #35                 // Field SYSTEM_NAMESPACE_NAME_STR:Ljava/lang/String;
      17: ldc           #36                 // String default
      19: invokestatic  #32                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      22: putstatic     #37                 // Field DEFAULT_NAMESPACE_NAME:[B
      25: getstatic     #37                 // Field DEFAULT_NAMESPACE_NAME:[B
      28: invokestatic  #34                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      31: putstatic     #38                 // Field DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
      34: getstatic     #38                 // Field DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
      37: invokestatic  #39                 // Method create:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
      40: invokevirtual #40                 // Method org/apache/hadoop/hbase/NamespaceDescriptor$Builder.build:()Lorg/apache/hadoop/hbase/NamespaceDescriptor;
      43: putstatic     #41                 // Field DEFAULT_NAMESPACE:Lorg/apache/hadoop/hbase/NamespaceDescriptor;
      46: getstatic     #35                 // Field SYSTEM_NAMESPACE_NAME_STR:Ljava/lang/String;
      49: invokestatic  #39                 // Method create:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
      52: invokevirtual #40                 // Method org/apache/hadoop/hbase/NamespaceDescriptor$Builder.build:()Lorg/apache/hadoop/hbase/NamespaceDescriptor;
      55: putstatic     #42                 // Field SYSTEM_NAMESPACE:Lorg/apache/hadoop/hbase/NamespaceDescriptor;
      58: new           #43                 // class java/util/HashSet
      61: dup
      62: invokespecial #44                 // Method java/util/HashSet."<init>":()V
      65: astore_0
      66: aload_0
      67: getstatic     #38                 // Field DEFAULT_NAMESPACE_NAME_STR:Ljava/lang/String;
      70: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      75: pop
      76: aload_0
      77: getstatic     #35                 // Field SYSTEM_NAMESPACE_NAME_STR:Ljava/lang/String;
      80: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_0
      87: invokestatic  #46                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      90: putstatic     #47                 // Field RESERVED_NAMESPACES:Ljava/util/Set;
      93: new           #48                 // class java/util/TreeSet
      96: dup
      97: getstatic     #49                 // Field org/apache/hadoop/hbase/util/Bytes.BYTES_RAWCOMPARATOR:Lorg/apache/hadoop/io/RawComparator;
     100: invokespecial #50                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
     103: astore_0
     104: getstatic     #47                 // Field RESERVED_NAMESPACES:Ljava/util/Set;
     107: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     112: astore_1
     113: aload_1
     114: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          146
     122: aload_1
     123: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #6                  // class java/lang/String
     131: astore_2
     132: aload_0
     133: aload_2
     134: invokestatic  #32                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     137: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     142: pop
     143: goto          113
     146: aload_0
     147: invokestatic  #46                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     150: putstatic     #51                 // Field RESERVED_NAMESPACES_BYTES:Ljava/util/Set;
     153: new           #52                 // class org/apache/hadoop/hbase/NamespaceDescriptor$1
     156: dup
     157: invokespecial #53                 // Method org/apache/hadoop/hbase/NamespaceDescriptor$1."<init>":()V
     160: putstatic     #54                 // Field NAMESPACE_DESCRIPTOR_COMPARATOR:Ljava/util/Comparator;
     163: return
}
