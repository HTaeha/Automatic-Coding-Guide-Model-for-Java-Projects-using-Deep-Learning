Compiled from "MultiThreadedAction.java"
public class org.apache.hadoop.hbase.util.MultiThreadedAction$DefaultDataGenerator extends org.apache.hadoop.hbase.util.test.LoadTestDataGenerator {
  public org.apache.hadoop.hbase.util.MultiThreadedAction$DefaultDataGenerator(int, int, int, int, byte[]...);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/hadoop/hbase/util/test/LoadTestDataGenerator."<init>":(II)V
       6: aload_0
       7: aconst_null
       8: checkcast     #2                  // class "[[B"
      11: putfield      #3                  // Field columnFamilies:[[B
      14: aload_0
      15: new           #4                  // class java/util/Random
      18: dup
      19: invokespecial #5                  // Method java/util/Random."<init>":()V
      22: putfield      #6                  // Field random:Ljava/util/Random;
      25: aload_0
      26: aload         5
      28: putfield      #3                  // Field columnFamilies:[[B
      31: aload_0
      32: iload_3
      33: putfield      #7                  // Field minColumnsPerKey:I
      36: aload_0
      37: iload         4
      39: putfield      #8                  // Field maxColumnsPerKey:I
      42: return

  public org.apache.hadoop.hbase.util.MultiThreadedAction$DefaultDataGenerator(byte[]...);
    Code:
       0: aload_0
       1: sipush        256
       4: sipush        1024
       7: iconst_1
       8: bipush        10
      10: aload_1
      11: invokespecial #9                  // Method "<init>":(IIII[[B)V
      14: return

  public byte[] getDeterministicUniqueKey(long);
    Code:
       0: lload_1
       1: invokestatic  #10                 // Method org/apache/hadoop/hbase/util/LoadTestKVGenerator.md5PrefixedKey:(J)Ljava/lang/String;
       4: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       7: areturn

  public byte[][] getColumnFamilies();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columnFamilies:[[B
       4: areturn

  public byte[][] generateColumnsForCf(byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field minColumnsPerKey:I
       4: aload_0
       5: getfield      #6                  // Field random:Ljava/util/Random;
       8: aload_0
       9: getfield      #8                  // Field maxColumnsPerKey:I
      12: aload_0
      13: getfield      #7                  // Field minColumnsPerKey:I
      16: isub
      17: iconst_1
      18: iadd
      19: invokevirtual #12                 // Method java/util/Random.nextInt:(I)I
      22: iadd
      23: istore_3
      24: iload_3
      25: anewarray     #13                 // class "[B"
      28: astore        4
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload_3
      36: if_icmpge     58
      39: aload         4
      41: iload         5
      43: iload         5
      45: invokestatic  #14                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      48: invokestatic  #11                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      51: aastore
      52: iinc          5, 1
      55: goto          33
      58: aload         4
      60: areturn

  public byte[] generateValue(byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #15                 // Field kvGenerator:Lorg/apache/hadoop/hbase/util/LoadTestKVGenerator;
       4: iconst_3
       5: anewarray     #13                 // class "[B"
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: dup
      17: iconst_2
      18: aload_3
      19: aastore
      20: invokevirtual #16                 // Method org/apache/hadoop/hbase/util/LoadTestKVGenerator.generateRandomSizeValue:([[B)[B
      23: areturn

  public boolean verify(byte[], byte[], byte[], byte[]);
    Code:
       0: aload         4
       2: iconst_3
       3: anewarray     #13                 // class "[B"
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: dup
      11: iconst_1
      12: aload_2
      13: aastore
      14: dup
      15: iconst_2
      16: aload_3
      17: aastore
      18: invokestatic  #17                 // Method org/apache/hadoop/hbase/util/LoadTestKVGenerator.verify:([B[[B)Z
      21: ireturn

  public boolean verify(byte[], byte[], java.util.Set<byte[]>);
    Code:
       0: aload_3
       1: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
       6: aload_0
       7: getfield      #7                  // Field minColumnsPerKey:I
      10: if_icmplt     30
      13: aload_3
      14: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
      19: aload_0
      20: getfield      #8                  // Field maxColumnsPerKey:I
      23: if_icmpgt     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn
}
