Compiled from "MultiThreadedWriterBase.java"
public abstract class org.apache.hadoop.hbase.util.MultiThreadedWriterBase extends org.apache.hadoop.hbase.util.MultiThreadedAction {
  protected java.util.concurrent.BlockingQueue<java.lang.Long> wroteKeys;

  protected java.util.concurrent.atomic.AtomicLong nextKeyToWrite;

  protected java.util.concurrent.atomic.AtomicLong wroteUpToKey;

  protected java.util.Set<java.lang.Long> failedKeySet;

  protected java.util.concurrent.atomic.AtomicLong wroteKeyQueueSize;

  protected boolean trackWroteKeys;

  public org.apache.hadoop.hbase.util.MultiThreadedWriterBase(org.apache.hadoop.hbase.util.test.LoadTestDataGenerator, org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.TableName, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/util/MultiThreadedAction."<init>":(Lorg/apache/hadoop/hbase/util/test/LoadTestDataGenerator;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      17: putfield      #5                  // Field nextKeyToWrite:Ljava/util/concurrent/atomic/AtomicLong;
      20: aload_0
      21: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      24: dup
      25: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      28: putfield      #6                  // Field wroteUpToKey:Ljava/util/concurrent/atomic/AtomicLong;
      31: aload_0
      32: new           #7                  // class java/util/concurrent/ConcurrentSkipListSet
      35: dup
      36: invokespecial #8                  // Method java/util/concurrent/ConcurrentSkipListSet."<init>":()V
      39: putfield      #9                  // Field failedKeySet:Ljava/util/Set;
      42: aload_0
      43: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      46: dup
      47: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      50: putfield      #10                 // Field wroteKeyQueueSize:Ljava/util/concurrent/atomic/AtomicLong;
      53: aload_0
      54: aload_0
      55: aload_2
      56: invokevirtual #11                 // Method createWriteKeysQueue:(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/concurrent/BlockingQueue;
      59: putfield      #12                 // Field wroteKeys:Ljava/util/concurrent/BlockingQueue;
      62: return

  protected java.util.concurrent.BlockingQueue<java.lang.Long> createWriteKeysQueue(org.apache.hadoop.conf.Configuration);
    Code:
       0: new           #13                 // class java/util/concurrent/ArrayBlockingQueue
       3: dup
       4: sipush        10000
       7: invokespecial #14                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      10: areturn

  public void start(long, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: invokespecial #15                 // Method org/apache/hadoop/hbase/util/MultiThreadedAction.start:(JJI)V
       8: aload_0
       9: getfield      #5                  // Field nextKeyToWrite:Ljava/util/concurrent/atomic/AtomicLong;
      12: lload_1
      13: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      16: aload_0
      17: getfield      #6                  // Field wroteUpToKey:Ljava/util/concurrent/atomic/AtomicLong;
      20: lload_1
      21: lconst_1
      22: lsub
      23: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      26: aload_0
      27: getfield      #17                 // Field trackWroteKeys:Z
      30: ifeq          81
      33: new           #18                 // class java/lang/Thread
      36: dup
      37: new           #19                 // class org/apache/hadoop/hbase/util/MultiThreadedWriterBase$WroteKeysTracker
      40: dup
      41: aload_0
      42: aconst_null
      43: invokespecial #20                 // Method org/apache/hadoop/hbase/util/MultiThreadedWriterBase$WroteKeysTracker."<init>":(Lorg/apache/hadoop/hbase/util/MultiThreadedWriterBase;Lorg/apache/hadoop/hbase/util/MultiThreadedWriterBase$1;)V
      46: new           #21                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #23                 // String MultiThreadedWriterBase-WroteKeysTracker-
      55: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokestatic  #25                 // Method java/lang/System.currentTimeMillis:()J
      61: invokevirtual #26                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      64: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #28                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      70: invokevirtual #29                 // Method java/lang/Thread.start:()V
      73: aload_0
      74: getfield      #30                 // Field numThreadsWorking:Ljava/util/concurrent/atomic/AtomicInteger;
      77: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      80: pop
      81: return

  protected java.lang.String getRegionDebugInfoSafe(org.apache.hadoop.hbase.client.Table, byte[]);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: getfield      #32                 // Field connection:Lorg/apache/hadoop/hbase/client/ClusterConnection;
       9: aload_0
      10: getfield      #33                 // Field tableName:Lorg/apache/hadoop/hbase/TableName;
      13: aload_2
      14: iconst_0
      15: invokeinterface #34,  4           // InterfaceMethod org/apache/hadoop/hbase/client/ClusterConnection.getRegionLocation:(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
      20: astore_3
      21: aload_0
      22: getfield      #32                 // Field connection:Lorg/apache/hadoop/hbase/client/ClusterConnection;
      25: aload_0
      26: getfield      #33                 // Field tableName:Lorg/apache/hadoop/hbase/TableName;
      29: aload_2
      30: iconst_1
      31: invokeinterface #34,  4           // InterfaceMethod org/apache/hadoop/hbase/client/ClusterConnection.getRegionLocation:(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
      36: astore        4
      38: goto          43
      41: astore        5
      43: ldc           #36                 // String no information can be obtained
      45: astore        5
      47: aload_3
      48: ifnull        75
      51: new           #21                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #37                 // String cached:
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokevirtual #38                 // Method org/apache/hadoop/hbase/HRegionLocation.toString:()Ljava/lang/String;
      67: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore        5
      75: aload         4
      77: ifnull        194
      80: aload         4
      82: invokevirtual #39                 // Method org/apache/hadoop/hbase/HRegionLocation.getServerName:()Lorg/apache/hadoop/hbase/ServerName;
      85: ifnull        194
      88: aload_3
      89: ifnull        133
      92: aload_3
      93: invokevirtual #39                 // Method org/apache/hadoop/hbase/HRegionLocation.getServerName:()Lorg/apache/hadoop/hbase/ServerName;
      96: ifnull        133
      99: aload         4
     101: aload_3
     102: invokevirtual #40                 // Method org/apache/hadoop/hbase/HRegionLocation.equals:(Ljava/lang/Object;)Z
     105: ifeq          133
     108: new           #21                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     115: aload         5
     117: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #41                 // String ; cache is up to date
     122: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: astore        5
     130: goto          194
     133: aload_3
     134: ifnull        160
     137: new           #21                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     144: aload         5
     146: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: ldc           #42                 // String ;
     151: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: goto          162
     160: ldc           #43                 // String
     162: astore        5
     164: new           #21                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     171: aload         5
     173: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: ldc           #44                 // String real:
     178: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload         4
     183: invokevirtual #38                 // Method org/apache/hadoop/hbase/HRegionLocation.toString:()Ljava/lang/String;
     186: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: astore        5
     194: aload         5
     196: areturn
    Exception table:
       from    to  target type
           5    38    41   Class java/lang/Throwable

  public int getNumWriteFailures();
    Code:
       0: aload_0
       1: getfield      #9                  // Field failedKeySet:Ljava/util/Set;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public long wroteUpToKey();
    Code:
       0: aload_0
       1: getfield      #6                  // Field wroteUpToKey:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public boolean failedToWriteKey(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field failedKeySet:Ljava/util/Set;
       4: lload_1
       5: invokestatic  #47                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  protected java.lang.String progressInfo();
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #49                 // String wroteUpTo
      11: aload_0
      12: getfield      #6                  // Field wroteUpToKey:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      18: invokestatic  #50                 // Method appendToStatus:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      21: aload_1
      22: ldc           #51                 // String wroteQSize
      24: aload_0
      25: getfield      #10                 // Field wroteKeyQueueSize:Ljava/util/concurrent/atomic/AtomicLong;
      28: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      31: invokestatic  #50                 // Method appendToStatus:(Ljava/lang/StringBuilder;Ljava/lang/String;J)V
      34: aload_1
      35: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn

  public void setTrackWroteKeys(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field trackWroteKeys:Z
       5: return

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #52                 // class org/apache/hadoop/hbase/util/MultiThreadedWriterBase
       2: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
