Compiled from "TestHRegion.java"
class org.apache.hadoop.hbase.regionserver.TestHRegion$1FailAppendFlushMarkerWAL$1 implements org.apache.hadoop.hbase.wal.WALProvider$Writer {
  final org.apache.hadoop.hbase.wal.WALProvider$Writer val$w;

  final org.apache.hadoop.hbase.regionserver.TestHRegion$1FailAppendFlushMarkerWAL this$1;

  org.apache.hadoop.hbase.regionserver.TestHRegion$1FailAppendFlushMarkerWAL$1(org.apache.hadoop.hbase.regionserver.TestHRegion$1FailAppendFlushMarkerWAL, org.apache.hadoop.hbase.wal.WALProvider$Writer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/apache/hadoop/hbase/regionserver/TestHRegion$1FailAppendFlushMarkerWAL;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$w:Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$w:Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.close:()V
       9: return

  public void sync(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$w:Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       4: iload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.sync:(Z)V
      10: return

  public void append(org.apache.hadoop.hbase.wal.WAL$Entry) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/hadoop/hbase/wal/WAL$Entry.getEdit:()Lorg/apache/hadoop/hbase/wal/WALEdit;
       4: invokevirtual #7                  // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
       7: astore_2
       8: aload_2
       9: iconst_0
      10: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: checkcast     #9                  // class org/apache/hadoop/hbase/Cell
      18: invokestatic  #10                 // Method org/apache/hadoop/hbase/wal/WALEdit.isMetaEditFamily:(Lorg/apache/hadoop/hbase/Cell;)Z
      21: ifeq          119
      24: aload_2
      25: iconst_0
      26: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #9                  // class org/apache/hadoop/hbase/Cell
      34: invokestatic  #11                 // Method org/apache/hadoop/hbase/wal/WALEdit.getFlushDescriptor:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;
      37: astore_3
      38: aload_3
      39: ifnull        119
      42: aload_0
      43: getfield      #1                  // Field this$1:Lorg/apache/hadoop/hbase/regionserver/TestHRegion$1FailAppendFlushMarkerWAL;
      46: getfield      #12                 // Field org/apache/hadoop/hbase/regionserver/TestHRegion$1FailAppendFlushMarkerWAL.flushActions:[Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor$FlushAction;
      49: astore        4
      51: aload         4
      53: arraylength
      54: istore        5
      56: iconst_0
      57: istore        6
      59: iload         6
      61: iload         5
      63: if_icmpge     119
      66: aload         4
      68: iload         6
      70: aaload
      71: astore        7
      73: aload_3
      74: invokevirtual #13                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor.getAction:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor$FlushAction;
      77: aload         7
      79: invokevirtual #14                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor$FlushAction.equals:(Ljava/lang/Object;)Z
      82: ifeq          113
      85: new           #15                 // class java/io/IOException
      88: dup
      89: new           #16                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #18                 // String Failed to append flush marker!
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         7
     103: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #22                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: iinc          6, 1
     116: goto          59
     119: aload_0
     120: getfield      #2                  // Field val$w:Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
     123: aload_1
     124: invokeinterface #23,  2           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.append:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
     129: return

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$w:Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.getLength:()J
       9: lreturn
}
