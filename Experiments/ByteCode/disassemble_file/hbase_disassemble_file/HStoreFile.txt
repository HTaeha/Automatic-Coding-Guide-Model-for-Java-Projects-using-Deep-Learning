Compiled from "HStoreFile.java"
public class org.apache.hadoop.hbase.regionserver.HStoreFile implements org.apache.hadoop.hbase.regionserver.StoreFile {
  public static final java.lang.String STORE_FILE_READER_NO_READAHEAD;

  public static final byte[] MAX_SEQ_ID_KEY;

  public static final byte[] MAJOR_COMPACTION_KEY;

  public static final byte[] EXCLUDE_FROM_MINOR_COMPACTION_KEY;

  public static final byte[] COMPACTION_EVENT_KEY;

  public static final byte[] BLOOM_FILTER_TYPE_KEY;

  public static final byte[] BLOOM_FILTER_PARAM_KEY;

  public static final byte[] DELETE_FAMILY_COUNT;

  public static final byte[] LAST_BLOOM_KEY;

  public static final byte[] TIMERANGE_KEY;

  public static final byte[] EARLIEST_PUT_TS;

  public static final byte[] MOB_CELLS_COUNT;

  public static final byte[] BULKLOAD_TASK_KEY;

  public static final byte[] BULKLOAD_TIME_KEY;

  public static final byte[] SKIP_RESET_SEQ_ID;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.io.hfile.CacheConfig getCacheConf();
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
       4: areturn

  public java.util.Optional<org.apache.hadoop.hbase.Cell> getFirstKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field firstKey:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<org.apache.hadoop.hbase.Cell> getLastKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastKey:Ljava/util/Optional;
       4: areturn

  public org.apache.hadoop.hbase.CellComparator getComparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
       4: areturn

  public long getMaxMemStoreTS();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxMemstoreTS:J
       4: lreturn

  public org.apache.hadoop.hbase.regionserver.HStoreFile(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.io.hfile.CacheConfig, org.apache.hadoop.hbase.regionserver.BloomType, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #6                  // class org/apache/hadoop/hbase/regionserver/StoreFileInfo
       5: dup
       6: aload_3
       7: aload_1
       8: aload_2
       9: invokespecial #7                  // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
      12: aload_3
      13: aload         4
      15: aload         5
      17: iload         6
      19: invokespecial #8                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Z)V
      22: return

  public org.apache.hadoop.hbase.regionserver.HStoreFile(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.hbase.regionserver.StoreFileInfo, org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.io.hfile.CacheConfig, org.apache.hadoop.hbase.regionserver.BloomType, boolean);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #12                 // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: iconst_0
      18: putfield      #13                 // Field compactedAway:Z
      21: aload_0
      22: ldc2_w        #14                 // long -1l
      25: putfield      #16                 // Field sequenceid:J
      28: aload_0
      29: ldc2_w        #14                 // long -1l
      32: putfield      #5                  // Field maxMemstoreTS:J
      35: aload_0
      36: aconst_null
      37: putfield      #17                 // Field majorCompaction:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: aload_0
      41: iconst_0
      42: putfield      #18                 // Field excludeFromMinorCompaction:Z
      45: aload_0
      46: new           #19                 // class java/util/HashSet
      49: dup
      50: invokespecial #20                 // Method java/util/HashSet."<init>":()V
      53: putfield      #21                 // Field compactedStoreFiles:Ljava/util/Set;
      56: aload_0
      57: aload_1
      58: putfield      #22                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      61: aload_0
      62: aload_2
      63: putfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
      66: aload_0
      67: aload         4
      69: putfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      72: aload_0
      73: aload_3
      74: ldc           #25                 // String hbase.store.reader.no-readahead
      76: iconst_0
      77: invokevirtual #26                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      80: putfield      #27                 // Field noReadahead:Z
      83: aload_3
      84: invokestatic  #28                 // Method org/apache/hadoop/hbase/util/BloomFilterFactory.isGeneralBloomEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
      87: ifeq          99
      90: aload_0
      91: aload         5
      93: putfield      #29                 // Field cfBloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      96: goto          151
      99: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
     102: new           #31                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #33                 // String Ignoring bloom filter check for file
     111: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: invokevirtual #35                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
     118: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: ldc           #37                 // String : cfBloomType=
     123: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         5
     128: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #38                 // String  (disabled in config)
     133: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokeinterface #40,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     144: aload_0
     145: getstatic     #41                 // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     148: putfield      #29                 // Field cfBloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     151: aload_0
     152: iload         6
     154: putfield      #42                 // Field primaryReplica:Z
     157: return

  public org.apache.hadoop.hbase.regionserver.StoreFileInfo getFileInfo();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: areturn

  public org.apache.hadoop.fs.Path getPath();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #43                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getPath:()Lorg/apache/hadoop/fs/Path;
       7: areturn

  public org.apache.hadoop.fs.Path getQualifiedPath();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #43                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getPath:()Lorg/apache/hadoop/fs/Path;
       7: aload_0
       8: getfield      #22                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      11: invokevirtual #44                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      14: aload_0
      15: getfield      #22                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      18: invokevirtual #45                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      21: invokevirtual #46                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      24: areturn

  public boolean isReference();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #47                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.isReference:()Z
       7: ireturn

  public boolean isHFile();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #43                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getPath:()Lorg/apache/hadoop/fs/Path;
       7: invokestatic  #48                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.isHFile:(Lorg/apache/hadoop/fs/Path;)Z
      10: ireturn

  public boolean isMajorCompactionResult();
    Code:
       0: aload_0
       1: getfield      #17                 // Field majorCompaction:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: ifnonnull     17
       7: new           #49                 // class java/lang/NullPointerException
      10: dup
      11: ldc           #50                 // String This has not been set yet
      13: invokespecial #51                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #17                 // Field majorCompaction:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      24: ireturn

  public boolean excludeFromMinorCompaction();
    Code:
       0: aload_0
       1: getfield      #18                 // Field excludeFromMinorCompaction:Z
       4: ireturn

  public long getMaxSequenceId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sequenceid:J
       4: lreturn

  public long getModificationTimeStamp() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getModificationTimestamp:()J
       4: lreturn

  public long getModificationTimestamp() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #54                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getModificationTime:()J
       7: lreturn

  public byte[] getMetadataValue(byte[]);
    Code:
       0: aload_0
       1: getfield      #55                 // Field metadataMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #57                 // class "[B"
      13: areturn

  public boolean isBulkLoadResult();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #35                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
       6: invokevirtual #58                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ldc           #59                 // String SeqId_
      13: invokevirtual #60                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      16: istore_3
      17: iload_3
      18: iconst_m1
      19: if_icmpeq     24
      22: iconst_1
      23: istore_1
      24: iload_1
      25: ifne          50
      28: aload_0
      29: getfield      #55                 // Field metadataMap:Ljava/util/Map;
      32: ifnull        54
      35: aload_0
      36: getfield      #55                 // Field metadataMap:Ljava/util/Map;
      39: getstatic     #61                 // Field BULKLOAD_TIME_KEY:[B
      42: invokeinterface #62,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  public boolean isCompactedAway();
    Code:
       0: aload_0
       1: getfield      #13                 // Field compactedAway:Z
       4: ireturn

  public int getRefCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public boolean isReferencedInReads();
    Code:
       0: aload_0
       1: getfield      #12                 // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: getstatic     #64                 // Field $assertionsDisabled:Z
      11: ifne          26
      14: iload_1
      15: ifge          26
      18: new           #65                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: iload_1
      27: ifle          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public java.util.OptionalLong getBulkLoadTimestamp();
    Code:
       0: aload_0
       1: getfield      #55                 // Field metadataMap:Ljava/util/Map;
       4: getstatic     #61                 // Field BULKLOAD_TIME_KEY:[B
       7: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #57                 // class "[B"
      15: astore_1
      16: aload_1
      17: ifnonnull     26
      20: invokestatic  #67                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      23: goto          33
      26: aload_1
      27: invokestatic  #68                 // Method org/apache/hadoop/hbase/util/Bytes.toLong:([B)J
      30: invokestatic  #69                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      33: areturn

  public org.apache.hadoop.hbase.HDFSBlocksDistribution getHDFSBlockDistribution();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #70                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getHDFSBlockDistribution:()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
       7: areturn

  public void initReader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field reader:Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: ifnonnull     56
       7: aload_0
       8: invokespecial #123                // Method open:()V
      11: goto          56
      14: astore_1
      15: aload_0
      16: getfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      19: ifnull        32
      22: aload_0
      23: getfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      26: invokevirtual #125                // Method org/apache/hadoop/hbase/io/hfile/CacheConfig.shouldEvictOnClose:()Z
      29: goto          33
      32: iconst_1
      33: istore_2
      34: aload_0
      35: iload_2
      36: invokevirtual #126                // Method closeStoreFile:(Z)V
      39: goto          54
      42: astore_2
      43: getstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
      46: ldc           #127                // String failed to close reader
      48: aload_2
      49: invokeinterface #128,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: aload_1
      55: athrow
      56: return
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/Exception
          15    39    42   Class java/io/IOException

  public org.apache.hadoop.hbase.regionserver.StoreFileScanner getPreadScanner(boolean, long, long, boolean);
    Code:
       0: aload_0
       1: invokevirtual #131                // Method getReader:()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: iload_1
       5: iconst_1
       6: iconst_0
       7: lload_2
       8: lload         4
      10: iload         6
      12: invokevirtual #132                // Method org/apache/hadoop/hbase/regionserver/StoreFileReader.getStoreFileScanner:(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
      15: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileScanner getStreamScanner(boolean, boolean, boolean, long, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #133                // Method createStreamReader:(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       5: iload_2
       6: iconst_0
       7: iload_3
       8: lload         4
      10: lload         6
      12: iload         8
      14: invokevirtual #132                // Method org/apache/hadoop/hbase/regionserver/StoreFileReader.getStoreFileScanner:(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
      17: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileReader getReader();
    Code:
       0: aload_0
       1: getfield      #71                 // Field reader:Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: areturn

  public synchronized void closeStoreFile(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field reader:Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: ifnull        20
       7: aload_0
       8: getfield      #71                 // Field reader:Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
      11: iload_1
      12: invokevirtual #134                // Method org/apache/hadoop/hbase/regionserver/StoreFileReader.close:(Z)V
      15: aload_0
      16: aconst_null
      17: putfield      #71                 // Field reader:Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
      20: return

  public void deleteStoreFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      11: invokevirtual #125                // Method org/apache/hadoop/hbase/io/hfile/CacheConfig.shouldEvictOnClose:()Z
      14: goto          18
      17: iconst_1
      18: istore_1
      19: aload_0
      20: iload_1
      21: invokevirtual #126                // Method closeStoreFile:(Z)V
      24: aload_0
      25: getfield      #22                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      28: aload_0
      29: invokevirtual #35                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      32: iconst_1
      33: invokevirtual #135                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      36: pop
      37: return

  public void markCompactedAway();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field compactedAway:Z
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fileInfo:Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
       4: invokevirtual #136                // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.String toStringDetailed();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #35                 // Method getPath:()Lorg/apache/hadoop/fs/Path;
      13: invokevirtual #137                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: ldc           #138                // String , isReference=
      23: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #139                // Method isReference:()Z
      30: invokevirtual #140                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: ldc           #141                // String , isBulkLoadResult=
      37: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #80                 // Method isBulkLoadResult:()Z
      44: invokevirtual #140                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      47: pop
      48: aload_0
      49: invokevirtual #80                 // Method isBulkLoadResult:()Z
      52: ifeq          96
      55: aload_1
      56: ldc           #142                // String , bulkLoadTS=
      58: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_0
      63: invokevirtual #143                // Method getBulkLoadTimestamp:()Ljava/util/OptionalLong;
      66: astore_2
      67: aload_2
      68: invokevirtual #144                // Method java/util/OptionalLong.isPresent:()Z
      71: ifeq          86
      74: aload_1
      75: aload_2
      76: invokevirtual #145                // Method java/util/OptionalLong.getAsLong:()J
      79: invokevirtual #146                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      82: pop
      83: goto          93
      86: aload_1
      87: ldc           #147                // String NotPresent
      89: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: goto          110
      96: aload_1
      97: ldc           #148                // String , seqid=
      99: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokevirtual #149                // Method getMaxSequenceId:()J
     106: invokevirtual #146                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     109: pop
     110: aload_1
     111: ldc           #150                // String , majorCompaction=
     113: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_0
     117: invokevirtual #151                // Method isMajorCompactionResult:()Z
     120: invokevirtual #140                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     123: pop
     124: aload_1
     125: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: areturn

  public java.util.OptionalLong getMinimumTimestamp();
    Code:
       0: aload_0
       1: invokevirtual #131                // Method getReader:()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: getfield      #111                // Field org/apache/hadoop/hbase/regionserver/StoreFileReader.timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
       7: astore_1
       8: aload_1
       9: ifnull        22
      12: aload_1
      13: invokevirtual #152                // Method org/apache/hadoop/hbase/io/TimeRange.getMin:()J
      16: invokestatic  #69                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      19: goto          25
      22: invokestatic  #67                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      25: areturn

  public java.util.OptionalLong getMaximumTimestamp();
    Code:
       0: aload_0
       1: invokevirtual #131                // Method getReader:()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
       4: getfield      #111                // Field org/apache/hadoop/hbase/regionserver/StoreFileReader.timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
       7: astore_1
       8: aload_1
       9: ifnull        22
      12: aload_1
      13: invokevirtual #153                // Method org/apache/hadoop/hbase/io/TimeRange.getMax:()J
      16: invokestatic  #69                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
      19: goto          25
      22: invokestatic  #67                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
      25: areturn

  java.util.Set<java.lang.String> getCompactedStoreFiles();
    Code:
       0: aload_0
       1: getfield      #21                 // Field compactedStoreFiles:Ljava/util/Set;
       4: invokestatic  #154                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  static {};
    Code:
       0: ldc           #24                 // class org/apache/hadoop/hbase/regionserver/HStoreFile
       2: invokevirtual #155                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #64                 // Field $assertionsDisabled:Z
      16: ldc           #24                 // class org/apache/hadoop/hbase/regionserver/HStoreFile
      18: invokevirtual #156                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokestatic  #157                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      24: putstatic     #30                 // Field LOG:Lorg/slf4j/Logger;
      27: ldc           #158                // String MAX_SEQ_ID_KEY
      29: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      32: putstatic     #78                 // Field MAX_SEQ_ID_KEY:[B
      35: ldc           #160                // String MAJOR_COMPACTION_KEY
      37: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      40: putstatic     #91                 // Field MAJOR_COMPACTION_KEY:[B
      43: ldc           #161                // String EXCLUDE_FROM_MINOR_COMPACTION
      45: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      48: putstatic     #96                 // Field EXCLUDE_FROM_MINOR_COMPACTION_KEY:[B
      51: ldc           #162                // String COMPACTION_EVENT_KEY
      53: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      56: putstatic     #115                // Field COMPACTION_EVENT_KEY:[B
      59: ldc           #163                // String BLOOM_FILTER_TYPE
      61: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      64: putstatic     #164                // Field BLOOM_FILTER_TYPE_KEY:[B
      67: ldc           #165                // String BLOOM_FILTER_PARAM
      69: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      72: putstatic     #166                // Field BLOOM_FILTER_PARAM_KEY:[B
      75: ldc           #167                // String DELETE_FAMILY_COUNT
      77: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      80: putstatic     #168                // Field DELETE_FAMILY_COUNT:[B
      83: ldc           #169                // String LAST_BLOOM_KEY
      85: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      88: putstatic     #170                // Field LAST_BLOOM_KEY:[B
      91: ldc           #171                // String TIMERANGE
      93: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      96: putstatic     #108                // Field TIMERANGE_KEY:[B
      99: ldc           #172                // String EARLIEST_PUT_TS
     101: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     104: putstatic     #173                // Field EARLIEST_PUT_TS:[B
     107: ldc           #174                // String MOB_CELLS_COUNT
     109: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     112: putstatic     #175                // Field MOB_CELLS_COUNT:[B
     115: ldc           #176                // String BULKLOAD_SOURCE_TASK
     117: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     120: putstatic     #177                // Field BULKLOAD_TASK_KEY:[B
     123: ldc           #178                // String BULKLOAD_TIMESTAMP
     125: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     128: putstatic     #61                 // Field BULKLOAD_TIME_KEY:[B
     131: ldc           #179                // String SKIP_RESET_SEQ_ID
     133: invokestatic  #159                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
     136: putstatic     #85                 // Field SKIP_RESET_SEQ_ID:[B
     139: return
}
