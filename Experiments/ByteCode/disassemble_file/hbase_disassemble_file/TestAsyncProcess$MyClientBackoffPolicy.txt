Compiled from "TestAsyncProcess.java"
class org.apache.hadoop.hbase.client.TestAsyncProcess$MyClientBackoffPolicy implements org.apache.hadoop.hbase.client.backoff.ClientBackoffPolicy {
  org.apache.hadoop.hbase.client.TestAsyncProcess$MyClientBackoffPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field count:Ljava/util/Map;
      15: return

  public long getBackoffTime(org.apache.hadoop.hbase.ServerName, byte[], org.apache.hadoop.hbase.client.backoff.ServerStatistics);
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/util/concurrent/atomic/AtomicInteger
      13: astore        4
      15: aload         4
      17: ifnonnull     43
      20: new           #6                  // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: iconst_0
      25: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      28: astore        4
      30: aload_0
      31: getfield      #4                  // Field count:Ljava/util/Map;
      34: aload_1
      35: aload         4
      37: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload         4
      45: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      48: i2l
      49: lreturn
}
