Compiled from "JitterScheduledThreadPoolExecutorImpl.java"
public class org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl extends java.util.concurrent.ScheduledThreadPoolExecutor {
  public org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl(int, java.util.concurrent.ThreadFactory, double);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
       6: aload_0
       7: dload_3
       8: putfield      #1                  // Field spread:D
      11: return

  protected <V> java.util.concurrent.RunnableScheduledFuture<V> decorateTask(java.lang.Runnable, java.util.concurrent.RunnableScheduledFuture<V>);
    Code:
       0: new           #3                  // class org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #4                  // Method org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture."<init>":(Lorg/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl;Ljava/util/concurrent/RunnableScheduledFuture;)V
       9: areturn

  protected <V> java.util.concurrent.RunnableScheduledFuture<V> decorateTask(java.util.concurrent.Callable<V>, java.util.concurrent.RunnableScheduledFuture<V>);
    Code:
       0: new           #3                  // class org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #4                  // Method org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture."<init>":(Lorg/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl;Ljava/util/concurrent/RunnableScheduledFuture;)V
       9: areturn

  static double access$000(org.apache.hadoop.hbase.JitterScheduledThreadPoolExecutorImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field spread:D
       4: dreturn
}
