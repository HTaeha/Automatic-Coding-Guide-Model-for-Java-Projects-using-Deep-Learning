Compiled from "ReplicationQueueStorage.java"
public interface org.apache.hadoop.hbase.replication.ReplicationQueueStorage {
  public abstract void removeQueue(org.apache.hadoop.hbase.ServerName, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void addWAL(org.apache.hadoop.hbase.ServerName, java.lang.String, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removeWAL(org.apache.hadoop.hbase.ServerName, java.lang.String, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void setWALPosition(org.apache.hadoop.hbase.ServerName, java.lang.String, java.lang.String, long, java.util.Map<java.lang.String, java.lang.Long>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract long getLastSequenceId(java.lang.String, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void setLastSequenceIds(java.lang.String, java.util.Map<java.lang.String, java.lang.Long>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removeLastSequenceIds(java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removeLastSequenceIds(java.lang.String, java.util.List<java.lang.String>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract long getWALPosition(org.apache.hadoop.hbase.ServerName, java.lang.String, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.List<java.lang.String> getWALsInQueue(org.apache.hadoop.hbase.ServerName, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.List<java.lang.String> getAllQueues(org.apache.hadoop.hbase.ServerName) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract org.apache.hadoop.hbase.util.Pair<java.lang.String, java.util.SortedSet<java.lang.String>> claimQueue(org.apache.hadoop.hbase.ServerName, java.lang.String, org.apache.hadoop.hbase.ServerName) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removeReplicatorIfQueueIsEmpty(org.apache.hadoop.hbase.ServerName) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.List<org.apache.hadoop.hbase.ServerName> getListOfReplicators() throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.Set<java.lang.String> getAllWALs() throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void addPeerToHFileRefs(java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removePeerFromHFileRefs(java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void addHFileRefs(java.lang.String, java.util.List<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path>>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract void removeHFileRefs(java.lang.String, java.util.List<java.lang.String>) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.List<java.lang.String> getAllPeersFromHFileRefsQueue() throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.List<java.lang.String> getReplicableHFiles(java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.util.Set<java.lang.String> getAllHFileRefs() throws org.apache.hadoop.hbase.replication.ReplicationException;

  public abstract java.lang.String getRsNode(org.apache.hadoop.hbase.ServerName);
}
