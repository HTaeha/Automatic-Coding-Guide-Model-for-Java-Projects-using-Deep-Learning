Compiled from "HFileCleaner.java"
final class org.apache.hadoop.hbase.master.cleaner.HFileCleaner$HFileDeleteTask {
  boolean done;

  boolean result;

  final org.apache.hadoop.fs.Path filePath;

  final long fileLength;

  final long timeoutMsec;

  public org.apache.hadoop.hbase.master.cleaner.HFileCleaner$HFileDeleteTask(org.apache.hadoop.fs.FileStatus, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field done:Z
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      14: putfield      #4                  // Field filePath:Lorg/apache/hadoop/fs/Path;
      17: aload_0
      18: aload_1
      19: invokevirtual #5                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      22: putfield      #6                  // Field fileLength:J
      25: aload_0
      26: lload_2
      27: putfield      #7                  // Field timeoutMsec:J
      30: return

  public synchronized void setResult(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field done:Z
       5: aload_0
       6: iload_1
       7: putfield      #8                  // Field result:Z
      10: aload_0
      11: invokevirtual #9                  // Method java/lang/Object.notify:()V
      14: return

  public synchronized boolean getResult(long);
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #2                  // Field done:Z
       6: ifne          110
       9: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      12: lstore        5
      14: aload_0
      15: lload_1
      16: invokevirtual #11                 // Method java/lang/Object.wait:(J)V
      19: lload_3
      20: getstatic     #12                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      23: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      26: lload         5
      28: lsub
      29: getstatic     #13                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      32: invokevirtual #14                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      35: ladd
      36: lstore_3
      37: aload_0
      38: getfield      #2                  // Field done:Z
      41: ifeq          49
      44: aload_0
      45: getfield      #8                  // Field result:Z
      48: ireturn
      49: lload_3
      50: aload_0
      51: getfield      #7                  // Field timeoutMsec:J
      54: lcmp
      55: ifle          107
      58: invokestatic  #15                 // Method org/apache/hadoop/hbase/master/cleaner/HFileCleaner.access$000:()Lorg/slf4j/Logger;
      61: new           #16                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #18                 // String Wait more than
      70: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: getfield      #7                  // Field timeoutMsec:J
      77: invokevirtual #20                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      80: ldc           #21                 // String  ms for deleting
      82: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #4                  // Field filePath:Lorg/apache/hadoop/fs/Path;
      89: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #23                 // String , exit...
      94: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     105: iconst_0
     106: ireturn
     107: goto          2
     110: goto          154
     113: astore        5
     115: invokestatic  #15                 // Method org/apache/hadoop/hbase/master/cleaner/HFileCleaner.access$000:()Lorg/slf4j/Logger;
     118: new           #16                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #27                 // String Interrupted while waiting for result of deleting
     127: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #4                  // Field filePath:Lorg/apache/hadoop/fs/Path;
     134: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: ldc           #28                 // String , will return false
     139: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: aload         5
     147: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     152: iconst_0
     153: ireturn
     154: aload_0
     155: getfield      #8                  // Field result:Z
     158: ireturn
    Exception table:
       from    to  target type
           2    48   113   Class java/lang/InterruptedException
          49   106   113   Class java/lang/InterruptedException
         107   110   113   Class java/lang/InterruptedException
}
