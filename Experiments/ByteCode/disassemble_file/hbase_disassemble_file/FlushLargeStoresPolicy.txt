Compiled from "FlushLargeStoresPolicy.java"
public abstract class org.apache.hadoop.hbase.regionserver.FlushLargeStoresPolicy extends org.apache.hadoop.hbase.regionserver.FlushPolicy {
  public static final java.lang.String HREGION_COLUMNFAMILY_FLUSH_SIZE_LOWER_BOUND;

  public static final java.lang.String HREGION_COLUMNFAMILY_FLUSH_SIZE_LOWER_BOUND_MIN;

  public static final long DEFAULT_HREGION_COLUMNFAMILY_FLUSH_SIZE_LOWER_BOUND_MIN;

  protected long flushSizeLowerBound;

  public org.apache.hadoop.hbase.regionserver.FlushLargeStoresPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/regionserver/FlushPolicy."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field flushSizeLowerBound:J
      11: return

  protected void setFlushSizeLowerBounds(org.apache.hadoop.hbase.regionserver.HRegion);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/apache/hadoop/hbase/regionserver/HRegion.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getColumnFamilyCount:()I
       9: istore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #7                  // Method org/apache/hadoop/hbase/regionserver/HRegion.getMemStoreFlushSize:()J
      15: iload_2
      16: i2l
      17: ldiv
      18: putfield      #4                  // Field flushSizeLowerBound:J
      21: aload_0
      22: invokevirtual #8                  // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      25: ldc           #10                 // String hbase.hregion.percolumnfamilyflush.size.lower.bound.min
      27: ldc2_w        #11                 // long 16777216l
      30: invokevirtual #13                 // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      33: lstore_3
      34: lload_3
      35: aload_0
      36: getfield      #4                  // Field flushSizeLowerBound:J
      39: lcmp
      40: ifle          48
      43: aload_0
      44: lload_3
      45: putfield      #4                  // Field flushSizeLowerBound:J
      48: aload_1
      49: invokevirtual #5                  // Method org/apache/hadoop/hbase/regionserver/HRegion.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      52: ldc           #14                 // String hbase.hregion.percolumnfamilyflush.size.lower.bound
      54: invokeinterface #15,  2           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getValue:(Ljava/lang/String;)Ljava/lang/String;
      59: astore        5
      61: aload         5
      63: ifnonnull     129
      66: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      69: ldc           #17                 // String No {} set in table {} descriptor;using region.getMemStoreFlushHeapSize/# of families ({}) instead.
      71: iconst_3
      72: anewarray     #18                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: ldc           #14                 // String hbase.hregion.percolumnfamilyflush.size.lower.bound
      79: aastore
      80: dup
      81: iconst_1
      82: aload_1
      83: invokevirtual #5                  // Method org/apache/hadoop/hbase/regionserver/HRegion.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      86: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      91: aastore
      92: dup
      93: iconst_2
      94: new           #20                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     101: aload_0
     102: getfield      #4                  // Field flushSizeLowerBound:J
     105: l2d
     106: invokestatic  #22                 // Method org/apache/hadoop/hbase/procedure2/util/StringUtils.humanSize:(D)Ljava/lang/String;
     109: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #24                 // String )
     114: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: aastore
     121: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     126: goto          194
     129: aload_0
     130: aload         5
     132: invokestatic  #27                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     135: putfield      #4                  // Field flushSizeLowerBound:J
     138: goto          194
     141: astore        6
     143: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
     146: ldc           #29                 // String Number format exception parsing {} for table {}: {}, {}; using region.getMemStoreFlushHeapSize/# of families ({}) and region.getMemStoreFlushOffHeapSize/# of families ({}) instead.
     148: iconst_5
     149: anewarray     #18                 // class java/lang/Object
     152: dup
     153: iconst_0
     154: ldc           #14                 // String hbase.hregion.percolumnfamilyflush.size.lower.bound
     156: aastore
     157: dup
     158: iconst_1
     159: aload_1
     160: invokevirtual #5                  // Method org/apache/hadoop/hbase/regionserver/HRegion.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
     163: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
     168: aastore
     169: dup
     170: iconst_2
     171: aload         5
     173: aastore
     174: dup
     175: iconst_3
     176: aload         6
     178: aastore
     179: dup
     180: iconst_4
     181: aload_0
     182: getfield      #4                  // Field flushSizeLowerBound:J
     185: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     188: aastore
     189: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     194: return
    Exception table:
       from    to  target type
         129   138   141   Class java/lang/NumberFormatException

  protected boolean shouldFlush(org.apache.hadoop.hbase.regionserver.HStore);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method org/apache/hadoop/hbase/regionserver/HStore.getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
       4: invokevirtual #33                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getHeapSize:()J
       7: aload_1
       8: invokevirtual #32                 // Method org/apache/hadoop/hbase/regionserver/HStore.getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
      11: invokevirtual #34                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getOffHeapSize:()J
      14: ladd
      15: aload_0
      16: getfield      #4                  // Field flushSizeLowerBound:J
      19: lcmp
      20: ifle          97
      23: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #35                 // String Flush {} of {}; heap memstoreSize={} +off heap memstoreSize={} > memstore lowerBound={}
      28: iconst_5
      29: anewarray     #18                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: invokevirtual #36                 // Method org/apache/hadoop/hbase/regionserver/HStore.getColumnFamilyName:()Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_0
      42: getfield      #37                 // Field region:Lorg/apache/hadoop/hbase/regionserver/HRegion;
      45: invokevirtual #38                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getRegionInfo:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      48: invokeinterface #39,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_2
      56: aload_1
      57: invokevirtual #32                 // Method org/apache/hadoop/hbase/regionserver/HStore.getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
      60: invokevirtual #33                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getHeapSize:()J
      63: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: dup
      68: iconst_3
      69: aload_1
      70: invokevirtual #32                 // Method org/apache/hadoop/hbase/regionserver/HStore.getMemStoreSize:()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
      73: invokevirtual #34                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getOffHeapSize:()J
      76: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      79: aastore
      80: dup
      81: iconst_4
      82: aload_0
      83: getfield      #4                  // Field flushSizeLowerBound:J
      86: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      89: aastore
      90: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      95: iconst_1
      96: ireturn
      97: iconst_0
      98: ireturn

  static {};
    Code:
       0: ldc           #9                  // class org/apache/hadoop/hbase/regionserver/FlushLargeStoresPolicy
       2: invokestatic  #40                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
