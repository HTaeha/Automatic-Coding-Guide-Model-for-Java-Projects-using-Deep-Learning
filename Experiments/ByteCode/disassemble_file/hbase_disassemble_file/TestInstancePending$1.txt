Compiled from "TestInstancePending.java"
class org.apache.hadoop.hbase.zookeeper.TestInstancePending$1 extends java.lang.Thread {
  final java.util.concurrent.atomic.AtomicReference val$getResultRef;

  final org.apache.hadoop.hbase.zookeeper.InstancePending val$pending;

  final org.apache.hadoop.hbase.zookeeper.TestInstancePending this$0;

  org.apache.hadoop.hbase.zookeeper.TestInstancePending$1(org.apache.hadoop.hbase.zookeeper.TestInstancePending, java.util.concurrent.atomic.AtomicReference, org.apache.hadoop.hbase.zookeeper.InstancePending);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/zookeeper/TestInstancePending;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$getResultRef:Ljava/util/concurrent/atomic/AtomicReference;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$pending:Lorg/apache/hadoop/hbase/zookeeper/InstancePending;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Thread."<init>":()V
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$getResultRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #3                  // Field val$pending:Lorg/apache/hadoop/hbase/zookeeper/InstancePending;
       8: invokevirtual #5                  // Method org/apache/hadoop/hbase/zookeeper/InstancePending.get:()Ljava/lang/Object;
      11: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      14: return
}
