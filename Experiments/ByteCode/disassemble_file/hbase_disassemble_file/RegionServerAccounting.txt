Compiled from "RegionServerAccounting.java"
public class org.apache.hadoop.hbase.regionserver.RegionServerAccounting {
  public org.apache.hadoop.hbase.regionserver.RegionServerAccounting(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/LongAdder
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      12: putfield      #4                  // Field globalMemStoreDataSize:Ljava/util/concurrent/atomic/LongAdder;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/LongAdder
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      23: putfield      #5                  // Field globalMemStoreHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      26: aload_0
      27: new           #2                  // class java/util/concurrent/atomic/LongAdder
      30: dup
      31: invokespecial #3                  // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      34: putfield      #6                  // Field globalMemStoreOffHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      37: aload_1
      38: invokestatic  #7                  // Method org/apache/hadoop/hbase/io/util/MemorySizeUtil.getGlobalMemStoreSize:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
      41: astore_2
      42: aload_0
      43: aload_2
      44: invokevirtual #8                  // Method org/apache/hadoop/hbase/util/Pair.getFirst:()Ljava/lang/Object;
      47: checkcast     #9                  // class java/lang/Long
      50: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      53: putfield      #11                 // Field globalMemStoreLimit:J
      56: aload_0
      57: aload_2
      58: invokevirtual #12                 // Method org/apache/hadoop/hbase/util/Pair.getSecond:()Ljava/lang/Object;
      61: checkcast     #13                 // class java/lang/management/MemoryType
      64: putfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
      67: aload_0
      68: aload_1
      69: aload_0
      70: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
      73: getstatic     #15                 // Field java/lang/management/MemoryType.HEAP:Ljava/lang/management/MemoryType;
      76: if_acmpne     83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: invokestatic  #16                 // Method org/apache/hadoop/hbase/io/util/MemorySizeUtil.getGlobalMemStoreHeapLowerMark:(Lorg/apache/hadoop/conf/Configuration;Z)F
      87: putfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
      90: aload_0
      91: aload_0
      92: getfield      #11                 // Field globalMemStoreLimit:J
      95: l2f
      96: aload_0
      97: getfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
     100: fmul
     101: f2l
     102: putfield      #18                 // Field globalMemStoreLimitLowMark:J
     105: aload_0
     106: aload_1
     107: invokestatic  #19                 // Method org/apache/hadoop/hbase/io/util/MemorySizeUtil.getOnheapGlobalMemStoreSize:(Lorg/apache/hadoop/conf/Configuration;)J
     110: putfield      #20                 // Field globalOnHeapMemstoreLimit:J
     113: aload_0
     114: aload_0
     115: getfield      #20                 // Field globalOnHeapMemstoreLimit:J
     118: l2f
     119: aload_0
     120: getfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
     123: fmul
     124: f2l
     125: putfield      #21                 // Field globalOnHeapMemstoreLimitLowMark:J
     128: return

  long getGlobalMemStoreLimit();
    Code:
       0: aload_0
       1: getfield      #11                 // Field globalMemStoreLimit:J
       4: lreturn

  long getGlobalOnHeapMemStoreLimit();
    Code:
       0: aload_0
       1: getfield      #20                 // Field globalOnHeapMemstoreLimit:J
       4: lreturn

  void setGlobalMemStoreLimits(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
       4: getstatic     #15                 // Field java/lang/management/MemoryType.HEAP:Ljava/lang/management/MemoryType;
       7: if_acmpne     33
      10: aload_0
      11: lload_1
      12: putfield      #11                 // Field globalMemStoreLimit:J
      15: aload_0
      16: aload_0
      17: getfield      #11                 // Field globalMemStoreLimit:J
      20: l2f
      21: aload_0
      22: getfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
      25: fmul
      26: f2l
      27: putfield      #18                 // Field globalMemStoreLimitLowMark:J
      30: goto          53
      33: aload_0
      34: lload_1
      35: putfield      #20                 // Field globalOnHeapMemstoreLimit:J
      38: aload_0
      39: aload_0
      40: getfield      #20                 // Field globalOnHeapMemstoreLimit:J
      43: l2f
      44: aload_0
      45: getfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
      48: fmul
      49: f2l
      50: putfield      #21                 // Field globalOnHeapMemstoreLimitLowMark:J
      53: return

  boolean isOffheap();
    Code:
       0: aload_0
       1: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
       4: getstatic     #22                 // Field java/lang/management/MemoryType.NON_HEAP:Ljava/lang/management/MemoryType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  long getGlobalMemStoreLimitLowMark();
    Code:
       0: aload_0
       1: getfield      #18                 // Field globalMemStoreLimitLowMark:J
       4: lreturn

  float getGlobalMemStoreLimitLowMarkPercent();
    Code:
       0: aload_0
       1: getfield      #17                 // Field globalMemStoreLimitLowMarkPercent:F
       4: freturn

  public long getGlobalMemStoreDataSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalMemStoreDataSize:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #23                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
       7: lreturn

  public long getGlobalMemStoreHeapSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field globalMemStoreHeapSize:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #23                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
       7: lreturn

  public long getGlobalMemStoreOffHeapSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field globalMemStoreOffHeapSize:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #23                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
       7: lreturn

  void incGlobalMemStoreSize(org.apache.hadoop.hbase.regionserver.MemStoreSize);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getDataSize:()J
       5: aload_1
       6: invokevirtual #25                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getHeapSize:()J
       9: aload_1
      10: invokevirtual #26                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize.getOffHeapSize:()J
      13: invokevirtual #27                 // Method incGlobalMemStoreSize:(JJJ)V
      16: return

  public void incGlobalMemStoreSize(long, long, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalMemStoreDataSize:Ljava/util/concurrent/atomic/LongAdder;
       4: lload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
       8: aload_0
       9: getfield      #5                  // Field globalMemStoreHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      12: lload_3
      13: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      16: aload_0
      17: getfield      #6                  // Field globalMemStoreOffHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      20: lload         5
      22: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      25: return

  public void decGlobalMemStoreSize(long, long, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalMemStoreDataSize:Ljava/util/concurrent/atomic/LongAdder;
       4: lload_1
       5: lneg
       6: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
       9: aload_0
      10: getfield      #5                  // Field globalMemStoreHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      13: lload_3
      14: lneg
      15: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      18: aload_0
      19: getfield      #6                  // Field globalMemStoreOffHeapSize:Ljava/util/concurrent/atomic/LongAdder;
      22: lload         5
      24: lneg
      25: invokevirtual #28                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      28: return

  public org.apache.hadoop.hbase.regionserver.FlushType isAboveHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
       4: getstatic     #15                 // Field java/lang/management/MemoryType.HEAP:Ljava/lang/management/MemoryType;
       7: if_acmpne     26
      10: aload_0
      11: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      14: aload_0
      15: getfield      #11                 // Field globalMemStoreLimit:J
      18: lcmp
      19: iflt          58
      22: getstatic     #30                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      25: areturn
      26: aload_0
      27: invokevirtual #31                 // Method getGlobalMemStoreOffHeapSize:()J
      30: aload_0
      31: getfield      #11                 // Field globalMemStoreLimit:J
      34: lcmp
      35: iflt          42
      38: getstatic     #32                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_OFFHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      41: areturn
      42: aload_0
      43: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      46: aload_0
      47: getfield      #20                 // Field globalOnHeapMemstoreLimit:J
      50: lcmp
      51: iflt          58
      54: getstatic     #30                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      57: areturn
      58: getstatic     #33                 // Field org/apache/hadoop/hbase/regionserver/FlushType.NORMAL:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      61: areturn

  public org.apache.hadoop.hbase.regionserver.FlushType isAboveLowWaterMark();
    Code:
       0: aload_0
       1: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
       4: getstatic     #15                 // Field java/lang/management/MemoryType.HEAP:Ljava/lang/management/MemoryType;
       7: if_acmpne     26
      10: aload_0
      11: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      14: aload_0
      15: getfield      #18                 // Field globalMemStoreLimitLowMark:J
      18: lcmp
      19: iflt          58
      22: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      25: areturn
      26: aload_0
      27: invokevirtual #31                 // Method getGlobalMemStoreOffHeapSize:()J
      30: aload_0
      31: getfield      #18                 // Field globalMemStoreLimitLowMark:J
      34: lcmp
      35: iflt          42
      38: getstatic     #35                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_OFFHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      41: areturn
      42: aload_0
      43: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      46: aload_0
      47: getfield      #21                 // Field globalOnHeapMemstoreLimitLowMark:J
      50: lcmp
      51: iflt          58
      54: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      57: areturn
      58: getstatic     #33                 // Field org/apache/hadoop/hbase/regionserver/FlushType.NORMAL:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      61: areturn

  public double getFlushPressure();
    Code:
       0: aload_0
       1: getfield      #14                 // Field memType:Ljava/lang/management/MemoryType;
       4: getstatic     #15                 // Field java/lang/management/MemoryType.HEAP:Ljava/lang/management/MemoryType;
       7: if_acmpne     24
      10: aload_0
      11: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      14: l2d
      15: dconst_1
      16: dmul
      17: aload_0
      18: getfield      #18                 // Field globalMemStoreLimitLowMark:J
      21: l2d
      22: ddiv
      23: dreturn
      24: aload_0
      25: invokevirtual #31                 // Method getGlobalMemStoreOffHeapSize:()J
      28: l2d
      29: dconst_1
      30: dmul
      31: aload_0
      32: getfield      #18                 // Field globalMemStoreLimitLowMark:J
      35: l2d
      36: ddiv
      37: aload_0
      38: invokevirtual #29                 // Method getGlobalMemStoreHeapSize:()J
      41: l2d
      42: dconst_1
      43: dmul
      44: aload_0
      45: getfield      #21                 // Field globalOnHeapMemstoreLimitLowMark:J
      48: l2d
      49: ddiv
      50: invokestatic  #36                 // Method java/lang/Math.max:(DD)D
      53: dreturn
}
