Compiled from "Addressing.java"
public class org.apache.hadoop.hbase.util.Addressing {
  public static final java.lang.String VALID_PORT_REGEX;

  public static final java.lang.String HOSTNAME_PORT_SEPARATOR;

  public org.apache.hadoop.hbase.util.Addressing();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.net.InetSocketAddress createInetSocketAddressFromHostAndPortStr(java.lang.String);
    Code:
       0: new           #2                  // class java/net/InetSocketAddress
       3: dup
       4: aload_0
       5: invokestatic  #3                  // Method parseHostname:(Ljava/lang/String;)Ljava/lang/String;
       8: aload_0
       9: invokestatic  #4                  // Method parsePort:(Ljava/lang/String;)I
      12: invokespecial #5                  // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      15: areturn

  public static java.lang.String createHostAndPortStr(java.lang.String, int);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #10                 // String :
      13: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public static java.lang.String parseHostname(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #10                 // String :
       3: invokevirtual #13                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
       6: istore_1
       7: iload_1
       8: ifge          38
      11: new           #14                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #15                 // String Not a host:port pair:
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_0
      40: iload_1
      41: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      44: areturn

  public static int parsePort(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #10                 // String :
       3: invokevirtual #13                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
       6: istore_1
       7: iload_1
       8: ifge          38
      11: new           #14                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #15                 // String Not a host:port pair:
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iload_1
      40: iconst_1
      41: iadd
      42: invokevirtual #18                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: invokestatic  #19                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      48: ireturn

  public static java.net.InetAddress getIpAddress() throws java.net.SocketException;
    Code:
       0: new           #20                 // class org/apache/hadoop/hbase/util/Addressing$1
       3: dup
       4: invokespecial #21                 // Method org/apache/hadoop/hbase/util/Addressing$1."<init>":()V
       7: invokestatic  #22                 // Method getIpAddress:(Lorg/apache/hadoop/hbase/util/Addressing$AddressSelectionCondition;)Ljava/net/InetAddress;
      10: areturn

  public static java.net.InetAddress getIp4Address() throws java.net.SocketException;
    Code:
       0: new           #23                 // class org/apache/hadoop/hbase/util/Addressing$2
       3: dup
       4: invokespecial #24                 // Method org/apache/hadoop/hbase/util/Addressing$2."<init>":()V
       7: invokestatic  #22                 // Method getIpAddress:(Lorg/apache/hadoop/hbase/util/Addressing$AddressSelectionCondition;)Ljava/net/InetAddress;
      10: areturn

  public static java.net.InetAddress getIp6Address() throws java.net.SocketException;
    Code:
       0: new           #25                 // class org/apache/hadoop/hbase/util/Addressing$3
       3: dup
       4: invokespecial #26                 // Method org/apache/hadoop/hbase/util/Addressing$3."<init>":()V
       7: invokestatic  #22                 // Method getIpAddress:(Lorg/apache/hadoop/hbase/util/Addressing$AddressSelectionCondition;)Ljava/net/InetAddress;
      10: areturn

  public static boolean isLocalAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #36                 // Method java/net/InetAddress.isLoopbackAddress:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_1
      20: iload_1
      21: ifne          43
      24: aload_0
      25: invokestatic  #43                 // Method java/net/NetworkInterface.getByInetAddress:(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;
      28: ifnull        35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore_1
      37: goto          43
      40: astore_2
      41: iconst_0
      42: istore_1
      43: iload_1
      44: ireturn
    Exception table:
       from    to  target type
          24    37    40   Class java/net/SocketException
}
