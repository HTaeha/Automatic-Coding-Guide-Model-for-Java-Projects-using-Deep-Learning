Compiled from "TestWALSplit.java"
public class org.apache.hadoop.hbase.wal.TestWALSplit {
  public static final org.apache.hadoop.hbase.HBaseClassTestRule CLASS_RULE;

  protected static final org.apache.hadoop.hbase.HBaseTestingUtility TEST_UTIL;

  public org.junit.rules.TestName name;

  public org.apache.hadoop.hbase.wal.TestWALSplit();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class org/junit/rules/TestName
       8: dup
       9: invokespecial #20                 // Method org/junit/rules/TestName."<init>":()V
      12: putfield      #21                 // Field name:Lorg/junit/rules/TestName;
      15: aload_0
      16: aconst_null
      17: putfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      20: return

  public static void setUpBeforeClass() throws java.lang.Exception;
    Code:
       0: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
       3: invokevirtual #23                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
       6: putstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       9: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      12: ldc           #24                 // String hbase.regionserver.hlog.writer.impl
      14: ldc           #25                 // class org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter
      16: ldc           #26                 // class org/apache/hadoop/hbase/wal/WALProvider$Writer
      18: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.setClass:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
      21: ldc           #28                 // String hbase.tests.use.shortcircuit.reads
      23: ldc           #29                 // String false
      25: invokestatic  #30                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      28: pop
      29: new           #31                 // class java/util/HashMap
      32: dup
      33: iconst_2
      34: invokespecial #32                 // Method java/util/HashMap."<init>":(I)V
      37: astore_0
      38: new           #33                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      45: invokestatic  #35                 // Method org/apache/hadoop/hbase/security/User.getCurrent:()Lorg/apache/hadoop/hbase/security/User;
      48: invokevirtual #36                 // Method org/apache/hadoop/hbase/security/User.getName:()Ljava/lang/String;
      51: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #38                 // String -robber
      56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: putstatic     #40                 // Field ROBBER:Ljava/lang/String;
      65: new           #33                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      72: invokestatic  #35                 // Method org/apache/hadoop/hbase/security/User.getCurrent:()Lorg/apache/hadoop/hbase/security/User;
      75: invokevirtual #36                 // Method org/apache/hadoop/hbase/security/User.getName:()Ljava/lang/String;
      78: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #41                 // String -zombie
      83: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: putstatic     #7                  // Field ZOMBIE:Ljava/lang/String;
      92: aload_0
      93: getstatic     #40                 // Field ROBBER:Ljava/lang/String;
      96: getstatic     #6                  // Field GROUP:[Ljava/lang/String;
      99: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     104: pop
     105: aload_0
     106: getstatic     #7                  // Field ZOMBIE:Ljava/lang/String;
     109: getstatic     #6                  // Field GROUP:[Ljava/lang/String;
     112: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     121: aload_0
     122: invokestatic  #43                 // Method org/apache/hadoop/hdfs/DFSTestUtil.updateConfWithFakeGroupMapping:(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
     125: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     128: ldc           #44                 // String dfs.heartbeat.interval
     130: iconst_1
     131: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
     134: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
     137: iconst_2
     138: invokevirtual #46                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.startMiniDFSCluster:(I)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
     141: pop
     142: return

  public static void tearDownAfterClass() throws java.lang.Exception;
    Code:
       0: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
       3: invokevirtual #47                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.shutdownMiniDFSCluster:()V
       6: return

  public void setUp() throws java.lang.Exception;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #48                 // String Cleaning up cluster for new test.
       5: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      14: invokevirtual #50                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getDFSCluster:()Lorg/apache/hadoop/hdfs/MiniDFSCluster;
      17: invokevirtual #51                 // Method org/apache/hadoop/hdfs/MiniDFSCluster.getFileSystem:()Lorg/apache/hadoop/hdfs/DistributedFileSystem;
      20: putfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      23: aload_0
      24: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      27: invokevirtual #52                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.createRootDir:()Lorg/apache/hadoop/fs/Path;
      30: putfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      33: aload_0
      34: getstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      37: invokevirtual #54                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.createWALRootDir:()Lorg/apache/hadoop/fs/Path;
      40: putfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      43: aload_0
      44: new           #55                 // class org/apache/hadoop/fs/Path
      47: dup
      48: aload_0
      49: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      52: ldc           #57                 // String oldWALs
      54: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      57: putfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      60: aload_0
      61: new           #55                 // class org/apache/hadoop/fs/Path
      64: dup
      65: aload_0
      66: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      69: ldc           #59                 // String corrupt
      71: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      74: putfield      #60                 // Field CORRUPTDIR:Lorg/apache/hadoop/fs/Path;
      77: aload_0
      78: aload_0
      79: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      82: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      85: invokestatic  #61                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      88: putfield      #62                 // Field TABLEDIR:Lorg/apache/hadoop/fs/Path;
      91: aload_0
      92: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      95: ldc           #63                 // String hbase.fs.tmp.dir
      97: getstatic     #64                 // Field org/apache/hadoop/hbase/HConstants.DEFAULT_TEMPORARY_HDFS_DIRECTORY:Ljava/lang/String;
     100: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     103: putfield      #66                 // Field TMPDIRNAME:Ljava/lang/String;
     106: getstatic     #67                 // Field REGIONS:Ljava/util/List;
     109: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
     114: getstatic     #67                 // Field REGIONS:Ljava/util/List;
     117: iconst_2
     118: anewarray     #69                 // class java/lang/String
     121: dup
     122: iconst_0
     123: ldc           #70                 // String bbb
     125: aastore
     126: dup
     127: iconst_1
     128: ldc           #71                 // String ccc
     130: aastore
     131: invokestatic  #72                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
     134: pop
     135: iconst_0
     136: putstatic     #73                 // Field org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.activateFailure:Z
     139: aload_0
     140: new           #74                 // class org/apache/hadoop/hbase/wal/WALFactory
     143: dup
     144: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     147: aload_0
     148: getfield      #21                 // Field name:Lorg/junit/rules/TestName;
     151: invokevirtual #75                 // Method org/junit/rules/TestName.getMethodName:()Ljava/lang/String;
     154: invokespecial #76                 // Method org/apache/hadoop/hbase/wal/WALFactory."<init>":(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
     157: putfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     160: aload_0
     161: new           #55                 // class org/apache/hadoop/fs/Path
     164: dup
     165: aload_0
     166: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
     169: aload_0
     170: getfield      #21                 // Field name:Lorg/junit/rules/TestName;
     173: invokevirtual #75                 // Method org/junit/rules/TestName.getMethodName:()Ljava/lang/String;
     176: sipush        16010
     179: invokestatic  #77                 // Method java/lang/System.currentTimeMillis:()J
     182: invokestatic  #78                 // Method org/apache/hadoop/hbase/ServerName.valueOf:(Ljava/lang/String;IJ)Lorg/apache/hadoop/hbase/ServerName;
     185: invokevirtual #79                 // Method org/apache/hadoop/hbase/ServerName.toString:()Ljava/lang/String;
     188: invokestatic  #80                 // Method org/apache/hadoop/hbase/wal/AbstractFSWALProvider.getWALDirectoryName:(Ljava/lang/String;)Ljava/lang/String;
     191: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     194: putfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
     197: return

  public void tearDown() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
       4: invokevirtual #81                 // Method org/apache/hadoop/hbase/wal/WALFactory.close:()V
       7: aload_0
       8: aconst_null
       9: putfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      12: aload_0
      13: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      16: aload_0
      17: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      20: iconst_1
      21: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      24: pop
      25: aload_0
      26: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      29: aload_0
      30: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      33: iconst_1
      34: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      37: pop
      38: goto          131
      41: astore_1
      42: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      45: ldc           #84                 // String Ignoring an error while closing down our WALFactory. Fine for some tests, but if you see a failure look here.
      47: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      52: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      55: ldc           #85                 // String exception details
      57: aload_1
      58: invokeinterface #86,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: aload_0
      64: aconst_null
      65: putfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      68: aload_0
      69: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      72: aload_0
      73: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      76: iconst_1
      77: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      80: pop
      81: aload_0
      82: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      85: aload_0
      86: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      89: iconst_1
      90: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      93: pop
      94: goto          131
      97: astore_2
      98: aload_0
      99: aconst_null
     100: putfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     103: aload_0
     104: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     107: aload_0
     108: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
     111: iconst_1
     112: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     115: pop
     116: aload_0
     117: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     120: aload_0
     121: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
     124: iconst_1
     125: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     128: pop
     129: aload_2
     130: athrow
     131: return
    Exception table:
       from    to  target type
           0     7    41   Class java/io/IOException
           0     7    97   any
          41    63    97   any

  public void testLogCannotBeWrittenOnceParsed() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #87                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #88                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: astore_1
       9: new           #89                 // class java/util/concurrent/atomic/AtomicBoolean
      12: dup
      13: iconst_0
      14: invokespecial #90                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      17: astore_2
      18: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      21: iconst_0
      22: invokeinterface #91,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: checkcast     #69                 // class java/lang/String
      30: astore_3
      31: iconst_3
      32: istore        4
      34: new           #92                 // class org/apache/hadoop/hbase/wal/TestWALSplit$ZombieLastLogWriterRegionServer
      37: dup
      38: aload_0
      39: aload_1
      40: aload_2
      41: aload_3
      42: iconst_3
      43: invokespecial #93                 // Method org/apache/hadoop/hbase/wal/TestWALSplit$ZombieLastLogWriterRegionServer."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;I)V
      46: astore        5
      48: aload_1
      49: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      52: lstore        6
      54: aload         5
      56: invokevirtual #95                 // Method java/lang/Thread.start:()V
      59: lload         6
      61: aload_1
      62: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      65: lcmp
      66: ifne          76
      69: lconst_1
      70: invokestatic  #96                 // Method org/apache/hadoop/hbase/util/Threads.sleep:(J)V
      73: goto          59
      76: ldc2_w        #97                 // long 1000l
      79: invokestatic  #96                 // Method org/apache/hadoop/hbase/util/Threads.sleep:(J)V
      82: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      85: invokestatic  #99                 // Method org/apache/hadoop/hbase/HBaseConfiguration.create:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/conf/Configuration;
      88: astore        8
      90: aload         8
      92: getstatic     #40                 // Field ROBBER:Ljava/lang/String;
      95: getstatic     #6                  // Field GROUP:[Ljava/lang/String;
      98: invokestatic  #100                // Method org/apache/hadoop/hbase/security/User.createUserForTesting:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/User;
     101: astore        9
     103: aload         9
     105: new           #101                // class org/apache/hadoop/hbase/wal/TestWALSplit$1
     108: dup
     109: aload_0
     110: aload         8
     112: aload_3
     113: invokespecial #102                // Method org/apache/hadoop/hbase/wal/TestWALSplit$1."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
     116: invokevirtual #103                // Method org/apache/hadoop/hbase/security/User.runAs:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     119: checkcast     #104                // class java/lang/Integer
     122: invokevirtual #105                // Method java/lang/Integer.intValue:()I
     125: istore        10
     127: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     130: new           #33                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #106                // String zombie=
     139: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_1
     143: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     146: invokevirtual #107                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     149: ldc           #108                // String , robber=
     151: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: iload         10
     156: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     159: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     167: new           #33                 // class java/lang/StringBuilder
     170: dup
     171: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #110                // String The log file could have at most 1 extra log entry, but can't have less. Zombie could write
     176: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_1
     180: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     183: invokevirtual #107                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     186: ldc           #111                // String  and logfile had only
     188: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: iload         10
     193: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     196: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: aload_1
     200: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     203: iload         10
     205: i2l
     206: lcmp
     207: ifeq          223
     210: aload_1
     211: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     214: lconst_1
     215: ladd
     216: iload         10
     218: i2l
     219: lcmp
     220: ifne          227
     223: iconst_1
     224: goto          228
     227: iconst_0
     228: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
     231: aload_2
     232: iconst_1
     233: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     236: aload         5
     238: invokevirtual #114                // Method java/lang/Thread.interrupt:()V
     241: aload         5
     243: invokestatic  #115                // Method org/apache/hadoop/hbase/util/Threads.threadDumpingIsAlive:(Ljava/lang/Thread;)V
     246: goto          269
     249: astore        11
     251: aload_2
     252: iconst_1
     253: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     256: aload         5
     258: invokevirtual #114                // Method java/lang/Thread.interrupt:()V
     261: aload         5
     263: invokestatic  #115                // Method org/apache/hadoop/hbase/util/Threads.threadDumpingIsAlive:(Ljava/lang/Thread;)V
     266: aload         11
     268: athrow
     269: return
    Exception table:
       from    to  target type
          48   231   249   any
         249   251   249   any

  public void testRecoveredEditsPathForMeta() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #116                // Method createRecoveredEditsPathForRegion:()Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: aload_1
       6: invokevirtual #117                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #117                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      12: invokevirtual #118                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: getstatic     #119                // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
      20: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      25: invokestatic  #121                // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      28: return

  public void testOldRecoveredEditsFileSidelined() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #116                // Method createRecoveredEditsPathForRegion:()Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: aload_0
       6: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
       9: getstatic     #122                // Field org/apache/hadoop/hbase/TableName.META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      12: invokestatic  #61                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      15: astore_2
      16: new           #55                 // class org/apache/hadoop/fs/Path
      19: dup
      20: aload_2
      21: getstatic     #119                // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
      24: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      29: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      32: astore_3
      33: aload_0
      34: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      37: aload_3
      38: invokevirtual #123                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      41: pop
      42: aload_3
      43: invokestatic  #124                // Method org/apache/hadoop/hbase/wal/WALSplitUtil.getRegionDirRecoveredEditsDir:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      46: astore        4
      48: ldc           #125                // String recovered.edits
      50: aload         4
      52: invokevirtual #118                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      55: invokestatic  #121                // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      62: aload         4
      64: invokevirtual #126                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
      67: pop
      68: aload_1
      69: invokevirtual #117                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      72: invokevirtual #117                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      75: invokevirtual #118                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      78: astore        5
      80: aload         5
      82: getstatic     #119                // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
      85: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      90: invokestatic  #121                // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      97: aload_1
      98: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     101: invokestatic  #127                // Method org/apache/hadoop/hbase/wal/WALFactory.createRecoveredEditsWriter:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
     104: invokeinterface #128,  1          // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.close:()V
     109: return

  public void testHasRecoveredEdits() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #116                // Method createRecoveredEditsPathForRegion:()Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       8: getstatic     #119                // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
      11: invokestatic  #140                // Method org/apache/hadoop/hbase/wal/WALSplitUtil.hasRecoveredEdits:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
      14: invokestatic  #141                // Method org/junit/Assert.assertFalse:(Z)V
      17: aload_1
      18: invokevirtual #118                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      21: ldc           #142                // String -
      23: invokevirtual #143                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      26: iconst_0
      27: aaload
      28: astore_2
      29: aload_0
      30: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      33: new           #55                 // class org/apache/hadoop/fs/Path
      36: dup
      37: aload_1
      38: invokevirtual #117                // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      41: aload_2
      42: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      45: invokevirtual #126                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
      48: pop
      49: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      52: getstatic     #119                // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
      55: invokestatic  #140                // Method org/apache/hadoop/hbase/wal/WALSplitUtil.hasRecoveredEdits:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
      58: invokestatic  #144                // Method org/junit/Assert.assertTrue:(Z)V
      61: return

  public void testSplitPreservesEdits() throws java.io.IOException;
    Code:
       0: ldc           #147                // String region__1
       2: astore_1
       3: getstatic     #67                 // Field REGIONS:Ljava/util/List;
       6: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
      11: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      14: ldc           #147                // String region__1
      16: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: iconst_1
      24: bipush        10
      26: iconst_m1
      27: iconst_0
      28: invokespecial #149                // Method generateWALs:(IIII)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      31: pop
      32: aload_0
      33: invokespecial #150                // Method useDifferentDFSClient:()V
      36: aload_0
      37: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      40: aload_0
      41: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      44: aload_0
      45: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      48: aload_0
      49: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      52: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      55: aload_0
      56: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      59: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      62: pop
      63: aload_0
      64: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      67: aload_0
      68: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      71: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      74: iconst_0
      75: aaload
      76: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      79: astore_2
      80: aload_0
      81: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      84: ldc           #147                // String region__1
      86: invokespecial #10                 // Method getLogForRegion:(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)[Lorg/apache/hadoop/fs/Path;
      89: astore_3
      90: lconst_1
      91: aload_3
      92: arraylength
      93: i2l
      94: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
      97: ldc           #155                // String edits differ after split
      99: aload_0
     100: aload_2
     101: aload_3
     102: iconst_0
     103: aaload
     104: invokespecial #156                // Method logsAreEqual:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     107: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
     110: return

  public void testSplitRemovesRegionEventsEdits() throws java.io.IOException;
    Code:
       0: ldc           #147                // String region__1
       2: astore_1
       3: getstatic     #67                 // Field REGIONS:Ljava/util/List;
       6: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
      11: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      14: ldc           #147                // String region__1
      16: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: iconst_1
      24: bipush        10
      26: iconst_m1
      27: bipush        100
      29: invokespecial #149                // Method generateWALs:(IIII)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      32: pop
      33: aload_0
      34: invokespecial #150                // Method useDifferentDFSClient:()V
      37: aload_0
      38: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      41: aload_0
      42: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      45: aload_0
      46: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      49: aload_0
      50: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      53: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      56: aload_0
      57: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      60: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      63: pop
      64: aload_0
      65: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      68: aload_0
      69: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      72: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      75: iconst_0
      76: aaload
      77: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      80: astore_2
      81: aload_0
      82: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      85: ldc           #147                // String region__1
      87: invokespecial #10                 // Method getLogForRegion:(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)[Lorg/apache/hadoop/fs/Path;
      90: astore_3
      91: lconst_1
      92: aload_3
      93: arraylength
      94: i2l
      95: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
      98: ldc           #155                // String edits differ after split
     100: aload_0
     101: aload_2
     102: aload_3
     103: iconst_0
     104: aaload
     105: invokespecial #156                // Method logsAreEqual:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     108: invokestatic  #157                // Method org/junit/Assert.assertFalse:(Ljava/lang/String;Z)V
     111: ldc2_w        #158                // long 10l
     114: aload_0
     115: aload_3
     116: iconst_0
     117: aaload
     118: invokespecial #9                  // Method countWAL:(Lorg/apache/hadoop/fs/Path;)I
     121: i2l
     122: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     125: return

  public void testSplitLeavesCompactionEventsEdits() throws java.io.IOException;
    Code:
       0: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
       3: invokestatic  #160                // Method org/apache/hadoop/hbase/client/RegionInfoBuilder.newBuilder:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionInfoBuilder;
       6: invokevirtual #161                // Method org/apache/hadoop/hbase/client/RegionInfoBuilder.build:()Lorg/apache/hadoop/hbase/client/RegionInfo;
       9: astore_1
      10: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      13: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
      18: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      21: aload_1
      22: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      27: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: new           #55                 // class org/apache/hadoop/fs/Path
      36: dup
      37: aload_0
      38: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      41: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      44: invokestatic  #61                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      47: aload_1
      48: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      53: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      56: astore_2
      57: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      60: new           #33                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #162                // String Creating region directory:
      69: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_2
      73: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      84: aload_0
      85: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      88: aload_2
      89: invokevirtual #123                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      92: invokestatic  #144                // Method org/junit/Assert.assertTrue:(Z)V
      95: aload_0
      96: iconst_1
      97: bipush        10
      99: iconst_0
     100: bipush        10
     102: invokespecial #149                // Method generateWALs:(IIII)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
     105: astore_3
     106: iconst_3
     107: anewarray     #69                 // class java/lang/String
     110: dup
     111: iconst_0
     112: ldc           #164                // String file1
     114: aastore
     115: dup
     116: iconst_1
     117: ldc           #165                // String file2
     119: aastore
     120: dup
     121: iconst_2
     122: ldc           #166                // String file3
     124: aastore
     125: astore        4
     127: ldc           #167                // String file4
     129: astore        5
     131: aload_3
     132: aload_1
     133: aload         4
     135: aload         5
     137: invokestatic  #168                // Method appendCompactionEvent:(Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;Lorg/apache/hadoop/hbase/client/RegionInfo;[Ljava/lang/String;Ljava/lang/String;)V
     140: aload_3
     141: invokeinterface #128,  1          // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.close:()V
     146: aload_0
     147: invokespecial #150                // Method useDifferentDFSClient:()V
     150: aload_0
     151: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
     154: aload_0
     155: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
     158: aload_0
     159: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
     162: aload_0
     163: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     166: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     169: aload_0
     170: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     173: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
     176: pop
     177: aload_0
     178: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     181: aload_0
     182: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
     185: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     188: iconst_0
     189: aaload
     190: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     193: astore        6
     195: ldc2_w        #169                // long 21l
     198: aload_0
     199: aload         6
     201: invokespecial #9                  // Method countWAL:(Lorg/apache/hadoop/fs/Path;)I
     204: i2l
     205: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     208: aload_0
     209: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
     212: aload_1
     213: invokeinterface #120,  1          // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
     218: invokespecial #10                 // Method getLogForRegion:(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)[Lorg/apache/hadoop/fs/Path;
     221: astore        7
     223: lconst_1
     224: aload         7
     226: arraylength
     227: i2l
     228: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     231: ldc           #155                // String edits differ after split
     233: aload_0
     234: aload         6
     236: aload         7
     238: iconst_0
     239: aaload
     240: invokespecial #156                // Method logsAreEqual:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     243: invokestatic  #157                // Method org/junit/Assert.assertFalse:(Ljava/lang/String;Z)V
     246: ldc2_w        #171                // long 11l
     249: aload_0
     250: aload         7
     252: iconst_0
     253: aaload
     254: invokespecial #9                  // Method countWAL:(Lorg/apache/hadoop/fs/Path;)I
     257: i2l
     258: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     261: return

  public void testEmptyLogFiles() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #176                // Method testEmptyLogFiles:(Z)V
       5: return

  public void testEmptyOpenLogFiles() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #176                // Method testEmptyLogFiles:(Z)V
       5: return

  public void testOpenZeroLengthReportedFileButWithDataGetsSplit() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: pop
       6: aload_0
       7: bipush        10
       9: bipush        100
      11: invokespecial #182                // Method splitAndCount:(II)I
      14: pop
      15: return

  public void testTralingGarbageCorruptionFileSkipErrorsPasses() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_1
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: ldc           #179                // int 2147483647
      12: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      15: pop
      16: aload_0
      17: new           #55                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_0
      22: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      25: ldc           #185                // String wal.dat.5
      27: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      30: getstatic     #186                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.APPEND_GARBAGE:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
      33: iconst_1
      34: invokespecial #187                // Method corruptWAL:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;Z)V
      37: aload_0
      38: bipush        10
      40: bipush        100
      42: invokespecial #182                // Method splitAndCount:(II)I
      45: pop
      46: return

  public void testFirstLineCorruptionLogFileSkipErrorsPasses() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_1
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: ldc           #179                // int 2147483647
      12: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      15: pop
      16: aload_0
      17: new           #55                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_0
      22: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      25: ldc           #185                // String wal.dat.5
      27: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      30: getstatic     #188                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.INSERT_GARBAGE_ON_FIRST_LINE:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
      33: iconst_1
      34: invokespecial #187                // Method corruptWAL:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;Z)V
      37: aload_0
      38: bipush        9
      40: bipush        90
      42: invokespecial #182                // Method splitAndCount:(II)I
      45: pop
      46: return

  public void testMiddleGarbageCorruptionSkipErrorsReadsHalfOfFile() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_1
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: ldc           #179                // int 2147483647
      12: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      15: pop
      16: aload_0
      17: new           #55                 // class org/apache/hadoop/fs/Path
      20: dup
      21: aload_0
      22: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      25: ldc           #185                // String wal.dat.5
      27: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      30: getstatic     #189                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.INSERT_GARBAGE_IN_THE_MIDDLE:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
      33: iconst_0
      34: invokespecial #187                // Method corruptWAL:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;Z)V
      37: bipush        90
      39: istore_1
      40: ldc2_w        #190                // double 5.0d
      43: invokestatic  #192                // Method java/lang/Math.ceil:(D)D
      46: d2i
      47: iconst_1
      48: isub
      49: istore_2
      50: aload_0
      51: bipush        10
      53: iconst_m1
      54: invokespecial #182                // Method splitAndCount:(II)I
      57: istore_3
      58: ldc           #193                // String The file up to the corrupted area hasn't been parsed
      60: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      63: invokeinterface #194,  1          // InterfaceMethod java/util/List.size:()I
      68: iload_1
      69: iload_2
      70: iadd
      71: imul
      72: iload_3
      73: if_icmpgt     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
      84: return

  public void testCorruptedFileGetsArchivedIfSkipErrors() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_1
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: invokestatic  #195                // Method org/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType.values:()[Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;
      12: invokestatic  #196                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      15: invokeinterface #197,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      20: invokedynamic #198,  0            // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      25: invokeinterface #199,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      30: invokestatic  #200                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      33: invokeinterface #201,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      38: checkcast     #202                // class java/util/List
      41: astore_1
      42: aload_1
      43: invokeinterface #173,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #174,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          213
      58: aload_2
      59: invokeinterface #175,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #203                // class org/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType
      67: astore_3
      68: aload_0
      69: aload_3
      70: invokespecial #204                // Method splitCorruptWALs:(Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;)Ljava/util/Set;
      73: astore        4
      75: new           #205                // class java/util/HashSet
      78: dup
      79: invokespecial #206                // Method java/util/HashSet."<init>":()V
      82: astore        5
      84: new           #33                 // class java/lang/StringBuilder
      87: dup
      88: ldc           #207                // String Archived logs in CORRUPTDIR:
      90: invokespecial #208                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      93: astore        6
      95: aload_0
      96: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      99: aload_0
     100: getfield      #60                 // Field CORRUPTDIR:Lorg/apache/hadoop/fs/Path;
     103: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     106: astore        7
     108: aload         7
     110: arraylength
     111: istore        8
     113: iconst_0
     114: istore        9
     116: iload         9
     118: iload         8
     120: if_icmpge     168
     123: aload         7
     125: iload         9
     127: aaload
     128: astore        10
     130: aload         6
     132: ldc           #209                // String \n\t
     134: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload         10
     139: invokevirtual #210                // Method org/apache/hadoop/fs/FileStatus.toString:()Ljava/lang/String;
     142: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: aload         5
     148: aload         10
     150: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     153: invokevirtual #118                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
     156: invokeinterface #211,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     161: pop
     162: iinc          9, 1
     165: goto          116
     168: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     171: aload         6
     173: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokeinterface #212,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     181: new           #33                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     188: aload_3
     189: invokevirtual #213                // Method org/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType.name:()Ljava/lang/String;
     192: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #214                // String : expected to find all of our wals corrupt.
     197: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: aload         5
     205: aload         4
     207: invokestatic  #215                // Method org/junit/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     210: goto          49
     213: return

  public void testTrailingGarbageCorruptionLogFileSkipErrorsFalseThrows() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_0
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: getstatic     #226                // Field org/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType.BEGINNING:Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;
      13: invokespecial #204                // Method splitCorruptWALs:(Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;)Ljava/util/Set;
      16: pop
      17: return

  public void testCorruptedLogFilesSkipErrorsFalseDoesNotTouchLogs() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_0
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: getstatic     #226                // Field org/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType.BEGINNING:Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;
      13: invokespecial #204                // Method splitCorruptWALs:(Lorg/apache/hadoop/hbase/regionserver/wal/FaultyProtobufLogReader$FailureType;)Ljava/util/Set;
      16: pop
      17: goto          31
      20: astore_1
      21: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      24: ldc           #227                // String split with 'skip errors' set to 'false' correctly threw
      26: invokeinterface #212,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      31: ldc           #228                // String if skip.errors is false all files should remain in place
      33: ldc2_w        #158                // long 10l
      36: aload_0
      37: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      40: aload_0
      41: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      44: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      47: arraylength
      48: i2l
      49: invokestatic  #229                // Method org/junit/Assert.assertEquals:(Ljava/lang/String;JJ)V
      52: return
    Exception table:
       from    to  target type
           9    17    20   Class java/io/IOException

  public void testEOFisIgnored() throws java.io.IOException;
    Code:
       0: bipush        10
       2: istore_1
       3: aload_0
       4: getstatic     #234                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.TRUNCATE:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
       7: iload_1
       8: iload_1
       9: iconst_1
      10: isub
      11: invokespecial #235                // Method ignoreCorruption:(Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;II)V
      14: return

  public void testCorruptWALTrailer() throws java.io.IOException;
    Code:
       0: bipush        10
       2: istore_1
       3: aload_0
       4: getstatic     #236                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.TRUNCATE_TRAILER:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
       7: iload_1
       8: iload_1
       9: invokespecial #235                // Method ignoreCorruption:(Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;II)V
      12: return

  public void testLogsGetArchivedAfterSplit() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_0
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: iconst_m1
      11: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      14: pop
      15: aload_0
      16: invokespecial #150                // Method useDifferentDFSClient:()V
      19: aload_0
      20: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      23: aload_0
      24: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      27: aload_0
      28: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      31: aload_0
      32: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      35: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      38: aload_0
      39: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      42: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      45: pop
      46: aload_0
      47: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      50: aload_0
      51: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      54: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      57: astore_1
      58: ldc           #237                // String wrong number of files in the archive log
      60: ldc2_w        #158                // long 10l
      63: aload_1
      64: arraylength
      65: i2l
      66: invokestatic  #229                // Method org/junit/Assert.assertEquals:(Ljava/lang/String;JJ)V
      69: return

  public void testSplit() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: pop
       6: aload_0
       7: bipush        10
       9: bipush        100
      11: invokespecial #182                // Method splitAndCount:(II)I
      14: pop
      15: return

  public void testLogDirectoryShouldBeDeletedAfterSuccessfulSplit() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: pop
       6: aload_0
       7: invokespecial #150                // Method useDifferentDFSClient:()V
      10: aload_0
      11: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      14: aload_0
      15: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      18: aload_0
      19: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      22: aload_0
      23: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      26: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      29: aload_0
      30: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      33: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      36: pop
      37: aconst_null
      38: astore_1
      39: aload_0
      40: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      43: aload_0
      44: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      47: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      50: astore_1
      51: aload_1
      52: ifnull        88
      55: new           #33                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #238                // String Files left in log dir:
      64: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #239                // String ,
      69: invokestatic  #240                // Method org/apache/hbase/thirdparty/com/google/common/base/Joiner.on:(Ljava/lang/String;)Lorg/apache/hbase/thirdparty/com/google/common/base/Joiner;
      72: aload_1
      73: invokestatic  #241                // Method org/apache/hadoop/fs/FileUtil.stat2Paths:([Lorg/apache/hadoop/fs/FileStatus;)[Lorg/apache/hadoop/fs/Path;
      76: invokevirtual #242                // Method org/apache/hbase/thirdparty/com/google/common/base/Joiner.join:([Ljava/lang/Object;)Ljava/lang/String;
      79: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokestatic  #243                // Method org/junit/Assert.fail:(Ljava/lang/String;)V
      88: goto          92
      91: astore_2
      92: return
    Exception table:
       from    to  target type
          39    88    91   Class java/io/FileNotFoundException

  public void testSplitWillFailIfWritingToRegionFails() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       5: astore_1
       6: aload_0
       7: invokespecial #150                // Method useDifferentDFSClient:()V
      10: ldc           #244                // String break
      12: astore_2
      13: new           #55                 // class org/apache/hadoop/fs/Path
      16: dup
      17: aload_0
      18: getfield      #62                 // Field TABLEDIR:Lorg/apache/hadoop/fs/Path;
      21: aload_2
      22: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      25: astore_3
      26: aload_0
      27: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      30: aload_3
      31: invokevirtual #123                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      34: pop
      35: iconst_0
      36: putstatic     #73                 // Field org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.activateFailure:Z
      39: aload_1
      40: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      43: aload_2
      44: invokestatic  #245                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      47: ldc           #246                // String r999
      49: invokestatic  #245                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      52: getstatic     #2                  // Field FAMILY:[B
      55: getstatic     #4                  // Field QUALIFIER:[B
      58: getstatic     #3                  // Field VALUE:[B
      61: lconst_0
      62: invokestatic  #247                // Method appendEntry:(Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;Lorg/apache/hadoop/hbase/TableName;[B[B[B[B[BJ)J
      65: pop2
      66: aload_1
      67: invokeinterface #128,  1          // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.close:()V
      72: iconst_1
      73: putstatic     #73                 // Field org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.activateFailure:Z
      76: aload_0
      77: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      80: aload_0
      81: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      84: aload_0
      85: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      88: aload_0
      89: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      92: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      95: aload_0
      96: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      99: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
     102: pop
     103: iconst_0
     104: putstatic     #73                 // Field org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.activateFailure:Z
     107: goto          137
     110: astore        4
     112: aload         4
     114: invokevirtual #248                // Method java/io/IOException.getMessage:()Ljava/lang/String;
     117: ldc           #249                // String This exception is instrumented and should only be thrown for testing
     119: invokevirtual #250                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     122: invokestatic  #144                // Method org/junit/Assert.assertTrue:(Z)V
     125: aload         4
     127: athrow
     128: astore        5
     130: iconst_0
     131: putstatic     #73                 // Field org/apache/hadoop/hbase/regionserver/wal/InstrumentedLogWriter.activateFailure:Z
     134: aload         5
     136: athrow
     137: return
    Exception table:
       from    to  target type
          72   103   110   Class java/io/IOException
          72   103   128   any
         110   130   128   any

  public void testSplitDeletedRegion() throws java.io.IOException;
    Code:
       0: getstatic     #67                 // Field REGIONS:Ljava/util/List;
       3: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
       8: ldc           #251                // String region_that_splits
      10: astore_1
      11: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      14: aload_1
      15: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: iconst_1
      23: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      26: pop
      27: aload_0
      28: invokespecial #150                // Method useDifferentDFSClient:()V
      31: new           #55                 // class org/apache/hadoop/fs/Path
      34: dup
      35: aload_0
      36: getfield      #62                 // Field TABLEDIR:Lorg/apache/hadoop/fs/Path;
      39: aload_1
      40: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      43: astore_2
      44: aload_0
      45: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      48: aload_2
      49: iconst_1
      50: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      53: pop
      54: aload_0
      55: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      58: aload_0
      59: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      62: aload_0
      63: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      66: aload_0
      67: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      70: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      73: aload_0
      74: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      77: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      80: pop
      81: aload_0
      82: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      85: aload_2
      86: invokevirtual #252                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      89: invokestatic  #141                // Method org/junit/Assert.assertFalse:(Z)V
      92: return

  public void testIOEOnOutputThread() throws java.lang.Exception;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_0
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: iconst_m1
      11: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      14: pop
      15: aload_0
      16: invokespecial #150                // Method useDifferentDFSClient:()V
      19: aload_0
      20: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      23: aload_0
      24: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      27: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      30: astore_1
      31: ldc           #253                // String There should be some log file
      33: aload_1
      34: ifnull        46
      37: aload_1
      38: arraylength
      39: ifle          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
      50: iconst_0
      51: istore_2
      52: lconst_0
      53: lstore_3
      54: iconst_0
      55: istore        5
      57: iload         5
      59: aload_1
      60: arraylength
      61: if_icmpge     93
      64: aload_1
      65: iload         5
      67: aaload
      68: invokevirtual #254                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      71: lload_3
      72: lcmp
      73: ifle          87
      76: iload         5
      78: istore_2
      79: aload_1
      80: iload         5
      82: aaload
      83: invokevirtual #254                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      86: lstore_3
      87: iinc          5, 1
      90: goto          57
      93: ldc           #255                // String There should be some log greater than size 0.
      95: lconst_0
      96: lload_3
      97: lcmp
      98: ifge          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
     109: new           #256                // class org/apache/hadoop/hbase/wal/TestWALSplit$2
     112: dup
     113: aload_0
     114: aload_0
     115: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     118: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     121: aload_0
     122: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
     125: aload_0
     126: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     129: aconst_null
     130: aconst_null
     131: invokespecial #257                // Method org/apache/hadoop/hbase/wal/TestWALSplit$2."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;)V
     134: astore        5
     136: new           #89                 // class java/util/concurrent/atomic/AtomicBoolean
     139: dup
     140: iconst_0
     141: invokespecial #90                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     144: astore        6
     146: new           #258                // class org/apache/hadoop/hbase/wal/TestWALSplit$3
     149: dup
     150: aload_0
     151: ldc_w         #259                // String Some-old-thread
     154: aload         6
     156: invokespecial #260                // Method org/apache/hadoop/hbase/wal/TestWALSplit$3."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;)V
     159: astore        7
     161: aload         7
     163: iconst_1
     164: invokevirtual #261                // Method java/lang/Thread.setDaemon:(Z)V
     167: aload         7
     169: invokevirtual #95                 // Method java/lang/Thread.start:()V
     172: new           #262                // class org/apache/hadoop/hbase/wal/TestWALSplit$4
     175: dup
     176: aload_0
     177: ldc_w         #263                // String Background-thread-dumper
     180: aload         7
     182: invokespecial #264                // Method org/apache/hadoop/hbase/wal/TestWALSplit$4."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Ljava/lang/String;Ljava/lang/Thread;)V
     185: astore        8
     187: aload         8
     189: iconst_1
     190: invokevirtual #261                // Method java/lang/Thread.setDaemon:(Z)V
     193: aload         8
     195: invokevirtual #95                 // Method java/lang/Thread.start:()V
     198: aload         5
     200: aload_1
     201: iload_2
     202: aaload
     203: aconst_null
     204: invokevirtual #265                // Method org/apache/hadoop/hbase/wal/WALSplitter.splitLogFile:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
     207: pop
     208: ldc_w         #266                // String Didn't throw!
     211: invokestatic  #243                // Method org/junit/Assert.fail:(Ljava/lang/String;)V
     214: aload         6
     216: iconst_1
     217: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     220: goto          259
     223: astore        9
     225: aload         9
     227: invokevirtual #267                // Method java/io/IOException.toString:()Ljava/lang/String;
     230: ldc_w         #268                // String Injected
     233: invokevirtual #250                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     236: invokestatic  #144                // Method org/junit/Assert.assertTrue:(Z)V
     239: aload         6
     241: iconst_1
     242: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     245: goto          259
     248: astore        10
     250: aload         6
     252: iconst_1
     253: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     256: aload         10
     258: athrow
     259: return
    Exception table:
       from    to  target type
         198   214   223   Class java/io/IOException
         198   214   248   any
         223   239   248   any
         248   250   248   any

  public void testMovedWALDuringRecovery() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokestatic  #270                // Method org/mockito/Mockito.spy:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      10: astore_1
      11: iconst_1
      12: anewarray     #272                // class java/lang/Throwable
      15: dup
      16: iconst_0
      17: new           #273                // class org/apache/hadoop/hdfs/server/namenode/LeaseExpiredException
      20: dup
      21: ldc_w         #274                // String Injected: File does not exist
      24: invokespecial #275                // Method org/apache/hadoop/hdfs/server/namenode/LeaseExpiredException."<init>":(Ljava/lang/String;)V
      27: aastore
      28: invokestatic  #276                // Method org/mockito/Mockito.doThrow:([Ljava/lang/Throwable;)Lorg/mockito/stubbing/Stubber;
      31: aload_1
      32: invokeinterface #277,  2          // InterfaceMethod org/mockito/stubbing/Stubber.when:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      40: invokestatic  #278                // Method org/mockito/Mockito.any:()Ljava/lang/Object;
      43: checkcast     #55                 // class org/apache/hadoop/fs/Path
      46: invokevirtual #279                // Method org/apache/hadoop/fs/FileSystem.append:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      49: pop
      50: aload_0
      51: aload_1
      52: invokespecial #280                // Method retryOverHdfsProblem:(Lorg/apache/hadoop/fs/FileSystem;)V
      55: return

  public void testRetryOpenDuringRecovery() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: invokestatic  #270                // Method org/mockito/Mockito.spy:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      10: astore_1
      11: new           #281                // class org/apache/hadoop/hbase/wal/TestWALSplit$5
      14: dup
      15: aload_0
      16: invokespecial #282                // Method org/apache/hadoop/hbase/wal/TestWALSplit$5."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;)V
      19: invokestatic  #283                // Method org/mockito/Mockito.doAnswer:(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;
      22: aload_1
      23: invokeinterface #277,  2          // InterfaceMethod org/mockito/stubbing/Stubber.when:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      31: invokestatic  #278                // Method org/mockito/Mockito.any:()Ljava/lang/Object;
      34: checkcast     #55                 // class org/apache/hadoop/fs/Path
      37: invokestatic  #284                // Method org/mockito/Mockito.anyInt:()I
      40: invokevirtual #285                // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      43: pop
      44: aload_0
      45: aload_1
      46: invokespecial #280                // Method retryOverHdfsProblem:(Lorg/apache/hadoop/fs/FileSystem;)V
      49: return

  public void testTerminationAskedByReporter() throws java.io.IOException, org.apache.hadoop.hbase.wal.WALSplitter$CorruptedLogFileException;
    Code:
       0: aload_0
       1: iconst_1
       2: bipush        10
       4: iconst_m1
       5: invokespecial #5                  // Method generateWALs:(III)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       8: pop
       9: aload_0
      10: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      13: aload_0
      14: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      17: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      20: iconst_0
      21: aaload
      22: astore_1
      23: aload_0
      24: invokespecial #150                // Method useDifferentDFSClient:()V
      27: new           #286                // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: invokespecial #287                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      34: astore_2
      35: new           #288                // class org/apache/hadoop/hbase/wal/TestWALSplit$6
      38: dup
      39: aload_0
      40: aload_2
      41: invokespecial #289                // Method org/apache/hadoop/hbase/wal/TestWALSplit$6."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Ljava/util/concurrent/atomic/AtomicInteger;)V
      44: astore_3
      45: aload_0
      46: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      49: invokestatic  #270                // Method org/mockito/Mockito.spy:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      55: astore        4
      57: new           #290                // class org/apache/hadoop/hbase/wal/TestWALSplit$7
      60: dup
      61: aload_0
      62: invokespecial #291                // Method org/apache/hadoop/hbase/wal/TestWALSplit$7."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;)V
      65: invokestatic  #283                // Method org/mockito/Mockito.doAnswer:(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/Stubber;
      68: aload         4
      70: invokeinterface #277,  2          // InterfaceMethod org/mockito/stubbing/Stubber.when:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #271                // class org/apache/hadoop/fs/FileSystem
      78: invokestatic  #278                // Method org/mockito/Mockito.any:()Ljava/lang/Object;
      81: checkcast     #55                 // class org/apache/hadoop/fs/Path
      84: invokestatic  #284                // Method org/mockito/Mockito.anyInt:()I
      87: invokevirtual #285                // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
      90: pop
      91: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      94: ldc_w         #292                // String hbase.splitlog.report.period
      97: sipush        1000
     100: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
     103: aload_0
     104: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
     107: aload_1
     108: aload         4
     110: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     113: aload_3
     114: aconst_null
     115: aconst_null
     116: aload_0
     117: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     120: invokestatic  #293                // Method org/apache/hadoop/hbase/wal/WALSplitter.splitLogFile:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
     123: istore        5
     125: ldc_w         #294                // String Log splitting should failed
     128: iload         5
     130: invokestatic  #157                // Method org/junit/Assert.assertFalse:(Ljava/lang/String;Z)V
     133: aload_2
     134: invokevirtual #295                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     137: ifle          144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: invokestatic  #144                // Method org/junit/Assert.assertTrue:(Z)V
     148: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     151: ldc_w         #292                // String hbase.splitlog.report.period
     154: ldc_w         #296                // int 59000
     157: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
     160: goto          224
     163: astore        5
     165: new           #33                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     172: ldc_w         #269                // String There shouldn't be any exception but:
     175: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload         5
     180: invokevirtual #267                // Method java/io/IOException.toString:()Ljava/lang/String;
     183: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     189: invokestatic  #243                // Method org/junit/Assert.fail:(Ljava/lang/String;)V
     192: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     195: ldc_w         #292                // String hbase.splitlog.report.period
     198: ldc_w         #296                // int 59000
     201: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
     204: goto          224
     207: astore        6
     209: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     212: ldc_w         #292                // String hbase.splitlog.report.period
     215: ldc_w         #296                // int 59000
     218: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.setInt:(Ljava/lang/String;I)V
     221: aload         6
     223: athrow
     224: return
    Exception table:
       from    to  target type
          91   148   163   Class java/io/IOException
          91   148   207   any
         163   192   207   any
         207   209   207   any

  public void testThreading() throws java.lang.Exception;
    Code:
       0: aload_0
       1: sipush        20000
       4: ldc_w         #297                // int 134217728
       7: iconst_0
       8: invokespecial #298                // Method doTestThreading:(III)V
      11: return

  public void testThreadingSlowWriterSmallBuffer() throws java.lang.Exception;
    Code:
       0: aload_0
       1: sipush        200
       4: sipush        1024
       7: bipush        50
       9: invokespecial #298                // Method doTestThreading:(III)V
      12: return

  public void testSplitLogFileDeletedRegionDir() throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #330                // String testSplitLogFileDeletedRegionDir
       6: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: ldc           #147                // String region__1
      13: astore_1
      14: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      17: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
      22: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      25: ldc           #147                // String region__1
      27: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_0
      34: iconst_1
      35: bipush        10
      37: iconst_m1
      38: invokespecial #5                  // Method generateWALs:(III)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      41: pop
      42: aload_0
      43: invokespecial #150                // Method useDifferentDFSClient:()V
      46: new           #55                 // class org/apache/hadoop/fs/Path
      49: dup
      50: aload_0
      51: getfield      #62                 // Field TABLEDIR:Lorg/apache/hadoop/fs/Path;
      54: ldc           #147                // String region__1
      56: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      59: astore_2
      60: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      63: new           #33                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc_w         #331                // String Region directory is
      73: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_2
      77: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      88: aload_0
      89: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      92: aload_2
      93: iconst_1
      94: invokevirtual #82                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      97: pop
      98: aload_0
      99: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
     102: aload_0
     103: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
     106: aload_0
     107: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
     110: aload_0
     111: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     114: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     117: aload_0
     118: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     121: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
     124: pop
     125: aload_0
     126: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     129: aload_2
     130: invokevirtual #252                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     133: invokestatic  #141                // Method org/junit/Assert.assertFalse:(Z)V
     136: return

  public void testSplitLogFileEmpty() throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #332                // String testSplitLogFileEmpty
       6: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: aload_0
      12: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: aload_0
      16: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      19: invokevirtual #123                // Method org/apache/hadoop/fs/FileSystem.mkdirs:(Lorg/apache/hadoop/fs/Path;)Z
      22: pop
      23: aload_0
      24: ldc           #177                // String .empty
      26: iconst_1
      27: invokespecial #178                // Method injectEmptyFile:(Ljava/lang/String;Z)V
      30: aload_0
      31: invokespecial #150                // Method useDifferentDFSClient:()V
      34: aload_0
      35: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      38: aload_0
      39: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      42: aload_0
      43: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      46: aload_0
      47: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      50: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      53: aload_0
      54: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      57: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      60: pop
      61: aload_0
      62: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
      65: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      68: invokestatic  #61                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      71: astore_1
      72: aload_0
      73: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      76: aload_1
      77: invokevirtual #252                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      80: invokestatic  #141                // Method org/junit/Assert.assertFalse:(Z)V
      83: lconst_0
      84: aload_0
      85: aload_0
      86: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      89: aload_0
      90: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      93: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      96: iconst_0
      97: aaload
      98: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     101: invokespecial #9                  // Method countWAL:(Lorg/apache/hadoop/fs/Path;)I
     104: i2l
     105: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     108: return

  public void testSplitLogFileMultipleRegions() throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #333                // String testSplitLogFileMultipleRegions
       6: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: aload_0
      12: iconst_1
      13: bipush        10
      15: iconst_m1
      16: invokespecial #5                  // Method generateWALs:(III)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      19: pop
      20: aload_0
      21: iconst_1
      22: bipush        10
      24: invokespecial #182                // Method splitAndCount:(II)I
      27: pop
      28: return

  public void testSplitLogFileFirstLineCorruptionLog() throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #183                // String hbase.hlog.split.skip.errors
       5: iconst_1
       6: invokevirtual #184                // Method org/apache/hadoop/conf/Configuration.setBoolean:(Ljava/lang/String;Z)V
       9: aload_0
      10: iconst_1
      11: bipush        10
      13: iconst_m1
      14: invokespecial #5                  // Method generateWALs:(III)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      17: pop
      18: aload_0
      19: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      22: aload_0
      23: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      26: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      29: iconst_0
      30: aaload
      31: astore_1
      32: aload_0
      33: aload_1
      34: invokevirtual #153                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      37: getstatic     #188                // Field org/apache/hadoop/hbase/wal/TestWALSplit$Corruptions.INSERT_GARBAGE_ON_FIRST_LINE:Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;
      40: iconst_1
      41: invokespecial #187                // Method corruptWAL:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/TestWALSplit$Corruptions;Z)V
      44: aload_0
      45: invokespecial #150                // Method useDifferentDFSClient:()V
      48: aload_0
      49: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
      52: aload_0
      53: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      56: aload_0
      57: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
      60: aload_0
      61: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      64: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      67: aload_0
      68: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      71: invokestatic  #151                // Method org/apache/hadoop/hbase/wal/WALSplitter.split:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
      74: pop
      75: new           #55                 // class org/apache/hadoop/fs/Path
      78: dup
      79: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      82: invokestatic  #334                // Method org/apache/hadoop/hbase/util/FSUtils.getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      85: ldc           #59                 // String corrupt
      87: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      90: astore_2
      91: lconst_1
      92: aload_0
      93: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      96: aload_2
      97: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     100: arraylength
     101: i2l
     102: invokestatic  #154                // Method org/junit/Assert.assertEquals:(JJ)V
     105: return

  public void testConcurrentSplitLogAndReplayRecoverEdit() throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc_w         #335                // String testConcurrentSplitLogAndReplayRecoverEdit
       6: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: ldc_w         #305                // String r0
      14: astore_1
      15: new           #55                 // class org/apache/hadoop/fs/Path
      18: dup
      19: aload_0
      20: getfield      #62                 // Field TABLEDIR:Lorg/apache/hadoop/fs/Path;
      23: aload_1
      24: invokespecial #58                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      27: astore_2
      28: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      31: invokeinterface #68,  1           // InterfaceMethod java/util/List.clear:()V
      36: getstatic     #67                 // Field REGIONS:Ljava/util/List;
      39: aload_1
      40: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_0
      47: iconst_m1
      48: invokespecial #180                // Method generateWALs:(I)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
      51: pop
      52: aload_0
      53: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
      56: aconst_null
      57: invokevirtual #336                // Method org/apache/hadoop/hbase/wal/WALFactory.getWAL:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
      60: pop
      61: aload_0
      62: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      65: aload_0
      66: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
      69: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      72: astore_3
      73: ldc           #253                // String There should be some log file
      75: aload_3
      76: ifnull        88
      79: aload_3
      80: arraylength
      81: ifle          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: invokestatic  #112                // Method org/junit/Assert.assertTrue:(Ljava/lang/String;Z)V
      92: new           #337                // class org/apache/hadoop/hbase/wal/TestWALSplit$9
      95: dup
      96: aload_0
      97: aload_0
      98: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
     101: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     104: aload_0
     105: getfield      #53                 // Field HBASEDIR:Lorg/apache/hadoop/fs/Path;
     108: aload_0
     109: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     112: aconst_null
     113: aconst_null
     114: aload_2
     115: invokespecial #338                // Method org/apache/hadoop/hbase/wal/TestWALSplit$9."<init>":(Lorg/apache/hadoop/hbase/wal/TestWALSplit;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/fs/Path;)V
     118: astore        4
     120: aload         4
     122: aload_3
     123: iconst_0
     124: aaload
     125: aconst_null
     126: invokevirtual #265                // Method org/apache/hadoop/hbase/wal/WALSplitter.splitLogFile:(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
     129: pop
     130: goto          156
     133: astore        5
     135: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     138: aload         5
     140: invokevirtual #267                // Method java/io/IOException.toString:()Ljava/lang/String;
     143: aload         5
     145: invokeinterface #339,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
     150: ldc_w         #340                // String Throws IOException when spliting log, it is most likely because writing file does not exist which is caused by concurrent replayRecoveredEditsIfAny()
     153: invokestatic  #243                // Method org/junit/Assert.fail:(Ljava/lang/String;)V
     156: aload_0
     157: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     160: aload_0
     161: getfield      #60                 // Field CORRUPTDIR:Lorg/apache/hadoop/fs/Path;
     164: invokevirtual #252                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     167: ifeq          191
     170: aload_0
     171: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     174: aload_0
     175: getfield      #60                 // Field CORRUPTDIR:Lorg/apache/hadoop/fs/Path;
     178: invokevirtual #152                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
     181: arraylength
     182: ifle          191
     185: ldc_w         #341                // String There are some corrupt logs, it is most likely caused by concurrent replayRecoveredEditsIfAny()
     188: invokestatic  #243                // Method org/junit/Assert.fail:(Ljava/lang/String;)V
     191: return
    Exception table:
       from    to  target type
         120   130   133   Class java/io/IOException

  public static long appendEntry(org.apache.hadoop.hbase.wal.WALProvider$Writer, org.apache.hadoop.hbase.TableName, byte[], byte[], byte[], byte[], byte[], long) throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: new           #33                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      10: invokestatic  #408                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #409                // Method java/lang/Thread.getName:()Ljava/lang/String;
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc_w         #410                // String  append
      22: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload_3
      37: aload         4
      39: aload         5
      41: aload         6
      43: lload         7
      45: invokestatic  #1                  // Method createTestEntry:(Lorg/apache/hadoop/hbase/TableName;[B[B[B[B[BJ)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
      48: invokeinterface #393,  2          // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.append:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
      53: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      56: new           #33                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      63: invokestatic  #408                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      66: invokevirtual #409                // Method java/lang/Thread.getName:()Ljava/lang/String;
      69: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc_w         #411                // String  sync
      75: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokeinterface #49,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      86: aload_0
      87: iconst_0
      88: invokeinterface #394,  2          // InterfaceMethod org/apache/hadoop/hbase/wal/WALProvider$Writer.sync:(Z)V
      93: lload         7
      95: lreturn

  static org.apache.hadoop.fs.Path access$000(org.apache.hadoop.hbase.wal.TestWALSplit);
    Code:
       0: aload_0
       1: getfield      #17                 // Field WALDIR:Lorg/apache/hadoop/fs/Path;
       4: areturn

  static org.apache.hadoop.fs.FileSystem access$100(org.apache.hadoop.hbase.wal.TestWALSplit);
    Code:
       0: aload_0
       1: getfield      #16                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.hadoop.fs.Path access$300(org.apache.hadoop.hbase.wal.TestWALSplit);
    Code:
       0: aload_0
       1: getfield      #14                 // Field HBASELOGDIR:Lorg/apache/hadoop/fs/Path;
       4: areturn

  static org.apache.hadoop.fs.Path access$400(org.apache.hadoop.hbase.wal.TestWALSplit);
    Code:
       0: aload_0
       1: getfield      #13                 // Field OLDLOGDIR:Lorg/apache/hadoop/fs/Path;
       4: areturn

  static org.apache.hadoop.hbase.wal.WALFactory access$500(org.apache.hadoop.hbase.wal.TestWALSplit);
    Code:
       0: aload_0
       1: getfield      #12                 // Field wals:Lorg/apache/hadoop/hbase/wal/WALFactory;
       4: areturn

  static org.apache.hadoop.hbase.TableName access$600();
    Code:
       0: getstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
       3: areturn

  static org.apache.hadoop.fs.Path[] access$700(org.apache.hadoop.hbase.wal.TestWALSplit, org.apache.hadoop.hbase.TableName, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method getLogForRegion:(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)[Lorg/apache/hadoop/fs/Path;
       6: areturn

  static int access$800(org.apache.hadoop.hbase.wal.TestWALSplit, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method countWAL:(Lorg/apache/hadoop/fs/Path;)I
       5: ireturn

  static org.apache.hadoop.conf.Configuration access$900();
    Code:
       0: getstatic     #8                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: areturn

  static java.lang.String access$1000();
    Code:
       0: getstatic     #7                  // Field ZOMBIE:Ljava/lang/String;
       3: areturn

  static java.lang.String[] access$1100();
    Code:
       0: getstatic     #6                  // Field GROUP:[Ljava/lang/String;
       3: areturn

  static org.apache.hadoop.hbase.wal.WALProvider$Writer access$1200(org.apache.hadoop.hbase.wal.TestWALSplit, int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #5                  // Method generateWALs:(III)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
       7: areturn

  static byte[] access$1400();
    Code:
       0: getstatic     #4                  // Field QUALIFIER:[B
       3: areturn

  static byte[] access$1500();
    Code:
       0: getstatic     #3                  // Field VALUE:[B
       3: areturn

  static byte[] access$1600();
    Code:
       0: getstatic     #2                  // Field FAMILY:[B
       3: areturn

  static org.apache.hadoop.hbase.wal.WAL$Entry access$1700(org.apache.hadoop.hbase.TableName, byte[], byte[], byte[], byte[], byte[], long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: lload         6
      10: invokestatic  #1                  // Method createTestEntry:(Lorg/apache/hadoop/hbase/TableName;[B[B[B[B[BJ)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
      13: areturn

  static {};
    Code:
       0: ldc           #137                // class org/apache/hadoop/hbase/wal/TestWALSplit
       2: invokestatic  #422                // Method org/apache/hadoop/hbase/HBaseClassTestRule.forClass:(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       5: putstatic     #423                // Field CLASS_RULE:Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       8: ldc           #137                // class org/apache/hadoop/hbase/wal/TestWALSplit
      10: invokestatic  #424                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      13: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      16: new           #425                // class org/apache/hadoop/hbase/HBaseTestingUtility
      19: dup
      20: invokespecial #426                // Method org/apache/hadoop/hbase/HBaseTestingUtility."<init>":()V
      23: putstatic     #22                 // Field TEST_UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      26: ldc_w         #427                // String t1
      29: invokestatic  #428                // Method org/apache/hadoop/hbase/TableName.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      32: putstatic     #11                 // Field TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      35: ldc_w         #429                // String f1
      38: invokestatic  #245                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      41: putstatic     #2                  // Field FAMILY:[B
      44: ldc_w         #430                // String q1
      47: invokestatic  #245                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      50: putstatic     #4                  // Field QUALIFIER:[B
      53: ldc_w         #431                // String v1
      56: invokestatic  #245                // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      59: putstatic     #3                  // Field VALUE:[B
      62: new           #432                // class java/util/ArrayList
      65: dup
      66: invokespecial #433                // Method java/util/ArrayList."<init>":()V
      69: putstatic     #67                 // Field REGIONS:Ljava/util/List;
      72: iconst_1
      73: anewarray     #69                 // class java/lang/String
      76: dup
      77: iconst_0
      78: ldc_w         #434                // String supergroup
      81: aastore
      82: putstatic     #6                  // Field GROUP:[Ljava/lang/String;
      85: return
}
