Compiled from "MetricsMasterFilesystemSourceImpl.java"
public class org.apache.hadoop.hbase.master.MetricsMasterFilesystemSourceImpl extends org.apache.hadoop.hbase.metrics.BaseSourceImpl implements org.apache.hadoop.hbase.master.MetricsMasterFileSystemSource {
  public org.apache.hadoop.hbase.master.MetricsMasterFilesystemSourceImpl();
    Code:
       0: aload_0
       1: ldc           #2                  // String FileSystem
       3: ldc           #3                  // String Metrics about HBase master file system.
       5: ldc           #4                  // String master
       7: ldc           #5                  // String Master,sub=FileSystem
       9: invokespecial #6                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public org.apache.hadoop.hbase.master.MetricsMasterFilesystemSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #7                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void init();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       5: ldc           #9                  // String hlogSplitSize
       7: ldc           #10                 // String Size of WAL files being split
       9: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      12: putfield      #12                 // Field splitSizeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
      15: aload_0
      16: aload_0
      17: getfield      #8                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      20: ldc           #13                 // String hlogSplitTime
      22: ldc           #14                 // String Time it takes to finish WAL.splitLog()
      24: invokevirtual #15                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      27: putfield      #16                 // Field splitTimeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
      30: aload_0
      31: aload_0
      32: getfield      #8                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      35: ldc           #17                 // String metaHlogSplitTime
      37: ldc           #18                 // String Time it takes to finish splitMetaLog()
      39: invokevirtual #15                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      42: putfield      #19                 // Field metaSplitTimeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
      45: aload_0
      46: aload_0
      47: getfield      #8                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      50: ldc           #20                 // String metaHlogSplitSize
      52: ldc           #21                 // String Size of hbase:meta WAL files being split
      54: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      57: putfield      #22                 // Field metaSplitSizeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
      60: return

  public void updateSplitTime(long);
    Code:
       0: aload_0
       1: getfield      #16                 // Field splitTimeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #23,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void updateSplitSize(long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field splitSizeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #23,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void updateMetaWALSplitTime(long);
    Code:
       0: aload_0
       1: getfield      #19                 // Field metaSplitTimeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #23,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void updateMetaWALSplitSize(long);
    Code:
       0: aload_0
       1: getfield      #22                 // Field metaSplitSizeHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #23,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return
}
