Compiled from "DiffKeyDeltaEncoder.java"
public class org.apache.hadoop.hbase.io.encoding.DiffKeyDeltaEncoder extends org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder {
  static final int FLAG_SAME_KEY_LENGTH;

  static final int FLAG_SAME_VALUE_LENGTH;

  static final int FLAG_SAME_TYPE;

  static final int FLAG_TIMESTAMP_IS_DIFF;

  static final int MASK_TIMESTAMP_LENGTH;

  static final int SHIFT_TIMESTAMP_LENGTH;

  static final int FLAG_TIMESTAMP_SIGN;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.io.encoding.DiffKeyDeltaEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder."<init>":()V
       4: return

  public int internalEncode(org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.io.encoding.HFileBlockDefaultEncodingContext, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #31                 // Method org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext.getEncodingState:()Lorg/apache/hadoop/hbase/io/encoding/EncodingState;
       4: astore        4
       6: aload_0
       7: aload_3
       8: aload_1
       9: aload         4
      11: getfield      #32                 // Field org/apache/hadoop/hbase/io/encoding/EncodingState.prevCell:Lorg/apache/hadoop/hbase/Cell;
      14: invokespecial #33                 // Method compressSingleKeyValue:(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
      17: istore        5
      19: iload         5
      21: aload_0
      22: aload_1
      23: aload_3
      24: aload_2
      25: invokevirtual #34                 // Method afterEncodingKeyValue:(Lorg/apache/hadoop/hbase/Cell;Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)I
      28: iadd
      29: istore        5
      31: aload         4
      33: aload_1
      34: putfield      #32                 // Field org/apache/hadoop/hbase/io/encoding/EncodingState.prevCell:Lorg/apache/hadoop/hbase/Cell;
      37: iload         5
      39: ireturn

  public org.apache.hadoop.hbase.Cell getFirstKeyCellInBlock(org.apache.hadoop.hbase.nio.ByteBuff);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/apache/hadoop/hbase/nio/ByteBuff.mark:()Lorg/apache/hadoop/hbase/nio/ByteBuff;
       4: pop
       5: aload_1
       6: iconst_4
       7: invokevirtual #54                 // Method org/apache/hadoop/hbase/nio/ByteBuff.position:(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
      10: pop
      11: aload_1
      12: invokevirtual #55                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:()B
      15: istore_2
      16: aload_1
      17: iload_2
      18: invokevirtual #56                 // Method org/apache/hadoop/hbase/nio/ByteBuff.skip:(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
      21: pop
      22: aload_1
      23: invokevirtual #55                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:()B
      26: istore_3
      27: aload_1
      28: invokestatic  #57                 // Method org/apache/hadoop/hbase/nio/ByteBuff.readCompressedInt:(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
      31: istore        4
      33: aload_1
      34: invokestatic  #57                 // Method org/apache/hadoop/hbase/nio/ByteBuff.readCompressedInt:(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
      37: pop
      38: aload_1
      39: invokestatic  #57                 // Method org/apache/hadoop/hbase/nio/ByteBuff.readCompressedInt:(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
      42: pop
      43: iload         4
      45: invokestatic  #58                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      48: astore        5
      50: getstatic     #8                  // Field $assertionsDisabled:Z
      53: ifne          72
      56: aload         5
      58: invokevirtual #59                 // Method java/nio/ByteBuffer.isDirect:()Z
      61: ifeq          72
      64: new           #9                  // class java/lang/AssertionError
      67: dup
      68: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      71: athrow
      72: aload         5
      74: invokevirtual #60                 // Method java/nio/ByteBuffer.arrayOffset:()I
      77: istore        6
      79: aload_1
      80: aload         5
      82: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
      85: iload         6
      87: iconst_2
      88: invokevirtual #62                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:([BII)V
      91: iinc          6, 2
      94: aload         5
      96: invokevirtual #23                 // Method java/nio/ByteBuffer.getShort:()S
      99: istore        7
     101: aload_1
     102: aload         5
     104: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
     107: iload         6
     109: iload         7
     111: invokevirtual #62                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:([BII)V
     114: iload         6
     116: iload         7
     118: iadd
     119: istore        6
     121: aload_1
     122: invokevirtual #63                 // Method org/apache/hadoop/hbase/nio/ByteBuff.position:()I
     125: istore        8
     127: aload_1
     128: iconst_4
     129: invokevirtual #54                 // Method org/apache/hadoop/hbase/nio/ByteBuff.position:(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
     132: pop
     133: aload_1
     134: aload         5
     136: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
     139: iload         6
     141: iload_2
     142: iconst_1
     143: iadd
     144: invokevirtual #62                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:([BII)V
     147: iload         6
     149: iload_2
     150: iconst_1
     151: iadd
     152: iadd
     153: istore        6
     155: aload_1
     156: iload         8
     158: invokevirtual #54                 // Method org/apache/hadoop/hbase/nio/ByteBuff.position:(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
     161: pop
     162: iload         4
     164: iload         6
     166: isub
     167: aload         5
     169: invokevirtual #60                 // Method java/nio/ByteBuffer.arrayOffset:()I
     172: iadd
     173: bipush        9
     175: isub
     176: istore        9
     178: aload_1
     179: aload         5
     181: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
     184: iload         6
     186: iload         9
     188: invokevirtual #62                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:([BII)V
     191: iload         6
     193: iload         9
     195: iadd
     196: istore        6
     198: iload_3
     199: bipush        112
     201: iand
     202: iconst_4
     203: iushr
     204: iconst_1
     205: iadd
     206: istore        10
     208: aload_1
     209: iload         10
     211: invokestatic  #64                 // Method org/apache/hadoop/hbase/nio/ByteBuff.readLong:(Lorg/apache/hadoop/hbase/nio/ByteBuff;I)J
     214: lstore        11
     216: iload_3
     217: sipush        128
     220: iand
     221: ifeq          229
     224: lload         11
     226: lneg
     227: lstore        11
     229: aload         5
     231: iload         6
     233: lload         11
     235: invokevirtual #65                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     238: pop
     239: iinc          6, 8
     242: aload_1
     243: aload         5
     245: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
     248: iload         6
     250: iconst_1
     251: invokevirtual #62                 // Method org/apache/hadoop/hbase/nio/ByteBuff.get:([BII)V
     254: aload_1
     255: invokevirtual #66                 // Method org/apache/hadoop/hbase/nio/ByteBuff.reset:()Lorg/apache/hadoop/hbase/nio/ByteBuff;
     258: pop
     259: new           #67                 // class org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue
     262: dup
     263: aload         5
     265: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B
     268: iconst_0
     269: iload         4
     271: invokespecial #68                 // Method org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue."<init>":([BII)V
     274: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #11                 // class org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder
       2: invokevirtual #69                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       5: areturn

  public org.apache.hadoop.hbase.io.encoding.DataBlockEncoder$EncodedSeeker createSeeker(org.apache.hadoop.hbase.CellComparator, org.apache.hadoop.hbase.io.encoding.HFileBlockDecodingContext);
    Code:
       0: new           #70                 // class org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #71                 // Method org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$1."<init>":(Lorg/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
      10: areturn

  protected java.nio.ByteBuffer internalDecodeKeyValues(java.io.DataInputStream, int, int, org.apache.hadoop.hbase.io.encoding.HFileBlockDefaultDecodingContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method java/io/DataInputStream.readInt:()I
       4: istore        5
       6: iload         5
       8: iload_2
       9: iadd
      10: invokestatic  #58                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      13: astore        6
      15: aload         6
      17: iload_2
      18: invokevirtual #73                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      21: pop
      22: new           #74                 // class org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$DiffCompressionState
      25: dup
      26: invokespecial #75                 // Method org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$DiffCompressionState."<init>":()V
      29: astore        7
      31: aload_1
      32: invokevirtual #76                 // Method java/io/DataInputStream.available:()I
      35: iload_3
      36: if_icmple     60
      39: aload_0
      40: aload_1
      41: aload         6
      43: aload         7
      45: invokespecial #77                 // Method uncompressSingleKeyValue:(Ljava/io/DataInputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$DiffCompressionState;)V
      48: aload_0
      49: aload_1
      50: aload         6
      52: aload         4
      54: invokevirtual #78                 // Method afterDecodingKeyValue:(Ljava/io/DataInputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext;)V
      57: goto          31
      60: aload_1
      61: invokevirtual #76                 // Method java/io/DataInputStream.available:()I
      64: iload_3
      65: if_icmpeq     78
      68: new           #79                 // class java/lang/IllegalStateException
      71: dup
      72: ldc           #80                 // String Read too much bytes.
      74: invokespecial #81                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload         6
      80: areturn

  public void endBlockEncoding(org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #82                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.endBlockEncoding:(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
       7: return

  public int encode(org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #83                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.encode:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
       7: ireturn

  public void startBlockEncoding(org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #84                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.startBlockEncoding:(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
       6: return

  public java.nio.ByteBuffer decodeKeyValues(java.io.DataInputStream, org.apache.hadoop.hbase.io.encoding.HFileBlockDecodingContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #85                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.decodeKeyValues:(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
       6: areturn

  static {};
    Code:
       0: ldc           #11                 // class org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder
       2: invokevirtual #86                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #8                  // Field $assertionsDisabled:Z
      16: return
}
