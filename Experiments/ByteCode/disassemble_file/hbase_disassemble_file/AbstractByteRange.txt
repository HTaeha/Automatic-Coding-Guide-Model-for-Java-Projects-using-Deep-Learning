Compiled from "AbstractByteRange.java"
public abstract class org.apache.hadoop.hbase.util.AbstractByteRange implements org.apache.hadoop.hbase.util.ByteRange {
  public static final int UNSET_HASH_VALUE;

  protected byte[] bytes;

  protected int offset;

  protected int length;

  protected int hash;

  public org.apache.hadoop.hbase.util.AbstractByteRange();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #3                  // Field hash:I
       9: return

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: areturn

  public abstract org.apache.hadoop.hbase.util.ByteRange unset();

  public org.apache.hadoop.hbase.util.ByteRange set(int);
    Code:
       0: aload_0
       1: iload_1
       2: newarray       byte
       4: invokevirtual #5                  // Method set:([B)Lorg/apache/hadoop/hbase/util/ByteRange;
       7: areturn

  public org.apache.hadoop.hbase.util.ByteRange set(byte[]);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     10
       5: aload_0
       6: invokevirtual #6                  // Method unset:()Lorg/apache/hadoop/hbase/util/ByteRange;
       9: areturn
      10: aload_0
      11: invokevirtual #7                  // Method clearHashCache:()V
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field bytes:[B
      19: aload_0
      20: iconst_0
      21: putfield      #8                  // Field offset:I
      24: aload_0
      25: aload_1
      26: arraylength
      27: putfield      #9                  // Field length:I
      30: aload_0
      31: areturn

  public org.apache.hadoop.hbase.util.ByteRange set(byte[], int, int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     10
       5: aload_0
       6: invokevirtual #6                  // Method unset:()Lorg/apache/hadoop/hbase/util/ByteRange;
       9: areturn
      10: aload_0
      11: invokevirtual #7                  // Method clearHashCache:()V
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field bytes:[B
      19: aload_0
      20: iload_2
      21: putfield      #8                  // Field offset:I
      24: aload_0
      25: iload_3
      26: putfield      #9                  // Field length:I
      29: aload_0
      30: areturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #8                  // Field offset:I
       4: ireturn

  public org.apache.hadoop.hbase.util.ByteRange setOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method clearHashCache:()V
       4: aload_0
       5: iload_1
       6: putfield      #8                  // Field offset:I
       9: aload_0
      10: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: ireturn

  public org.apache.hadoop.hbase.util.ByteRange setLength(int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method clearHashCache:()V
       4: aload_0
       5: iload_1
       6: putfield      #9                  // Field length:I
       9: aload_0
      10: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method isEmpty:(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
       4: ireturn

  public static boolean isEmpty(org.apache.hadoop.hbase.util.ByteRange);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getLength:()I
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public byte get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #8                  // Field offset:I
       8: iload_1
       9: iadd
      10: baload
      11: ireturn

  public org.apache.hadoop.hbase.util.ByteRange get(int, byte[]);
    Code:
       0: iconst_0
       1: aload_2
       2: arraylength
       3: if_icmpne     8
       6: aload_0
       7: areturn
       8: aload_0
       9: iload_1
      10: aload_2
      11: iconst_0
      12: aload_2
      13: arraylength
      14: invokevirtual #12                 // Method get:(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
      17: areturn

  public org.apache.hadoop.hbase.util.ByteRange get(int, byte[], int, int);
    Code:
       0: iconst_0
       1: iload         4
       3: if_icmpne     8
       6: aload_0
       7: areturn
       8: aload_0
       9: getfield      #4                  // Field bytes:[B
      12: aload_0
      13: getfield      #8                  // Field offset:I
      16: iload_1
      17: iadd
      18: aload_2
      19: iload_3
      20: iload         4
      22: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: areturn

  public short getShort(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field offset:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_0
      11: getfield      #4                  // Field bytes:[B
      14: iload_2
      15: baload
      16: ixor
      17: sipush        255
      20: iand
      21: i2s
      22: istore_3
      23: iload_3
      24: bipush        8
      26: ishl
      27: i2s
      28: istore_3
      29: iload_3
      30: aload_0
      31: getfield      #4                  // Field bytes:[B
      34: iload_2
      35: iconst_1
      36: iadd
      37: baload
      38: ixor
      39: sipush        255
      42: iand
      43: i2s
      44: istore_3
      45: iload_3
      46: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field offset:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_2
      10: istore        4
      12: iload         4
      14: iload_2
      15: iconst_4
      16: iadd
      17: if_icmpge     45
      20: iload_3
      21: bipush        8
      23: ishl
      24: istore_3
      25: iload_3
      26: aload_0
      27: getfield      #4                  // Field bytes:[B
      30: iload         4
      32: baload
      33: sipush        255
      36: iand
      37: ixor
      38: istore_3
      39: iinc          4, 1
      42: goto          12
      45: iload_3
      46: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field offset:I
       4: iload_1
       5: iadd
       6: istore_2
       7: lconst_0
       8: lstore_3
       9: iload_2
      10: istore        5
      12: iload         5
      14: iload_2
      15: bipush        8
      17: iadd
      18: if_icmpge     47
      21: lload_3
      22: bipush        8
      24: lshl
      25: lstore_3
      26: lload_3
      27: aload_0
      28: getfield      #4                  // Field bytes:[B
      31: iload         5
      33: baload
      34: sipush        255
      37: iand
      38: i2l
      39: lxor
      40: lstore_3
      41: iinc          5, 1
      44: goto          12
      47: lload_3
      48: lreturn

  public long getVLong(int);
    Code:
       0: iconst_0
       1: istore_2
       2: lconst_0
       3: lstore_3
       4: iload_2
       5: bipush        64
       7: if_icmpge     49
      10: aload_0
      11: iload_1
      12: iinc          1, 1
      15: invokevirtual #15                 // Method get:(I)B
      18: istore        5
      20: lload_3
      21: iload         5
      23: bipush        127
      25: iand
      26: i2l
      27: iload_2
      28: lshl
      29: lor
      30: lstore_3
      31: iload         5
      33: sipush        128
      36: iand
      37: ifne          43
      40: goto          49
      43: iinc          2, 7
      46: goto          4
      49: lload_3
      50: lreturn

  public static int getVLongSize(long);
    Code:
       0: iconst_0
       1: istore_2
       2: lload_0
       3: ldc2_w        #16                 // long -128l
       6: land
       7: lconst_0
       8: lcmp
       9: ifeq          23
      12: lload_0
      13: bipush        7
      15: lushr
      16: lstore_0
      17: iinc          2, 1
      20: goto          2
      23: iload_2
      24: iconst_1
      25: iadd
      26: ireturn

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte);

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte[]);

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte[], int, int);

  public abstract org.apache.hadoop.hbase.util.ByteRange putInt(int, int);

  public abstract org.apache.hadoop.hbase.util.ByteRange putLong(int, long);

  public abstract org.apache.hadoop.hbase.util.ByteRange putShort(int, short);

  public abstract int putVLong(int, long);

  public byte[] deepCopyToNewArray();
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #4                  // Field bytes:[B
      11: aload_0
      12: getfield      #8                  // Field offset:I
      15: aload_1
      16: iconst_0
      17: aload_0
      18: getfield      #9                  // Field length:I
      21: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_1
      25: areturn

  public void deepCopyTo(byte[], int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #8                  // Field offset:I
       8: aload_1
       9: iload_2
      10: aload_0
      11: getfield      #9                  // Field length:I
      14: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: return

  public void deepCopySubRangeTo(int, int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #8                  // Field offset:I
       8: iload_1
       9: iadd
      10: aload_3
      11: iload         4
      13: iload_2
      14: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: return

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method isHashCached:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #3                  // Field hash:I
      11: ireturn
      12: aload_0
      13: invokevirtual #19                 // Method isEmpty:()Z
      16: ifeq          29
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field hash:I
      24: aload_0
      25: getfield      #3                  // Field hash:I
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field offset:I
      33: istore_1
      34: aload_0
      35: iconst_0
      36: putfield      #3                  // Field hash:I
      39: iconst_0
      40: istore_2
      41: iload_2
      42: aload_0
      43: getfield      #9                  // Field length:I
      46: if_icmpge     76
      49: aload_0
      50: bipush        31
      52: aload_0
      53: getfield      #3                  // Field hash:I
      56: imul
      57: aload_0
      58: getfield      #4                  // Field bytes:[B
      61: iload_1
      62: iinc          1, 1
      65: baload
      66: iadd
      67: putfield      #3                  // Field hash:I
      70: iinc          2, 1
      73: goto          41
      76: aload_0
      77: getfield      #3                  // Field hash:I
      80: ireturn

  protected boolean isHashCached();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hash:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected void clearHashCache();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #3                  // Field hash:I
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #20                 // class org/apache/hadoop/hbase/util/ByteRange
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: checkcast     #20                 // class org/apache/hadoop/hbase/util/ByteRange
      27: invokevirtual #21                 // Method compareTo:(Lorg/apache/hadoop/hbase/util/ByteRange;)I
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int compareTo(org.apache.hadoop.hbase.util.ByteRange);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #8                  // Field offset:I
       8: aload_0
       9: getfield      #9                  // Field length:I
      12: aload_1
      13: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getBytes:()[B
      18: aload_1
      19: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getOffset:()I
      24: aload_1
      25: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/util/ByteRange.getLength:()I
      30: invokestatic  #24                 // Method org/apache/hadoop/hbase/util/Bytes.compareTo:([BII[BII)I
      33: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #8                  // Field offset:I
       8: aload_0
       9: getfield      #9                  // Field length:I
      12: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([BII)Ljava/lang/String;
      15: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/util/ByteRange
       5: invokevirtual #21                 // Method compareTo:(Lorg/apache/hadoop/hbase/util/ByteRange;)I
       8: ireturn
}
