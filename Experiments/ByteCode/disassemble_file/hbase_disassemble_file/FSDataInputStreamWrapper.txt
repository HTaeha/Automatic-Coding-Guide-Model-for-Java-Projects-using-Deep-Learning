Compiled from "FSDataInputStreamWrapper.java"
public class org.apache.hadoop.hbase.io.FSDataInputStreamWrapper implements java.io.Closeable {
  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.io.FSDataInputStreamWrapper(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: ldc2_w        #1                  // long -1l
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJ)V
      10: return

  public org.apache.hadoop.hbase.io.FSDataInputStreamWrapper(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: iload_3
       5: lload         4
       7: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Lorg/apache/hadoop/fs/Path;ZJ)V
      10: return

  public org.apache.hadoop.hbase.io.FSDataInputStreamWrapper(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.hbase.io.FileLink, boolean, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload_3
       5: lload         4
       7: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Lorg/apache/hadoop/fs/Path;ZJ)V
      10: return

  public void prepareForBlockReader(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
       4: ifnonnull     8
       7: return
       8: getstatic     #15                 // Field $assertionsDisabled:Z
      11: ifne          36
      14: aload_0
      15: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      18: ifnull        28
      21: aload_0
      22: getfield      #27                 // Field useHBaseChecksumConfigured:Z
      25: ifeq          36
      28: new           #16                 // class java/lang/AssertionError
      31: dup
      32: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: iload_1
      37: ifne          68
      40: aload_0
      41: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      44: invokevirtual #36                 // Method org/apache/hadoop/hbase/fs/HFileSystem.useHBaseChecksum:()Z
      47: ifeq          68
      50: aload_0
      51: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      54: invokevirtual #37                 // Method org/apache/hadoop/hbase/fs/HFileSystem.getNoChecksumFs:()Lorg/apache/hadoop/fs/FileSystem;
      57: aload_0
      58: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      61: if_acmpeq     68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: istore_2
      70: iload_2
      71: ifeq          142
      74: aload_0
      75: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      78: invokevirtual #37                 // Method org/apache/hadoop/hbase/fs/HFileSystem.getNoChecksumFs:()Lorg/apache/hadoop/fs/FileSystem;
      81: astore_3
      82: aload_0
      83: aload_0
      84: getfield      #19                 // Field link:Lorg/apache/hadoop/hbase/io/FileLink;
      87: ifnull        101
      90: aload_0
      91: getfield      #19                 // Field link:Lorg/apache/hadoop/hbase/io/FileLink;
      94: aload_3
      95: invokevirtual #28                 // Method org/apache/hadoop/hbase/io/FileLink.open:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FSDataInputStream;
      98: goto          109
     101: aload_3
     102: aload_0
     103: getfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
     106: invokevirtual #38                 // Method org/apache/hadoop/fs/FileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
     109: putfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
     112: aload_0
     113: aload_0
     114: getfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
     117: invokespecial #30                 // Method setStreamOptions:(Lorg/apache/hadoop/fs/FSDataInputStream;)V
     120: aload_0
     121: aload_0
     122: iload_2
     123: dup_x1
     124: putfield      #26                 // Field useHBaseChecksum:Z
     127: putfield      #27                 // Field useHBaseChecksumConfigured:Z
     130: aload_0
     131: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
     134: invokevirtual #39                 // Method org/apache/hadoop/fs/FSDataInputStream.close:()V
     137: aload_0
     138: aconst_null
     139: putfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
     142: return

  public org.apache.hadoop.hbase.io.FSDataInputStreamWrapper(org.apache.hadoop.fs.FSDataInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokespecial #40                 // Method "<init>":(Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;)V
       6: return

  public org.apache.hadoop.hbase.io.FSDataInputStreamWrapper(org.apache.hadoop.fs.FSDataInputStream, org.apache.hadoop.fs.FSDataInputStream);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
       9: aload_0
      10: aconst_null
      11: putfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
      14: aload_0
      15: new           #8                  // class java/lang/Object
      18: dup
      19: invokespecial #5                  // Method java/lang/Object."<init>":()V
      22: putfield      #9                  // Field streamNoFsChecksumFirstCreateLock:Ljava/lang/Object;
      25: aload_0
      26: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      29: dup
      30: iconst_m1
      31: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      34: putfield      #12                 // Field hbaseChecksumOffCount:Ljava/util/concurrent/atomic/AtomicInteger;
      37: aload_0
      38: aconst_null
      39: putfield      #13                 // Field instanceOfCanUnbuffer:Ljava/lang/Boolean;
      42: aload_0
      43: aconst_null
      44: putfield      #14                 // Field unbuffer:Ljava/lang/reflect/Method;
      47: aload_0
      48: iconst_0
      49: putfield      #20                 // Field doCloseStreams:Z
      52: aload_0
      53: aload_1
      54: putfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      57: aload_0
      58: aload_2
      59: putfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
      62: aload_0
      63: aconst_null
      64: putfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
      67: aload_0
      68: aconst_null
      69: putfield      #19                 // Field link:Lorg/apache/hadoop/hbase/io/FileLink;
      72: aload_0
      73: aconst_null
      74: putfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      77: aload_0
      78: aload_0
      79: iconst_0
      80: dup_x1
      81: putfield      #26                 // Field useHBaseChecksum:Z
      84: putfield      #27                 // Field useHBaseChecksumConfigured:Z
      87: aload_0
      88: iconst_0
      89: putfield      #21                 // Field dropBehind:Z
      92: aload_0
      93: lconst_0
      94: putfield      #22                 // Field readahead:J
      97: return

  public boolean shouldUseHBaseChecksum();
    Code:
       0: aload_0
       1: getfield      #26                 // Field useHBaseChecksum:Z
       4: ireturn

  public org.apache.hadoop.fs.FSDataInputStream getStream(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
       8: goto          15
      11: aload_0
      12: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      15: areturn

  public org.apache.hadoop.fs.FSDataInputStream fallbackToFsChecksum(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
       6: ifnonnull     81
       9: aload_0
      10: getfield      #9                  // Field streamNoFsChecksumFirstCreateLock:Ljava/lang/Object;
      13: dup
      14: astore_3
      15: monitorenter
      16: aload_0
      17: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_2
      29: iload_2
      30: ifne          69
      33: aload_0
      34: aload_0
      35: getfield      #19                 // Field link:Lorg/apache/hadoop/hbase/io/FileLink;
      38: ifnull        55
      41: aload_0
      42: getfield      #19                 // Field link:Lorg/apache/hadoop/hbase/io/FileLink;
      45: aload_0
      46: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      49: invokevirtual #28                 // Method org/apache/hadoop/hbase/io/FileLink.open:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FSDataInputStream;
      52: goto          66
      55: aload_0
      56: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
      59: aload_0
      60: getfield      #18                 // Field path:Lorg/apache/hadoop/fs/Path;
      63: invokevirtual #29                 // Method org/apache/hadoop/hbase/fs/HFileSystem.open:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
      66: putfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      69: aload_3
      70: monitorexit
      71: goto          81
      74: astore        4
      76: aload_3
      77: monitorexit
      78: aload         4
      80: athrow
      81: iload_2
      82: ifne          98
      85: aload_0
      86: iconst_0
      87: putfield      #26                 // Field useHBaseChecksum:Z
      90: aload_0
      91: getfield      #12                 // Field hbaseChecksumOffCount:Ljava/util/concurrent/atomic/AtomicInteger;
      94: iload_1
      95: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      98: aload_0
      99: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
     102: areturn
    Exception table:
       from    to  target type
          16    71    74   any
          74    78    74   any

  public void checksumOk();
    Code:
       0: aload_0
       1: getfield      #27                 // Field useHBaseChecksumConfigured:Z
       4: ifeq          50
       7: aload_0
       8: getfield      #26                 // Field useHBaseChecksum:Z
      11: ifne          50
      14: aload_0
      15: getfield      #12                 // Field hbaseChecksumOffCount:Ljava/util/concurrent/atomic/AtomicInteger;
      18: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
      21: ifge          50
      24: getstatic     #15                 // Field $assertionsDisabled:Z
      27: ifne          45
      30: aload_0
      31: getfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
      34: ifnonnull     45
      37: new           #16                 // class java/lang/AssertionError
      40: dup
      41: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      44: athrow
      45: aload_0
      46: iconst_1
      47: putfield      #26                 // Field useHBaseChecksum:Z
      50: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #20                 // Field doCloseStreams:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field streamNoFsChecksum:Lorg/apache/hadoop/fs/FSDataInputStream;
      12: invokestatic  #43                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/InputStream;)V
      15: aload_0
      16: getfield      #6                  // Field stream:Lorg/apache/hadoop/fs/FSDataInputStream;
      19: invokestatic  #43                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/InputStream;)V
      22: return

  public org.apache.hadoop.hbase.fs.HFileSystem getHfs();
    Code:
       0: aload_0
       1: getfield      #25                 // Field hfs:Lorg/apache/hadoop/hbase/fs/HFileSystem;
       4: areturn

  public void unbuffer();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #44                 // Method shouldUseHBaseChecksum:()Z
       5: invokevirtual #45                 // Method getStream:(Z)Lorg/apache/hadoop/fs/FSDataInputStream;
       8: astore_1
       9: aload_1
      10: ifnull        272
      13: aload_1
      14: invokevirtual #46                 // Method org/apache/hadoop/fs/FSDataInputStream.getWrappedStream:()Ljava/io/InputStream;
      17: astore_2
      18: aload_2
      19: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: astore_3
      23: aload_0
      24: getfield      #13                 // Field instanceOfCanUnbuffer:Ljava/lang/Boolean;
      27: ifnonnull     163
      30: aload_0
      31: iconst_0
      32: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: putfield      #13                 // Field instanceOfCanUnbuffer:Ljava/lang/Boolean;
      38: aload_3
      39: invokevirtual #48                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      42: astore        4
      44: aload         4
      46: astore        5
      48: aload         5
      50: arraylength
      51: istore        6
      53: iconst_0
      54: istore        7
      56: iload         7
      58: iload         6
      60: if_icmpge     163
      63: aload         5
      65: iload         7
      67: aaload
      68: astore        8
      70: aload         8
      72: invokevirtual #49                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      75: invokevirtual #50                 // Method java/lang/String.toString:()Ljava/lang/String;
      78: ldc           #51                 // String org.apache.hadoop.fs.CanUnbuffer
      80: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          157
      86: aload_0
      87: aload_3
      88: ldc           #53                 // String unbuffer
      90: iconst_0
      91: anewarray     #54                 // class java/lang/Class
      94: invokevirtual #55                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      97: putfield      #14                 // Field unbuffer:Ljava/lang/reflect/Method;
     100: goto          146
     103: astore        9
     105: getstatic     #58                 // Field isLogTraceEnabled:Z
     108: ifeq          145
     111: getstatic     #59                 // Field LOG:Lorg/slf4j/Logger;
     114: new           #60                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #62                 // String Failed to find 'unbuffer' method in class
     123: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_3
     127: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: ldc           #65                 // String  . So there may be a TCP socket connection left open in CLOSE_WAIT state.
     132: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: aload         9
     140: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     145: return
     146: aload_0
     147: iconst_1
     148: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     151: putfield      #13                 // Field instanceOfCanUnbuffer:Ljava/lang/Boolean;
     154: goto          163
     157: iinc          7, 1
     160: goto          56
     163: aload_0
     164: getfield      #13                 // Field instanceOfCanUnbuffer:Ljava/lang/Boolean;
     167: invokevirtual #68                 // Method java/lang/Boolean.booleanValue:()Z
     170: ifeq          234
     173: aload_0
     174: getfield      #14                 // Field unbuffer:Ljava/lang/reflect/Method;
     177: aload_2
     178: iconst_0
     179: anewarray     #8                  // class java/lang/Object
     182: invokevirtual #69                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: goto          272
     189: astore        4
     191: getstatic     #58                 // Field isLogTraceEnabled:Z
     194: ifeq          231
     197: getstatic     #59                 // Field LOG:Lorg/slf4j/Logger;
     200: new           #60                 // class java/lang/StringBuilder
     203: dup
     204: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     207: ldc           #73                 // String Failed to invoke 'unbuffer' method in class
     209: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload_3
     213: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     216: ldc           #65                 // String  . So there may be a TCP socket connection left open in CLOSE_WAIT state.
     218: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: aload         4
     226: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     231: goto          272
     234: getstatic     #58                 // Field isLogTraceEnabled:Z
     237: ifeq          272
     240: getstatic     #59                 // Field LOG:Lorg/slf4j/Logger;
     243: new           #60                 // class java/lang/StringBuilder
     246: dup
     247: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     250: ldc           #62                 // String Failed to find 'unbuffer' method in class
     252: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: aload_3
     256: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     259: ldc           #74                 // String  . So there may be a TCP socket connection left open in CLOSE_WAIT state. For more details check https://issues.apache.org/jira/browse/HBASE-9393
     261: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokeinterface #75,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     272: return
    Exception table:
       from    to  target type
          86   100   103   Class java/lang/NoSuchMethodException
          86   100   103   Class java/lang/SecurityException
         173   186   189   Class java/lang/IllegalAccessException
         173   186   189   Class java/lang/IllegalArgumentException
         173   186   189   Class java/lang/reflect/InvocationTargetException

  static {};
    Code:
       0: ldc           #76                 // class org/apache/hadoop/hbase/io/FSDataInputStreamWrapper
       2: invokevirtual #77                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #15                 // Field $assertionsDisabled:Z
      16: ldc           #76                 // class org/apache/hadoop/hbase/io/FSDataInputStreamWrapper
      18: invokestatic  #78                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #59                 // Field LOG:Lorg/slf4j/Logger;
      24: getstatic     #59                 // Field LOG:Lorg/slf4j/Logger;
      27: invokeinterface #79,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      32: putstatic     #58                 // Field isLogTraceEnabled:Z
      35: return
}
