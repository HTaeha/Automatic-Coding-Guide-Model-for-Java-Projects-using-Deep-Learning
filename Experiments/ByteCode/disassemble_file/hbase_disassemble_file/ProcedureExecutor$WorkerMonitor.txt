Compiled from "ProcedureExecutor.java"
final class org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerMonitor extends org.apache.hadoop.hbase.procedure2.InlineChore {
  public static final java.lang.String WORKER_MONITOR_INTERVAL_CONF_KEY;

  public static final java.lang.String WORKER_STUCK_THRESHOLD_CONF_KEY;

  public static final java.lang.String WORKER_ADD_STUCK_PERCENTAGE_CONF_KEY;

  final org.apache.hadoop.hbase.procedure2.ProcedureExecutor this$0;

  public org.apache.hadoop.hbase.procedure2.ProcedureExecutor$WorkerMonitor(org.apache.hadoop.hbase.procedure2.ProcedureExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/procedure2/InlineChore."<init>":()V
       9: aload_0
      10: ldc           #4                  // float 0.5f
      12: putfield      #5                  // Field addWorkerStuckPercentage:F
      15: aload_0
      16: sipush        5000
      19: putfield      #6                  // Field timeoutInterval:I
      22: aload_0
      23: sipush        10000
      26: putfield      #7                  // Field stuckThreshold:I
      29: aload_0
      30: invokespecial #8                  // Method refreshConfig:()V
      33: return

  public void run();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method checkForStuckWorkers:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokespecial #10                 // Method checkThreadCount:(I)V
      10: aload_0
      11: invokespecial #8                  // Method refreshConfig:()V
      14: return

  public int getTimeoutInterval();
    Code:
       0: aload_0
       1: getfield      #6                  // Field timeoutInterval:I
       4: ireturn
}
