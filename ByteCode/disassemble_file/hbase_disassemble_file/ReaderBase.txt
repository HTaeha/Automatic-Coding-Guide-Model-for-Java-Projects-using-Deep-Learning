Compiled from "ReaderBase.java"
public abstract class org.apache.hadoop.hbase.regionserver.wal.ReaderBase implements org.apache.hadoop.hbase.wal.AbstractFSWALProvider$Reader {
  protected org.apache.hadoop.conf.Configuration conf;

  protected org.apache.hadoop.fs.FileSystem fs;

  protected org.apache.hadoop.fs.Path path;

  protected long edit;

  protected long fileLength;

  protected org.apache.hadoop.hbase.regionserver.wal.CompressionContext compressionContext;

  protected boolean emptyCompressionContext;

  public org.apache.hadoop.hbase.regionserver.wal.ReaderBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field edit:J
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field emptyCompressionContext:Z
      19: return

  public void init(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FSDataInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #5                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: aload_2
       7: putfield      #6                  // Field path:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: aload_1
      12: putfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      15: aload_0
      16: aload_0
      17: getfield      #7                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      20: aload_2
      21: invokevirtual #8                  // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      24: invokevirtual #9                  // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      27: putfield      #10                 // Field fileLength:J
      30: aload_0
      31: aload         4
      33: invokevirtual #11                 // Method initReader:(Lorg/apache/hadoop/fs/FSDataInputStream;)Ljava/lang/String;
      36: astore        5
      38: aload_0
      39: invokevirtual #12                 // Method hasCompression:()Z
      42: istore        6
      44: iload         6
      46: ifeq          104
      49: aload_0
      50: getfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      53: ifnonnull     80
      56: aload_0
      57: new           #13                 // class org/apache/hadoop/hbase/regionserver/wal/CompressionContext
      60: dup
      61: ldc           #14                 // class org/apache/hadoop/hbase/io/util/LRUDictionary
      63: aload_2
      64: invokestatic  #15                 // Method org/apache/hadoop/hbase/util/FSUtils.isRecoveredEdits:(Lorg/apache/hadoop/fs/Path;)Z
      67: aload_0
      68: invokevirtual #16                 // Method hasTagCompression:()Z
      71: invokespecial #17                 // Method org/apache/hadoop/hbase/regionserver/wal/CompressionContext."<init>":(Ljava/lang/Class;ZZ)V
      74: putfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      77: goto          87
      80: aload_0
      81: getfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      84: invokevirtual #18                 // Method org/apache/hadoop/hbase/regionserver/wal/CompressionContext.clear:()V
      87: goto          104
      90: astore        7
      92: new           #20                 // class java/io/IOException
      95: dup
      96: ldc           #21                 // String Failed to initialize CompressionContext
      98: aload         7
     100: invokespecial #22                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: athrow
     104: aload_0
     105: aload         5
     107: invokevirtual #23                 // Method initAfterCompression:(Ljava/lang/String;)V
     110: return
    Exception table:
       from    to  target type
          49    87    90   Class java/lang/Exception

  public org.apache.hadoop.hbase.wal.WAL$Entry next() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #24                 // Method next:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
       5: areturn

  public org.apache.hadoop.hbase.wal.WAL$Entry next(org.apache.hadoop.hbase.wal.WAL$Entry) throws java.io.IOException;
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnonnull     14
       6: new           #25                 // class org/apache/hadoop/hbase/wal/WAL$Entry
       9: dup
      10: invokespecial #26                 // Method org/apache/hadoop/hbase/wal/WAL$Entry."<init>":()V
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_0
      17: aload_2
      18: invokevirtual #27                 // Method readNext:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
      21: istore_3
      22: goto          71
      25: astore        4
      27: aload_2
      28: invokevirtual #29                 // Method org/apache/hadoop/hbase/wal/WAL$Entry.getKey:()Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
      31: invokevirtual #30                 // Method org/apache/hadoop/hbase/wal/WALKeyImpl.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      34: astore        5
      36: aload         5
      38: ifnull        68
      41: aload         5
      43: getstatic     #31                 // Field org/apache/hadoop/hbase/TableName.OLD_ROOT_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      46: invokevirtual #32                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      49: ifeq          68
      52: getstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
      55: ldc           #34                 // String Got an old ROOT edit, ignoring
      57: invokeinterface #35,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      62: aload_0
      63: aload_2
      64: invokevirtual #24                 // Method next:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
      67: areturn
      68: aload         4
      70: athrow
      71: aload_0
      72: dup
      73: getfield      #2                  // Field edit:J
      76: lconst_1
      77: ladd
      78: putfield      #2                  // Field edit:J
      81: aload_0
      82: getfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      85: ifnull        100
      88: aload_0
      89: getfield      #4                  // Field emptyCompressionContext:Z
      92: ifeq          100
      95: aload_0
      96: iconst_0
      97: putfield      #4                  // Field emptyCompressionContext:Z
     100: iload_3
     101: ifeq          108
     104: aload_2
     105: goto          109
     108: aconst_null
     109: areturn
    Exception table:
       from    to  target type
          16    22    25   Class java/lang/IllegalArgumentException

  public void seek(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
       4: ifnull        38
       7: aload_0
       8: getfield      #4                  // Field emptyCompressionContext:Z
      11: ifeq          38
      14: aload_0
      15: invokevirtual #36                 // Method next:()Lorg/apache/hadoop/hbase/wal/WAL$Entry;
      18: ifnull        38
      21: aload_0
      22: invokevirtual #37                 // Method getPosition:()J
      25: lload_1
      26: lcmp
      27: ifne          14
      30: aload_0
      31: iconst_0
      32: putfield      #4                  // Field emptyCompressionContext:Z
      35: goto          38
      38: aload_0
      39: lload_1
      40: invokevirtual #38                 // Method seekOnFs:(J)V
      43: return

  protected abstract java.lang.String initReader(org.apache.hadoop.fs.FSDataInputStream) throws java.io.IOException;

  protected abstract void initAfterCompression() throws java.io.IOException;

  protected abstract void initAfterCompression(java.lang.String) throws java.io.IOException;

  protected abstract boolean hasCompression();

  protected abstract boolean hasTagCompression();

  protected abstract boolean readNext(org.apache.hadoop.hbase.wal.WAL$Entry) throws java.io.IOException;

  protected abstract void seekOnFs(long) throws java.io.IOException;

  static {};
    Code:
       0: ldc           #39                 // class org/apache/hadoop/hbase/regionserver/wal/ReaderBase
       2: invokestatic  #40                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #33                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
