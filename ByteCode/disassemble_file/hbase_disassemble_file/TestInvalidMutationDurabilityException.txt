Compiled from "TestInvalidMutationDurabilityException.java"
public class org.apache.hadoop.hbase.client.TestInvalidMutationDurabilityException {
  public static final org.apache.hadoop.hbase.HBaseClassTestRule CLASS_RULE;

  public org.apache.hadoop.hbase.client.TestInvalidMutationDurabilityException();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setUp() throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
       3: invokevirtual #3                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.startMiniCluster:()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
       6: pop
       7: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      10: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
      13: getstatic     #5                  // Field TABLE_NOT_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      16: invokestatic  #6                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.newBuilder:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      19: getstatic     #7                  // Field CF:[B
      22: invokestatic  #8                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      25: invokevirtual #9                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      28: invokevirtual #10                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      31: invokevirtual #11                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      34: invokeinterface #12,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.createTable:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      39: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      42: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
      45: getstatic     #13                 // Field TABLE_NEED_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      48: invokestatic  #6                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.newBuilder:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      51: getstatic     #7                  // Field CF:[B
      54: invokestatic  #8                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      57: iconst_1
      58: invokevirtual #15                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setScope:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      61: invokevirtual #9                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      64: invokevirtual #10                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      67: invokevirtual #11                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      70: invokeinterface #12,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.createTable:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      75: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      78: invokevirtual #16                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getConnection:()Lorg/apache/hadoop/hbase/client/Connection;
      81: getstatic     #5                  // Field TABLE_NOT_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      84: invokeinterface #17,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Connection.getTable:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
      89: putstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
      92: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      95: invokevirtual #16                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getConnection:()Lorg/apache/hadoop/hbase/client/Connection;
      98: getstatic     #13                 // Field TABLE_NEED_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
     101: invokeinterface #17,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Connection.getTable:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
     106: putstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
     109: return

  public static void tearDown() throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
       3: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
       6: getstatic     #5                  // Field TABLE_NOT_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
       9: invokeinterface #20,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.disableTable:(Lorg/apache/hadoop/hbase/TableName;)V
      14: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      17: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
      20: getstatic     #13                 // Field TABLE_NEED_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      23: invokeinterface #20,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.disableTable:(Lorg/apache/hadoop/hbase/TableName;)V
      28: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      31: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
      34: getstatic     #5                  // Field TABLE_NOT_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      37: invokeinterface #21,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.deleteTable:(Lorg/apache/hadoop/hbase/TableName;)V
      42: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      45: invokevirtual #4                  // Method org/apache/hadoop/hbase/HBaseTestingUtility.getAdmin:()Lorg/apache/hadoop/hbase/client/Admin;
      48: getstatic     #13                 // Field TABLE_NEED_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      51: invokeinterface #21,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Admin.deleteTable:(Lorg/apache/hadoop/hbase/TableName;)V
      56: getstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      59: invokevirtual #22                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.shutdownMiniCluster:()V
      62: return

  public void testPutToTableNotReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #32                 // Method newPutWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Put;
       7: invokeinterface #33,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.put:(Lorg/apache/hadoop/hbase/client/Put;)V
      12: return

  public void testPutToTableNeedReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #32                 // Method newPutWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Put;
       7: invokeinterface #33,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.put:(Lorg/apache/hadoop/hbase/client/Put;)V
      12: return

  public void testDeleteToTableNotReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #38                 // Method newDeleteWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Delete;
       7: invokeinterface #39,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.delete:(Lorg/apache/hadoop/hbase/client/Delete;)V
      12: return

  public void testDeleteToTableNeedReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #38                 // Method newDeleteWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Delete;
       7: invokeinterface #39,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.delete:(Lorg/apache/hadoop/hbase/client/Delete;)V
      12: return

  public void testAppendToTableNotReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #44                 // Method newAppendWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Append;
       7: invokeinterface #45,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.append:(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
      12: pop
      13: return

  public void testAppendToTableNeedReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #44                 // Method newAppendWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Append;
       7: invokeinterface #45,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.append:(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
      12: pop
      13: return

  public void testIncrementToTableNotReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #50                 // Method newIncrementWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Increment;
       7: invokeinterface #51,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.increment:(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
      12: pop
      13: return

  public void testIncrementToTableNeedReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: aload_0
       4: invokespecial #50                 // Method newIncrementWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Increment;
       7: invokeinterface #51,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table.increment:(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
      12: pop
      13: return

  public void testCheckWithMutateToTableNotReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #18                 // Field tableNotReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: ldc           #24                 // String row
       5: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       8: getstatic     #7                  // Field CF:[B
      11: invokeinterface #52,  3           // InterfaceMethod org/apache/hadoop/hbase/client/Table.checkAndMutate:([B[B)Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      16: getstatic     #27                 // Field CQ:[B
      19: invokeinterface #53,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.qualifier:([B)Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      24: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.ifNotExists:()Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      29: aload_0
      30: invokespecial #32                 // Method newPutWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Put;
      33: invokeinterface #55,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.thenPut:(Lorg/apache/hadoop/hbase/client/Put;)Z
      38: pop
      39: return

  public void testCheckWithMutateToTableNeedReplicate() throws java.lang.Exception;
    Code:
       0: getstatic     #19                 // Field tableNeedReplicate:Lorg/apache/hadoop/hbase/client/Table;
       3: ldc           #24                 // String row
       5: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       8: getstatic     #7                  // Field CF:[B
      11: invokeinterface #52,  3           // InterfaceMethod org/apache/hadoop/hbase/client/Table.checkAndMutate:([B[B)Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      16: getstatic     #27                 // Field CQ:[B
      19: invokeinterface #53,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.qualifier:([B)Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      24: invokeinterface #54,  1           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.ifNotExists:()Lorg/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder;
      29: aload_0
      30: invokespecial #32                 // Method newPutWithSkipWAL:()Lorg/apache/hadoop/hbase/client/Put;
      33: invokeinterface #55,  2           // InterfaceMethod org/apache/hadoop/hbase/client/Table$CheckAndMutateBuilder.thenPut:(Lorg/apache/hadoop/hbase/client/Put;)Z
      38: pop
      39: return

  static {};
    Code:
       0: ldc           #56                 // class org/apache/hadoop/hbase/client/TestInvalidMutationDurabilityException
       2: invokestatic  #57                 // Method org/apache/hadoop/hbase/HBaseClassTestRule.forClass:(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       5: putstatic     #58                 // Field CLASS_RULE:Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       8: new           #59                 // class org/apache/hadoop/hbase/HBaseTestingUtility
      11: dup
      12: invokespecial #60                 // Method org/apache/hadoop/hbase/HBaseTestingUtility."<init>":()V
      15: putstatic     #2                  // Field UTIL:Lorg/apache/hadoop/hbase/HBaseTestingUtility;
      18: ldc           #61                 // String TableNotReplicate
      20: invokestatic  #62                 // Method org/apache/hadoop/hbase/TableName.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      23: putstatic     #5                  // Field TABLE_NOT_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      26: ldc           #63                 // String TableNeedReplicate
      28: invokestatic  #62                 // Method org/apache/hadoop/hbase/TableName.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      31: putstatic     #13                 // Field TABLE_NEED_REPLICATE:Lorg/apache/hadoop/hbase/TableName;
      34: ldc           #64                 // String cf
      36: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      39: putstatic     #7                  // Field CF:[B
      42: ldc           #65                 // String cq
      44: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      47: putstatic     #27                 // Field CQ:[B
      50: return
}
