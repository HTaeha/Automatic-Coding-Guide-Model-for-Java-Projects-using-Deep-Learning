Compiled from "HBaseFsck.java"
public interface org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter {
  public abstract void clear();

  public abstract void report(java.lang.String);

  public abstract void reportError(java.lang.String);

  public abstract void reportError(org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter$ERROR_CODE, java.lang.String);

  public abstract void reportError(org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter$ERROR_CODE, java.lang.String, org.apache.hadoop.hbase.util.HBaseFsck$TableInfo);

  public abstract void reportError(org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter$ERROR_CODE, java.lang.String, org.apache.hadoop.hbase.util.HBaseFsck$TableInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo);

  public abstract void reportError(org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter$ERROR_CODE, java.lang.String, org.apache.hadoop.hbase.util.HBaseFsck$TableInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo, org.apache.hadoop.hbase.util.HBaseFsck$HbckInfo);

  public abstract int summarize();

  public abstract void detail(java.lang.String);

  public abstract java.util.ArrayList<org.apache.hadoop.hbase.util.HBaseFsck$ErrorReporter$ERROR_CODE> getErrorList();

  public abstract void progress();

  public abstract void print(java.lang.String);

  public abstract void resetErrors();

  public abstract boolean tableHasErrors(org.apache.hadoop.hbase.util.HBaseFsck$TableInfo);
}
