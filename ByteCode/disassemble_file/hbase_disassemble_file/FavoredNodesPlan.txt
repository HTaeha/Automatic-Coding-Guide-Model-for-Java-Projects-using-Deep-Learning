Compiled from "FavoredNodesPlan.java"
public class org.apache.hadoop.hbase.favored.FavoredNodesPlan {
  public org.apache.hadoop.hbase.favored.FavoredNodesPlan();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
      15: return

  public void updateFavoredNodesMap(org.apache.hadoop.hbase.client.RegionInfo, java.util.List<org.apache.hadoop.hbase.ServerName>);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_2
       5: ifnull        17
       8: aload_2
       9: invokeinterface #5,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionNameAsString:()Ljava/lang/String;
      28: aload_2
      29: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  public java.util.List<org.apache.hadoop.hbase.ServerName> removeFavoredNodes(org.apache.hadoop.hbase.client.RegionInfo);
    Code:
       0: aload_0
       1: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionNameAsString:()Ljava/lang/String;
      10: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class java/util/List
      18: areturn

  public java.util.List<org.apache.hadoop.hbase.ServerName> getFavoredNodes(org.apache.hadoop.hbase.client.RegionInfo);
    Code:
       0: aload_0
       1: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionNameAsString:()Ljava/lang/String;
      10: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class java/util/List
      18: areturn

  public static org.apache.hadoop.hbase.favored.FavoredNodesPlan$Position getFavoredServerPosition(java.util.List<org.apache.hadoop.hbase.ServerName>, org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_1
       5: ifnull        18
       8: aload_0
       9: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      14: iconst_3
      15: if_icmpeq     20
      18: aconst_null
      19: areturn
      20: invokestatic  #13                 // Method org/apache/hadoop/hbase/favored/FavoredNodesPlan$Position.values:()[Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan$Position;
      23: astore_2
      24: aload_2
      25: arraylength
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_3
      33: if_icmpge     72
      36: aload_2
      37: iload         4
      39: aaload
      40: astore        5
      42: aload_0
      43: aload         5
      45: invokevirtual #14                 // Method org/apache/hadoop/hbase/favored/FavoredNodesPlan$Position.ordinal:()I
      48: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #16                 // class org/apache/hadoop/hbase/ServerName
      56: aload_1
      57: invokestatic  #17                 // Method org/apache/hadoop/hbase/ServerName.isSameAddress:(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
      60: ifeq          66
      63: aload         5
      65: areturn
      66: iinc          4, 1
      69: goto          30
      72: aconst_null
      73: areturn

  public java.util.Map<java.lang.String, java.util.List<org.apache.hadoop.hbase.ServerName>> getAssignmentMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #19                 // class org/apache/hadoop/hbase/favored/FavoredNodesPlan
      30: invokevirtual #20                 // Method getAssignmentMap:()Ljava/util/Map;
      33: astore_2
      34: aload_2
      35: invokeinterface #21,  1           // InterfaceMethod java/util/Map.size:()I
      40: aload_0
      41: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
      44: invokeinterface #21,  1           // InterfaceMethod java/util/Map.size:()I
      49: if_icmpeq     54
      52: iconst_0
      53: ireturn
      54: aload_2
      55: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      60: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore_3
      66: aload_3
      67: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          151
      75: aload_3
      76: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #26                 // class java/util/Map$Entry
      84: astore        4
      86: aload_0
      87: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
      90: aload         4
      92: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      97: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #9                  // class java/util/List
     105: astore        5
     107: aload         5
     109: ifnonnull     124
     112: aload         4
     114: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     119: ifnull        124
     122: iconst_0
     123: ireturn
     124: aload         5
     126: ifnull        148
     129: aload         5
     131: aload         4
     133: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     138: invokeinterface #29,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     143: ifne          148
     146: iconst_0
     147: ireturn
     148: goto          66
     151: iconst_1
     152: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field favoredNodesMap:Ljava/util/Map;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn
}
