Compiled from "TestScannerRetriableFailure.java"
public class org.apache.hadoop.hbase.regionserver.TestScannerRetriableFailure$FaultyScannerObserver implements org.apache.hadoop.hbase.coprocessor.RegionCoprocessor,org.apache.hadoop.hbase.coprocessor.RegionObserver {
  public org.apache.hadoop.hbase.regionserver.TestScannerRetriableFailure$FaultyScannerObserver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field faults:I
       9: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.RegionObserver> getRegionObserver();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public boolean preScannerNext(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, java.util.List<org.apache.hadoop.hbase.client.Result>, int, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #5                  // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegionInfo:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      14: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getTable:()Lorg/apache/hadoop/hbase/TableName;
      19: astore        6
      21: aload         6
      23: invokevirtual #8                  // Method org/apache/hadoop/hbase/TableName.isSystemTable:()Z
      26: ifne          88
      29: aload_0
      30: dup
      31: getfield      #2                  // Field faults:I
      34: dup_x1
      35: iconst_1
      36: iadd
      37: putfield      #2                  // Field faults:I
      40: iconst_2
      41: irem
      42: ifne          88
      45: invokestatic  #9                  // Method org/apache/hadoop/hbase/regionserver/TestScannerRetriableFailure.access$000:()Lorg/slf4j/Logger;
      48: new           #10                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #12                 // String  Injecting fault in table=
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload         6
      62: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #15                 // String  scanner
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      78: new           #18                 // class java/io/IOException
      81: dup
      82: ldc           #19                 // String injected fault
      84: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: iload         5
      90: ireturn
}
