Compiled from "ReplicationPeerConfig.java"
class org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl implements org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder {
  org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class java/util/TreeMap
       8: dup
       9: getstatic     #15                 // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      12: invokespecial #16                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: putfield      #10                 // Field peerData:Ljava/util/Map;
      18: aload_0
      19: new           #17                 // class java/util/HashMap
      22: dup
      23: invokespecial #18                 // Method java/util/HashMap."<init>":()V
      26: putfield      #9                  // Field configuration:Ljava/util/Map;
      29: aload_0
      30: aconst_null
      31: putfield      #8                  // Field tableCFsMap:Ljava/util/Map;
      34: aload_0
      35: aconst_null
      36: putfield      #7                  // Field namespaces:Ljava/util/Set;
      39: aload_0
      40: iconst_1
      41: putfield      #6                  // Field replicateAllUserTables:Z
      44: aload_0
      45: aconst_null
      46: putfield      #5                  // Field excludeTableCFsMap:Ljava/util/Map;
      49: aload_0
      50: aconst_null
      51: putfield      #4                  // Field excludeNamespaces:Ljava/util/Set;
      54: aload_0
      55: lconst_0
      56: putfield      #3                  // Field bandwidth:J
      59: aload_0
      60: iconst_0
      61: putfield      #2                  // Field serial:Z
      64: aload_0
      65: aconst_null
      66: putfield      #1                  // Field remoteWALDir:Ljava/lang/String;
      69: return

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setClusterKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field clusterKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setReplicationEndpointImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field replicationEndpointImpl:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder putConfiguration(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field configuration:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder putPeerData(byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #10                 // Field peerData:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setTableCFsMap(java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field tableCFsMap:Ljava/util/Map;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setNamespaces(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field namespaces:Ljava/util/Set;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setReplicateAllUserTables(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field replicateAllUserTables:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setExcludeTableCFsMap(java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field excludeTableCFsMap:Ljava/util/Map;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setExcludeNamespaces(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field excludeNamespaces:Ljava/util/Set;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setBandwidth(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field bandwidth:J
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setSerial(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field serial:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder setRemoteWALDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field remoteWALDir:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig build();
    Code:
       0: new           #20                 // class org/apache/hadoop/hbase/replication/ReplicationPeerConfig
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #21                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig."<init>":(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig$1;)V
       9: areturn

  static java.lang.String access$000(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clusterKey:Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #11                 // Field replicationEndpointImpl:Ljava/lang/String;
       4: areturn

  static java.util.Map access$200(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #10                 // Field peerData:Ljava/util/Map;
       4: areturn

  static java.util.Map access$300(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #9                  // Field configuration:Ljava/util/Map;
       4: areturn

  static java.util.Map access$400(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableCFsMap:Ljava/util/Map;
       4: areturn

  static java.util.Set access$500(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field namespaces:Ljava/util/Set;
       4: areturn

  static boolean access$600(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field replicateAllUserTables:Z
       4: ireturn

  static java.util.Map access$700(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludeTableCFsMap:Ljava/util/Map;
       4: areturn

  static java.util.Set access$800(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field excludeNamespaces:Ljava/util/Set;
       4: areturn

  static long access$900(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bandwidth:J
       4: lreturn

  static boolean access$1000(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serial:Z
       4: ireturn

  static java.lang.String access$1100(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field remoteWALDir:Ljava/lang/String;
       4: areturn
}
