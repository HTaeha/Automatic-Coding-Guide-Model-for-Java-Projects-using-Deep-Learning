Compiled from "AsyncBatchRpcRetryingCaller.java"
final class org.apache.hadoop.hbase.client.AsyncBatchRpcRetryingCaller$ServerRequest {
  public final java.util.concurrent.ConcurrentMap<byte[], org.apache.hadoop.hbase.client.AsyncBatchRpcRetryingCaller$RegionRequest> actionsByRegion;

  public void addAction(org.apache.hadoop.hbase.HRegionLocation, org.apache.hadoop.hbase.client.Action);
    Code:
       0: aload_0
       1: getfield      #6                  // Field actionsByRegion:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #7                  // Method org/apache/hadoop/hbase/HRegionLocation.getRegion:()Lorg/apache/hadoop/hbase/client/RegionInfo;
       8: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionName:()[B
      13: aload_1
      14: invokedynamic #9,  0              // InvokeDynamic #0:get:(Lorg/apache/hadoop/hbase/HRegionLocation;)Ljava/util/function/Supplier;
      19: invokestatic  #10                 // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      22: checkcast     #11                 // class org/apache/hadoop/hbase/client/AsyncBatchRpcRetryingCaller$RegionRequest
      25: getfield      #12                 // Field org/apache/hadoop/hbase/client/AsyncBatchRpcRetryingCaller$RegionRequest.actions:Ljava/util/concurrent/ConcurrentLinkedQueue;
      28: aload_2
      29: invokevirtual #13                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  public void setRegionRequest(byte[], org.apache.hadoop.hbase.client.AsyncBatchRpcRetryingCaller$RegionRequest);
    Code:
       0: aload_0
       1: getfield      #6                  // Field actionsByRegion:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #6                  // Field actionsByRegion:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      19: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokedynamic #19,  0             // InvokeDynamic #2:applyAsInt:()Ljava/util/function/ToIntFunction;
      29: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      34: invokeinterface #21,  1           // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      39: iconst_m1
      40: invokevirtual #23                 // Method java/util/OptionalInt.orElse:(I)I
      43: ireturn

  org.apache.hadoop.hbase.client.AsyncBatchRpcRetryingCaller$ServerRequest(org.apache.hadoop.hbase.client.AsyncBatchRpcRetryingCaller$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
