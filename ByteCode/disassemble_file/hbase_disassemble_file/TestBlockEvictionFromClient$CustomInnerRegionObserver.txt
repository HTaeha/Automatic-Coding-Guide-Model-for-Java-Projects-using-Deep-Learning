Compiled from "TestBlockEvictionFromClient.java"
public class org.apache.hadoop.hbase.client.TestBlockEvictionFromClient$CustomInnerRegionObserver implements org.apache.hadoop.hbase.coprocessor.RegionCoprocessor,org.apache.hadoop.hbase.coprocessor.RegionObserver {
  static final java.util.concurrent.atomic.AtomicLong sleepTime;

  static final java.util.concurrent.atomic.AtomicBoolean slowDownNext;

  static final java.util.concurrent.atomic.AtomicInteger countOfNext;

  static final java.util.concurrent.atomic.AtomicInteger countOfGets;

  static final java.util.concurrent.atomic.AtomicBoolean waitForGets;

  static final java.util.concurrent.atomic.AtomicBoolean throwException;

  public org.apache.hadoop.hbase.client.TestBlockEvictionFromClient$CustomInnerRegionObserver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.RegionObserver> getRegionObserver();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public boolean postScannerNext(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, java.util.List<org.apache.hadoop.hbase.client.Result>, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method slowdownCode:(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
       6: invokestatic  #4                  // Method org/apache/hadoop/hbase/client/TestBlockEvictionFromClient.access$1000:()Ljava/util/concurrent/CountDownLatch;
       9: ifnull        34
      12: invokestatic  #4                  // Method org/apache/hadoop/hbase/client/TestBlockEvictionFromClient.access$1000:()Ljava/util/concurrent/CountDownLatch;
      15: invokevirtual #5                  // Method java/util/concurrent/CountDownLatch.getCount:()J
      18: lconst_0
      19: lcmp
      20: ifle          34
      23: invokestatic  #4                  // Method org/apache/hadoop/hbase/client/TestBlockEvictionFromClient.access$1000:()Ljava/util/concurrent/CountDownLatch;
      26: invokevirtual #6                  // Method java/util/concurrent/CountDownLatch.await:()V
      29: goto          34
      32: astore        6
      34: iload         5
      36: ireturn
    Exception table:
       from    to  target type
          23    29    32   Class java/lang/InterruptedException

  public void postGetOp(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Get, java.util.List<org.apache.hadoop.hbase.Cell>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #3                  // Method slowdownCode:(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
       6: return

  public static java.util.concurrent.atomic.AtomicReference<java.util.concurrent.CountDownLatch> getCdl();
    Code:
       0: getstatic     #8                  // Field cdl:Ljava/util/concurrent/atomic/AtomicReference;
       3: areturn

  static {};
    Code:
       0: new           #36                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #38                 // Field sleepTime:Ljava/util/concurrent/atomic/AtomicLong;
      11: new           #39                 // class java/util/concurrent/atomic/AtomicBoolean
      14: dup
      15: iconst_0
      16: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      19: putstatic     #41                 // Field slowDownNext:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: new           #42                 // class java/util/concurrent/atomic/AtomicInteger
      25: dup
      26: iconst_0
      27: invokespecial #43                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      30: putstatic     #23                 // Field countOfNext:Ljava/util/concurrent/atomic/AtomicInteger;
      33: new           #42                 // class java/util/concurrent/atomic/AtomicInteger
      36: dup
      37: iconst_0
      38: invokespecial #43                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      41: putstatic     #21                 // Field countOfGets:Ljava/util/concurrent/atomic/AtomicInteger;
      44: new           #39                 // class java/util/concurrent/atomic/AtomicBoolean
      47: dup
      48: iconst_0
      49: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      52: putstatic     #44                 // Field waitForGets:Ljava/util/concurrent/atomic/AtomicBoolean;
      55: new           #39                 // class java/util/concurrent/atomic/AtomicBoolean
      58: dup
      59: iconst_0
      60: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      63: putstatic     #45                 // Field throwException:Ljava/util/concurrent/atomic/AtomicBoolean;
      66: new           #46                 // class java/util/concurrent/atomic/AtomicReference
      69: dup
      70: new           #11                 // class java/util/concurrent/CountDownLatch
      73: dup
      74: iconst_0
      75: invokespecial #47                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      78: invokespecial #48                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      81: putstatic     #8                  // Field cdl:Ljava/util/concurrent/atomic/AtomicReference;
      84: return
}
