Compiled from "Region.java"
public interface org.apache.hadoop.hbase.regionserver.Region extends org.apache.hadoop.hbase.conf.ConfigurationObserver {
  public abstract org.apache.hadoop.hbase.client.RegionInfo getRegionInfo();

  public abstract org.apache.hadoop.hbase.client.TableDescriptor getTableDescriptor();

  public abstract boolean isAvailable();

  public abstract boolean isClosed();

  public abstract boolean isClosing();

  public abstract boolean isReadOnly();

  public abstract boolean isSplittable();

  public abstract boolean isMergeable();

  public abstract java.util.List<? extends org.apache.hadoop.hbase.regionserver.Store> getStores();

  public abstract org.apache.hadoop.hbase.regionserver.Store getStore(byte[]);

  public abstract java.util.List<java.lang.String> getStoreFileList(byte[][]);

  public abstract boolean refreshStoreFiles() throws java.io.IOException;

  public abstract long getMaxFlushedSeqId();

  public abstract long getOldestHfileTs(boolean) throws java.io.IOException;

  public abstract java.util.Map<byte[], java.lang.Long> getMaxStoreSeqId();

  public abstract long getEarliestFlushTimeForAllStores();

  public abstract long getReadRequestsCount();

  public abstract long getCpRequestsCount();

  public abstract long getFilteredReadRequestsCount();

  public abstract long getWriteRequestsCount();

  public abstract long getMemStoreDataSize();

  public abstract long getMemStoreHeapSize();

  public abstract long getMemStoreOffHeapSize();

  public abstract long getNumMutationsWithoutWAL();

  public abstract long getDataInMemoryWithoutWAL();

  public abstract long getBlockedRequestsCount();

  public abstract long getCheckAndMutateChecksPassed();

  public abstract long getCheckAndMutateChecksFailed();

  public abstract void startRegionOperation() throws java.io.IOException;

  public abstract void startRegionOperation(org.apache.hadoop.hbase.regionserver.Region$Operation) throws java.io.IOException;

  public abstract void closeRegionOperation() throws java.io.IOException;

  public abstract void closeRegionOperation(org.apache.hadoop.hbase.regionserver.Region$Operation) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.regionserver.Region$RowLock getRowLock(byte[], boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.Result append(org.apache.hadoop.hbase.client.Append) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.regionserver.OperationStatus[] batchMutate(org.apache.hadoop.hbase.client.Mutation[]) throws java.io.IOException;

  public boolean checkAndMutate(byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Mutation) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1                  // Method org/apache/hadoop/hbase/io/TimeRange.allTime:()Lorg/apache/hadoop/hbase/io/TimeRange;
      11: aload         6
      13: invokeinterface #2,  8            // InterfaceMethod checkAndMutate:([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z
      18: ireturn

  public abstract boolean checkAndMutate(byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.io.TimeRange, org.apache.hadoop.hbase.client.Mutation) throws java.io.IOException;

  public boolean checkAndRowMutate(byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.RowMutations) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1                  // Method org/apache/hadoop/hbase/io/TimeRange.allTime:()Lorg/apache/hadoop/hbase/io/TimeRange;
      11: aload         6
      13: invokeinterface #3,  8            // InterfaceMethod checkAndRowMutate:([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
      18: ireturn

  public abstract boolean checkAndRowMutate(byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.io.TimeRange, org.apache.hadoop.hbase.client.RowMutations) throws java.io.IOException;

  public abstract void delete(org.apache.hadoop.hbase.client.Delete) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.Result get(org.apache.hadoop.hbase.client.Get) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.Cell> get(org.apache.hadoop.hbase.client.Get, boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.regionserver.RegionScanner getScanner(org.apache.hadoop.hbase.client.Scan) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.regionserver.RegionScanner getScanner(org.apache.hadoop.hbase.client.Scan, java.util.List<org.apache.hadoop.hbase.regionserver.KeyValueScanner>) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.CellComparator getCellComparator();

  public abstract org.apache.hadoop.hbase.client.Result increment(org.apache.hadoop.hbase.client.Increment) throws java.io.IOException;

  public abstract void mutateRow(org.apache.hadoop.hbase.client.RowMutations) throws java.io.IOException;

  public abstract void mutateRowsWithLocks(java.util.Collection<org.apache.hadoop.hbase.client.Mutation>, java.util.Collection<byte[]>, long, long) throws java.io.IOException;

  public abstract void processRowsWithLocks(org.apache.hadoop.hbase.regionserver.RowProcessor<?, ?>) throws java.io.IOException;

  public abstract void processRowsWithLocks(org.apache.hadoop.hbase.regionserver.RowProcessor<?, ?>, long, long) throws java.io.IOException;

  public abstract void processRowsWithLocks(org.apache.hadoop.hbase.regionserver.RowProcessor<?, ?>, long, long, long) throws java.io.IOException;

  public abstract void put(org.apache.hadoop.hbase.client.Put) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.CompactionState getCompactionState();

  public abstract void requestCompaction(java.lang.String, int, boolean, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker) throws java.io.IOException;

  public abstract void requestCompaction(byte[], java.lang.String, int, boolean, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker) throws java.io.IOException;

  public abstract void requestFlush(org.apache.hadoop.hbase.regionserver.FlushLifeCycleTracker) throws java.io.IOException;

  public abstract boolean waitForFlushes(long);
}
