Compiled from "TableDescriptorBuilder.java"
public class org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor implements org.apache.hadoop.hbase.client.TableDescriptor, java.lang.Comparable<org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor> {
  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
       5: getstatic     #7                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       8: invokespecial #8                  // Method "<init>":(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;Ljava/util/Map;)V
      11: return

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.TableDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getColumnFamilies:()[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       8: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: aload_2
      12: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getValues:()Ljava/util/Map;
      17: invokespecial #8                  // Method "<init>":(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;Ljava/util/Map;)V
      20: return

  public boolean isMetaRegion();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public boolean isMetaTable();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isMetaRegion:()Z
       4: ireturn

  public org.apache.hadoop.hbase.util.Bytes getValue(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: getfield      #16                 // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          33
      22: new           #25                 // class org/apache/hadoop/hbase/util/Bytes
      25: dup
      26: aload_2
      27: invokevirtual #39                 // Method org/apache/hadoop/hbase/util/Bytes.copyBytes:()[B
      30: invokespecial #30                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      33: areturn

  public java.lang.String getValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field values:Ljava/util/Map;
       4: new           #25                 // class org/apache/hadoop/hbase/util/Bytes
       7: dup
       8: aload_1
       9: invokestatic  #29                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      12: invokespecial #30                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      15: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      23: astore_2
      24: aload_2
      25: ifnonnull     32
      28: aconst_null
      29: goto          47
      32: aload_2
      33: invokevirtual #40                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      36: aload_2
      37: invokevirtual #41                 // Method org/apache/hadoop/hbase/util/Bytes.getOffset:()I
      40: aload_2
      41: invokevirtual #42                 // Method org/apache/hadoop/hbase/util/Bytes.getLength:()I
      44: invokestatic  #43                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([BII)Ljava/lang/String;
      47: areturn

  public byte[] getValue(byte[]);
    Code:
       0: aload_0
       1: getfield      #16                 // Field values:Ljava/util/Map;
       4: new           #25                 // class org/apache/hadoop/hbase/util/Bytes
       7: dup
       8: aload_1
       9: invokespecial #30                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      12: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      20: astore_2
      21: aload_2
      22: ifnonnull     29
      25: aconst_null
      26: goto          33
      29: aload_2
      30: invokevirtual #39                 // Method org/apache/hadoop/hbase/util/Bytes.copyBytes:()[B
      33: areturn

  public java.util.Map<org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes> getValues();
    Code:
       0: aload_0
       1: getfield      #16                 // Field values:Ljava/util/Map;
       4: invokestatic  #45                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setValue(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #46,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       7: invokestatic  #47                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      10: aload_2
      11: invokedynamic #48,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      16: invokestatic  #47                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      19: invokevirtual #49                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      22: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #50,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
       7: invokestatic  #47                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      10: aload_2
      11: invokedynamic #50,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      16: invokestatic  #47                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      19: invokevirtual #49                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      22: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setValue(org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_2
       1: ifnonnull     18
       4: aload_0
       5: getfield      #16                 // Field values:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: goto          30
      18: aload_0
      19: getfield      #16                 // Field values:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor removeValue(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
       6: invokevirtual #49                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor removeValue(byte[]);
    Code:
       0: aload_0
       1: new           #25                 // class org/apache/hadoop/hbase/util/Bytes
       4: dup
       5: aload_1
       6: invokespecial #30                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
       9: invokevirtual #53                 // Method removeValue:(Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      12: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setReadOnly(boolean);
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public boolean isCompactionEnabled();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setCompactionEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public boolean isSplitEnabled();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setSplitEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public boolean isMergeEnabled();
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setMergeEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public boolean isNormalizationEnabled();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public int getNormalizerTargetRegionCount();
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #61,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       9: iconst_m1
      10: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #63                 // class java/lang/Integer
      19: invokevirtual #64                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public long getNormalizerTargetRegionSize();
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #66,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: ldc2_w        #67                 // long -1l
      12: invokestatic  #69                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #70                 // class java/lang/Long
      21: invokevirtual #71                 // Method java/lang/Long.longValue:()J
      24: lreturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setNormalizationEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setNormalizerTargetRegionCount(int);
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #72                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setNormalizerTargetRegionSize(long);
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: lload_1
       5: invokestatic  #73                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setDurability(org.apache.hadoop.hbase.client.Durability);
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #75                 // Method org/apache/hadoop/hbase/client/Durability.name:()Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.Durability getDurability();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
       9: invokestatic  #77                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1300:()Lorg/apache/hadoop/hbase/client/Durability;
      12: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #78                 // class org/apache/hadoop/hbase/client/Durability
      18: areturn

  public org.apache.hadoop.hbase.TableName getTableName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field name:Lorg/apache/hadoop/hbase/TableName;
       4: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setRegionSplitPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: areturn

  public java.lang.String getRegionSplitPolicyClassName();
    Code:
       0: aload_0
       1: invokestatic  #79                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokestatic  #80                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       7: aconst_null
       8: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #81                 // class java/lang/String
      14: areturn

  public long getMaxFileSize();
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #66,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: ldc2_w        #67                 // long -1l
      12: invokestatic  #69                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #70                 // class java/lang/Long
      21: invokevirtual #71                 // Method java/lang/Long.longValue:()J
      24: lreturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setMaxFileSize(long);
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: lload_1
       5: invokestatic  #73                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public long getMemStoreFlushSize();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #66,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: ldc2_w        #67                 // long -1l
      12: invokestatic  #69                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #70                 // class java/lang/Long
      21: invokevirtual #71                 // Method java/lang/Long.longValue:()J
      24: lreturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setMemStoreFlushSize(long);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: lload_1
       5: invokestatic  #73                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setFlushPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: areturn

  public java.lang.String getFlushPolicyClassName();
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$1700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokestatic  #80                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       7: aconst_null
       8: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #81                 // class java/lang/String
      14: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setColumnFamily(org.apache.hadoop.hbase.client.ColumnFamilyDescriptor);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
       6: ifnull        19
       9: aload_1
      10: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      15: arraylength
      16: ifgt          29
      19: new           #86                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #87                 // String Family name cannot be null or empty
      25: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      36: invokevirtual #89                 // Method hasColumnFamily:([B)Z
      39: ifeq          79
      42: new           #86                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #90                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #92                 // String Family '
      55: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokeinterface #94,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getNameAsString:()Ljava/lang/String;
      64: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #95                 // String ' already exists so cannot be added
      69: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload_1
      81: invokespecial #97                 // Method putColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      84: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor modifyColumnFamily(org.apache.hadoop.hbase.client.ColumnFamilyDescriptor);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
       6: ifnull        19
       9: aload_1
      10: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      15: arraylength
      16: ifgt          29
      19: new           #86                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #87                 // String Family name cannot be null or empty
      25: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: invokeinterface #85,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      36: invokevirtual #89                 // Method hasColumnFamily:([B)Z
      39: ifne          79
      42: new           #86                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #90                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #98                 // String Column family '
      55: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokeinterface #94,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getNameAsString:()Ljava/lang/String;
      64: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #99                 // String ' does not exist
      69: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload_1
      81: invokespecial #97                 // Method putColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      84: areturn

  public boolean hasColumnFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #100,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.String toString();
    Code:
       0: new           #90                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        39
      11: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #20                 // Field name:Lorg/apache/hadoop/hbase/TableName;
      18: invokevirtual #102                // Method org/apache/hadoop/hbase/TableName.getName:()[B
      21: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      24: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: bipush        39
      29: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: iconst_1
      36: invokespecial #104                // Method getValues:(Z)Ljava/lang/StringBuilder;
      39: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_0
      44: getfield      #2                  // Field families:Ljava/util/Map;
      47: invokeinterface #106,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      52: aload_1
      53: invokedynamic #107,  0            // InvokeDynamic #8:accept:(Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
      58: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      63: aload_1
      64: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public java.lang.String toStringCustomizedValues();
    Code:
       0: new           #90                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        39
      11: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #20                 // Field name:Lorg/apache/hadoop/hbase/TableName;
      18: invokevirtual #102                // Method org/apache/hadoop/hbase/TableName.getName:()[B
      21: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      24: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: bipush        39
      29: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: iconst_0
      36: invokespecial #104                // Method getValues:(Z)Ljava/lang/StringBuilder;
      39: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_0
      44: getfield      #2                  // Field families:Ljava/util/Map;
      47: invokeinterface #106,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      52: aload_1
      53: invokedynamic #108,  0            // InvokeDynamic #9:accept:(Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
      58: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      63: aload_1
      64: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public java.lang.String toStringTableAttributes();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #104                // Method getValues:(Z)Ljava/lang/StringBuilder;
       5: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       8: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #137                // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
      11: ifeq          36
      14: getstatic     #138                // Field org/apache/hadoop/hbase/client/TableDescriptor.COMPARATOR:Ljava/util/Comparator;
      17: aload_0
      18: aload_1
      19: checkcast     #137                // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
      22: invokeinterface #139,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field name:Lorg/apache/hadoop/hbase/TableName;
       4: invokevirtual #140                // Method org/apache/hadoop/hbase/TableName.hashCode:()I
       7: istore_1
       8: aload_0
       9: getfield      #2                  // Field families:Ljava/util/Map;
      12: invokeinterface #141,  1          // InterfaceMethod java/util/Map.size:()I
      17: ifle          64
      20: aload_0
      21: getfield      #2                  // Field families:Ljava/util/Map;
      24: invokeinterface #106,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      29: invokeinterface #142,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          64
      44: aload_2
      45: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #143                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptor
      53: astore_3
      54: iload_1
      55: aload_3
      56: invokevirtual #144                // Method java/lang/Object.hashCode:()I
      59: ixor
      60: istore_1
      61: goto          35
      64: iload_1
      65: aload_0
      66: getfield      #16                 // Field values:Ljava/util/Map;
      69: invokeinterface #145,  1          // InterfaceMethod java/util/Map.hashCode:()I
      74: ixor
      75: istore_1
      76: iload_1
      77: ireturn

  public int compareTo(org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor);
    Code:
       0: getstatic     #138                // Field org/apache/hadoop/hbase/client/TableDescriptor.COMPARATOR:Ljava/util/Comparator;
       3: aload_0
       4: aload_1
       5: invokeinterface #139,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      10: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptor[] getColumnFamilies();
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: invokeinterface #106,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_0
      10: getfield      #2                  // Field families:Ljava/util/Map;
      13: invokeinterface #141,  1          // InterfaceMethod java/util/Map.size:()I
      18: anewarray     #143                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptor
      21: invokeinterface #146,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      26: checkcast     #147                // class "[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;"
      29: areturn

  public int getRegionReplication();
    Code:
       0: aload_0
       1: invokestatic  #148                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #61,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #63                 // class java/lang/Integer
      19: invokevirtual #64                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setRegionReplication(int);
    Code:
       0: aload_0
       1: invokestatic  #148                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #72                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public boolean hasRegionMemStoreReplication();
    Code:
       0: aload_0
       1: invokestatic  #149                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #32,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #35                 // class java/lang/Boolean
      19: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setRegionMemStoreReplication(boolean);
    Code:
       0: aload_0
       1: invokestatic  #149                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: pop
      12: aload_0
      13: invokestatic  #150                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2200:()Lorg/apache/hadoop/hbase/util/Bytes;
      16: iload_1
      17: invokestatic  #28                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      20: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      23: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setPriority(int);
    Code:
       0: aload_0
       1: invokestatic  #151                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2300:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #72                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: areturn

  public int getPriority();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2300:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #61,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #63                 // class java/lang/Integer
      19: invokevirtual #64                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public java.util.Set<byte[]> getColumnFamilyNames();
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: invokeinterface #152,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #153                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptor getColumnFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #143                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptor
      13: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptor removeColumnFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #143                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptor
      13: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setCoprocessor(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.newBuilder:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
       5: ldc           #156                // int 1073741823
       7: invokevirtual #157                // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.setPriority:(I)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
      10: invokevirtual #158                // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;
      13: invokevirtual #159                // Method setCoprocessor:(Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      16: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setCoprocessor(org.apache.hadoop.hbase.client.CoprocessorDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #160,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getClassName:()Ljava/lang/String;
       7: invokespecial #161                // Method checkHasCoprocessor:(Ljava/lang/String;)V
      10: aload_1
      11: invokeinterface #162,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getPriority:()I
      16: ifge          51
      19: new           #163                // class java/io/IOException
      22: dup
      23: new           #90                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #164                // String Priority must be bigger than or equal with zero, current:
      32: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokeinterface #162,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getPriority:()I
      41: invokevirtual #165                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #166                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: new           #90                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      58: astore_2
      59: aload_1
      60: invokeinterface #167,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getProperties:()Ljava/util/Map;
      65: invokeinterface #111,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      70: invokeinterface #112,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          276
      85: aload_3
      86: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #115                // class java/util/Map$Entry
      94: astore        4
      96: aload         4
      98: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     103: checkcast     #81                 // class java/lang/String
     106: ldc           #168                // String [^=,]+
     108: invokevirtual #169                // Method java/lang/String.matches:(Ljava/lang/String;)Z
     111: ifne          150
     114: new           #163                // class java/io/IOException
     117: dup
     118: new           #90                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #170                // String Illegal parameter key =
     127: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload         4
     132: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     137: checkcast     #81                 // class java/lang/String
     140: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #166                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload         4
     152: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     157: checkcast     #81                 // class java/lang/String
     160: ldc           #171                // String [^,]+
     162: invokevirtual #169                // Method java/lang/String.matches:(Ljava/lang/String;)Z
     165: ifne          222
     168: new           #163                // class java/io/IOException
     171: dup
     172: new           #90                 // class java/lang/StringBuilder
     175: dup
     176: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
     179: ldc           #172                // String Illegal parameter (
     181: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload         4
     186: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     191: checkcast     #81                 // class java/lang/String
     194: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: ldc           #173                // String ) value =
     199: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: aload         4
     204: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     209: checkcast     #81                 // class java/lang/String
     212: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokespecial #166                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     221: athrow
     222: aload_2
     223: invokevirtual #174                // Method java/lang/StringBuilder.length:()I
     226: ifeq          236
     229: aload_2
     230: bipush        44
     232: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     235: pop
     236: aload_2
     237: aload         4
     239: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     244: checkcast     #81                 // class java/lang/String
     247: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: pop
     251: aload_2
     252: bipush        61
     254: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     257: pop
     258: aload_2
     259: aload         4
     261: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     266: checkcast     #81                 // class java/lang/String
     269: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: pop
     273: goto          76
     276: new           #90                 // class java/lang/StringBuilder
     279: dup
     280: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
     283: aload_1
     284: invokeinterface #175,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getJarPath:()Ljava/util/Optional;
     289: ldc           #176                // String
     291: invokevirtual #177                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     294: checkcast     #81                 // class java/lang/String
     297: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: ldc           #178                // String |
     302: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     305: aload_1
     306: invokeinterface #160,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getClassName:()Ljava/lang/String;
     311: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: ldc           #178                // String |
     316: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     319: aload_1
     320: invokeinterface #162,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getPriority:()I
     325: invokestatic  #72                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     328: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: ldc           #178                // String |
     333: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: aload_2
     337: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     340: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     346: astore_3
     347: aload_0
     348: aload_3
     349: invokespecial #179                // Method setCoprocessorToMap:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
     352: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setCoprocessorWithSpec(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #180                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2400:(Ljava/lang/String;)Ljava/util/Optional;
       4: aload_1
       5: invokedynamic #181,  0            // InvokeDynamic #10:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #182                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      13: checkcast     #183                // class org/apache/hadoop/hbase/client/CoprocessorDescriptor
      16: astore_2
      17: aload_0
      18: aload_2
      19: invokeinterface #160,  1          // InterfaceMethod org/apache/hadoop/hbase/client/CoprocessorDescriptor.getClassName:()Ljava/lang/String;
      24: invokespecial #161                // Method checkHasCoprocessor:(Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: invokespecial #179                // Method setCoprocessorToMap:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      32: areturn

  public boolean hasCoprocessor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #193                // Method getCoprocessorDescriptors:()Ljava/util/List;
       4: invokeinterface #194,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #195,  0            // InvokeDynamic #11:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      15: invokeinterface #196,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      20: ireturn

  public java.util.List<org.apache.hadoop.hbase.client.CoprocessorDescriptor> getCoprocessorDescriptors();
    Code:
       0: new           #197                // class java/util/ArrayList
       3: dup
       4: invokespecial #198                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #199                // Method getValues:()Ljava/util/Map;
      12: invokeinterface #111,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #112,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          114
      32: aload_2
      33: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #115                // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      51: invokevirtual #40                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      54: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      57: invokevirtual #200                // Method java/lang/String.trim:()Ljava/lang/String;
      60: astore        4
      62: invokestatic  #187                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2500:()Ljava/util/regex/Pattern;
      65: aload         4
      67: invokevirtual #188                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      70: invokevirtual #189                // Method java/util/regex/Matcher.matches:()Z
      73: ifeq          111
      76: aload_3
      77: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      85: invokevirtual #40                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      88: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      91: invokevirtual #200                // Method java/lang/String.trim:()Ljava/lang/String;
      94: invokestatic  #180                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2400:(Ljava/lang/String;)Ljava/util/Optional;
      97: aload_1
      98: dup
      99: invokevirtual #201                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     102: pop
     103: invokedynamic #202,  0            // InvokeDynamic #12:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
     108: invokevirtual #203                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     111: goto          23
     114: aload_1
     115: areturn

  public void removeCoprocessor(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #16                 // Field values:Ljava/util/Map;
       6: invokeinterface #111,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #112,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        5
      18: aload         5
      20: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          148
      28: aload         5
      30: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #115                // class java/util/Map$Entry
      38: astore        6
      40: invokestatic  #187                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2500:()Ljava/util/regex/Pattern;
      43: aload         6
      45: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      53: invokevirtual #40                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      56: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      59: invokevirtual #188                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      62: astore_3
      63: aload_3
      64: invokevirtual #189                // Method java/util/regex/Matcher.matches:()Z
      67: ifne          73
      70: goto          18
      73: invokestatic  #204                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.access$2600:()Ljava/util/regex/Pattern;
      76: aload         6
      78: invokeinterface #122,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
      86: invokevirtual #40                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      89: invokestatic  #103                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      92: invokevirtual #188                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      95: astore        4
      97: aload         4
      99: invokevirtual #189                // Method java/util/regex/Matcher.matches:()Z
     102: ifne          108
     105: goto          18
     108: aload         4
     110: iconst_2
     111: invokevirtual #190                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     114: invokevirtual #200                // Method java/lang/String.trim:()Ljava/lang/String;
     117: astore        7
     119: aload         7
     121: aload_1
     122: invokevirtual #200                // Method java/lang/String.trim:()Ljava/lang/String;
     125: invokevirtual #205                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifeq          145
     131: aload         6
     133: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     138: checkcast     #25                 // class org/apache/hadoop/hbase/util/Bytes
     141: astore_2
     142: goto          148
     145: goto          18
     148: aload_2
     149: ifnull        158
     152: aload_0
     153: aload_2
     154: invokevirtual #53                 // Method removeValue:(Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
     157: pop
     158: return

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setOwner(org.apache.hadoop.hbase.security.User);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #206                // Method org/apache/hadoop/hbase/security/User.getShortName:()Ljava/lang/String;
       9: goto          13
      12: aconst_null
      13: invokevirtual #207                // Method setOwnerString:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      16: areturn

  public org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor setOwnerString(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #208                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.OWNER_KEY:Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokespecial #55                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: areturn

  public java.lang.String getOwnerString();
    Code:
       0: aload_0
       1: getstatic     #208                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.OWNER_KEY:Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokestatic  #80                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       7: aconst_null
       8: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #81                 // class java/lang/String
      14: areturn

  public int getColumnFamilyCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: invokeinterface #141,  1          // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection getCoprocessorDescriptors();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method getCoprocessorDescriptors:()Ljava/util/List;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #137                // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       5: invokevirtual #222                // Method compareTo:(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)I
       8: ireturn

  static byte[] access$000(org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method toByteArray:()[B
       4: areturn

  org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptor, org.apache.hadoop.hbase.client.TableDescriptorBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
       5: return

  static org.apache.hadoop.hbase.client.TableDescriptor access$200(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method parseFrom:([B)Lorg/apache/hadoop/hbase/client/TableDescriptor;
       4: areturn

  static java.util.Map access$300(org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field families:Ljava/util/Map;
       4: areturn
}
