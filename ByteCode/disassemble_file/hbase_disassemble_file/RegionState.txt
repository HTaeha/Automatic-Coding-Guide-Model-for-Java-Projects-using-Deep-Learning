Compiled from "RegionState.java"
public class org.apache.hadoop.hbase.master.RegionState {
  public static org.apache.hadoop.hbase.master.RegionState createForTesting(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.master.RegionState$State);
    Code:
       0: new           #1                  // class org/apache/hadoop/hbase/master/RegionState
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       9: aconst_null
      10: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;JLorg/apache/hadoop/hbase/ServerName;)V
      13: areturn

  public org.apache.hadoop.hbase.master.RegionState(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.master.RegionState$State, org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       6: aload_3
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;JLorg/apache/hadoop/hbase/ServerName;)V
      10: return

  public org.apache.hadoop.hbase.master.RegionState(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.master.RegionState$State, long, org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: lconst_0
       7: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;JLorg/apache/hadoop/hbase/ServerName;J)V
      10: return

  public org.apache.hadoop.hbase.master.RegionState(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.master.RegionState$State, long, org.apache.hadoop.hbase.ServerName, long);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      14: aload_0
      15: lload_3
      16: putfield      #8                  // Field stamp:J
      19: aload_0
      20: aload         5
      22: putfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      25: aload_0
      26: lload         6
      28: putfield      #10                 // Field ritDuration:J
      31: return

  public org.apache.hadoop.hbase.master.RegionState$State getState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: areturn

  public long getStamp();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stamp:J
       4: lreturn

  public org.apache.hadoop.hbase.client.RegionInfo getRegion();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
       4: areturn

  public org.apache.hadoop.hbase.ServerName getServerName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
       4: areturn

  public long getRitDuration();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ritDuration:J
       4: lreturn

  void updateRitDuration(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field ritDuration:J
       5: aload_0
       6: getfield      #8                  // Field stamp:J
       9: lload_1
      10: lsub
      11: ladd
      12: putfield      #10                 // Field ritDuration:J
      15: return

  public boolean isClosing();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #11                 // Field org/apache/hadoop/hbase/master/RegionState$State.CLOSING:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #12                 // Field org/apache/hadoop/hbase/master/RegionState$State.CLOSED:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOpening();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #13                 // Field org/apache/hadoop/hbase/master/RegionState$State.OPENING:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOpened();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #14                 // Field org/apache/hadoop/hbase/master/RegionState$State.OPEN:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOffline();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #15                 // Field org/apache/hadoop/hbase/master/RegionState$State.OFFLINE:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSplitting();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #16                 // Field org/apache/hadoop/hbase/master/RegionState$State.SPLITTING:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSplit();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #17                 // Field org/apache/hadoop/hbase/master/RegionState$State.SPLIT:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSplittingNew();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #18                 // Field org/apache/hadoop/hbase/master/RegionState$State.SPLITTING_NEW:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFailedOpen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #19                 // Field org/apache/hadoop/hbase/master/RegionState$State.FAILED_OPEN:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFailedClose();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #20                 // Field org/apache/hadoop/hbase/master/RegionState$State.FAILED_CLOSE:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isMerging();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #21                 // Field org/apache/hadoop/hbase/master/RegionState$State.MERGING:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isMerged();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #22                 // Field org/apache/hadoop/hbase/master/RegionState$State.MERGED:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isMergingNew();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: getstatic     #23                 // Field org/apache/hadoop/hbase/master/RegionState$State.MERGING_NEW:Lorg/apache/hadoop/hbase/master/RegionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
       4: ifnull        22
       7: aload_0
       8: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      11: aload_1
      12: invokevirtual #24                 // Method org/apache/hadoop/hbase/ServerName.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isMergingOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #26                 // Method isMerging:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isMergingNewOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #27                 // Method isMergingNew:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isMergingNewOrOpenedOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #27                 // Method isMergingNew:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #28                 // Method isOpened:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isMergingNewOrOfflineOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #27                 // Method isMergingNew:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #29                 // Method isOffline:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isSplittingOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #30                 // Method isSplitting:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isSplittingNewOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #31                 // Method isSplittingNew:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isSplittingOrOpenedOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #30                 // Method isSplitting:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #28                 // Method isOpened:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isSplittingOrSplitOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #30                 // Method isSplitting:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #32                 // Method isSplit:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isClosingOrClosedOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #33                 // Method isClosing:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #34                 // Method isClosed:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isOpeningOrFailedOpenOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #35                 // Method isOpening:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #36                 // Method isFailedOpen:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isOpeningOrOpenedOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          26
       8: aload_0
       9: invokevirtual #35                 // Method isOpening:()Z
      12: ifne          22
      15: aload_0
      16: invokevirtual #28                 // Method isOpened:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isOpenedOnServer(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isOnServer:(Lorg/apache/hadoop/hbase/ServerName;)Z
       5: ifeq          19
       8: aload_0
       9: invokevirtual #28                 // Method isOpened:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isReadyToOffline();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isMerged:()Z
       4: ifne          35
       7: aload_0
       8: invokevirtual #32                 // Method isSplit:()Z
      11: ifne          35
      14: aload_0
      15: invokevirtual #29                 // Method isOffline:()Z
      18: ifne          35
      21: aload_0
      22: invokevirtual #31                 // Method isSplittingNew:()Z
      25: ifne          35
      28: aload_0
      29: invokevirtual #27                 // Method isMergingNew:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public boolean isReadyToOnline();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isOpened:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #31                 // Method isSplittingNew:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #27                 // Method isMergingNew:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isUnassignable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: invokestatic  #38                 // Method isUnassignable:(Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
       7: ireturn

  public static boolean isUnassignable(org.apache.hadoop.hbase.master.RegionState$State);
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/apache/hadoop/hbase/master/RegionState$State.MERGED:Lorg/apache/hadoop/hbase/master/RegionState$State;
       4: if_acmpeq     35
       7: aload_0
       8: getstatic     #17                 // Field org/apache/hadoop/hbase/master/RegionState$State.SPLIT:Lorg/apache/hadoop/hbase/master/RegionState$State;
      11: if_acmpeq     35
      14: aload_0
      15: getstatic     #15                 // Field org/apache/hadoop/hbase/master/RegionState$State.OFFLINE:Lorg/apache/hadoop/hbase/master/RegionState$State;
      18: if_acmpeq     35
      21: aload_0
      22: getstatic     #18                 // Field org/apache/hadoop/hbase/master/RegionState$State.SPLITTING_NEW:Lorg/apache/hadoop/hbase/master/RegionState$State;
      25: if_acmpeq     35
      28: aload_0
      29: getstatic     #23                 // Field org/apache/hadoop/hbase/master/RegionState$State.MERGING_NEW:Lorg/apache/hadoop/hbase/master/RegionState$State;
      32: if_acmpne     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public java.lang.String toString();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #41                 // String {
       9: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
      16: invokeinterface #43,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getShortNameToLog:()Ljava/lang/String;
      21: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #44                 // String  state=
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      33: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #46                 // String , ts=
      38: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #8                  // Field stamp:J
      45: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      48: ldc           #48                 // String , server=
      50: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      57: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #49                 // String }
      62: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  public java.lang.String toDescriptiveString();
    Code:
       0: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #8                  // Field stamp:J
       7: lsub
       8: lstore_1
       9: new           #39                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
      20: invokeinterface #51,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionNameAsString:()Ljava/lang/String;
      25: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #44                 // String  state=
      30: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      37: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #46                 // String , ts=
      42: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: new           #52                 // class java/util/Date
      48: dup
      49: aload_0
      50: getfield      #8                  // Field stamp:J
      53: invokespecial #53                 // Method java/util/Date."<init>":(J)V
      56: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #54                 // String  (
      61: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: lload_1
      65: ldc2_w        #55                 // long 1000l
      68: ldiv
      69: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: ldc           #57                 // String s ago), server=
      74: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      81: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public org.apache.hadoop.hbase.shaded.protobuf.generated.ClusterStatusProtos$RegionState convert();
    Code:
       0: invokestatic  #58                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
       9: invokestatic  #59                 // Method org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.toRegionInfo:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionInfo;
      12: invokevirtual #60                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder.setRegionInfo:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionInfo;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder;
      15: pop
      16: aload_1
      17: aload_0
      18: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      21: invokevirtual #61                 // Method org/apache/hadoop/hbase/master/RegionState$State.convert:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$State;
      24: invokevirtual #62                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder.setState:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$State;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder;
      27: pop
      28: aload_1
      29: aload_0
      30: invokevirtual #63                 // Method getStamp:()J
      33: invokevirtual #64                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder.setStamp:(J)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder;
      36: pop
      37: aload_1
      38: invokevirtual #65                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState;
      41: areturn

  public static org.apache.hadoop.hbase.master.RegionState convert(org.apache.hadoop.hbase.shaded.protobuf.generated.ClusterStatusProtos$RegionState);
    Code:
       0: new           #1                  // class org/apache/hadoop/hbase/master/RegionState
       3: dup
       4: aload_0
       5: invokevirtual #66                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState.getRegionInfo:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionInfo;
       8: invokestatic  #67                 // Method org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.toRegionInfo:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionInfo;)Lorg/apache/hadoop/hbase/client/RegionInfo;
      11: aload_0
      12: invokevirtual #68                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState.getState:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$State;
      15: invokestatic  #69                 // Method org/apache/hadoop/hbase/master/RegionState$State.convert:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState$State;)Lorg/apache/hadoop/hbase/master/RegionState$State;
      18: aload_0
      19: invokevirtual #70                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionState.getStamp:()J
      22: aconst_null
      23: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;JLorg/apache/hadoop/hbase/ServerName;)V
      26: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #1                  // class org/apache/hadoop/hbase/master/RegionState
      28: astore_2
      29: getstatic     #72                 // Field org/apache/hadoop/hbase/client/RegionInfo.COMPARATOR:Ljava/util/Comparator;
      32: aload_2
      33: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
      36: aload_0
      37: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
      40: invokeinterface #73,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      45: ifne          98
      48: aload_2
      49: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      52: aload_0
      53: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      56: if_acmpne     98
      59: aload_0
      60: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      63: ifnull        80
      66: aload_0
      67: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      70: aload_2
      71: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      74: invokevirtual #24                 // Method org/apache/hadoop/hbase/ServerName.equals:(Ljava/lang/Object;)Z
      77: ifne          94
      80: aload_2
      81: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      84: ifnonnull     98
      87: aload_0
      88: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      91: ifnonnull     98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
       4: ifnull        20
       7: aload_0
       8: getfield      #9                  // Field serverName:Lorg/apache/hadoop/hbase/ServerName;
      11: invokevirtual #74                 // Method org/apache/hadoop/hbase/ServerName.hashCode:()I
      14: bipush        11
      16: imul
      17: goto          21
      20: iconst_0
      21: aload_0
      22: getfield      #6                  // Field hri:Lorg/apache/hadoop/hbase/client/RegionInfo;
      25: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
      28: iadd
      29: iconst_5
      30: aload_0
      31: getfield      #7                  // Field state:Lorg/apache/hadoop/hbase/master/RegionState$State;
      34: invokevirtual #76                 // Method org/apache/hadoop/hbase/master/RegionState$State.ordinal:()I
      37: imul
      38: iadd
      39: ireturn
}
