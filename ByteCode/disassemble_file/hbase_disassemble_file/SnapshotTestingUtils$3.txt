Compiled from "SnapshotTestingUtils.java"
final class org.apache.hadoop.hbase.snapshot.SnapshotTestingUtils$3 implements org.apache.hadoop.hbase.snapshot.SnapshotReferenceUtil$StoreFileVisitor {
  final org.apache.hadoop.conf.Configuration val$conf;

  final org.apache.hadoop.hbase.TableName val$table;

  final java.util.ArrayList val$corruptedFiles;

  final org.apache.hadoop.fs.FileSystem val$fs;

  org.apache.hadoop.hbase.snapshot.SnapshotTestingUtils$3(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.TableName, java.util.ArrayList, org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$table:Lorg/apache/hadoop/hbase/TableName;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$corruptedFiles:Ljava/util/ArrayList;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public void storeFile(org.apache.hadoop.hbase.client.RegionInfo, java.lang.String, org.apache.hadoop.hbase.shaded.protobuf.generated.SnapshotProtos$SnapshotRegionManifest$StoreFile) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
       6: astore        4
       8: aload_3
       9: invokevirtual #7                  // Method org/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile.getName:()Ljava/lang/String;
      12: astore        5
      14: aload_0
      15: getfield      #1                  // Field val$conf:Lorg/apache/hadoop/conf/Configuration;
      18: aload_0
      19: getfield      #2                  // Field val$table:Lorg/apache/hadoop/hbase/TableName;
      22: aload         4
      24: aload_2
      25: aload         5
      27: invokestatic  #8                  // Method org/apache/hadoop/hbase/io/HFileLink.build:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/HFileLink;
      30: astore        6
      32: aload_0
      33: getfield      #3                  // Field val$corruptedFiles:Ljava/util/ArrayList;
      36: invokevirtual #9                  // Method java/util/ArrayList.size:()I
      39: iconst_2
      40: irem
      41: ifne          72
      44: aload_0
      45: getfield      #4                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      48: aload         6
      50: aload_0
      51: getfield      #4                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      54: invokevirtual #10                 // Method org/apache/hadoop/hbase/io/HFileLink.getAvailablePath:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/Path;
      57: iconst_1
      58: invokevirtual #11                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      61: pop
      62: aload_0
      63: getfield      #3                  // Field val$corruptedFiles:Ljava/util/ArrayList;
      66: aload         5
      68: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      71: pop
      72: return
}
