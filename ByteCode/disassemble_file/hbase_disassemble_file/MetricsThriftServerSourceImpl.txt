Compiled from "MetricsThriftServerSourceImpl.java"
public class org.apache.hadoop.hbase.thrift.MetricsThriftServerSourceImpl extends org.apache.hadoop.hbase.metrics.ExceptionTrackingSourceImpl implements org.apache.hadoop.hbase.thrift.MetricsThriftServerSource {
  public org.apache.hadoop.hbase.thrift.MetricsThriftServerSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method org/apache/hadoop/hbase/metrics/ExceptionTrackingSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      14: ldc           #4                  // String pauseInfoThresholdExceeded
      16: ldc           #5                  // String Count of INFO level pause threshold alerts
      18: lconst_0
      19: invokevirtual #6                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      22: putfield      #7                  // Field infoPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      25: aload_0
      26: aload_0
      27: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      30: ldc           #8                  // String pauseWarnThresholdExceeded
      32: ldc           #9                  // String Count of WARN level pause threshold alerts
      34: lconst_0
      35: invokevirtual #6                  // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      38: putfield      #10                 // Field warnPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      41: aload_0
      42: aload_0
      43: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      46: ldc           #11                 // String pauseTimeWithGc
      48: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      51: putfield      #13                 // Field pausesWithGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
      54: aload_0
      55: aload_0
      56: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      59: ldc           #14                 // String pauseTimeWithoutGc
      61: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      64: putfield      #15                 // Field pausesWithoutGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
      67: return

  public void init();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/apache/hadoop/hbase/metrics/ExceptionTrackingSourceImpl.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       9: ldc           #18                 // String batchGet
      11: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      14: putfield      #19                 // Field batchGetStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
      17: aload_0
      18: aload_0
      19: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      22: ldc           #20                 // String batchMutate
      24: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      27: putfield      #21                 // Field batchMutateStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
      30: aload_0
      31: aload_0
      32: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      35: ldc           #22                 // String timeInQueue
      37: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      40: putfield      #23                 // Field queueTimeStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
      43: aload_0
      44: aload_0
      45: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      48: ldc           #24                 // String thriftCall
      50: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      53: putfield      #25                 // Field thriftCallStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
      56: aload_0
      57: aload_0
      58: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      61: ldc           #26                 // String slowThriftCall
      63: invokevirtual #12                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      66: putfield      #27                 // Field thriftSlowCallStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
      69: aload_0
      70: aload_0
      71: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      74: ldc           #28                 // String callQueueLen
      76: lconst_0
      77: invokevirtual #29                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getGauge:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      80: putfield      #30                 // Field callQueueLenGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      83: aload_0
      84: aload_0
      85: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      88: ldc           #31                 // String numActiveWorkers
      90: lconst_0
      91: invokevirtual #29                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getGauge:(Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      94: putfield      #32                 // Field activeWorkerCountGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      97: return

  public void incTimeInQueue(long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field queueTimeStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void setCallQueueLen(int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field callQueueLenGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
       4: iload_1
       5: i2l
       6: invokevirtual #34                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.set:(J)V
       9: return

  public void incNumRowKeysInBatchGet(int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field batchGetStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: iload_1
       5: i2l
       6: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      11: return

  public void incNumRowKeysInBatchMutate(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field batchMutateStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: iload_1
       5: i2l
       6: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      11: return

  public void incMethodTime(java.lang.String, long);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       4: aload_1
       5: invokevirtual #35                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.getHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableHistogram;
       8: astore        4
      10: aload         4
      12: lload_2
      13: invokevirtual #36                 // Method org/apache/hadoop/metrics2/lib/MutableHistogram.add:(J)V
      16: return

  public void incCall(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field thriftCallStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void incSlowCall(long);
    Code:
       0: aload_0
       1: getfield      #27                 // Field thriftSlowCallStat:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void incActiveWorkerCount();
    Code:
       0: aload_0
       1: getfield      #32                 // Field activeWorkerCountGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
       4: invokevirtual #37                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.incr:()V
       7: return

  public void decActiveWorkerCount();
    Code:
       0: aload_0
       1: getfield      #32                 // Field activeWorkerCountGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
       4: invokevirtual #38                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.decr:()V
       7: return

  public void incInfoThresholdExceeded(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field infoPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #39                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void incWarnThresholdExceeded(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field warnPauseThresholdExceeded:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: iload_1
       5: i2l
       6: invokevirtual #39                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:(J)V
       9: return

  public void updatePauseTimeWithGc(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field pausesWithGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void updatePauseTimeWithoutGc(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field pausesWithoutGc:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #33,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return
}
