Compiled from "TestReplicasClient.java"
public class org.apache.hadoop.hbase.client.TestReplicasClient$SlowMeCopro implements org.apache.hadoop.hbase.coprocessor.RegionCoprocessor,org.apache.hadoop.hbase.coprocessor.RegionObserver {
  static final java.util.concurrent.atomic.AtomicLong sleepTime;

  static final java.util.concurrent.atomic.AtomicBoolean slowDownNext;

  static final java.util.concurrent.atomic.AtomicInteger countOfNext;

  java.util.Random r;

  public org.apache.hadoop.hbase.client.TestReplicasClient$SlowMeCopro();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Random
       8: dup
       9: invokespecial #3                  // Method java/util/Random."<init>":()V
      12: putfield      #4                  // Field r:Ljava/util/Random;
      15: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.RegionObserver> getRegionObserver();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public void preGetOp(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Get, java.util.List<org.apache.hadoop.hbase.Cell>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method slowdownCode:(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
       5: return

  public void preScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Scan) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method slowdownCode:(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
       5: return

  public boolean preScannerNext(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, java.util.List<org.apache.hadoop.hbase.client.Result>, int, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #7                  // Field slowDownNext:Ljava/util/concurrent/atomic/AtomicBoolean;
       3: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       6: ifeq          33
       9: getstatic     #9                  // Field countOfNext:Ljava/util/concurrent/atomic/AtomicInteger;
      12: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      15: iconst_2
      16: if_icmpne     33
      19: getstatic     #11                 // Field sleepTime:Ljava/util/concurrent/atomic/AtomicLong;
      22: ldc2_w        #12                 // long 2000l
      25: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      28: aload_0
      29: aload_1
      30: invokespecial #6                  // Method slowdownCode:(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
      33: iconst_1
      34: ireturn

  public static java.util.concurrent.atomic.AtomicReference<java.util.concurrent.CountDownLatch> getPrimaryCdl();
    Code:
       0: getstatic     #50                 // Field primaryCdl:Ljava/util/concurrent/atomic/AtomicReference;
       3: areturn

  public static java.util.concurrent.atomic.AtomicReference<java.util.concurrent.CountDownLatch> getSecondaryCdl();
    Code:
       0: getstatic     #51                 // Field secondaryCdl:Ljava/util/concurrent/atomic/AtomicReference;
       3: areturn

  static {};
    Code:
       0: new           #52                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #53                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #11                 // Field sleepTime:Ljava/util/concurrent/atomic/AtomicLong;
      11: new           #54                 // class java/util/concurrent/atomic/AtomicBoolean
      14: dup
      15: iconst_0
      16: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      19: putstatic     #7                  // Field slowDownNext:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: new           #56                 // class java/util/concurrent/atomic/AtomicInteger
      25: dup
      26: iconst_0
      27: invokespecial #57                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      30: putstatic     #9                  // Field countOfNext:Ljava/util/concurrent/atomic/AtomicInteger;
      33: new           #58                 // class java/util/concurrent/atomic/AtomicReference
      36: dup
      37: new           #25                 // class java/util/concurrent/CountDownLatch
      40: dup
      41: iconst_0
      42: invokespecial #59                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      45: invokespecial #60                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      48: putstatic     #50                 // Field primaryCdl:Ljava/util/concurrent/atomic/AtomicReference;
      51: new           #58                 // class java/util/concurrent/atomic/AtomicReference
      54: dup
      55: new           #25                 // class java/util/concurrent/CountDownLatch
      58: dup
      59: iconst_0
      60: invokespecial #59                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      63: invokespecial #60                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      66: putstatic     #51                 // Field secondaryCdl:Ljava/util/concurrent/atomic/AtomicReference;
      69: return
}
