Compiled from "ReplicationSourceDummy.java"
public class org.apache.hadoop.hbase.replication.ReplicationSourceDummy implements org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceInterface {
  public org.apache.hadoop.hbase.replication.ReplicationSourceDummy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field startup:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: return

  public void init(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager, org.apache.hadoop.hbase.replication.ReplicationQueueStorage, org.apache.hadoop.hbase.replication.ReplicationPeer, org.apache.hadoop.hbase.Server, java.lang.String, java.util.UUID, org.apache.hadoop.hbase.replication.regionserver.WALFileLengthProvider, org.apache.hadoop.hbase.replication.regionserver.MetricsSource) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #5                  // Field manager:Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
       5: aload_0
       6: aload         7
       8: putfield      #6                  // Field peerClusterId:Ljava/lang/String;
      11: aload_0
      12: aload         10
      14: putfield      #7                  // Field metrics:Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
      17: aload_0
      18: aload         9
      20: putfield      #8                  // Field walFileLengthProvider:Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;
      23: aload_0
      24: aload         5
      26: putfield      #9                  // Field replicationPeer:Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
      29: return

  public void enqueueLog(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field currentPath:Lorg/apache/hadoop/fs/Path;
       5: aload_0
       6: getfield      #7                  // Field metrics:Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
       9: invokevirtual #11                 // Method org/apache/hadoop/hbase/replication/regionserver/MetricsSource.incrSizeOfLogQueue:()V
      12: return

  public org.apache.hadoop.fs.Path getCurrentPath();
    Code:
       0: aload_0
       1: getfield      #10                 // Field currentPath:Lorg/apache/hadoop/fs/Path;
       4: areturn

  public void startup();
    Code:
       0: aload_0
       1: getfield      #4                  // Field startup:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isStartup();
    Code:
       0: aload_0
       1: getfield      #4                  // Field startup:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void terminate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #14                 // Method terminate:(Ljava/lang/String;Ljava/lang/Exception;)V
       6: return

  public void terminate(java.lang.String, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metrics:Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
       4: invokevirtual #15                 // Method org/apache/hadoop/hbase/replication/regionserver/MetricsSource.clear:()V
       7: return

  public java.lang.String getQueueId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field peerClusterId:Ljava/lang/String;
       4: areturn

  public java.lang.String getPeerId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field peerClusterId:Ljava/lang/String;
       4: ldc           #16                 // String -
       6: iconst_2
       7: invokevirtual #17                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
      10: astore_1
      11: aload_1
      12: arraylength
      13: iconst_1
      14: if_icmpeq     23
      17: aload_1
      18: iconst_0
      19: aaload
      20: goto          27
      23: aload_0
      24: getfield      #6                  // Field peerClusterId:Ljava/lang/String;
      27: areturn

  public java.lang.String getStats();
    Code:
       0: ldc           #18                 // String
       2: areturn

  public void addHFileRefs(org.apache.hadoop.hbase.TableName, byte[], java.util.List<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path>>) throws org.apache.hadoop.hbase.replication.ReplicationException;
    Code:
       0: return

  public boolean isPeerEnabled();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSourceActive();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.hadoop.hbase.replication.regionserver.MetricsSource getSourceMetrics();
    Code:
       0: aload_0
       1: getfield      #7                  // Field metrics:Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
       4: areturn

  public org.apache.hadoop.hbase.replication.ReplicationEndpoint getReplicationEndpoint();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager getSourceManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field manager:Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
       4: areturn

  public void tryThrottle(int) throws java.lang.InterruptedException;
    Code:
       0: return

  public void postShipEdits(java.util.List<org.apache.hadoop.hbase.wal.WAL$Entry>, int);
    Code:
       0: return

  public org.apache.hadoop.hbase.replication.regionserver.WALFileLengthProvider getWALFileLengthProvider();
    Code:
       0: aload_0
       1: getfield      #8                  // Field walFileLengthProvider:Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;
       4: areturn

  public org.apache.hadoop.hbase.ServerName getServerWALsBelongTo();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeer getPeer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field replicationPeer:Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
       4: areturn
}
