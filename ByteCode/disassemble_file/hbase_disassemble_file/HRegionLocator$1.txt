Compiled from "HRegionLocator.java"
class org.apache.hadoop.hbase.client.HRegionLocator$1 extends org.apache.hadoop.hbase.MetaTableAccessor$TableVisitorBase {
  final java.util.List val$regions;

  final org.apache.hadoop.hbase.client.HRegionLocator this$0;

  org.apache.hadoop.hbase.client.HRegionLocator$1(org.apache.hadoop.hbase.client.HRegionLocator, org.apache.hadoop.hbase.TableName, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HRegionLocator;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$regions:Ljava/util/List;
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method org/apache/hadoop/hbase/MetaTableAccessor$TableVisitorBase."<init>":(Lorg/apache/hadoop/hbase/TableName;)V
      15: return

  public boolean visitInternal(org.apache.hadoop.hbase.client.Result) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/apache/hadoop/hbase/MetaTableAccessor.getRegionLocations:(Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/RegionLocations;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: getfield      #2                  // Field val$regions:Ljava/util/List;
      15: aload_2
      16: invokeinterface #5,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: iconst_1
      23: ireturn
}
