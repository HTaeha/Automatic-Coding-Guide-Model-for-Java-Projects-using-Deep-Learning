Compiled from "ClassSize.java"
public class org.apache.hadoop.hbase.util.ClassSize {
  public static final int ARRAY;

  public static final int ARRAYLIST;

  public static final int LINKEDLIST;

  public static final int LINKEDLIST_ENTRY;

  public static final int BYTE_BUFFER;

  public static final int INTEGER;

  public static final int MAP_ENTRY;

  public static final int OBJECT;

  public static final int REFERENCE;

  public static final int STRING;

  public static final int TREEMAP;

  public static final int CONCURRENT_HASHMAP;

  public static final int CONCURRENT_HASHMAP_ENTRY;

  public static final int CONCURRENT_HASHMAP_SEGMENT;

  public static final int CONCURRENT_SKIPLISTMAP;

  public static final int CONCURRENT_SKIPLISTMAP_ENTRY;

  public static final int CELL_FLAT_MAP;

  public static final int CELL_CHUNK_MAP;

  public static final int CELL_CHUNK_MAP_ENTRY;

  public static final int CELL_ARRAY_MAP;

  public static final int CELL_ARRAY_MAP_ENTRY;

  public static final int REENTRANT_LOCK;

  public static final int ATOMIC_LONG;

  public static final int ATOMIC_INTEGER;

  public static final int ATOMIC_BOOLEAN;

  public static final int ATOMIC_REFERENCE;

  public static final int COPYONWRITE_ARRAYSET;

  public static final int COPYONWRITE_ARRAYLIST;

  public static final int TIMERANGE;

  public static final int SYNC_TIMERANGE_TRACKER;

  public static final int NON_SYNC_TIMERANGE_TRACKER;

  public static final int CELL_SET;

  public static final int STORE_SERVICES;

  public org.apache.hadoop.hbase.util.ClassSize();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean useUnsafeLayout();
    Code:
       0: getstatic     #14                 // Field USE_UNSAFE_LAYOUT:Z
       3: ireturn

  public static long estimateBase(java.lang.Class, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #62                 // Method getSizeCoefficients:(Ljava/lang/Class;Z)[I
       5: iload_1
       6: invokestatic  #63                 // Method estimateBaseFromCoefficients:([IZ)J
       9: lreturn

  public static int align(int);
    Code:
       0: iload_0
       1: i2l
       2: invokestatic  #52                 // Method align:(J)J
       5: l2i
       6: ireturn

  public static long align(long);
    Code:
       0: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
       3: lload_0
       4: invokevirtual #65                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.align:(J)J
       7: lreturn

  public static boolean is32BitJVM();
    Code:
       0: ldc           #66                 // String sun.arch.data.model
       2: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: ifnull        23
      10: aload_0
      11: ldc           #67                 // String 32
      13: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public static long sizeOf(byte[]);
    Code:
       0: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
       3: aload_0
       4: arraylength
       5: invokevirtual #68                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.sizeOfByteArray:(I)J
       8: lreturn

  public static long sizeOfByteArray(int);
    Code:
       0: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
       3: iload_0
       4: invokevirtual #68                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.sizeOfByteArray:(I)J
       7: lreturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #69                 // class org/apache/hadoop/hbase/util/ClassSize
       2: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: invokestatic  #71                 // Method getMemoryLayout:()Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      11: putstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      14: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      17: instanceof    #9                  // class org/apache/hadoop/hbase/util/ClassSize$UnsafeLayout
      20: putstatic     #14                 // Field USE_UNSAFE_LAYOUT:Z
      23: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      26: invokevirtual #72                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.oopSize:()I
      29: putstatic     #51                 // Field REFERENCE:I
      32: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      35: invokevirtual #73                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.headerSize:()I
      38: putstatic     #50                 // Field OBJECT:I
      41: getstatic     #64                 // Field memoryLayout:Lorg/apache/hadoop/hbase/util/ClassSize$MemoryLayout;
      44: invokevirtual #74                 // Method org/apache/hadoop/hbase/util/ClassSize$MemoryLayout.arrayHeaderSize:()I
      47: putstatic     #53                 // Field ARRAY:I
      50: getstatic     #50                 // Field OBJECT:I
      53: getstatic     #51                 // Field REFERENCE:I
      56: iadd
      57: bipush        8
      59: iadd
      60: invokestatic  #54                 // Method align:(I)I
      63: getstatic     #53                 // Field ARRAY:I
      66: invokestatic  #54                 // Method align:(I)I
      69: iadd
      70: putstatic     #76                 // Field ARRAYLIST:I
      73: getstatic     #50                 // Field OBJECT:I
      76: bipush        8
      78: iadd
      79: iconst_2
      80: getstatic     #51                 // Field REFERENCE:I
      83: imul
      84: iadd
      85: invokestatic  #54                 // Method align:(I)I
      88: putstatic     #77                 // Field LINKEDLIST:I
      91: getstatic     #50                 // Field OBJECT:I
      94: iconst_2
      95: getstatic     #51                 // Field REFERENCE:I
      98: imul
      99: iadd
     100: invokestatic  #54                 // Method align:(I)I
     103: putstatic     #78                 // Field LINKEDLIST_ENTRY:I
     106: getstatic     #50                 // Field OBJECT:I
     109: getstatic     #51                 // Field REFERENCE:I
     112: iadd
     113: bipush        20
     115: iadd
     116: iconst_3
     117: iadd
     118: bipush        8
     120: iadd
     121: invokestatic  #54                 // Method align:(I)I
     124: getstatic     #53                 // Field ARRAY:I
     127: invokestatic  #54                 // Method align:(I)I
     130: iadd
     131: putstatic     #79                 // Field BYTE_BUFFER:I
     134: getstatic     #50                 // Field OBJECT:I
     137: iconst_4
     138: iadd
     139: invokestatic  #54                 // Method align:(I)I
     142: putstatic     #80                 // Field INTEGER:I
     145: getstatic     #50                 // Field OBJECT:I
     148: iconst_5
     149: getstatic     #51                 // Field REFERENCE:I
     152: imul
     153: iadd
     154: iconst_1
     155: iadd
     156: invokestatic  #54                 // Method align:(I)I
     159: putstatic     #81                 // Field MAP_ENTRY:I
     162: getstatic     #50                 // Field OBJECT:I
     165: bipush        8
     167: iadd
     168: bipush        7
     170: getstatic     #51                 // Field REFERENCE:I
     173: imul
     174: iadd
     175: invokestatic  #54                 // Method align:(I)I
     178: putstatic     #82                 // Field TREEMAP:I
     181: ldc           #83                 // class java/lang/String
     183: iconst_0
     184: invokestatic  #84                 // Method estimateBase:(Ljava/lang/Class;Z)J
     187: l2i
     188: putstatic     #85                 // Field STRING:I
     191: ldc           #86                 // class java/util/concurrent/ConcurrentHashMap
     193: iconst_0
     194: invokestatic  #84                 // Method estimateBase:(Ljava/lang/Class;Z)J
     197: l2i
     198: putstatic     #87                 // Field CONCURRENT_HASHMAP:I
     201: getstatic     #51                 // Field REFERENCE:I
     204: getstatic     #50                 // Field OBJECT:I
     207: iadd
     208: iconst_3
     209: getstatic     #51                 // Field REFERENCE:I
     212: imul
     213: iadd
     214: bipush        8
     216: iadd
     217: invokestatic  #54                 // Method align:(I)I
     220: putstatic     #88                 // Field CONCURRENT_HASHMAP_ENTRY:I
     223: getstatic     #51                 // Field REFERENCE:I
     226: getstatic     #50                 // Field OBJECT:I
     229: iadd
     230: bipush        12
     232: iadd
     233: iconst_4
     234: iadd
     235: getstatic     #53                 // Field ARRAY:I
     238: iadd
     239: invokestatic  #54                 // Method align:(I)I
     242: putstatic     #89                 // Field CONCURRENT_HASHMAP_SEGMENT:I
     245: ldc           #90                 // class java/util/concurrent/ConcurrentSkipListMap
     247: iconst_0
     248: invokestatic  #84                 // Method estimateBase:(Ljava/lang/Class;Z)J
     251: l2i
     252: putstatic     #91                 // Field CONCURRENT_SKIPLISTMAP:I
     255: getstatic     #50                 // Field OBJECT:I
     258: bipush        8
     260: iadd
     261: iconst_1
     262: iadd
     263: getstatic     #51                 // Field REFERENCE:I
     266: iadd
     267: putstatic     #92                 // Field CELL_FLAT_MAP:I
     270: getstatic     #92                 // Field CELL_FLAT_MAP:I
     273: getstatic     #51                 // Field REFERENCE:I
     276: iadd
     277: getstatic     #53                 // Field ARRAY:I
     280: iadd
     281: invokestatic  #54                 // Method align:(I)I
     284: putstatic     #93                 // Field CELL_ARRAY_MAP:I
     287: getstatic     #92                 // Field CELL_FLAT_MAP:I
     290: getstatic     #51                 // Field REFERENCE:I
     293: iadd
     294: getstatic     #53                 // Field ARRAY:I
     297: iadd
     298: invokestatic  #54                 // Method align:(I)I
     301: putstatic     #94                 // Field CELL_CHUNK_MAP:I
     304: getstatic     #50                 // Field OBJECT:I
     307: iconst_3
     308: getstatic     #51                 // Field REFERENCE:I
     311: imul
     312: iadd
     313: invokestatic  #54                 // Method align:(I)I
     316: getstatic     #50                 // Field OBJECT:I
     319: iconst_3
     320: getstatic     #51                 // Field REFERENCE:I
     323: imul
     324: iadd
     325: iconst_2
     326: idiv
     327: invokestatic  #54                 // Method align:(I)I
     330: iadd
     331: invokestatic  #54                 // Method align:(I)I
     334: putstatic     #95                 // Field CONCURRENT_SKIPLISTMAP_ENTRY:I
     337: getstatic     #51                 // Field REFERENCE:I
     340: invokestatic  #54                 // Method align:(I)I
     343: putstatic     #96                 // Field CELL_ARRAY_MAP_ENTRY:I
     346: bipush        20
     348: putstatic     #97                 // Field CELL_CHUNK_MAP_ENTRY:I
     351: getstatic     #50                 // Field OBJECT:I
     354: iconst_3
     355: getstatic     #51                 // Field REFERENCE:I
     358: imul
     359: iadd
     360: invokestatic  #54                 // Method align:(I)I
     363: putstatic     #98                 // Field REENTRANT_LOCK:I
     366: getstatic     #50                 // Field OBJECT:I
     369: bipush        8
     371: iadd
     372: invokestatic  #54                 // Method align:(I)I
     375: putstatic     #99                 // Field ATOMIC_LONG:I
     378: getstatic     #50                 // Field OBJECT:I
     381: iconst_4
     382: iadd
     383: invokestatic  #54                 // Method align:(I)I
     386: putstatic     #100                // Field ATOMIC_INTEGER:I
     389: getstatic     #50                 // Field OBJECT:I
     392: iconst_1
     393: iadd
     394: invokestatic  #54                 // Method align:(I)I
     397: putstatic     #101                // Field ATOMIC_BOOLEAN:I
     400: getstatic     #50                 // Field OBJECT:I
     403: getstatic     #51                 // Field REFERENCE:I
     406: iadd
     407: invokestatic  #54                 // Method align:(I)I
     410: putstatic     #102                // Field ATOMIC_REFERENCE:I
     413: getstatic     #50                 // Field OBJECT:I
     416: getstatic     #51                 // Field REFERENCE:I
     419: iadd
     420: invokestatic  #54                 // Method align:(I)I
     423: putstatic     #103                // Field COPYONWRITE_ARRAYSET:I
     426: getstatic     #50                 // Field OBJECT:I
     429: iconst_2
     430: getstatic     #51                 // Field REFERENCE:I
     433: imul
     434: iadd
     435: getstatic     #53                 // Field ARRAY:I
     438: iadd
     439: invokestatic  #54                 // Method align:(I)I
     442: putstatic     #104                // Field COPYONWRITE_ARRAYLIST:I
     445: getstatic     #50                 // Field OBJECT:I
     448: bipush        16
     450: iadd
     451: iconst_1
     452: iadd
     453: invokestatic  #54                 // Method align:(I)I
     456: putstatic     #105                // Field TIMERANGE:I
     459: getstatic     #50                 // Field OBJECT:I
     462: iconst_2
     463: getstatic     #51                 // Field REFERENCE:I
     466: imul
     467: iadd
     468: invokestatic  #54                 // Method align:(I)I
     471: putstatic     #106                // Field SYNC_TIMERANGE_TRACKER:I
     474: getstatic     #50                 // Field OBJECT:I
     477: bipush        16
     479: iadd
     480: invokestatic  #54                 // Method align:(I)I
     483: putstatic     #107                // Field NON_SYNC_TIMERANGE_TRACKER:I
     486: getstatic     #50                 // Field OBJECT:I
     489: getstatic     #51                 // Field REFERENCE:I
     492: iadd
     493: iconst_4
     494: iadd
     495: invokestatic  #54                 // Method align:(I)I
     498: putstatic     #108                // Field CELL_SET:I
     501: getstatic     #50                 // Field OBJECT:I
     504: getstatic     #51                 // Field REFERENCE:I
     507: iadd
     508: getstatic     #99                 // Field ATOMIC_LONG:I
     511: iadd
     512: invokestatic  #54                 // Method align:(I)I
     515: putstatic     #109                // Field STORE_SERVICES:I
     518: return
}
