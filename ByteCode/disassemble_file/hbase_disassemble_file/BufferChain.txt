Compiled from "BufferChain.java"
class org.apache.hadoop.hbase.ipc.BufferChain {
  static final boolean $assertionsDisabled;

  org.apache.hadoop.hbase.ipc.BufferChain(java.nio.ByteBuffer...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field remaining:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field bufferOffset:I
      14: aload_1
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     54
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload_0
      35: dup
      36: getfield      #2                  // Field remaining:I
      39: aload         5
      41: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      44: iadd
      45: putfield      #2                  // Field remaining:I
      48: iinc          4, 1
      51: goto          22
      54: aload_0
      55: aload_0
      56: getfield      #2                  // Field remaining:I
      59: putfield      #5                  // Field size:I
      62: aload_0
      63: aload_1
      64: putfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
      67: return

  byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method hasRemaining:()Z
       4: ifne          15
       7: new           #8                  // class java/lang/IllegalAccessError
      10: dup
      11: invokespecial #9                  // Method java/lang/IllegalAccessError."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #2                  // Field remaining:I
      19: newarray       byte
      21: astore_1
      22: iconst_0
      23: istore_2
      24: aload_0
      25: getfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
      28: astore_3
      29: aload_3
      30: arraylength
      31: istore        4
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload         4
      40: if_icmpge     77
      43: aload_3
      44: iload         5
      46: aaload
      47: astore        6
      49: aload         6
      51: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      54: istore        7
      56: aload         6
      58: aload_1
      59: iload_2
      60: iload         7
      62: invokevirtual #10                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      65: pop
      66: iload_2
      67: iload         7
      69: iadd
      70: istore_2
      71: iinc          5, 1
      74: goto          36
      77: aload_1
      78: areturn

  boolean hasRemaining();
    Code:
       0: aload_0
       1: getfield      #2                  // Field remaining:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  long write(java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore_3
       2: aconst_null
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iconst_m1
       9: istore        6
      11: iload_3
      12: ifle          113
      15: aload_0
      16: getfield      #3                  // Field bufferOffset:I
      19: iload         5
      21: iadd
      22: aload_0
      23: getfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
      26: arraylength
      27: if_icmpge     113
      30: aload_0
      31: getfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
      34: aload_0
      35: getfield      #3                  // Field bufferOffset:I
      38: iload         5
      40: iadd
      41: aaload
      42: astore        4
      44: aload         4
      46: invokevirtual #11                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      49: ifne          65
      52: aload_0
      53: dup
      54: getfield      #3                  // Field bufferOffset:I
      57: iconst_1
      58: iadd
      59: putfield      #3                  // Field bufferOffset:I
      62: goto          11
      65: iinc          5, 1
      68: aload         4
      70: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
      73: iload_3
      74: if_icmple     102
      77: aload         4
      79: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      82: istore        6
      84: aload         4
      86: aload         4
      88: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
      91: iload_3
      92: iadd
      93: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      96: pop
      97: iconst_0
      98: istore_3
      99: goto          113
     102: iload_3
     103: aload         4
     105: invokevirtual #4                  // Method java/nio/ByteBuffer.remaining:()I
     108: isub
     109: istore_3
     110: goto          11
     113: getstatic     #15                 // Field $assertionsDisabled:Z
     116: ifne          132
     119: aload         4
     121: ifnonnull     132
     124: new           #16                 // class java/lang/AssertionError
     127: dup
     128: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
     131: athrow
     132: iload_3
     133: iload_2
     134: if_icmpne     160
     137: getstatic     #15                 // Field $assertionsDisabled:Z
     140: ifne          158
     143: aload_0
     144: invokevirtual #7                  // Method hasRemaining:()Z
     147: ifeq          158
     150: new           #16                 // class java/lang/AssertionError
     153: dup
     154: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
     157: athrow
     158: lconst_0
     159: lreturn
     160: aload_1
     161: aload_0
     162: getfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
     165: aload_0
     166: getfield      #3                  // Field bufferOffset:I
     169: iload         5
     171: invokeinterface #18,  4           // InterfaceMethod java/nio/channels/GatheringByteChannel.write:([Ljava/nio/ByteBuffer;II)J
     176: lstore        7
     178: lload         7
     180: lconst_0
     181: lcmp
     182: ifle          198
     185: aload_0
     186: aload_0
     187: getfield      #2                  // Field remaining:I
     190: i2l
     191: lload         7
     193: lsub
     194: l2i
     195: putfield      #2                  // Field remaining:I
     198: lload         7
     200: lstore        9
     202: iload         6
     204: iflt          215
     207: aload         4
     209: iload         6
     211: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     214: pop
     215: lload         9
     217: lreturn
     218: astore        11
     220: iload         6
     222: iflt          233
     225: aload         4
     227: iload         6
     229: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     232: pop
     233: aload         11
     235: athrow
    Exception table:
       from    to  target type
         160   202   218   any
         218   220   218   any

  int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: ireturn

  java.nio.ByteBuffer[] getBuffers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffers:[Ljava/nio/ByteBuffer;
       4: areturn

  static {};
    Code:
       0: ldc           #19                 // class org/apache/hadoop/hbase/ipc/BufferChain
       2: invokevirtual #20                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #15                 // Field $assertionsDisabled:Z
      16: return
}
