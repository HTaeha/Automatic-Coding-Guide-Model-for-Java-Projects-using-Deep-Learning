Compiled from "AsyncMetaRegionLocator.java"
class org.apache.hadoop.hbase.client.AsyncMetaRegionLocator {
  org.apache.hadoop.hbase.client.AsyncMetaRegionLocator(org.apache.hadoop.hbase.client.AsyncRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field metaRegionLocations:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #5                  // Field metaRelocateFuture:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field registry:Lorg/apache/hadoop/hbase/client/AsyncRegistry;
      31: return

  java.util.concurrent.CompletableFuture<org.apache.hadoop.hbase.RegionLocations> getRegionLocations(int, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaRegionLocations:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #5                  // Field metaRelocateFuture:Ljava/util/concurrent/atomic/AtomicReference;
       8: iload_2
       9: aload_0
      10: getfield      #6                  // Field registry:Lorg/apache/hadoop/hbase/client/AsyncRegistry;
      13: dup
      14: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: pop
      18: invokedynamic #8,  0              // InvokeDynamic #0:get:(Lorg/apache/hadoop/hbase/client/AsyncRegistry;)Ljava/util/function/Supplier;
      23: iload_1
      24: invokedynamic #9,  0              // InvokeDynamic #1:test:(I)Ljava/util/function/Predicate;
      29: ldc           #10                 // String meta region location
      31: invokestatic  #11                 // Method org/apache/hadoop/hbase/client/ConnectionUtils.getOrFetch:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;ZLjava/util/function/Supplier;Ljava/util/function/Predicate;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      34: areturn

  void updateCachedLocationOnError(org.apache.hadoop.hbase.HRegionLocation, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokedynamic #25,  0             // InvokeDynamic #2:apply:(Lorg/apache/hadoop/hbase/client/AsyncMetaRegionLocator;)Ljava/util/function/Function;
       8: aload_0
       9: invokedynamic #26,  0             // InvokeDynamic #3:accept:(Lorg/apache/hadoop/hbase/client/AsyncMetaRegionLocator;)Ljava/util/function/Consumer;
      14: aload_0
      15: invokedynamic #27,  0             // InvokeDynamic #4:accept:(Lorg/apache/hadoop/hbase/client/AsyncMetaRegionLocator;)Ljava/util/function/Consumer;
      20: invokestatic  #28                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      23: invokestatic  #29                 // Method org/apache/hadoop/hbase/client/AsyncRegionLocatorHelper.updateCachedLocationOnError:(Lorg/apache/hadoop/hbase/HRegionLocation;Ljava/lang/Throwable;Ljava/util/function/Function;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/Optional;)V
      26: return

  void clearCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaRegionLocations:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: return

  void clearCache(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: getfield      #4                  // Field metaRegionLocations:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class org/apache/hadoop/hbase/RegionLocations
      10: astore_2
      11: aload_2
      12: ifnonnull     16
      15: return
      16: aload_2
      17: aload_1
      18: invokevirtual #31                 // Method org/apache/hadoop/hbase/RegionLocations.removeByServer:(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/RegionLocations;
      21: astore_3
      22: aload_2
      23: aload_3
      24: if_acmpne     28
      27: return
      28: aload_3
      29: invokevirtual #32                 // Method org/apache/hadoop/hbase/RegionLocations.isEmpty:()Z
      32: ifeq          37
      35: aconst_null
      36: astore_3
      37: aload_0
      38: getfield      #4                  // Field metaRegionLocations:Ljava/util/concurrent/atomic/AtomicReference;
      41: aload_2
      42: aload_3
      43: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          50
      49: return
      50: goto          0
}
