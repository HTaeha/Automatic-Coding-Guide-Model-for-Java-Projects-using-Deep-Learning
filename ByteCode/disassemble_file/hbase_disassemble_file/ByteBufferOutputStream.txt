Compiled from "ByteBufferOutputStream.java"
public class org.apache.hadoop.hbase.io.ByteBufferOutputStream extends java.io.OutputStream implements org.apache.hadoop.hbase.io.ByteBufferWriter {
  protected java.nio.ByteBuffer curBuf;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.hbase.io.ByteBufferOutputStream();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: return

  public org.apache.hadoop.hbase.io.ByteBufferOutputStream(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #4                  // Method "<init>":(IZ)V
       6: return

  public org.apache.hadoop.hbase.io.ByteBufferOutputStream(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #5                  // Method allocate:(IZ)Ljava/nio/ByteBuffer;
       6: invokespecial #6                  // Method "<init>":(Ljava/nio/ByteBuffer;)V
       9: return

  public org.apache.hadoop.hbase.io.ByteBufferOutputStream(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: getstatic     #7                  // Field $assertionsDisabled:Z
      12: ifne          33
      15: aload_1
      16: invokevirtual #8                  // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      19: getstatic     #9                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      22: if_acmpeq     33
      25: new           #10                 // class java/lang/AssertionError
      28: dup
      29: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: aload_0
      34: aload_1
      35: putfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      38: aload_0
      39: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      42: invokevirtual #12                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      45: pop
      46: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
       7: ireturn

  public java.nio.ByteBuffer getByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      12: areturn

  protected void checkSizeAndGrow(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
       7: i2l
       8: iload_1
       9: i2l
      10: ladd
      11: lstore_2
      12: lload_2
      13: aload_0
      14: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      17: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:()I
      20: i2l
      21: lcmp
      22: ifle          107
      25: lload_2
      26: ldc2_w        #22                 // long 2147483639l
      29: lcmp
      30: ifle          41
      33: new           #16                 // class java/nio/BufferOverflowException
      36: dup
      37: invokespecial #17                 // Method java/nio/BufferOverflowException."<init>":()V
      40: athrow
      41: aload_0
      42: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      45: invokevirtual #24                 // Method java/nio/ByteBuffer.capacity:()I
      48: i2l
      49: ldc2_w        #25                 // long 2l
      52: lmul
      53: ldc2_w        #22                 // long 2147483639l
      56: invokestatic  #27                 // Method java/lang/Math.min:(JJ)J
      59: lstore        4
      61: lload         4
      63: lload_2
      64: invokestatic  #28                 // Method java/lang/Math.max:(JJ)J
      67: lstore        4
      69: lload         4
      71: l2i
      72: aload_0
      73: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      76: invokevirtual #29                 // Method java/nio/ByteBuffer.isDirect:()Z
      79: invokestatic  #5                  // Method allocate:(IZ)Ljava/nio/ByteBuffer;
      82: astore        6
      84: aload_0
      85: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      88: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      91: pop
      92: aload_0
      93: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      96: aload         6
      98: invokestatic  #30                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromBufferToBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
     101: aload_0
     102: aload         6
     104: putfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
     107: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #32                 // Method checkSizeAndGrow:(I)V
       5: aload_0
       6: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: iload_1
      10: i2b
      11: invokevirtual #33                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      14: pop
      15: return

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: invokevirtual #35                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      12: astore_3
      13: aload_3
      14: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      17: pop
      18: aload_2
      19: aload_3
      20: invokeinterface #36,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      25: pop
      26: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #37                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #32                 // Method checkSizeAndGrow:(I)V
       5: aload_0
       6: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokestatic  #38                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromArrayToBuffer:(Ljava/nio/ByteBuffer;[BII)V
      15: return

  public void write(java.nio.ByteBuffer, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #32                 // Method checkSizeAndGrow:(I)V
       5: aload_1
       6: aload_0
       7: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
      10: iload_2
      11: iload_3
      12: invokestatic  #39                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromBufferToBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)V
      15: return

  public void writeInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #32                 // Method checkSizeAndGrow:(I)V
       5: aload_0
       6: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       9: iload_1
      10: invokestatic  #40                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.putInt:(Ljava/nio/ByteBuffer;I)V
      13: return

  public void flush() throws java.io.IOException;
    Code:
       0: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public byte[] toByteArray(int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field curBuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #35                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_3
       9: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      12: pop
      13: iload_2
      14: newarray       byte
      16: astore        4
      18: aload_3
      19: iload_1
      20: invokevirtual #41                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: aload_3
      25: aload         4
      27: iconst_0
      28: iload_2
      29: invokevirtual #42                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      32: pop
      33: aload         4
      35: areturn

  static {};
    Code:
       0: ldc           #14                 // class org/apache/hadoop/hbase/io/ByteBufferOutputStream
       2: invokevirtual #43                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
