Compiled from "TestZKPermissionWatcher.java"
final class org.apache.hadoop.hbase.security.access.TestZKPermissionWatcher$1 implements org.apache.hadoop.hbase.Abortable {
  org.apache.hadoop.hbase.security.access.TestZKPermissionWatcher$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field abort:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: return

  public void abort(java.lang.String, java.lang.Throwable);
    Code:
       0: invokestatic  #5                  // Method org/apache/hadoop/hbase/security/access/TestZKPermissionWatcher.access$000:()Lorg/slf4j/Logger;
       3: aload_1
       4: aload_2
       5: invokeinterface #6,  3            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      10: aload_0
      11: getfield      #4                  // Field abort:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_1
      15: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      18: return

  public boolean isAborted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field abort:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn
}
