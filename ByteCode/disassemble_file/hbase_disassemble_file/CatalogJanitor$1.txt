Compiled from "CatalogJanitor.java"
class org.apache.hadoop.hbase.master.CatalogJanitor$1 implements org.apache.hadoop.hbase.MetaTableAccessor$Visitor {
  final java.util.concurrent.atomic.AtomicInteger val$count;

  final boolean val$isTableSpecified;

  final org.apache.hadoop.hbase.TableName val$tableName;

  final java.util.Map val$splitParents;

  final java.util.Map val$mergedRegions;

  final org.apache.hadoop.hbase.master.CatalogJanitor this$0;

  org.apache.hadoop.hbase.master.CatalogJanitor$1(org.apache.hadoop.hbase.master.CatalogJanitor, java.util.concurrent.atomic.AtomicInteger, boolean, org.apache.hadoop.hbase.TableName, java.util.Map, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/master/CatalogJanitor;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$isTableSpecified:Z
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$tableName:Lorg/apache/hadoop/hbase/TableName;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$splitParents:Ljava/util/Map;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$mergedRegions:Ljava/util/Map;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public boolean visit(org.apache.hadoop.hbase.client.Result) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #8                  // Method org/apache/hadoop/hbase/client/Result.isEmpty:()Z
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #2                  // Field val$count:Ljava/util/concurrent/atomic/AtomicInteger;
      17: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      20: pop
      21: aload_1
      22: invokestatic  #10                 // Method org/apache/hadoop/hbase/MetaTableAccessor.getRegionInfo:(Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/RegionInfo;
      25: astore_2
      26: aload_2
      27: ifnonnull     32
      30: iconst_1
      31: ireturn
      32: aload_0
      33: getfield      #3                  // Field val$isTableSpecified:Z
      36: ifeq          57
      39: aload_2
      40: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getTable:()Lorg/apache/hadoop/hbase/TableName;
      45: aload_0
      46: getfield      #4                  // Field val$tableName:Lorg/apache/hadoop/hbase/TableName;
      49: invokevirtual #12                 // Method org/apache/hadoop/hbase/TableName.compareTo:(Lorg/apache/hadoop/hbase/TableName;)I
      52: ifle          57
      55: iconst_0
      56: ireturn
      57: invokestatic  #13                 // Method org/apache/hadoop/hbase/master/CatalogJanitor.access$000:()Lorg/slf4j/Logger;
      60: invokeinterface #14,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      65: ifeq          109
      68: invokestatic  #13                 // Method org/apache/hadoop/hbase/master/CatalogJanitor.access$000:()Lorg/slf4j/Logger;
      71: new           #15                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #17                 // String
      80: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc           #20                 // String  IS-SPLIT_PARENT=
      89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_2
      93: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.isSplitParent:()Z
      98: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     101: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #24,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     109: aload_2
     110: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.isSplitParent:()Z
     115: ifeq          130
     118: aload_0
     119: getfield      #5                  // Field val$splitParents:Ljava/util/Map;
     122: aload_2
     123: aload_1
     124: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_1
     131: getstatic     #26                 // Field org/apache/hadoop/hbase/HConstants.CATALOG_FAMILY:[B
     134: getstatic     #27                 // Field org/apache/hadoop/hbase/HConstants.MERGEA_QUALIFIER:[B
     137: invokevirtual #28                 // Method org/apache/hadoop/hbase/client/Result.getValue:([B[B)[B
     140: ifnull        155
     143: aload_0
     144: getfield      #6                  // Field val$mergedRegions:Ljava/util/Map;
     147: aload_2
     148: aload_1
     149: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: iconst_1
     156: ireturn
}
