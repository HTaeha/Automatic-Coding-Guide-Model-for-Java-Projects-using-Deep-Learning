Compiled from "ClusterConnection.java"
public interface org.apache.hadoop.hbase.client.ClusterConnection extends org.apache.hadoop.hbase.client.Connection {
  public static final java.lang.String HBASE_CLIENT_CONNECTION_IMPL;

  public abstract boolean isMasterRunning() throws org.apache.hadoop.hbase.MasterNotRunningException, org.apache.hadoop.hbase.ZooKeeperConnectionException;

  public abstract boolean isTableAvailable(org.apache.hadoop.hbase.TableName, byte[][]) throws java.io.IOException;

  public abstract boolean isTableEnabled(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract boolean isTableDisabled(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.TableState getTableState(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.HRegionLocation locateRegion(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public void clearRegionCache();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod clearRegionLocationCache:()V
       6: return

  public abstract void cacheLocation(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.RegionLocations);

  public abstract void clearRegionCache(org.apache.hadoop.hbase.TableName);

  public abstract void deleteCachedRegionLocation(org.apache.hadoop.hbase.HRegionLocation);

  public abstract org.apache.hadoop.hbase.HRegionLocation relocateRegion(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.RegionLocations relocateRegion(org.apache.hadoop.hbase.TableName, byte[], int) throws java.io.IOException;

  public abstract void updateCachedLocations(org.apache.hadoop.hbase.TableName, byte[], byte[], java.lang.Object, org.apache.hadoop.hbase.ServerName);

  public abstract org.apache.hadoop.hbase.HRegionLocation locateRegion(byte[]) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.HRegionLocation> locateRegions(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.HRegionLocation> locateRegions(org.apache.hadoop.hbase.TableName, boolean, boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.RegionLocations locateRegion(org.apache.hadoop.hbase.TableName, byte[], boolean, boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.RegionLocations locateRegion(org.apache.hadoop.hbase.TableName, byte[], boolean, boolean, int) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.MasterKeepAliveConnection getMaster() throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getAdminForMaster() throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getAdmin(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ClientService$BlockingInterface getClient(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.HRegionLocation getRegionLocation(org.apache.hadoop.hbase.TableName, byte[], boolean) throws java.io.IOException;

  public abstract void clearCaches(org.apache.hadoop.hbase.ServerName);

  public abstract org.apache.hadoop.hbase.client.NonceGenerator getNonceGenerator();

  public abstract org.apache.hadoop.hbase.client.AsyncProcess getAsyncProcess();

  public abstract org.apache.hadoop.hbase.client.RpcRetryingCallerFactory getNewRpcRetryingCallerFactory(org.apache.hadoop.conf.Configuration);

  public abstract org.apache.hadoop.hbase.client.RpcRetryingCallerFactory getRpcRetryingCallerFactory();

  public abstract org.apache.hadoop.hbase.ipc.RpcControllerFactory getRpcControllerFactory();

  public abstract org.apache.hadoop.hbase.client.ConnectionConfiguration getConnectionConfiguration();

  public abstract org.apache.hadoop.hbase.client.ServerStatisticTracker getStatisticsTracker();

  public abstract org.apache.hadoop.hbase.client.backoff.ClientBackoffPolicy getBackoffPolicy();

  public abstract org.apache.hadoop.hbase.client.MetricsConnection getConnectionMetrics();

  public abstract boolean hasCellBlockSupport();

  public abstract int getCurrentNrHRS() throws java.io.IOException;
}
