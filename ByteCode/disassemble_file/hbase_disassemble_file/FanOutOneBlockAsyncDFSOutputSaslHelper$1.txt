Compiled from "FanOutOneBlockAsyncDFSOutputSaslHelper.java"
final class org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputSaslHelper$1 implements org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputSaslHelper$SaslAdaptor {
  final java.lang.reflect.Field val$trustedChannelResolverField;

  final java.lang.reflect.Field val$saslPropsResolverField;

  final java.lang.reflect.Field val$fallbackToSimpleAuthField;

  org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputSaslHelper$1(java.lang.reflect.Field, java.lang.reflect.Field, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$trustedChannelResolverField:Ljava/lang/reflect/Field;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$saslPropsResolverField:Ljava/lang/reflect/Field;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$fallbackToSimpleAuthField:Ljava/lang/reflect/Field;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public org.apache.hadoop.hdfs.protocol.datatransfer.TrustedChannelResolver getTrustedChannelResolver(org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$trustedChannelResolverField:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class org/apache/hadoop/hdfs/protocol/datatransfer/TrustedChannelResolver
      11: areturn
      12: astore_2
      13: new           #8                  // class java/lang/RuntimeException
      16: dup
      17: aload_2
      18: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/IllegalAccessException

  public org.apache.hadoop.security.SaslPropertiesResolver getSaslPropsResolver(org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$saslPropsResolverField:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class org/apache/hadoop/security/SaslPropertiesResolver
      11: areturn
      12: astore_2
      13: new           #8                  // class java/lang/RuntimeException
      16: dup
      17: aload_2
      18: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/IllegalAccessException

  public java.util.concurrent.atomic.AtomicBoolean getFallbackToSimpleAuth(org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient);
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$fallbackToSimpleAuthField:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #11                 // class java/util/concurrent/atomic/AtomicBoolean
      11: areturn
      12: astore_2
      13: new           #8                  // class java/lang/RuntimeException
      16: dup
      17: aload_2
      18: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/IllegalAccessException
}
