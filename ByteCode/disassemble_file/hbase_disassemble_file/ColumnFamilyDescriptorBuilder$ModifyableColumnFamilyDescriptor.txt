Compiled from "ColumnFamilyDescriptorBuilder.java"
public class org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor implements org.apache.hadoop.hbase.client.ColumnFamilyDescriptor, java.lang.Comparable<org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor> {
  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.isLegalColumnFamilyName:([B)[B
       5: invokestatic  #6                  // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$300:()Ljava/util/Map;
       8: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      11: invokespecial #8                  // Method "<init>":([BLjava/util/Map;Ljava/util/Map;)V
      14: return

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor(org.apache.hadoop.hbase.client.ColumnFamilyDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
       7: aload_1
       8: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getValues:()Ljava/util/Map;
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getConfiguration:()Ljava/util/Map;
      19: invokespecial #8                  // Method "<init>":([BLjava/util/Map;Ljava/util/Map;)V
      22: return

  public byte[] getName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:[B
       4: invokestatic  #19                 // Method org/apache/hadoop/hbase/util/Bytes.copy:([B)[B
       7: areturn

  public java.lang.String getNameAsString();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:[B
       4: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
       7: areturn

  public org.apache.hadoop.hbase.util.Bytes getValue(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class org/apache/hadoop/hbase/util/Bytes
      13: areturn

  public byte[] getValue(byte[]);
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: new           #22                 // class org/apache/hadoop/hbase/util/Bytes
       7: dup
       8: aload_1
       9: invokespecial #23                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #22                 // class org/apache/hadoop/hbase/util/Bytes
      20: astore_2
      21: aload_2
      22: ifnonnull     29
      25: aconst_null
      26: goto          33
      29: aload_2
      30: invokevirtual #24                 // Method org/apache/hadoop/hbase/util/Bytes.get:()[B
      33: areturn

  public java.util.Map<org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes> getValues();
    Code:
       0: aload_0
       1: getfield      #15                 // Field values:Ljava/util/Map;
       4: invokestatic  #25                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setValue(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       5: invokestatic  #27                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
       8: aload_2
       9: invokestatic  #26                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      12: invokestatic  #27                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      15: invokespecial #2                  // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       7: invokestatic  #27                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      10: aload_2
      11: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      16: invokestatic  #27                 // Method toBytesOrNull:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/apache/hadoop/hbase/util/Bytes;
      19: invokespecial #2                  // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      22: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor removeValue(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #22                 // class org/apache/hadoop/hbase/util/Bytes
       6: invokespecial #2                  // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
       9: areturn

  public int getMaxVersions();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #36,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class java/lang/Integer
      19: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setMaxVersions(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #41                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #42                 // String Maximum versions must be positive
      10: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: aload_0
      16: invokevirtual #44                 // Method getMinVersions:()I
      19: if_icmpge     66
      22: new           #41                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #45                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #47                 // String Set MaxVersion to
      35: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #50                 // String  while minVersion is
      44: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #44                 // Method getMinVersions:()I
      51: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc           #51                 // String . Maximum versions must be >= minimum versions
      56: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokestatic  #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$400:()Lorg/apache/hadoop/hbase/util/Bytes;
      70: iload_1
      71: invokestatic  #53                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      74: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      77: pop
      78: aload_0
      79: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setVersions(int, int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #41                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String Minimum versions must be positive
      10: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: iload_1
      16: if_icmpge     60
      19: new           #41                 // class java/lang/IllegalArgumentException
      22: dup
      23: new           #45                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #56                 // String Unable to set MaxVersion to
      32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #57                 // String  and set MinVersion to
      41: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_1
      45: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #58                 // String , as maximum versions must be >= minimum versions.
      50: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: iload_1
      62: invokevirtual #59                 // Method setMinVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      65: pop
      66: aload_0
      67: iload_2
      68: invokevirtual #60                 // Method setMaxVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      71: pop
      72: aload_0
      73: areturn

  public int getBlocksize();
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #62,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: ldc           #63                 // int 65536
      11: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #39                 // class java/lang/Integer
      20: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      23: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setBlocksize(int);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #53                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompressionType();
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #65,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
       9: getstatic     #66                 // Field org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.DEFAULT_COMPRESSION:Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
      12: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #67                 // class org/apache/hadoop/hbase/io/compress/Compression$Algorithm
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCompressionType(org.apache.hadoop.hbase.io.compress.Compression$Algorithm);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #68                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getDataBlockEncoding();
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #70,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       9: getstatic     #71                 // Field org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.NONE:Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
      12: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #72                 // class org/apache/hadoop/hbase/io/encoding/DataBlockEncoding
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setDataBlockEncoding(org.apache.hadoop.hbase.io.encoding.DataBlockEncoding);
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: ifnonnull     17
       8: getstatic     #71                 // Field org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.NONE:Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
      11: invokevirtual #73                 // Method org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.name:()Ljava/lang/String;
      14: goto          21
      17: aload_1
      18: invokevirtual #73                 // Method org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.name:()Ljava/lang/String;
      21: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      24: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCompressTags(boolean);
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #75                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isCompressTags();
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompactionCompressionType();
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #81,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
       9: aload_0
      10: invokevirtual #82                 // Method getCompressionType:()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #67                 // class org/apache/hadoop/hbase/io/compress/Compression$Algorithm
      19: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCompactionCompressionType(org.apache.hadoop.hbase.io.compress.Compression$Algorithm);
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #68                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isInMemory();
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setInMemory(boolean);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.MemoryCompactionPolicy getInMemoryCompaction();
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #86,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
       9: aconst_null
      10: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #87                 // class org/apache/hadoop/hbase/MemoryCompactionPolicy
      16: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setInMemoryCompaction(org.apache.hadoop.hbase.MemoryCompactionPolicy);
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #88                 // Method org/apache/hadoop/hbase/MemoryCompactionPolicy.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.KeepDeletedCells getKeepDeletedCells();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #90,  0             // InvokeDynamic #9:apply:()Ljava/util/function/Function;
       9: getstatic     #91                 // Field org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.DEFAULT_KEEP_DELETED:Lorg/apache/hadoop/hbase/KeepDeletedCells;
      12: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #92                 // class org/apache/hadoop/hbase/KeepDeletedCells
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setKeepDeletedCells(org.apache.hadoop.hbase.KeepDeletedCells);
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #93                 // Method org/apache/hadoop/hbase/KeepDeletedCells.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isNewVersionBehavior();
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1300:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #95,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setNewVersionBehavior(boolean);
    Code:
       0: aload_0
       1: invokestatic  #94                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1300:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public int getTimeToLive();
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #36,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       9: ldc           #97                 // int 2147483647
      11: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #39                 // class java/lang/Integer
      20: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      23: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setTimeToLive(int);
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1400:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #53                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setTimeToLive(java.lang.String) throws org.apache.hadoop.hbase.exceptions.HBaseException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #98                 // Field org/apache/hadoop/hbase/util/PrettyPrinter$Unit.TIME_INTERVAL:Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;
       5: invokestatic  #99                 // Method org/apache/hadoop/hbase/util/PrettyPrinter.valueOf:(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;)Ljava/lang/String;
       8: invokestatic  #100                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      11: invokevirtual #101                // Method setTimeToLive:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      14: areturn

  public int getMinVersions();
    Code:
       0: aload_0
       1: invokestatic  #102                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #62,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class java/lang/Integer
      19: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setMinVersions(int);
    Code:
       0: aload_0
       1: invokestatic  #102                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #53                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isBlockCacheEnabled();
    Code:
       0: aload_0
       1: invokestatic  #103                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_1
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setBlockCacheEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #103                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.regionserver.BloomType getBloomFilterType();
    Code:
       0: aload_0
       1: invokestatic  #104                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #105,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
       9: getstatic     #106                // Field org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.DEFAULT_BLOOMFILTER:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      12: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #107                // class org/apache/hadoop/hbase/regionserver/BloomType
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setBloomFilterType(org.apache.hadoop.hbase.regionserver.BloomType);
    Code:
       0: aload_0
       1: invokestatic  #104                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #108                // Method org/apache/hadoop/hbase/regionserver/BloomType.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public int getScope();
    Code:
       0: aload_0
       1: getstatic     #109                // Field REPLICATION_SCOPE_BYTES:Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #62,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class java/lang/Integer
      19: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setScope(int);
    Code:
       0: aload_0
       1: getstatic     #109                // Field REPLICATION_SCOPE_BYTES:Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #53                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isCacheDataOnWrite();
    Code:
       0: aload_0
       1: invokestatic  #110                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCacheDataOnWrite(boolean);
    Code:
       0: aload_0
       1: invokestatic  #110                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isCacheIndexesOnWrite();
    Code:
       0: aload_0
       1: invokestatic  #111                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCacheIndexesOnWrite(boolean);
    Code:
       0: aload_0
       1: invokestatic  #111                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$1900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isCacheBloomsOnWrite();
    Code:
       0: aload_0
       1: invokestatic  #112                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setCacheBloomsOnWrite(boolean);
    Code:
       0: aload_0
       1: invokestatic  #112                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isEvictBlocksOnClose();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setEvictBlocksOnClose(boolean);
    Code:
       0: aload_0
       1: invokestatic  #113                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isPrefetchBlocksOnOpen();
    Code:
       0: aload_0
       1: invokestatic  #114                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setPrefetchBlocksOnOpen(boolean);
    Code:
       0: aload_0
       1: invokestatic  #114                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2200:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #84                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public java.lang.String toString();
    Code:
       0: new           #45                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #117                // String NAME
      18: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: ldc           #118                // String  => '
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: invokevirtual #119                // Method getNameAsString:()Ljava/lang/String;
      34: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #120                // String '
      41: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: aload_0
      47: iconst_1
      48: invokespecial #121                // Method getValues:(Z)Ljava/lang/StringBuilder;
      51: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: bipush        125
      58: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  public java.lang.String toStringCustomizedValues();
    Code:
       0: new           #45                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #117                // String NAME
      18: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: ldc           #118                // String  => '
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: invokevirtual #119                // Method getNameAsString:()Ljava/lang/String;
      34: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #120                // String '
      41: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: aload_0
      47: iconst_0
      48: invokespecial #121                // Method getValues:(Z)Ljava/lang/StringBuilder;
      51: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: bipush        125
      58: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #145                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
      11: ifeq          36
      14: getstatic     #146                // Field org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.COMPARATOR:Ljava/util/Comparator;
      17: aload_0
      18: aload_1
      19: checkcast     #145                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
      22: invokeinterface #147,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:[B
       4: invokestatic  #148                // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
       7: istore_1
       8: iload_1
       9: bipush        11
      11: ixor
      12: istore_1
      13: iload_1
      14: aload_0
      15: getfield      #15                 // Field values:Ljava/util/Map;
      18: invokeinterface #149,  1          // InterfaceMethod java/util/Map.hashCode:()I
      23: ixor
      24: istore_1
      25: iload_1
      26: aload_0
      27: getfield      #16                 // Field configuration:Ljava/util/Map;
      30: invokeinterface #149,  1          // InterfaceMethod java/util/Map.hashCode:()I
      35: ixor
      36: istore_1
      37: iload_1
      38: ireturn

  public int compareTo(org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor);
    Code:
       0: getstatic     #150                // Field COMPARATOR:Ljava/util/Comparator;
       3: aload_0
       4: aload_1
       5: invokeinterface #147,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      10: ireturn

  public java.lang.String getConfigurationValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field configuration:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #135                // class java/lang/String
      13: areturn

  public java.util.Map<java.lang.String, java.lang.String> getConfiguration();
    Code:
       0: aload_0
       1: getfield      #16                 // Field configuration:Ljava/util/Map;
       4: invokestatic  #25                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setConfiguration(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     18
       4: aload_0
       5: getfield      #16                 // Field configuration:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: goto          30
      18: aload_0
      19: getfield      #16                 // Field configuration:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor removeConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #165                // Method setConfiguration:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
       6: areturn

  public java.lang.String getEncryptionType();
    Code:
       0: aload_0
       1: invokestatic  #166                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokestatic  #26                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       7: aconst_null
       8: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #135                // class java/lang/String
      14: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setEncryptionType(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #166                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2500:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
       8: areturn

  public byte[] getEncryptionKey();
    Code:
       0: aload_0
       1: invokestatic  #167                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #168,  0            // InvokeDynamic #12:apply:()Ljava/util/function/Function;
       9: aconst_null
      10: invokespecial #34                 // Method getOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #32                 // class "[B"
      16: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setEncryptionKey(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #167                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2600:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: new           #22                 // class org/apache/hadoop/hbase/util/Bytes
       7: dup
       8: aload_1
       9: invokespecial #23                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      12: invokespecial #2                  // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      15: areturn

  public long getMobThreshold();
    Code:
       0: aload_0
       1: invokestatic  #169                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #170,  0            // InvokeDynamic #13:apply:()Ljava/util/function/Function;
       9: ldc2_w        #171                // long 102400l
      12: invokestatic  #173                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #174                // class java/lang/Long
      21: invokevirtual #175                // Method java/lang/Long.longValue:()J
      24: lreturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setMobThreshold(long);
    Code:
       0: aload_0
       1: invokestatic  #169                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2700:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: lload_1
       5: invokestatic  #176                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public boolean isMobEnabled();
    Code:
       0: aload_0
       1: invokestatic  #177                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #76,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #77                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #78                 // class java/lang/Boolean
      19: invokevirtual #79                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setMobEnabled(boolean);
    Code:
       0: aload_0
       1: invokestatic  #177                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2800:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: iload_1
       5: invokestatic  #75                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public org.apache.hadoop.hbase.client.MobCompactPartitionPolicy getMobCompactPartitionPolicy();
    Code:
       0: aload_0
       1: invokestatic  #178                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #179,  0            // InvokeDynamic #14:apply:()Ljava/util/function/Function;
       9: getstatic     #180                // Field org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.DEFAULT_MOB_COMPACT_PARTITION_POLICY:Lorg/apache/hadoop/hbase/client/MobCompactPartitionPolicy;
      12: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #181                // class org/apache/hadoop/hbase/client/MobCompactPartitionPolicy
      18: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setMobCompactPartitionPolicy(org.apache.hadoop.hbase.client.MobCompactPartitionPolicy);
    Code:
       0: aload_0
       1: invokestatic  #178                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$2900:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokevirtual #182                // Method org/apache/hadoop/hbase/client/MobCompactPartitionPolicy.name:()Ljava/lang/String;
       8: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      11: areturn

  public short getDFSReplication();
    Code:
       0: aload_0
       1: invokestatic  #183                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$3000:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokedynamic #184,  0            // InvokeDynamic #15:apply:()Ljava/util/function/Function;
       9: iconst_0
      10: invokestatic  #185                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      13: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #186                // class java/lang/Short
      19: invokevirtual #187                // Method java/lang/Short.shortValue:()S
      22: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setDFSReplication(short);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     19
       5: iload_1
       6: ifeq          19
       9: new           #41                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #188                // String DFS replication factor cannot be less than 1 if explicitly set.
      15: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokestatic  #183                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$3000:()Lorg/apache/hadoop/hbase/util/Bytes;
      23: iload_1
      24: invokestatic  #189                // Method java/lang/Short.toString:(S)Ljava/lang/String;
      27: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
      30: areturn

  public java.lang.String getStoragePolicy();
    Code:
       0: aload_0
       1: invokestatic  #190                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$3100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: invokestatic  #26                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       7: aconst_null
       8: invokespecial #38                 // Method getStringOrDefault:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #135                // class java/lang/String
      14: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor setStoragePolicy(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #190                // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.access$3100:()Lorg/apache/hadoop/hbase/util/Bytes;
       4: aload_1
       5: invokespecial #54                 // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
       8: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #145                // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
       5: invokevirtual #191                // Method compareTo:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;)I
       8: ireturn

  static org.apache.hadoop.hbase.client.ColumnFamilyDescriptor access$000(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException;
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method parseFrom:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       4: areturn

  static byte[] access$100(org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method toByteArray:()[B
       4: areturn

  static org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor access$200(org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor, org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;
       6: areturn
}
