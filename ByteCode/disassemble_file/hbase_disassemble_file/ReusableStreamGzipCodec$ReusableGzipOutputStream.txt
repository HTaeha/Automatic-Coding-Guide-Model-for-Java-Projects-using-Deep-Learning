Compiled from "ReusableStreamGzipCodec.java"
public class org.apache.hadoop.hbase.io.compress.ReusableStreamGzipCodec$ReusableGzipOutputStream extends org.apache.hadoop.io.compress.CompressorStream {
  public org.apache.hadoop.hbase.io.compress.ReusableStreamGzipCodec$ReusableGzipOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
       9: invokespecial #4                  // Method org/apache/hadoop/io/compress/CompressorStream."<init>":(Ljava/io/OutputStream;)V
      12: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: invokevirtual #6                  // Method java/io/OutputStream.close:()V
       7: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: invokevirtual #7                  // Method java/io/OutputStream.flush:()V
       7: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: iload_1
       5: invokevirtual #8                  // Method java/io/OutputStream.write:(I)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      10: return

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: checkcast     #10                 // class java/util/zip/GZIPOutputStream
       7: invokevirtual #11                 // Method java/util/zip/GZIPOutputStream.finish:()V
      10: return

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/io/OutputStream;
       4: checkcast     #2                  // class org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream
       7: invokevirtual #12                 // Method org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream.resetState:()V
      10: return

  static byte[] access$100();
    Code:
       0: getstatic     #1                  // Field GZIP_HEADER:[B
       3: areturn

  static {};
    Code:
       0: new           #13                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #14                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_0
       8: aconst_null
       9: astore_1
      10: aconst_null
      11: astore_2
      12: new           #10                 // class java/util/zip/GZIPOutputStream
      15: dup
      16: aload_0
      17: invokespecial #15                 // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
      20: astore_2
      21: aload_2
      22: invokevirtual #11                 // Method java/util/zip/GZIPOutputStream.finish:()V
      25: aload_0
      26: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      29: iconst_0
      30: bipush        10
      32: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B
      35: astore_1
      36: aload_2
      37: ifnull        109
      40: aload_2
      41: invokevirtual #19                 // Method java/util/zip/GZIPOutputStream.close:()V
      44: goto          109
      47: astore_3
      48: invokestatic  #21                 // Method org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec.access$000:()Lorg/slf4j/Logger;
      51: aload_3
      52: invokevirtual #22                 // Method java/io/IOException.toString:()Ljava/lang/String;
      55: aload_3
      56: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: goto          109
      64: astore_3
      65: new           #24                 // class java/lang/RuntimeException
      68: dup
      69: ldc           #25                 // String Could not create gzip stream
      71: aload_3
      72: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
      76: astore        4
      78: aload_2
      79: ifnull        106
      82: aload_2
      83: invokevirtual #19                 // Method java/util/zip/GZIPOutputStream.close:()V
      86: goto          106
      89: astore        5
      91: invokestatic  #21                 // Method org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec.access$000:()Lorg/slf4j/Logger;
      94: aload         5
      96: invokevirtual #22                 // Method java/io/IOException.toString:()Ljava/lang/String;
      99: aload         5
     101: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: aload         4
     108: athrow
     109: aload_1
     110: putstatic     #1                  // Field GZIP_HEADER:[B
     113: return
    Exception table:
       from    to  target type
          40    44    47   Class java/io/IOException
          12    36    64   Class java/io/IOException
          12    36    76   any
          82    86    89   Class java/io/IOException
          64    78    76   any
}
