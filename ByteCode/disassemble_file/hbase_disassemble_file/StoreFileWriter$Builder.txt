Compiled from "StoreFileWriter.java"
public class org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder {
  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.io.hfile.CacheConfig, org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // InterfaceMethod org/apache/hadoop/hbase/CellComparator.getInstance:()Lorg/apache/hadoop/hbase/CellComparator;
       8: putfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      11: aload_0
      12: getstatic     #4                  // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      15: putfield      #5                  // Field bloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      18: aload_0
      19: lconst_0
      20: putfield      #6                  // Field maxKeyCount:J
      23: aload_0
      24: invokedynamic #7,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      29: putfield      #8                  // Field compactedFilesSupplier:Ljava/util/function/Supplier;
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      37: aload_0
      38: aload_2
      39: putfield      #10                 // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      42: aload_0
      43: aload_3
      44: putfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      47: return

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // InterfaceMethod org/apache/hadoop/hbase/CellComparator.getInstance:()Lorg/apache/hadoop/hbase/CellComparator;
       8: putfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      11: aload_0
      12: getstatic     #4                  // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      15: putfield      #5                  // Field bloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      18: aload_0
      19: lconst_0
      20: putfield      #6                  // Field maxKeyCount:J
      23: aload_0
      24: invokedynamic #7,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      29: putfield      #8                  // Field compactedFilesSupplier:Ljava/util/function/Supplier;
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      37: aload_0
      38: getstatic     #12                 // Field org/apache/hadoop/hbase/io/hfile/CacheConfig.DISABLED:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      41: putfield      #10                 // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
      44: aload_0
      45: aload_2
      46: putfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      49: return

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withOutputDir(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withFilePath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withFavoredNodes(java.net.InetSocketAddress[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field favoredNodes:[Ljava/net/InetSocketAddress;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withComparator(org.apache.hadoop.hbase.CellComparator);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withBloomType(org.apache.hadoop.hbase.regionserver.BloomType);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #5                  // Field bloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withMaxKeyCount(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field maxKeyCount:J
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withFileContext(org.apache.hadoop.hbase.io.hfile.HFileContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field fileContext:Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withShouldDropCacheBehind(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field shouldDropCacheBehind:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter$Builder withCompactedFilesSupplier(java.util.function.Supplier<java.util.Collection<org.apache.hadoop.hbase.regionserver.HStoreFile>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field compactedFilesSupplier:Ljava/util/function/Supplier;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileWriter build() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
       4: ifnonnull     11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: aload_0
      13: getfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
      16: ifnonnull     23
      19: iconst_0
      20: goto          24
      23: iconst_1
      24: iadd
      25: iconst_1
      26: if_icmpeq     39
      29: new           #19                 // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #20                 // String Either specify parent directory or file path
      35: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
      43: ifnonnull     57
      46: aload_0
      47: aload_0
      48: getfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
      51: invokevirtual #22                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      54: putfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
      57: aload_0
      58: getfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      61: aload_0
      62: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
      65: invokevirtual #23                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      68: ifne          87
      71: aload_0
      72: getfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      75: aload_0
      76: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      79: aload_0
      80: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
      83: invokestatic  #24                 // Method org/apache/hadoop/hbase/regionserver/HRegionFileSystem.mkdirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Z
      86: pop
      87: aload_0
      88: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      91: ldc           #26                 // String STORAGE_POLICY
      93: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      96: astore_1
      97: aconst_null
      98: aload_1
      99: if_acmpne     112
     102: aload_0
     103: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     106: ldc           #29                 // String hbase.hstore.block.storage.policy
     108: invokevirtual #27                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
     111: astore_1
     112: aload_0
     113: getfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     116: aload_0
     117: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
     120: aload_1
     121: invokestatic  #30                 // Method org/apache/hadoop/hbase/util/FSUtils.setStoragePolicy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     124: aload_0
     125: getfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
     128: ifnonnull     163
     131: aload_0
     132: aload_0
     133: getfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     136: aload_0
     137: getfield      #14                 // Field dir:Lorg/apache/hadoop/fs/Path;
     140: invokestatic  #31                 // Method org/apache/hadoop/hbase/regionserver/StoreFileWriter.getUniqueFile:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     143: putfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
     146: aload_0
     147: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     150: invokestatic  #32                 // Method org/apache/hadoop/hbase/util/BloomFilterFactory.isGeneralBloomEnabled:(Lorg/apache/hadoop/conf/Configuration;)Z
     153: ifne          163
     156: aload_0
     157: getstatic     #4                  // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     160: putfield      #5                  // Field bloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     163: aload_0
     164: getfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
     167: ifnonnull     177
     170: aload_0
     171: invokestatic  #2                  // InterfaceMethod org/apache/hadoop/hbase/CellComparator.getInstance:()Lorg/apache/hadoop/hbase/CellComparator;
     174: putfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
     177: new           #33                 // class org/apache/hadoop/hbase/regionserver/StoreFileWriter
     180: dup
     181: aload_0
     182: getfield      #11                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     185: aload_0
     186: getfield      #15                 // Field filePath:Lorg/apache/hadoop/fs/Path;
     189: aload_0
     190: getfield      #9                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     193: aload_0
     194: getfield      #10                 // Field cacheConf:Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
     197: aload_0
     198: getfield      #3                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
     201: aload_0
     202: getfield      #5                  // Field bloomType:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     205: aload_0
     206: getfield      #6                  // Field maxKeyCount:J
     209: aload_0
     210: getfield      #16                 // Field favoredNodes:[Ljava/net/InetSocketAddress;
     213: aload_0
     214: getfield      #17                 // Field fileContext:Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
     217: aload_0
     218: getfield      #18                 // Field shouldDropCacheBehind:Z
     221: aload_0
     222: getfield      #8                  // Field compactedFilesSupplier:Ljava/util/function/Supplier;
     225: aconst_null
     226: invokespecial #34                 // Method org/apache/hadoop/hbase/regionserver/StoreFileWriter."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/BloomType;J[Ljava/net/InetSocketAddress;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;ZLjava/util/function/Supplier;Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$1;)V
     229: areturn
}
