Compiled from "ByteBufferKeyValue.java"
public class org.apache.hadoop.hbase.ByteBufferKeyValue extends org.apache.hadoop.hbase.ByteBufferExtendedCell {
  protected final java.nio.ByteBuffer buf;

  protected final int offset;

  protected final int length;

  public static final int FIXED_OVERHEAD;

  public org.apache.hadoop.hbase.ByteBufferKeyValue(java.nio.ByteBuffer, int, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field seqId:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field offset:I
      19: aload_0
      20: iload_3
      21: putfield      #5                  // Field length:I
      24: aload_0
      25: lload         4
      27: putfield      #2                  // Field seqId:J
      30: return

  public org.apache.hadoop.hbase.ByteBufferKeyValue(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field seqId:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field offset:I
      19: aload_0
      20: iload_3
      21: putfield      #5                  // Field length:I
      24: return

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: ireturn

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/apache/hadoop/hbase/CellUtil.cloneRow:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getRowOffset();
    Code:
       0: iconst_0
       1: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #4                  // Field offset:I
       8: bipush        8
      10: iadd
      11: invokestatic  #8                  // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toShort:(Ljava/nio/ByteBuffer;I)S
      14: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method org/apache/hadoop/hbase/CellUtil.cloneFamily:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getFamilyOffset();
    Code:
       0: iconst_0
       1: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #10                 // Method getFamilyLengthPosition:()I
       5: invokevirtual #11                 // Method getFamilyLength:(I)B
       8: ireturn

  int getFamilyLengthPosition();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #12                 // Method getRowLength:()S
       5: invokevirtual #13                 // Method getFamilyLengthPosition:(I)I
       8: ireturn

  int getFamilyLengthPosition(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: bipush        10
       6: iadd
       7: iload_1
       8: iadd
       9: ireturn

  byte getFamilyLength(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokestatic  #14                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toByte:(Ljava/nio/ByteBuffer;I)B
       8: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method org/apache/hadoop/hbase/CellUtil.cloneQualifier:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getQualifierOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getKeyLength:()I
       5: aload_0
       6: invokevirtual #12                 // Method getRowLength:()S
       9: aload_0
      10: invokevirtual #17                 // Method getFamilyLength:()B
      13: invokevirtual #18                 // Method getQualifierLength:(III)I
      16: ireturn

  int getQualifierLength(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: iconst_0
       4: invokestatic  #19                 // Method org/apache/hadoop/hbase/KeyValue.getKeyDataStructureSize:(III)J
       7: l2i
       8: isub
       9: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getKeyLength:()I
       5: invokevirtual #20                 // Method getTimestamp:(I)J
       8: lreturn

  long getTimestamp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method getTimestampOffset:(I)I
       5: istore_2
       6: aload_0
       7: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      10: iload_2
      11: invokestatic  #22                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toLong:(Ljava/nio/ByteBuffer;I)J
      14: lreturn

  int getKeyLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #4                  // Field offset:I
       8: invokestatic  #23                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toInt:(Ljava/nio/ByteBuffer;I)I
      11: ireturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getKeyLength:()I
       5: invokevirtual #24                 // Method getTypeByte:(I)B
       8: ireturn

  byte getTypeByte(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #4                  // Field offset:I
       8: iload_1
       9: iadd
      10: iconst_1
      11: isub
      12: bipush        8
      14: iadd
      15: invokestatic  #14                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toByte:(Ljava/nio/ByteBuffer;I)B
      18: ireturn

  public long getSequenceId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seqId:J
       4: lreturn

  public void setSequenceId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field seqId:J
       5: return

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method org/apache/hadoop/hbase/CellUtil.cloneValue:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #4                  // Field offset:I
       8: iconst_4
       9: iadd
      10: invokestatic  #23                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toInt:(Ljava/nio/ByteBuffer;I)I
      13: ireturn

  public byte[] getTagsArray();
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method org/apache/hadoop/hbase/CellUtil.cloneTags:(Lorg/apache/hadoop/hbase/Cell;)[B
       4: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: aload_0
       5: invokevirtual #16                 // Method getKeyLength:()I
       8: aload_0
       9: invokevirtual #28                 // Method getValueLength:()I
      12: iadd
      13: bipush        8
      15: iadd
      16: isub
      17: istore_1
      18: iload_1
      19: ifle          25
      22: iinc          1, -2
      25: iload_1
      26: ireturn

  public java.nio.ByteBuffer getRowByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getRowPosition();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: bipush        10
       6: iadd
       7: ireturn

  public java.nio.ByteBuffer getFamilyByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getFamilyPosition();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #10                 // Method getFamilyLengthPosition:()I
       5: invokevirtual #29                 // Method getFamilyPosition:(I)I
       8: ireturn

  public int getFamilyPosition(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: ireturn

  public java.nio.ByteBuffer getQualifierByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getQualifierPosition();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #30                 // Method getFamilyPosition:()I
       5: aload_0
       6: invokevirtual #17                 // Method getFamilyLength:()B
       9: invokevirtual #31                 // Method getQualifierPosition:(II)I
      12: ireturn

  int getQualifierPosition(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: ireturn

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getValuePosition();
    Code:
       0: aload_0
       1: getfield      #4                  // Field offset:I
       4: bipush        8
       6: iadd
       7: aload_0
       8: invokevirtual #16                 // Method getKeyLength:()I
      11: iadd
      12: ireturn

  public java.nio.ByteBuffer getTagsByteBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getTagsPosition();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getTagsLength:()I
       4: istore_1
       5: iload_1
       6: ifne          19
       9: aload_0
      10: getfield      #4                  // Field offset:I
      13: aload_0
      14: getfield      #5                  // Field length:I
      17: iadd
      18: ireturn
      19: aload_0
      20: getfield      #4                  // Field offset:I
      23: aload_0
      24: getfield      #5                  // Field length:I
      27: iadd
      28: iload_1
      29: isub
      30: ireturn

  public long heapSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #33                 // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          23
      10: getstatic     #34                 // Field FIXED_OVERHEAD:I
      13: aload_0
      14: getfield      #5                  // Field length:I
      17: iadd
      18: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      21: i2l
      22: lreturn
      23: getstatic     #34                 // Field FIXED_OVERHEAD:I
      26: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      29: aload_0
      30: invokevirtual #36                 // Method getSerializedSize:()I
      33: iadd
      34: i2l
      35: lreturn

  public int write(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #37                 // Method getSerializedSize:(Z)I
       5: istore_3
       6: aload_1
       7: aload_0
       8: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      11: aload_0
      12: getfield      #4                  // Field offset:I
      15: iload_3
      16: invokestatic  #38                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyBufferToStream:(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
      19: iload_3
      20: ireturn

  public int getSerializedSize(boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: aload_0
       5: getfield      #5                  // Field length:I
       8: ireturn
       9: aload_0
      10: invokevirtual #16                 // Method getKeyLength:()I
      13: aload_0
      14: invokevirtual #28                 // Method getValueLength:()I
      17: iadd
      18: bipush        8
      20: iadd
      21: ireturn

  public int getSerializedSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: ireturn

  public void write(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field offset:I
       9: iload_2
      10: aload_0
      11: getfield      #5                  // Field length:I
      14: invokestatic  #39                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromBufferToBuffer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
      17: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #40                 // Method org/apache/hadoop/hbase/CellUtil.toString:(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/lang/String;
       5: areturn

  public void setTimestamp(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: invokespecial #41                 // Method getTimestampOffset:()I
       8: lload_1
       9: invokestatic  #42                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(J)[B
      12: iconst_0
      13: bipush        8
      15: invokestatic  #43                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromArrayToBuffer:(Ljava/nio/ByteBuffer;I[BII)V
      18: return

  public void setTimestamp(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: invokespecial #41                 // Method getTimestampOffset:()I
       8: aload_1
       9: iconst_0
      10: bipush        8
      12: invokestatic  #43                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromArrayToBuffer:(Ljava/nio/ByteBuffer;I[BII)V
      15: return

  public org.apache.hadoop.hbase.ExtendedCell deepClone();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: newarray       byte
       6: astore_1
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      12: aload_0
      13: getfield      #4                  // Field offset:I
      16: iconst_0
      17: aload_0
      18: getfield      #5                  // Field length:I
      21: invokestatic  #44                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromBufferToArray:([BLjava/nio/ByteBuffer;III)V
      24: new           #7                  // class org/apache/hadoop/hbase/KeyValue
      27: dup
      28: aload_1
      29: iconst_0
      30: aload_1
      31: arraylength
      32: invokespecial #45                 // Method org/apache/hadoop/hbase/KeyValue."<init>":([BII)V
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokevirtual #46                 // Method getSequenceId:()J
      41: invokevirtual #47                 // Method org/apache/hadoop/hbase/KeyValue.setSequenceId:(J)V
      44: aload_2
      45: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #48                 // class org/apache/hadoop/hbase/Cell
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #48                 // class org/apache/hadoop/hbase/Cell
      14: invokestatic  #49                 // Method org/apache/hadoop/hbase/CellUtil.equals:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
      17: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #50                 // Method calculateHashForKey:(Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;)I
       5: ireturn

  static {};
    Code:
       0: getstatic     #63                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
       3: getstatic     #64                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       6: iadd
       7: bipush        8
       9: iadd
      10: bipush        8
      12: iadd
      13: putstatic     #34                 // Field FIXED_OVERHEAD:I
      16: return
}
