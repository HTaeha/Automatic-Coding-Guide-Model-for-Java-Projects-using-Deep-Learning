Compiled from "MetricsHeapMemoryManagerSourceImpl.java"
public class org.apache.hadoop.hbase.regionserver.MetricsHeapMemoryManagerSourceImpl extends org.apache.hadoop.hbase.metrics.BaseSourceImpl implements org.apache.hadoop.hbase.regionserver.MetricsHeapMemoryManagerSource {
  public org.apache.hadoop.hbase.regionserver.MetricsHeapMemoryManagerSourceImpl();
    Code:
       0: aload_0
       1: ldc           #2                  // String Memory
       3: ldc           #3                  // String Metrics about HBase RegionServer's memory
       5: ldc           #4                  // String regionserver
       7: ldc           #5                  // String RegionServer,sub=Memory
       9: invokespecial #6                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public org.apache.hadoop.hbase.regionserver.MetricsHeapMemoryManagerSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #7                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      14: ldc           #9                  // String blockedFlushes
      16: ldc           #10                 // String Histogram for the number of blocked flushes in the memstore
      18: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      21: putfield      #12                 // Field blockedFlushHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      24: aload_0
      25: aload_0
      26: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      29: ldc           #13                 // String unblockedFlushes
      31: ldc           #14                 // String Histogram for the number of unblocked flushes in the memstore
      33: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      36: putfield      #15                 // Field unblockedFlushHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      39: aload_0
      40: aload_0
      41: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      44: ldc           #16                 // String increaseMemStoreSize
      46: ldc           #17                 // String Histogram for the heap memory tuner expanding memstore global size limit in bytes
      48: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      51: putfield      #18                 // Field incMemStoreSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      54: aload_0
      55: aload_0
      56: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      59: ldc           #19                 // String decreaseMemStoreSize
      61: ldc           #20                 // String Histogram for the heap memory tuner shrinking memstore global size limit in bytes
      63: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      66: putfield      #21                 // Field decMemStoreSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      69: aload_0
      70: aload_0
      71: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      74: ldc           #22                 // String increaseBlockCacheSize
      76: ldc           #23                 // String Histogram for the heap memory tuner expanding blockcache max heap size in bytes
      78: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      81: putfield      #24                 // Field incBlockCacheSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      84: aload_0
      85: aload_0
      86: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      89: ldc           #25                 // String decreaseBlockCacheSize
      91: ldc           #26                 // String Histogram for the heap memory tuner shrinking blockcache max heap size in bytes
      93: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newSizeHistogram:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableSizeHistogram;
      96: putfield      #27                 // Field decBlockCacheSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      99: aload_0
     100: aload_0
     101: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     104: ldc           #28                 // String blockedFlushGauge
     106: ldc           #29                 // String Gauge for the blocked flush count before tuning
     108: lconst_0
     109: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newGauge:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     112: putfield      #31                 // Field blockedFlushGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     115: aload_0
     116: aload_0
     117: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     120: ldc           #32                 // String unblockedFlushGauge
     122: ldc           #33                 // String Gauge for the unblocked flush count before tuning
     124: lconst_0
     125: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newGauge:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     128: putfield      #34                 // Field unblockedFlushGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     131: aload_0
     132: aload_0
     133: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     136: ldc           #35                 // String memStoreSize
     138: ldc           #36                 // String Global MemStore used in bytes by the RegionServer
     140: lconst_0
     141: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newGauge:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     144: putfield      #37                 // Field memStoreSizeGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     147: aload_0
     148: aload_0
     149: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     152: ldc           #38                 // String blockCacheSize
     154: ldc           #39                 // String BlockCache used in bytes by the RegionServer
     156: lconst_0
     157: invokevirtual #30                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newGauge:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     160: putfield      #40                 // Field blockCacheSizeGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
     163: aload_0
     164: aload_0
     165: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     168: ldc           #41                 // String tunerDoNothingCounter
     170: ldc           #42                 // String The number of times that tuner neither expands memstore global size limit nor expands blockcache max size
     172: lconst_0
     173: invokevirtual #43                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     176: putfield      #44                 // Field doNothingCounter:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     179: aload_0
     180: aload_0
     181: invokevirtual #8                  // Method getMetricsRegistry:()Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
     184: ldc           #45                 // String aboveHeapOccupancyLowWaterMarkCounter
     186: ldc           #46                 // String The number of times that heap occupancy percent is above low watermark
     188: lconst_0
     189: invokevirtual #43                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     192: putfield      #47                 // Field aboveHeapOccupancyLowWatermarkCounter:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
     195: return

  public void updateBlockedFlushCount(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          24
       6: aload_0
       7: getfield      #12                 // Field blockedFlushHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      10: lload_1
      11: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      16: aload_0
      17: getfield      #31                 // Field blockedFlushGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      20: lload_1
      21: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.set:(J)V
      24: return

  public void updateUnblockedFlushCount(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          24
       6: aload_0
       7: getfield      #15                 // Field unblockedFlushHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      10: lload_1
      11: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      16: aload_0
      17: getfield      #34                 // Field unblockedFlushGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
      20: lload_1
      21: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.set:(J)V
      24: return

  public void setCurBlockCacheSizeGauge(long);
    Code:
       0: aload_0
       1: getfield      #40                 // Field blockCacheSizeGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
       4: lload_1
       5: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.set:(J)V
       8: return

  public void setCurMemStoreSizeGauge(long);
    Code:
       0: aload_0
       1: getfield      #37                 // Field memStoreSizeGauge:Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;
       4: lload_1
       5: invokevirtual #49                 // Method org/apache/hadoop/metrics2/lib/MutableGaugeLong.set:(J)V
       8: return

  public void updateMemStoreDeltaSizeHistogram(int);
    Code:
       0: iload_1
       1: iflt          18
       4: aload_0
       5: getfield      #18                 // Field incMemStoreSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
       8: iload_1
       9: i2l
      10: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      15: goto          34
      18: iload_1
      19: ifge          34
      22: aload_0
      23: getfield      #21                 // Field decMemStoreSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      26: iload_1
      27: ineg
      28: i2l
      29: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      34: return

  public void updateBlockCacheDeltaSizeHistogram(int);
    Code:
       0: iload_1
       1: iflt          18
       4: aload_0
       5: getfield      #24                 // Field incBlockCacheSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
       8: iload_1
       9: i2l
      10: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      15: goto          34
      18: iload_1
      19: ifge          34
      22: aload_0
      23: getfield      #27                 // Field decBlockCacheSizeHistogram:Lorg/apache/hadoop/metrics2/MetricHistogram;
      26: iload_1
      27: ineg
      28: i2l
      29: invokeinterface #48,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      34: return

  public void increaseTunerDoNothingCounter();
    Code:
       0: aload_0
       1: getfield      #44                 // Field doNothingCounter:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #50                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void increaseAboveHeapOccupancyLowWatermarkCounter();
    Code:
       0: aload_0
       1: getfield      #47                 // Field aboveHeapOccupancyLowWatermarkCounter:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #50                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return
}
