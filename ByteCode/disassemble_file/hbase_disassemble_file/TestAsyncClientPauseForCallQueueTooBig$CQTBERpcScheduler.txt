Compiled from "TestAsyncClientPauseForCallQueueTooBig.java"
public final class org.apache.hadoop.hbase.client.TestAsyncClientPauseForCallQueueTooBig$CQTBERpcScheduler extends org.apache.hadoop.hbase.ipc.SimpleRpcScheduler {
  public org.apache.hadoop.hbase.client.TestAsyncClientPauseForCallQueueTooBig$CQTBERpcScheduler(org.apache.hadoop.conf.Configuration, int, int, int, int, org.apache.hadoop.hbase.ipc.PriorityFunction, org.apache.hadoop.hbase.Abortable, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: aload         7
      12: iload         8
      14: invokespecial #1                  // Method org/apache/hadoop/hbase/ipc/SimpleRpcScheduler."<init>":(Lorg/apache/hadoop/conf/Configuration;IIIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
      17: return

  public boolean dispatch(org.apache.hadoop.hbase.ipc.CallRunner) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/hbase/client/TestAsyncClientPauseForCallQueueTooBig.access$000:()Z
       3: ifeq          43
       6: aload_1
       7: invokevirtual #3                  // Method org/apache/hadoop/hbase/ipc/CallRunner.getRpcCall:()Lorg/apache/hadoop/hbase/ipc/RpcCall;
      10: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/ipc/RpcCall.getMethod:()Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;
      15: astore_2
      16: invokestatic  #5                  // Method org/apache/hadoop/hbase/client/TestAsyncClientPauseForCallQueueTooBig.access$100:()Ljava/util/concurrent/ConcurrentMap;
      19: aload_2
      20: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      25: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      30: checkcast     #8                  // class java/util/concurrent/atomic/AtomicInteger
      33: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      36: iconst_2
      37: irem
      38: ifne          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: aload_1
      45: invokespecial #10                 // Method org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.dispatch:(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
      48: ireturn
}
