Compiled from "MetaTableAccessor.java"
final class org.apache.hadoop.hbase.MetaTableAccessor$2 extends org.apache.hadoop.hbase.MetaTableAccessor$CollectingVisitor<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.ServerName>> {
  final boolean val$excludeOfflinedSplitParents;

  org.apache.hadoop.hbase.MetaTableAccessor$2(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field val$excludeOfflinedSplitParents:Z
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/MetaTableAccessor$CollectingVisitor."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
      14: return

  public boolean visit(org.apache.hadoop.hbase.client.Result) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method org/apache/hadoop/hbase/MetaTableAccessor.getRegionLocations:(Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/RegionLocations;
       5: putfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
       8: aload_0
       9: getfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
      12: ifnull        28
      15: aload_0
      16: getfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
      19: invokevirtual #5                  // Method org/apache/hadoop/hbase/RegionLocations.getRegionLocation:()Lorg/apache/hadoop/hbase/HRegionLocation;
      22: invokevirtual #6                  // Method org/apache/hadoop/hbase/HRegionLocation.getRegion:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      25: ifnonnull     57
      28: invokestatic  #7                  // Method org/apache/hadoop/hbase/MetaTableAccessor.access$000:()Lorg/slf4j/Logger;
      31: new           #8                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #10                 // String No serialized RegionInfo in
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      55: iconst_1
      56: ireturn
      57: aload_0
      58: getfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
      61: invokevirtual #5                  // Method org/apache/hadoop/hbase/RegionLocations.getRegionLocation:()Lorg/apache/hadoop/hbase/HRegionLocation;
      64: invokevirtual #6                  // Method org/apache/hadoop/hbase/HRegionLocation.getRegion:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      67: astore_2
      68: aload_0
      69: getfield      #1                  // Field val$excludeOfflinedSplitParents:Z
      72: ifeq          86
      75: aload_2
      76: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.isSplitParent:()Z
      81: ifeq          86
      84: iconst_1
      85: ireturn
      86: aload_0
      87: aload_1
      88: invokespecial #16                 // Method org/apache/hadoop/hbase/MetaTableAccessor$CollectingVisitor.visit:(Lorg/apache/hadoop/hbase/client/Result;)Z
      91: ireturn

  void add(org.apache.hadoop.hbase.client.Result);
    Code:
       0: aload_0
       1: getfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #3                  // Field current:Lorg/apache/hadoop/hbase/RegionLocations;
      12: invokevirtual #17                 // Method org/apache/hadoop/hbase/RegionLocations.getRegionLocations:()[Lorg/apache/hadoop/hbase/HRegionLocation;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     72
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: ifnull        66
      39: aload_0
      40: getfield      #18                 // Field results:Ljava/util/List;
      43: new           #19                 // class org/apache/hadoop/hbase/util/Pair
      46: dup
      47: aload         5
      49: invokevirtual #6                  // Method org/apache/hadoop/hbase/HRegionLocation.getRegion:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      52: aload         5
      54: invokevirtual #20                 // Method org/apache/hadoop/hbase/HRegionLocation.getServerName:()Lorg/apache/hadoop/hbase/ServerName;
      57: invokespecial #21                 // Method org/apache/hadoop/hbase/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: iinc          4, 1
      69: goto          22
      72: return
}
