Compiled from "AbstractProtobufLogWriter.java"
public abstract class org.apache.hadoop.hbase.regionserver.wal.AbstractProtobufLogWriter {
  protected org.apache.hadoop.hbase.regionserver.wal.CompressionContext compressionContext;

  protected org.apache.hadoop.conf.Configuration conf;

  protected org.apache.hadoop.hbase.codec.Codec$Encoder cellEncoder;

  protected org.apache.hadoop.hbase.regionserver.wal.WALCellCodec$ByteStringCompressor compressor;

  protected boolean trailerWritten;

  protected org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALTrailer trailer;

  protected int trailerWarnSize;

  protected java.util.concurrent.atomic.AtomicLong length;

  public org.apache.hadoop.hbase.regionserver.wal.AbstractProtobufLogWriter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #5                  // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      15: return

  protected org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader$Builder) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method buildWALHeader0:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader;
       6: areturn

  protected final org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader buildSecureWALHeader(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader$Builder) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #8                  // Method getWriterClassName:()Ljava/lang/String;
       5: invokevirtual #9                  // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder.setWriterClsName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
       8: pop
       9: aload_1
      10: ldc           #17                 // String hbase.regionserver.wal.encryption
      12: iconst_0
      13: invokevirtual #18                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      16: ifeq          217
      19: aload_1
      20: invokestatic  #19                 // Method org/apache/hadoop/hbase/util/EncryptionTest.testKeyProvider:(Lorg/apache/hadoop/conf/Configuration;)V
      23: aload_1
      24: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/EncryptionTest.testCipherProvider:(Lorg/apache/hadoop/conf/Configuration;)V
      27: aload_1
      28: ldc           #21                 // String hbase.crypto.wal.algorithm
      30: ldc           #22                 // String AES
      32: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokestatic  #24                 // Method org/apache/hadoop/hbase/io/crypto/Encryption.getCipher:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/crypto/Cipher;
      41: astore        4
      43: aload         4
      45: ifnonnull     80
      48: new           #25                 // class java/lang/RuntimeException
      51: dup
      52: new           #26                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #28                 // String Cipher '
      61: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_3
      65: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #30                 // String ' is not available
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: new           #33                 // class java/security/SecureRandom
      83: dup
      84: invokespecial #34                 // Method java/security/SecureRandom."<init>":()V
      87: astore        5
      89: aload         4
      91: invokevirtual #35                 // Method org/apache/hadoop/hbase/io/crypto/Cipher.getKeyLength:()I
      94: newarray       byte
      96: astore        6
      98: aload         5
     100: aload         6
     102: invokevirtual #36                 // Method java/security/SecureRandom.nextBytes:([B)V
     105: new           #37                 // class javax/crypto/spec/SecretKeySpec
     108: dup
     109: aload         6
     111: aload         4
     113: invokevirtual #38                 // Method org/apache/hadoop/hbase/io/crypto/Cipher.getName:()Ljava/lang/String;
     116: invokespecial #39                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
     119: astore        7
     121: aload_2
     122: aload_1
     123: aload_1
     124: ldc           #40                 // String hbase.crypto.wal.key.name
     126: aload_1
     127: ldc           #41                 // String hbase.crypto.master.key.name
     129: invokestatic  #42                 // Method org/apache/hadoop/hbase/security/User.getCurrent:()Lorg/apache/hadoop/hbase/security/User;
     132: invokevirtual #43                 // Method org/apache/hadoop/hbase/security/User.getShortName:()Ljava/lang/String;
     135: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     138: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     141: aload         7
     143: invokestatic  #44                 // Method org/apache/hadoop/hbase/security/EncryptionUtil.wrapKey:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/security/Key;)[B
     146: invokestatic  #45                 // Method org/apache/hbase/thirdparty/com/google/protobuf/UnsafeByteOperations.unsafeWrap:([B)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
     149: invokevirtual #46                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder.setEncryptionKey:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
     152: pop
     153: aload         4
     155: invokevirtual #47                 // Method org/apache/hadoop/hbase/io/crypto/Cipher.getEncryptor:()Lorg/apache/hadoop/hbase/io/crypto/Encryptor;
     158: astore        8
     160: aload         8
     162: aload         7
     164: invokeinterface #48,  2           // InterfaceMethod org/apache/hadoop/hbase/io/crypto/Encryptor.setKey:(Ljava/security/Key;)V
     169: aload_0
     170: aload         8
     172: invokevirtual #49                 // Method setEncryptor:(Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)V
     175: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     178: invokeinterface #51,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     183: ifeq          217
     186: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     189: new           #26                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     196: ldc           #52                 // String Initialized secure protobuf WAL: cipher=
     198: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload         4
     203: invokevirtual #38                 // Method org/apache/hadoop/hbase/io/crypto/Cipher.getName:()Ljava/lang/String;
     206: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     217: aload_2
     218: ldc           #54                 // class org/apache/hadoop/hbase/regionserver/wal/SecureWALCellCodec
     220: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
     223: invokevirtual #13                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder.setCellCodecClsName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
     226: pop
     227: aload_0
     228: aload_1
     229: aload_2
     230: invokespecial #15                 // Method buildWALHeader0:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader;
     233: areturn

  protected void setEncryptor(org.apache.hadoop.hbase.io.crypto.Encryptor);
    Code:
       0: return

  protected java.lang.String getWriterClassName();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #56                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public void init(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, boolean, long) throws java.io.IOException, org.apache.hadoop.hbase.util.CommonFSUtils$StreamLacksCapabilityException;
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #68                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: aload_3
       7: aload_2
       8: invokespecial #69                 // Method initializeCompressionContext:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Z
      11: istore        7
      13: aload_0
      14: aload_3
      15: ldc           #70                 // String hbase.regionserver.waltrailer.warn.size
      17: ldc           #71                 // int 1048576
      19: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      22: putfield      #73                 // Field trailerWarnSize:I
      25: aload_1
      26: invokestatic  #74                 // Method org/apache/hadoop/hbase/util/FSUtils.getDefaultBufferSize:(Lorg/apache/hadoop/fs/FileSystem;)I
      29: istore        8
      31: aload_3
      32: ldc           #75                 // String hbase.regionserver.hlog.replication
      34: aload_1
      35: aload_2
      36: invokestatic  #76                 // Method org/apache/hadoop/hbase/util/FSUtils.getDefaultReplication:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
      39: invokevirtual #72                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      42: i2s
      43: istore        9
      45: aload_0
      46: aload_1
      47: aload_2
      48: iload         4
      50: iload         8
      52: iload         9
      54: lload         5
      56: invokevirtual #77                 // Method initOutput:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZISJ)V
      59: iload         7
      61: ifeq          78
      64: aload_3
      65: ldc           #61                 // String hbase.regionserver.wal.tags.enablecompression
      67: iconst_1
      68: invokevirtual #18                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: istore        10
      81: aload_0
      82: getfield      #5                  // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      85: aload_0
      86: getstatic     #78                 // Field org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.PB_WAL_MAGIC:[B
      89: aload_0
      90: aload_3
      91: invokestatic  #79                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
      94: iload         7
      96: invokevirtual #80                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder.setHasCompression:(Z)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
      99: iload         10
     101: invokevirtual #81                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder.setHasTagCompression:(Z)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;
     104: invokevirtual #82                 // Method buildWALHeader:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader$Builder;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader;
     107: invokevirtual #83                 // Method writeMagicAndWALHeader:([BLorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALHeader;)J
     110: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     113: aload_0
     114: iload         7
     116: invokevirtual #85                 // Method initAfterHeader:(Z)V
     119: aload_0
     120: invokestatic  #86                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer$Builder;
     123: invokevirtual #87                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
     126: putfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
     129: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     132: invokeinterface #51,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     137: ifeq          177
     140: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     143: new           #26                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #89                 // String Initialized protobuf WAL=
     152: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_2
     156: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #91                 // String , compression=
     161: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: iload         7
     166: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     169: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     177: return

  protected void initAfterHeader(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #100                // Method initAfterHeader0:(Z)V
       5: return

  protected final void secureInitAfterHeader(boolean, org.apache.hadoop.hbase.io.crypto.Encryptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #68                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #17                 // String hbase.regionserver.wal.encryption
       6: iconst_0
       7: invokevirtual #18                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      10: ifeq          53
      13: aload_2
      14: ifnull        53
      17: aload_0
      18: getfield      #68                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      21: aload_2
      22: invokestatic  #101                // Method org/apache/hadoop/hbase/regionserver/wal/SecureWALCellCodec.getCodec:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;
      25: astore_3
      26: aload_0
      27: aload_3
      28: aload_0
      29: invokevirtual #94                 // Method getOutputStreamForCellEncoder:()Ljava/io/OutputStream;
      32: invokevirtual #95                 // Method org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.getEncoder:(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
      35: putfield      #96                 // Field cellEncoder:Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
      38: aload_0
      39: aconst_null
      40: putfield      #63                 // Field compressionContext:Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;
      43: aload_0
      44: invokestatic  #99                 // Method org/apache/hadoop/hbase/regionserver/wal/WALCellCodec.getNoneCompressor:()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
      47: putfield      #98                 // Field compressor:Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
      50: goto          58
      53: aload_0
      54: iload_1
      55: invokespecial #100                // Method initAfterHeader0:(Z)V
      58: return

  void setWALTrailer(org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALTrailer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
       5: return

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  protected void writeWALTrailer();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
       6: ifnonnull     41
       9: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc           #103                // String WALTrailer is null. Continuing with default.
      14: invokeinterface #104,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      19: aload_0
      20: aload_0
      21: invokestatic  #86                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer$Builder;
      24: invokespecial #105                // Method buildWALTrailer:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer$Builder;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
      27: putfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
      30: aload_0
      31: getfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
      34: invokevirtual #106                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer.getSerializedSize:()I
      37: istore_1
      38: goto          96
      41: aload_0
      42: getfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
      45: invokevirtual #106                // Method org/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer.getSerializedSize:()I
      48: dup
      49: istore_1
      50: aload_0
      51: getfield      #73                 // Field trailerWarnSize:I
      54: if_icmple     96
      57: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
      60: new           #26                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #107                // String Please investigate WALTrailer usage. Trailer size > maximum size :
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: iload_1
      73: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: ldc           #109                // String  >
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #73                 // Field trailerWarnSize:I
      85: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokeinterface #104,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      96: aload_0
      97: getfield      #5                  // Field length:Ljava/util/concurrent/atomic/AtomicLong;
     100: aload_0
     101: aload_0
     102: getfield      #88                 // Field trailer:Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;
     105: getstatic     #110                // Field org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.PB_WAL_COMPLETE_MAGIC:[B
     108: invokevirtual #111                // Method writeWALTrailerAndMagic:(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALTrailer;[B)J
     111: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     114: aload_0
     115: iconst_1
     116: putfield      #112                // Field trailerWritten:Z
     119: goto          134
     122: astore_1
     123: getstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #113                // String Failed to write trailer, non-fatal, continuing...
     128: aload_1
     129: invokeinterface #114,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     134: return
    Exception table:
       from    to  target type
           0   119   122   Class java/io/IOException

  protected abstract void initOutput(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, int, short, long) throws java.io.IOException, org.apache.hadoop.hbase.util.CommonFSUtils$StreamLacksCapabilityException;

  protected abstract long writeMagicAndWALHeader(byte[], org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALHeader) throws java.io.IOException;

  protected abstract long writeWALTrailerAndMagic(org.apache.hadoop.hbase.shaded.protobuf.generated.WALProtos$WALTrailer, byte[]) throws java.io.IOException;

  protected abstract java.io.OutputStream getOutputStreamForCellEncoder();

  static {};
    Code:
       0: ldc           #115                // class org/apache/hadoop/hbase/regionserver/wal/AbstractProtobufLogWriter
       2: invokestatic  #116                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
