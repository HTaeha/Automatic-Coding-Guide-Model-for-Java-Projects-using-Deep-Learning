Compiled from "ByteBufferKeyOnlyKeyValue.java"
public class org.apache.hadoop.hbase.ByteBufferKeyOnlyKeyValue extends org.apache.hadoop.hbase.ByteBufferExtendedCell {
  public static final int FIXED_OVERHEAD;

  public org.apache.hadoop.hbase.ByteBufferKeyOnlyKeyValue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field offset:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field length:I
      14: return

  public org.apache.hadoop.hbase.ByteBufferKeyOnlyKeyValue(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/ByteBufferExtendedCell."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field offset:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field length:I
      14: aload_0
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #4                  // Method setKey:(Ljava/nio/ByteBuffer;II)V
      21: return

  public void setKey(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field offset:I
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field length:I
      15: aload_0
      16: aload_0
      17: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      20: aload_0
      21: getfield      #2                  // Field offset:I
      24: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toShort:(Ljava/nio/ByteBuffer;I)S
      27: putfield      #7                  // Field rowLen:S
      30: return

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      17: areturn
      18: aload_0
      19: invokestatic  #10                 // Method org/apache/hadoop/hbase/CellUtil.cloneRow:(Lorg/apache/hadoop/hbase/Cell;)[B
      22: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          23
      10: aload_0
      11: invokevirtual #11                 // Method getRowPosition:()I
      14: aload_0
      15: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      18: invokevirtual #12                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: iadd
      22: ireturn
      23: iconst_0
      24: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rowLen:S
       4: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      17: areturn
      18: aload_0
      19: invokestatic  #13                 // Method org/apache/hadoop/hbase/CellUtil.cloneFamily:(Lorg/apache/hadoop/hbase/Cell;)[B
      22: areturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          23
      10: aload_0
      11: invokevirtual #14                 // Method getFamilyPosition:()I
      14: aload_0
      15: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      18: invokevirtual #12                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: iadd
      22: ireturn
      23: iconst_0
      24: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #15                 // Method getFamilyLengthPosition:()I
       5: invokespecial #16                 // Method getFamilyLength:(I)B
       8: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      17: areturn
      18: aload_0
      19: invokestatic  #18                 // Method org/apache/hadoop/hbase/CellUtil.cloneQualifier:(Lorg/apache/hadoop/hbase/Cell;)[B
      22: areturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          23
      10: aload_0
      11: invokevirtual #19                 // Method getQualifierPosition:()I
      14: aload_0
      15: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      18: invokevirtual #12                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: iadd
      22: ireturn
      23: iconst_0
      24: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #20                 // Method getRowLength:()S
       5: aload_0
       6: invokevirtual #21                 // Method getFamilyLength:()B
       9: invokespecial #22                 // Method getQualifierLength:(II)I
      12: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: invokespecial #24                 // Method getTimestampOffset:()I
       8: invokestatic  #25                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toLong:(Ljava/nio/ByteBuffer;I)J
      11: lreturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #2                  // Field offset:I
       8: aload_0
       9: getfield      #3                  // Field length:I
      12: iadd
      13: iconst_1
      14: isub
      15: invokestatic  #17                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.toByte:(Ljava/nio/ByteBuffer;I)B
      18: ireturn

  public void setSequenceId(long) throws java.io.IOException;
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setTimestamp(long) throws java.io.IOException;
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setTimestamp(byte[]) throws java.io.IOException;
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long getSequenceId();
    Code:
       0: lconst_0
       1: lreturn

  public byte[] getValueArray();
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] getTagsArray();
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.ByteBuffer getRowByteBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getRowPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field offset:I
       4: iconst_2
       5: iadd
       6: ireturn

  public java.nio.ByteBuffer getFamilyByteBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getFamilyPosition();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getFamilyLengthPosition:()I
       4: iconst_1
       5: iadd
       6: ireturn

  public java.nio.ByteBuffer getQualifierByteBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: areturn

  public int getQualifierPosition();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getFamilyLengthPosition:()I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: iadd
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method getFamilyLength:(I)B
      13: iadd
      14: ireturn

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getValuePosition();
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.ByteBuffer getTagsByteBuffer();
    Code:
       0: new           #27                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #28                 // String This is a key only Cell
       6: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getTagsPosition();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #31                 // Method org/apache/hadoop/hbase/CellUtil.toString:(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/lang/String;
       5: areturn

  public java.util.Iterator<org.apache.hadoop.hbase.Tag> getTags();
    Code:
       0: invokestatic  #32                 // Method java/util/Collections.emptyIterator:()Ljava/util/Iterator;
       3: areturn

  public java.util.Optional<org.apache.hadoop.hbase.Tag> getTag(byte);
    Code:
       0: invokestatic  #33                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  public long heapSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
       7: ifeq          23
      10: getstatic     #34                 // Field FIXED_OVERHEAD:I
      13: aload_0
      14: getfield      #3                  // Field length:I
      17: iadd
      18: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      21: i2l
      22: lreturn
      23: getstatic     #34                 // Field FIXED_OVERHEAD:I
      26: invokestatic  #35                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      29: i2l
      30: lreturn

  static {};
    Code:
       0: getstatic     #36                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
       3: getstatic     #37                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       6: iadd
       7: bipush        8
       9: iadd
      10: iconst_2
      11: iadd
      12: putstatic     #34                 // Field FIXED_OVERHEAD:I
      15: return
}
