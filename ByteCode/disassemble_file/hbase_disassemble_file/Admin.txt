Compiled from "Admin.java"
public interface org.apache.hadoop.hbase.client.Admin extends org.apache.hadoop.hbase.Abortable,java.io.Closeable {
  public abstract int getOperationTimeout();

  public abstract int getSyncWaitTimeout();

  public abstract void abort(java.lang.String, java.lang.Throwable);

  public abstract boolean isAborted();

  public abstract org.apache.hadoop.hbase.client.Connection getConnection();

  public abstract boolean tableExists(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.TableDescriptor> listTableDescriptors() throws java.io.IOException;

  public java.util.List<org.apache.hadoop.hbase.client.TableDescriptor> listTableDescriptors(java.util.regex.Pattern) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #1,  3            // InterfaceMethod listTableDescriptors:(Ljava/util/regex/Pattern;Z)Ljava/util/List;
       8: areturn

  public abstract java.util.List<org.apache.hadoop.hbase.client.TableDescriptor> listTableDescriptors(java.util.regex.Pattern, boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.TableName[] listTableNames() throws java.io.IOException;

  public org.apache.hadoop.hbase.TableName[] listTableNames(java.util.regex.Pattern) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #2,  3            // InterfaceMethod listTableNames:(Ljava/util/regex/Pattern;Z)[Lorg/apache/hadoop/hbase/TableName;
       8: areturn

  public abstract org.apache.hadoop.hbase.TableName[] listTableNames(java.util.regex.Pattern, boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.TableDescriptor getDescriptor(org.apache.hadoop.hbase.TableName) throws org.apache.hadoop.hbase.TableNotFoundException, java.io.IOException;

  public void createTable(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod createTableAsync:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract void createTable(org.apache.hadoop.hbase.client.TableDescriptor, byte[], byte[], int) throws java.io.IOException;

  public void createTable(org.apache.hadoop.hbase.client.TableDescriptor, byte[][]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #7,  3            // InterfaceMethod createTableAsync:(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> createTableAsync(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;

  public abstract java.util.concurrent.Future<java.lang.Void> createTableAsync(org.apache.hadoop.hbase.client.TableDescriptor, byte[][]) throws java.io.IOException;

  public void deleteTable(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  2            // InterfaceMethod deleteTableAsync:(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> deleteTableAsync(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public void truncateTable(org.apache.hadoop.hbase.TableName, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokeinterface #9,  3            // InterfaceMethod truncateTableAsync:(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> truncateTableAsync(org.apache.hadoop.hbase.TableName, boolean) throws java.io.IOException;

  public void enableTable(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #10,  2           // InterfaceMethod enableTableAsync:(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> enableTableAsync(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract java.util.concurrent.Future<java.lang.Void> disableTableAsync(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public void disableTable(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod disableTableAsync:(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract boolean isTableEnabled(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract boolean isTableDisabled(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract boolean isTableAvailable(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public void addColumnFamily(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.ColumnFamilyDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #12,  3           // InterfaceMethod addColumnFamilyAsync:(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> addColumnFamilyAsync(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.ColumnFamilyDescriptor) throws java.io.IOException;

  public void deleteColumnFamily(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  3           // InterfaceMethod deleteColumnFamilyAsync:(Lorg/apache/hadoop/hbase/TableName;[B)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> deleteColumnFamilyAsync(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public void modifyColumnFamily(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.ColumnFamilyDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #14,  3           // InterfaceMethod modifyColumnFamilyAsync:(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> modifyColumnFamilyAsync(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.ColumnFamilyDescriptor) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.RegionInfo> getRegions(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void flush(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void flushRegion(byte[]) throws java.io.IOException;

  public abstract void flushRegionServer(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void compact(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void compactRegion(byte[]) throws java.io.IOException;

  public abstract void compact(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public abstract void compactRegion(byte[], byte[]) throws java.io.IOException;

  public abstract void compact(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.CompactType) throws java.io.IOException, java.lang.InterruptedException;

  public abstract void compact(org.apache.hadoop.hbase.TableName, byte[], org.apache.hadoop.hbase.client.CompactType) throws java.io.IOException, java.lang.InterruptedException;

  public abstract void majorCompact(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void majorCompactRegion(byte[]) throws java.io.IOException;

  public abstract void majorCompact(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public abstract void majorCompactRegion(byte[], byte[]) throws java.io.IOException;

  public abstract void majorCompact(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.CompactType) throws java.io.IOException, java.lang.InterruptedException;

  public abstract void majorCompact(org.apache.hadoop.hbase.TableName, byte[], org.apache.hadoop.hbase.client.CompactType) throws java.io.IOException, java.lang.InterruptedException;

  public abstract java.util.Map<org.apache.hadoop.hbase.ServerName, java.lang.Boolean> compactionSwitch(boolean, java.util.List<java.lang.String>) throws java.io.IOException;

  public abstract void compactRegionServer(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void majorCompactRegionServer(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void move(byte[]) throws java.io.IOException;

  public void move(byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          19
       9: aload_0
      10: aload_1
      11: invokeinterface #15,  2           // InterfaceMethod move:([B)V
      16: goto          33
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokestatic  #16                 // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
      25: invokestatic  #17                 // Method org/apache/hadoop/hbase/ServerName.valueOf:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
      28: invokeinterface #18,  3           // InterfaceMethod move:([BLorg/apache/hadoop/hbase/ServerName;)V
      33: return

  public abstract void move(byte[], org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void assign(byte[]) throws java.io.IOException;

  public abstract void unassign(byte[], boolean) throws java.io.IOException;

  public abstract void offline(byte[]) throws java.io.IOException;

  public abstract boolean balancerSwitch(boolean, boolean) throws java.io.IOException;

  public abstract boolean balance() throws java.io.IOException;

  public abstract boolean balance(boolean) throws java.io.IOException;

  public abstract boolean isBalancerEnabled() throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.CacheEvictionStats clearBlockCache(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract boolean normalize() throws java.io.IOException;

  public abstract boolean isNormalizerEnabled() throws java.io.IOException;

  public abstract boolean normalizerSwitch(boolean) throws java.io.IOException;

  public abstract boolean catalogJanitorSwitch(boolean) throws java.io.IOException;

  public abstract int runCatalogJanitor() throws java.io.IOException;

  public abstract boolean isCatalogJanitorEnabled() throws java.io.IOException;

  public abstract boolean cleanerChoreSwitch(boolean) throws java.io.IOException;

  public abstract boolean runCleanerChore() throws java.io.IOException;

  public abstract boolean isCleanerChoreEnabled() throws java.io.IOException;

  public java.util.concurrent.Future<java.lang.Void> mergeRegionsAsync(byte[], byte[], boolean) throws java.io.IOException;
    Code:
       0: iconst_2
       1: anewarray     #19                 // class "[B"
       4: astore        4
       6: aload         4
       8: iconst_0
       9: aload_1
      10: aastore
      11: aload         4
      13: iconst_1
      14: aload_2
      15: aastore
      16: aload_0
      17: aload         4
      19: iload_3
      20: invokeinterface #20,  3           // InterfaceMethod mergeRegionsAsync:([[BZ)Ljava/util/concurrent/Future;
      25: areturn

  public abstract java.util.concurrent.Future<java.lang.Void> mergeRegionsAsync(byte[][], boolean) throws java.io.IOException;

  public abstract void split(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void split(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public abstract java.util.concurrent.Future<java.lang.Void> splitRegionAsync(byte[]) throws java.io.IOException;

  public abstract java.util.concurrent.Future<java.lang.Void> splitRegionAsync(byte[], byte[]) throws java.io.IOException;

  public void modifyTable(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #21,  2           // InterfaceMethod modifyTableAsync:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> modifyTableAsync(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;

  public abstract void shutdown() throws java.io.IOException;

  public abstract void stopMaster() throws java.io.IOException;

  public abstract boolean isMasterInMaintenanceMode() throws java.io.IOException;

  public abstract void stopRegionServer(java.lang.String) throws java.io.IOException;

  public org.apache.hadoop.hbase.ClusterMetrics getClusterMetrics() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #22                 // class org/apache/hadoop/hbase/ClusterMetrics$Option
       3: invokestatic  #23                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       6: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      11: areturn

  public abstract org.apache.hadoop.hbase.ClusterMetrics getClusterMetrics(java.util.EnumSet<org.apache.hadoop.hbase.ClusterMetrics$Option>) throws java.io.IOException;

  public org.apache.hadoop.hbase.ServerName getMaster() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.MASTER:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #27,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getMasterName:()Lorg/apache/hadoop/hbase/ServerName;
      17: areturn

  public java.util.Collection<org.apache.hadoop.hbase.ServerName> getBackupMasters() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.BACKUP_MASTERS:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getBackupMasterNames:()Ljava/util/List;
      17: areturn

  public java.util.Collection<org.apache.hadoop.hbase.ServerName> getRegionServers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.LIVE_SERVERS:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getLiveServerMetrics:()Ljava/util/Map;
      17: invokeinterface #32,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: areturn

  public java.util.List<org.apache.hadoop.hbase.RegionMetrics> getRegionMetrics(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokeinterface #33,  3           // InterfaceMethod getRegionMetrics:(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
       8: areturn

  public abstract java.util.List<org.apache.hadoop.hbase.RegionMetrics> getRegionMetrics(org.apache.hadoop.hbase.ServerName, org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract org.apache.hadoop.conf.Configuration getConfiguration();

  public void createNamespace(org.apache.hadoop.hbase.NamespaceDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #34,  2           // InterfaceMethod createNamespaceAsync:(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> createNamespaceAsync(org.apache.hadoop.hbase.NamespaceDescriptor) throws java.io.IOException;

  public void modifyNamespace(org.apache.hadoop.hbase.NamespaceDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  2           // InterfaceMethod modifyNamespaceAsync:(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> modifyNamespaceAsync(org.apache.hadoop.hbase.NamespaceDescriptor) throws java.io.IOException;

  public void deleteNamespace(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #36,  2           // InterfaceMethod deleteNamespaceAsync:(Ljava/lang/String;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> deleteNamespaceAsync(java.lang.String) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.NamespaceDescriptor getNamespaceDescriptor(java.lang.String) throws org.apache.hadoop.hbase.NamespaceNotFoundException, java.io.IOException;

  public abstract java.lang.String[] listNamespaces() throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.NamespaceDescriptor[] listNamespaceDescriptors() throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.TableDescriptor> listTableDescriptorsByNamespace(byte[]) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.TableName[] listTableNamesByNamespace(java.lang.String) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.RegionInfo> getRegions(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void close();

  public abstract java.util.List<org.apache.hadoop.hbase.client.TableDescriptor> listTableDescriptors(java.util.List<org.apache.hadoop.hbase.TableName>) throws java.io.IOException;

  public boolean abortProcedure(long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokeinterface #37,  4           // InterfaceMethod abortProcedureAsync:(JZ)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: checkcast     #38                 // class java/lang/Boolean
      24: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  public abstract java.util.concurrent.Future<java.lang.Boolean> abortProcedureAsync(long, boolean) throws java.io.IOException;

  public abstract java.lang.String getProcedures() throws java.io.IOException;

  public abstract java.lang.String getLocks() throws java.io.IOException;

  public abstract void rollWALWriter(org.apache.hadoop.hbase.ServerName) throws java.io.IOException, org.apache.hadoop.hbase.regionserver.wal.FailedLogCloseException;

  public java.util.List<java.lang.String> getMasterCoprocessorNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #40                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.MASTER_COPROCESSORS:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #41,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getMasterCoprocessorNames:()Ljava/util/List;
      17: areturn

  public abstract org.apache.hadoop.hbase.client.CompactionState getCompactionState(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.CompactionState getCompactionState(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.CompactType) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.client.CompactionState getCompactionStateForRegion(byte[]) throws java.io.IOException;

  public abstract long getLastMajorCompactionTimestamp(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract long getLastMajorCompactionTimestampForRegion(byte[]) throws java.io.IOException;

  public void snapshot(java.lang.String, org.apache.hadoop.hbase.TableName) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.SnapshotCreationException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #42                 // Field org/apache/hadoop/hbase/client/SnapshotType.FLUSH:Lorg/apache/hadoop/hbase/client/SnapshotType;
       6: invokeinterface #43,  4           // InterfaceMethod snapshot:(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/SnapshotType;)V
      11: return

  public void snapshot(java.lang.String, org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.client.SnapshotType) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.SnapshotCreationException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: new           #44                 // class org/apache/hadoop/hbase/client/SnapshotDescription
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #45                 // Method org/apache/hadoop/hbase/client/SnapshotDescription."<init>":(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/SnapshotType;)V
      11: invokeinterface #46,  2           // InterfaceMethod snapshot:(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
      16: return

  public abstract void snapshot(org.apache.hadoop.hbase.client.SnapshotDescription) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.SnapshotCreationException, java.lang.IllegalArgumentException;

  public abstract java.util.concurrent.Future<java.lang.Void> snapshotAsync(org.apache.hadoop.hbase.client.SnapshotDescription) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.SnapshotCreationException;

  public abstract boolean isSnapshotFinished(org.apache.hadoop.hbase.client.SnapshotDescription) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.HBaseSnapshotException, org.apache.hadoop.hbase.snapshot.UnknownSnapshotException;

  public abstract void restoreSnapshot(java.lang.String) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;

  public void restoreSnapshot(java.lang.String, boolean) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokeinterface #47,  4           // InterfaceMethod restoreSnapshot:(Ljava/lang/String;ZZ)V
       9: return

  public abstract void restoreSnapshot(java.lang.String, boolean, boolean) throws java.io.IOException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;

  public void cloneSnapshot(java.lang.String, org.apache.hadoop.hbase.TableName) throws java.io.IOException, org.apache.hadoop.hbase.TableExistsException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #48,  4           // InterfaceMethod cloneSnapshot:(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Z)V
       9: return

  public void cloneSnapshot(java.lang.String, org.apache.hadoop.hbase.TableName, boolean) throws java.io.IOException, org.apache.hadoop.hbase.TableExistsException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokeinterface #49,  4           // InterfaceMethod cloneSnapshotAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/concurrent/Future;
       9: aload_0
      10: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      15: i2l
      16: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      22: pop
      23: return

  public java.util.concurrent.Future<java.lang.Void> cloneSnapshotAsync(java.lang.String, org.apache.hadoop.hbase.TableName) throws java.io.IOException, org.apache.hadoop.hbase.TableExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #49,  4           // InterfaceMethod cloneSnapshotAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/concurrent/Future;
       9: areturn

  public abstract java.util.concurrent.Future<java.lang.Void> cloneSnapshotAsync(java.lang.String, org.apache.hadoop.hbase.TableName, boolean) throws java.io.IOException, org.apache.hadoop.hbase.TableExistsException, org.apache.hadoop.hbase.snapshot.RestoreSnapshotException;

  public abstract void execProcedure(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;

  public abstract byte[] execProcedureWithReturn(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;

  public abstract boolean isProcedureFinished(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.SnapshotDescription> listSnapshots() throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.SnapshotDescription> listSnapshots(java.util.regex.Pattern) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.SnapshotDescription> listTableSnapshots(java.util.regex.Pattern, java.util.regex.Pattern) throws java.io.IOException;

  public abstract void deleteSnapshot(java.lang.String) throws java.io.IOException;

  public abstract void deleteSnapshots(java.util.regex.Pattern) throws java.io.IOException;

  public abstract void deleteTableSnapshots(java.util.regex.Pattern, java.util.regex.Pattern) throws java.io.IOException;

  public abstract void setQuota(org.apache.hadoop.hbase.quotas.QuotaSettings) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.quotas.QuotaSettings> getQuota(org.apache.hadoop.hbase.quotas.QuotaFilter) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel coprocessorService();

  public abstract org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel coprocessorService(org.apache.hadoop.hbase.ServerName);

  public abstract void updateConfiguration(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void updateConfiguration() throws java.io.IOException;

  public int getMasterInfoPort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #50                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.MASTER_INFO_PORT:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #51,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getMasterInfoPort:()I
      17: ireturn

  public abstract java.util.List<org.apache.hadoop.hbase.client.security.SecurityCapability> getSecurityCapabilities() throws java.io.IOException;

  public abstract boolean splitSwitch(boolean, boolean) throws java.io.IOException;

  public abstract boolean mergeSwitch(boolean, boolean) throws java.io.IOException;

  public abstract boolean isSplitEnabled() throws java.io.IOException;

  public abstract boolean isMergeEnabled() throws java.io.IOException;

  public void addReplicationPeer(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokeinterface #52,  4           // InterfaceMethod addReplicationPeer:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
       9: return

  public void addReplicationPeer(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokeinterface #53,  4           // InterfaceMethod addReplicationPeerAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)Ljava/util/concurrent/Future;
       9: aload_0
      10: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      15: i2l
      16: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      22: pop
      23: return

  public java.util.concurrent.Future<java.lang.Void> addReplicationPeerAsync(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokeinterface #53,  4           // InterfaceMethod addReplicationPeerAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)Ljava/util/concurrent/Future;
       9: areturn

  public abstract java.util.concurrent.Future<java.lang.Void> addReplicationPeerAsync(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig, boolean) throws java.io.IOException;

  public void removeReplicationPeer(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #54,  2           // InterfaceMethod removeReplicationPeerAsync:(Ljava/lang/String;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> removeReplicationPeerAsync(java.lang.String) throws java.io.IOException;

  public void enableReplicationPeer(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #55,  2           // InterfaceMethod enableReplicationPeerAsync:(Ljava/lang/String;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> enableReplicationPeerAsync(java.lang.String) throws java.io.IOException;

  public void disableReplicationPeer(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  2           // InterfaceMethod disableReplicationPeerAsync:(Ljava/lang/String;)Ljava/util/concurrent/Future;
       7: aload_0
       8: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      13: i2l
      14: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      20: pop
      21: return

  public abstract java.util.concurrent.Future<java.lang.Void> disableReplicationPeerAsync(java.lang.String) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.replication.ReplicationPeerConfig getReplicationPeerConfig(java.lang.String) throws java.io.IOException;

  public void updateReplicationPeerConfig(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #57,  3           // InterfaceMethod updateReplicationPeerConfigAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> updateReplicationPeerConfigAsync(java.lang.String, org.apache.hadoop.hbase.replication.ReplicationPeerConfig) throws java.io.IOException;

  public void appendReplicationPeerTableCFs(java.lang.String, java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>>) throws org.apache.hadoop.hbase.replication.ReplicationException, java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #58                 // class org/apache/hadoop/hbase/replication/ReplicationException
       7: dup
       8: ldc           #59                 // String tableCfs is null
      10: invokespecial #60                 // Method org/apache/hadoop/hbase/replication/ReplicationException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokeinterface #61,  2           // InterfaceMethod getReplicationPeerConfig:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
      21: astore_3
      22: aload_2
      23: aload_3
      24: invokestatic  #62                 // Method org/apache/hadoop/hbase/client/replication/ReplicationPeerConfigUtil.appendTableCFsToReplicationPeerConfig:(Ljava/util/Map;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
      27: astore        4
      29: aload_0
      30: aload_1
      31: aload         4
      33: invokeinterface #63,  3           // InterfaceMethod updateReplicationPeerConfig:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
      38: return

  public void removeReplicationPeerTableCFs(java.lang.String, java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>>) throws org.apache.hadoop.hbase.replication.ReplicationException, java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #58                 // class org/apache/hadoop/hbase/replication/ReplicationException
       7: dup
       8: ldc           #59                 // String tableCfs is null
      10: invokespecial #60                 // Method org/apache/hadoop/hbase/replication/ReplicationException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokeinterface #61,  2           // InterfaceMethod getReplicationPeerConfig:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
      21: astore_3
      22: aload_2
      23: aload_3
      24: aload_1
      25: invokestatic  #64                 // Method org/apache/hadoop/hbase/client/replication/ReplicationPeerConfigUtil.removeTableCFsFromReplicationPeerConfig:(Ljava/util/Map;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
      28: astore        4
      30: aload_0
      31: aload_1
      32: aload         4
      34: invokeinterface #63,  3           // InterfaceMethod updateReplicationPeerConfig:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
      39: return

  public abstract java.util.List<org.apache.hadoop.hbase.replication.ReplicationPeerDescription> listReplicationPeers() throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.replication.ReplicationPeerDescription> listReplicationPeers(java.util.regex.Pattern) throws java.io.IOException;

  public void transitReplicationPeerSyncReplicationState(java.lang.String, org.apache.hadoop.hbase.replication.SyncReplicationState) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #65,  3           // InterfaceMethod transitReplicationPeerSyncReplicationStateAsync:(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)Ljava/util/concurrent/Future;
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod getSyncWaitTimeout:()I
      14: i2l
      15: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/FutureUtils.get:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: pop
      22: return

  public abstract java.util.concurrent.Future<java.lang.Void> transitReplicationPeerSyncReplicationStateAsync(java.lang.String, org.apache.hadoop.hbase.replication.SyncReplicationState) throws java.io.IOException;

  public org.apache.hadoop.hbase.replication.SyncReplicationState getReplicationPeerSyncReplicationState(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokeinterface #67,  2           // InterfaceMethod listReplicationPeers:(Ljava/util/regex/Pattern;)Ljava/util/List;
      10: astore_2
      11: aload_2
      12: invokeinterface #68,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifne          40
      20: aload_2
      21: iconst_0
      22: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: checkcast     #70                 // class org/apache/hadoop/hbase/replication/ReplicationPeerDescription
      30: invokevirtual #71                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerDescription.getPeerId:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifne          72
      40: new           #73                 // class java/io/IOException
      43: dup
      44: new           #74                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #76                 // String Replication peer
      53: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #78                 // String  does not exist
      62: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #80                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_2
      73: iconst_0
      74: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      79: checkcast     #70                 // class org/apache/hadoop/hbase/replication/ReplicationPeerDescription
      82: invokevirtual #81                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerDescription.getSyncReplicationState:()Lorg/apache/hadoop/hbase/replication/SyncReplicationState;
      85: areturn

  public abstract void decommissionRegionServers(java.util.List<org.apache.hadoop.hbase.ServerName>, boolean) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.ServerName> listDecommissionedRegionServers() throws java.io.IOException;

  public abstract void recommissionRegionServer(org.apache.hadoop.hbase.ServerName, java.util.List<byte[]>) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.client.replication.TableCFs> listReplicatedTableCFs() throws java.io.IOException;

  public abstract void enableTableReplication(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void disableTableReplication(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void clearCompactionQueues(org.apache.hadoop.hbase.ServerName, java.util.Set<java.lang.String>) throws java.io.IOException, java.lang.InterruptedException;

  public java.util.List<org.apache.hadoop.hbase.ServerName> listDeadServers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #82                 // Field org/apache/hadoop/hbase/ClusterMetrics$Option.DEAD_SERVERS:Lorg/apache/hadoop/hbase/ClusterMetrics$Option;
       4: invokestatic  #26                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       7: invokeinterface #24,  2           // InterfaceMethod getClusterMetrics:(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
      12: invokeinterface #83,  1           // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getDeadServerNames:()Ljava/util/List;
      17: areturn

  public abstract java.util.List<org.apache.hadoop.hbase.ServerName> clearDeadServers(java.util.List<org.apache.hadoop.hbase.ServerName>) throws java.io.IOException;

  public abstract void cloneTableSchema(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.TableName, boolean) throws java.io.IOException;

  public abstract boolean switchRpcThrottle(boolean) throws java.io.IOException;

  public abstract boolean isRpcThrottleEnabled() throws java.io.IOException;

  public abstract boolean exceedThrottleQuotaSwitch(boolean) throws java.io.IOException;

  public abstract java.util.Map<org.apache.hadoop.hbase.TableName, java.lang.Long> getSpaceQuotaTableSizes() throws java.io.IOException;

  public abstract java.util.Map<org.apache.hadoop.hbase.TableName, ? extends org.apache.hadoop.hbase.quotas.SpaceQuotaSnapshotView> getRegionServerSpaceQuotaSnapshots(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.quotas.SpaceQuotaSnapshotView getCurrentSpaceQuotaSnapshot(java.lang.String) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.quotas.SpaceQuotaSnapshotView getCurrentSpaceQuotaSnapshot(org.apache.hadoop.hbase.TableName) throws java.io.IOException;

  public abstract void grant(org.apache.hadoop.hbase.security.access.UserPermission, boolean) throws java.io.IOException;

  public abstract void revoke(org.apache.hadoop.hbase.security.access.UserPermission) throws java.io.IOException;

  public abstract java.util.List<org.apache.hadoop.hbase.security.access.UserPermission> getUserPermissions(org.apache.hadoop.hbase.security.access.GetUserPermissionsRequest) throws java.io.IOException;

  public abstract java.util.List<java.lang.Boolean> hasUserPermissions(java.lang.String, java.util.List<org.apache.hadoop.hbase.security.access.Permission>) throws java.io.IOException;

  public java.util.List<java.lang.Boolean> hasUserPermissions(java.util.List<org.apache.hadoop.hbase.security.access.Permission>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokeinterface #84,  3           // InterfaceMethod hasUserPermissions:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       8: areturn
}
