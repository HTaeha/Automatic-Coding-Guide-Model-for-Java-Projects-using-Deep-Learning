Compiled from "TestHStore.java"
public class org.apache.hadoop.hbase.regionserver.TestHStore$MyCompactingMemStoreWithCustomCompactor extends org.apache.hadoop.hbase.regionserver.CompactingMemStore {
  public org.apache.hadoop.hbase.regionserver.TestHStore$MyCompactingMemStoreWithCustomCompactor(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.CellComparatorImpl, org.apache.hadoop.hbase.regionserver.HStore, org.apache.hadoop.hbase.regionserver.RegionServicesForStores, org.apache.hadoop.hbase.MemoryCompactionPolicy) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method org/apache/hadoop/hbase/regionserver/CompactingMemStore."<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;Lorg/apache/hadoop/hbase/MemoryCompactionPolicy;)V
      11: return

  protected org.apache.hadoop.hbase.regionserver.MemStoreCompactor createMemStoreCompactor(org.apache.hadoop.hbase.MemoryCompactionPolicy) throws org.apache.hadoop.hbase.exceptions.IllegalArgumentIOException;
    Code:
       0: new           #3                  // class org/apache/hadoop/hbase/regionserver/TestHStore$MyMemStoreCompactor
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #4                  // Method org/apache/hadoop/hbase/regionserver/TestHStore$MyMemStoreCompactor."<init>":(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore;Lorg/apache/hadoop/hbase/MemoryCompactionPolicy;)V
       9: areturn

  protected boolean setInMemoryCompactionFlag();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/hadoop/hbase/regionserver/CompactingMemStore.setInMemoryCompactionFlag:()Z
       4: istore_1
       5: iload_1
       6: ifeq          59
       9: getstatic     #1                  // Field RUNNER_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
      12: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      15: pop
      16: invokestatic  #7                  // Method org/apache/hadoop/hbase/regionserver/TestHStore.access$100:()Lorg/slf4j/Logger;
      19: invokeinterface #8,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      24: ifeq          59
      27: invokestatic  #7                  // Method org/apache/hadoop/hbase/regionserver/TestHStore.access$100:()Lorg/slf4j/Logger;
      30: new           #9                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #11                 // String runner count:
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: getstatic     #1                  // Field RUNNER_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
      45: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      48: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #16,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      59: iload_1
      60: ireturn

  static java.util.concurrent.atomic.AtomicInteger access$600();
    Code:
       0: getstatic     #1                  // Field RUNNER_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  static {};
    Code:
       0: new           #17                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #18                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #1                  // Field RUNNER_COUNT:Ljava/util/concurrent/atomic/AtomicInteger;
      11: return
}
