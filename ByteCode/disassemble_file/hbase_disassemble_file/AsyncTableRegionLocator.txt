Compiled from "AsyncTableRegionLocator.java"
public interface org.apache.hadoop.hbase.client.AsyncTableRegionLocator {
  public abstract org.apache.hadoop.hbase.TableName getName();

  public java.util.concurrent.CompletableFuture<org.apache.hadoop.hbase.HRegionLocation> getRegionLocation(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #1,  3            // InterfaceMethod getRegionLocation:([BZ)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public java.util.concurrent.CompletableFuture<org.apache.hadoop.hbase.HRegionLocation> getRegionLocation(byte[], boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iload_2
       4: invokeinterface #3,  4            // InterfaceMethod getRegionLocation:([BIZ)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.apache.hadoop.hbase.HRegionLocation> getRegionLocation(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokeinterface #3,  4            // InterfaceMethod getRegionLocation:([BIZ)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public abstract java.util.concurrent.CompletableFuture<org.apache.hadoop.hbase.HRegionLocation> getRegionLocation(byte[], int, boolean);

  public java.util.concurrent.CompletableFuture<java.util.List<org.apache.hadoop.hbase.HRegionLocation>> getRegionLocations(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #4,  3            // InterfaceMethod getRegionLocations:([BZ)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.apache.hadoop.hbase.HRegionLocation>> getRegionLocations(byte[], boolean);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.apache.hadoop.hbase.HRegionLocation>> getAllRegionLocations();

  public java.util.concurrent.CompletableFuture<java.util.List<byte[]>> getStartKeys() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #5,  1            // InterfaceMethod getStartEndKeys:()Ljava/util/concurrent/CompletableFuture;
       6: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokevirtual #7                  // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<byte[]>> getEndKeys() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #5,  1            // InterfaceMethod getStartEndKeys:()Ljava/util/concurrent/CompletableFuture;
       6: invokedynamic #8,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokevirtual #7                  // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<org.apache.hadoop.hbase.util.Pair<byte[], byte[]>>> getStartEndKeys() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod getAllRegionLocations:()Ljava/util/concurrent/CompletableFuture;
       6: invokedynamic #10,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      11: invokevirtual #7                  // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      14: areturn

  public abstract void clearRegionLocationCache();
}
