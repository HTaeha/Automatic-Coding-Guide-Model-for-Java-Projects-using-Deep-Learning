Compiled from "PrivateCellUtil.java"
class org.apache.hadoop.hbase.PrivateCellUtil$TagRewriteCell implements org.apache.hadoop.hbase.ExtendedCell {
  protected org.apache.hadoop.hbase.Cell cell;

  protected byte[] tags;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.PrivateCellUtil$TagRewriteCell(org.apache.hadoop.hbase.Cell, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field $assertionsDisabled:Z
       7: ifne          25
      10: aload_1
      11: instanceof    #3                  // class org/apache/hadoop/hbase/ExtendedCell
      14: ifne          25
      17: new           #4                  // class java/lang/AssertionError
      20: dup
      21: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: getstatic     #2                  // Field $assertionsDisabled:Z
      28: ifne          43
      31: aload_2
      32: ifnonnull     43
      35: new           #4                  // class java/lang/AssertionError
      38: dup
      39: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: aload_0
      44: aload_1
      45: putfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
      48: aload_0
      49: aload_2
      50: putfield      #7                  // Field tags:[B
      53: aload_0
      54: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
      57: instanceof    #8                  // class org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteCell
      60: ifeq          74
      63: aload_0
      64: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
      67: checkcast     #8                  // class org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteCell
      70: aconst_null
      71: putfield      #7                  // Field tags:[B
      74: return

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowArray:()[B
       9: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowOffset:()I
       9: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getRowLength:()S
       9: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyArray:()[B
       9: areturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyOffset:()I
       9: ireturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getFamilyLength:()B
       9: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
       9: areturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
       9: ireturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
       9: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getTimestamp:()J
       9: lreturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getTypeByte:()B
       9: ireturn

  public long getSequenceId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #20,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getSequenceId:()J
       9: lreturn

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueArray:()[B
       9: areturn

  public int getValueOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueOffset:()I
       9: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getValueLength:()I
       9: ireturn

  public byte[] getTagsArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field tags:[B
       4: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getTagsLength();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field tags:[B
       5: if_acmpne     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #7                  // Field tags:[B
      14: arraylength
      15: ireturn

  public long heapSize();
    Code:
       0: getstatic     #24                 // Field HEAP_SIZE_OVERHEAD:I
       3: i2l
       4: aload_0
       5: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       8: invokeinterface #25,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.heapSize:()J
      13: ladd
      14: lstore_1
      15: aload_0
      16: getfield      #7                  // Field tags:[B
      19: ifnull        32
      22: lload_1
      23: aload_0
      24: getfield      #7                  // Field tags:[B
      27: invokestatic  #26                 // Method org/apache/hadoop/hbase/util/ClassSize.sizeOf:([B)J
      30: ladd
      31: lstore_1
      32: lload_1
      33: lreturn

  public void setTimestamp(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: lload_1
       5: invokestatic  #27                 // Method org/apache/hadoop/hbase/PrivateCellUtil.setTimestamp:(Lorg/apache/hadoop/hbase/Cell;J)V
       8: return

  public void setTimestamp(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: aload_1
       5: invokestatic  #28                 // Method org/apache/hadoop/hbase/PrivateCellUtil.setTimestamp:(Lorg/apache/hadoop/hbase/Cell;[B)V
       8: return

  public void setSequenceId(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: lload_1
       5: invokestatic  #29                 // Method org/apache/hadoop/hbase/PrivateCellUtil.setSequenceId:(Lorg/apache/hadoop/hbase/Cell;J)V
       8: return

  public int write(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: checkcast     #3                  // class org/apache/hadoop/hbase/ExtendedCell
       7: aload_1
       8: iconst_0
       9: invokeinterface #30,  3           // InterfaceMethod org/apache/hadoop/hbase/ExtendedCell.write:(Ljava/io/OutputStream;Z)I
      14: istore_3
      15: iload_2
      16: ifeq          75
      19: aload_0
      20: getfield      #7                  // Field tags:[B
      23: ifnull        75
      26: aload_1
      27: sipush        255
      30: aload_0
      31: getfield      #7                  // Field tags:[B
      34: arraylength
      35: bipush        8
      37: ishr
      38: iand
      39: i2b
      40: invokevirtual #31                 // Method java/io/OutputStream.write:(I)V
      43: aload_1
      44: sipush        255
      47: aload_0
      48: getfield      #7                  // Field tags:[B
      51: arraylength
      52: iand
      53: i2b
      54: invokevirtual #31                 // Method java/io/OutputStream.write:(I)V
      57: aload_1
      58: aload_0
      59: getfield      #7                  // Field tags:[B
      62: invokevirtual #32                 // Method java/io/OutputStream.write:([B)V
      65: iload_3
      66: iconst_2
      67: aload_0
      68: getfield      #7                  // Field tags:[B
      71: arraylength
      72: iadd
      73: iadd
      74: istore_3
      75: iload_3
      76: ireturn

  public int getSerializedSize(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: checkcast     #3                  // class org/apache/hadoop/hbase/ExtendedCell
       7: iconst_0
       8: invokeinterface #34,  2           // InterfaceMethod org/apache/hadoop/hbase/ExtendedCell.getSerializedSize:(Z)I
      13: istore_2
      14: iload_1
      15: ifeq          35
      18: aload_0
      19: getfield      #7                  // Field tags:[B
      22: ifnull        35
      25: iload_2
      26: iconst_2
      27: aload_0
      28: getfield      #7                  // Field tags:[B
      31: arraylength
      32: iadd
      33: iadd
      34: istore_2
      35: iload_2
      36: ireturn

  public void write(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: aload_1
       5: iload_2
       6: iconst_0
       7: invokestatic  #35                 // Method org/apache/hadoop/hbase/KeyValueUtil.appendTo:(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;IZ)I
      10: istore_2
      11: aload_0
      12: getfield      #7                  // Field tags:[B
      15: ifnonnull     22
      18: iconst_0
      19: goto          27
      22: aload_0
      23: getfield      #7                  // Field tags:[B
      26: arraylength
      27: istore_3
      28: iload_3
      29: ifle          50
      32: aload_1
      33: iload_2
      34: iload_3
      35: invokestatic  #36                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.putAsShort:(Ljava/nio/ByteBuffer;II)I
      38: istore_2
      39: aload_1
      40: iload_2
      41: aload_0
      42: getfield      #7                  // Field tags:[B
      45: iconst_0
      46: iload_3
      47: invokestatic  #37                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromArrayToBuffer:(Ljava/nio/ByteBuffer;I[BII)V
      50: return

  public org.apache.hadoop.hbase.ExtendedCell deepClone();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cell:Lorg/apache/hadoop/hbase/Cell;
       4: checkcast     #3                  // class org/apache/hadoop/hbase/ExtendedCell
       7: invokeinterface #38,  1           // InterfaceMethod org/apache/hadoop/hbase/ExtendedCell.deepClone:()Lorg/apache/hadoop/hbase/ExtendedCell;
      12: astore_1
      13: new           #8                  // class org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteCell
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #7                  // Field tags:[B
      22: invokespecial #39                 // Method "<init>":(Lorg/apache/hadoop/hbase/Cell;[B)V
      25: areturn

  static {};
    Code:
       0: ldc           #40                 // class org/apache/hadoop/hbase/PrivateCellUtil
       2: invokevirtual #41                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #2                  // Field $assertionsDisabled:Z
      16: getstatic     #42                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
      19: iconst_2
      20: getstatic     #43                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
      23: imul
      24: iadd
      25: putstatic     #24                 // Field HEAP_SIZE_OVERHEAD:I
      28: return
}
