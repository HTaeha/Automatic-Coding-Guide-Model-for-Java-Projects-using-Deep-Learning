Compiled from "MetaLocationSyncer.java"
public class org.apache.hadoop.hbase.master.zksyncer.MetaLocationSyncer extends org.apache.hadoop.hbase.master.zksyncer.ClientZKSyncer {
  public org.apache.hadoop.hbase.master.zksyncer.MetaLocationSyncer(org.apache.hadoop.hbase.zookeeper.ZKWatcher, org.apache.hadoop.hbase.zookeeper.ZKWatcher, org.apache.hadoop.hbase.Server);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/hadoop/hbase/master/zksyncer/ClientZKSyncer."<init>":(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Server;)V
       7: return

  boolean validate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field watcher:Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
       4: invokevirtual #3                  // Method org/apache/hadoop/hbase/zookeeper/ZKWatcher.getZNodePaths:()Lorg/apache/hadoop/hbase/zookeeper/ZNodePaths;
       7: aload_1
       8: invokevirtual #4                  // Method org/apache/hadoop/hbase/zookeeper/ZNodePaths.isAnyMetaReplicaZNode:(Ljava/lang/String;)Z
      11: ireturn

  java.util.Collection<java.lang.String> getNodesToWatch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field watcher:Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
       4: invokevirtual #3                  // Method org/apache/hadoop/hbase/zookeeper/ZKWatcher.getZNodePaths:()Lorg/apache/hadoop/hbase/zookeeper/ZNodePaths;
       7: getfield      #5                  // Field org/apache/hadoop/hbase/zookeeper/ZNodePaths.metaReplicaZNodes:Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableMap;
      10: invokevirtual #6                  // Method org/apache/hbase/thirdparty/com/google/common/collect/ImmutableMap.values:()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableCollection;
      13: areturn
}
