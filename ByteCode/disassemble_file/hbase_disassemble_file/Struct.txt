Compiled from "Struct.java"
public class org.apache.hadoop.hbase.types.Struct implements org.apache.hadoop.hbase.types.DataType<java.lang.Object[]> {
  protected final org.apache.hadoop.hbase.types.DataType[] fields;

  protected final boolean isOrderPreserving;

  protected final boolean isSkippable;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.types.Struct(org.apache.hadoop.hbase.types.DataType[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
       9: iconst_1
      10: istore_2
      11: iconst_1
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: aload_0
      19: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      22: arraylength
      23: if_icmpge     120
      26: aload_0
      27: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      30: iload         4
      32: aaload
      33: astore        5
      35: aload         5
      37: invokeinterface #3,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isOrderPreserving:()Z
      42: ifne          47
      45: iconst_0
      46: istore_2
      47: iload         4
      49: aload_0
      50: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      53: arraylength
      54: iconst_2
      55: isub
      56: if_icmpge     102
      59: aload         5
      61: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isSkippable:()Z
      66: ifne          102
      69: new           #5                  // class java/lang/IllegalArgumentException
      72: dup
      73: new           #6                  // class java/lang/StringBuilder
      76: dup
      77: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #8                  // String Field in position
      82: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload         4
      87: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: ldc           #11                 // String  is not skippable. Non-right-most struct fields must be skippable.
      92: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         5
     104: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isSkippable:()Z
     109: ifne          114
     112: iconst_0
     113: istore_3
     114: iinc          4, 1
     117: goto          16
     120: aload_0
     121: iload_2
     122: putfield      #14                 // Field isOrderPreserving:Z
     125: aload_0
     126: iload_3
     127: putfield      #15                 // Field isSkippable:Z
     130: return

  public boolean isOrderPreserving();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isOrderPreserving:Z
       4: ireturn

  public org.apache.hadoop.hbase.util.Order getOrder();
    Code:
       0: aconst_null
       1: areturn

  public boolean isNullable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSkippable();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isSkippable:Z
       4: ireturn

  public int encodedLength(java.lang.Object[]);
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      10: arraylength
      11: aload_1
      12: arraylength
      13: if_icmpge     24
      16: new           #17                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: iconst_0
      25: istore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: aload_1
      30: arraylength
      31: if_icmpge     57
      34: iload_2
      35: aload_0
      36: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      39: iload_3
      40: aaload
      41: aload_1
      42: iload_3
      43: aaload
      44: invokeinterface #19,  2           // InterfaceMethod org/apache/hadoop/hbase/types/DataType.encodedLength:(Ljava/lang/Object;)I
      49: iadd
      50: istore_2
      51: iinc          3, 1
      54: goto          28
      57: iload_2
      58: ireturn

  public java.lang.Class<java.lang.Object[]> encodedClass();
    Code:
       0: ldc           #20                 // class "[Ljava/lang/Object;"
       2: areturn

  public org.apache.hadoop.hbase.types.StructIterator iterator(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: new           #21                 // class org/apache/hadoop/hbase/types/StructIterator
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
       9: invokespecial #22                 // Method org/apache/hadoop/hbase/types/StructIterator."<init>":(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[Lorg/apache/hadoop/hbase/types/DataType;)V
      12: areturn

  public int skip(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method iterator:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lorg/apache/hadoop/hbase/types/StructIterator;
       5: astore_2
       6: iconst_0
       7: istore_3
       8: aload_2
       9: invokevirtual #24                 // Method org/apache/hadoop/hbase/types/StructIterator.hasNext:()Z
      12: ifeq          25
      15: iload_3
      16: aload_2
      17: invokevirtual #25                 // Method org/apache/hadoop/hbase/types/StructIterator.skip:()I
      20: iadd
      21: istore_3
      22: goto          8
      25: iload_3
      26: ireturn

  public java.lang.Object[] decode(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
       6: arraylength
       7: anewarray     #26                 // class java/lang/Object
      10: astore_3
      11: aload_0
      12: aload_1
      13: invokevirtual #23                 // Method iterator:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lorg/apache/hadoop/hbase/types/StructIterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          44
      28: aload_3
      29: iload_2
      30: iinc          2, 1
      33: aload         4
      35: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: aastore
      41: goto          18
      44: aload_3
      45: areturn

  public java.lang.Object decode(org.apache.hadoop.hbase.util.PositionedByteRange, int);
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_2
       7: ifge          18
      10: new           #17                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.shallowCopy:()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
      25: invokevirtual #23                 // Method iterator:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lorg/apache/hadoop/hbase/types/StructIterator;
      28: astore_3
      29: iload_2
      30: ifle          44
      33: aload_3
      34: invokevirtual #25                 // Method org/apache/hadoop/hbase/types/StructIterator.skip:()I
      37: pop
      38: iinc          2, -1
      41: goto          29
      44: aload_3
      45: invokevirtual #30                 // Method org/apache/hadoop/hbase/types/StructIterator.next:()Ljava/lang/Object;
      48: areturn

  public int encode(org.apache.hadoop.hbase.util.PositionedByteRange, java.lang.Object[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifne          7
       5: iconst_0
       6: ireturn
       7: getstatic     #16                 // Field $assertionsDisabled:Z
      10: ifne          31
      13: aload_0
      14: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      17: arraylength
      18: aload_2
      19: arraylength
      20: if_icmpge     31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: iconst_0
      32: istore        4
      34: aload_2
      35: arraylength
      36: iconst_1
      37: isub
      38: istore_3
      39: iload_3
      40: iconst_m1
      41: if_icmple     81
      44: aconst_null
      45: aload_2
      46: iload_3
      47: aaload
      48: if_acmpne     81
      51: aconst_null
      52: aload_2
      53: iload_3
      54: aaload
      55: if_acmpne     75
      58: aload_0
      59: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      62: iload_3
      63: aaload
      64: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isNullable:()Z
      69: ifne          75
      72: goto          81
      75: iinc          3, -1
      78: goto          39
      81: iconst_0
      82: istore        5
      84: iload         5
      86: iload_3
      87: if_icmpgt     118
      90: iload         4
      92: aload_0
      93: getfield      #2                  // Field fields:[Lorg/apache/hadoop/hbase/types/DataType;
      96: iload         5
      98: aaload
      99: aload_1
     100: aload_2
     101: iload         5
     103: aaload
     104: invokeinterface #32,  3           // InterfaceMethod org/apache/hadoop/hbase/types/DataType.encode:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
     109: iadd
     110: istore        4
     112: iinc          5, 1
     115: goto          84
     118: iload         4
     120: ireturn

  public int encode(org.apache.hadoop.hbase.util.PositionedByteRange, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #20                 // class "[Ljava/lang/Object;"
       6: invokevirtual #33                 // Method encode:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[Ljava/lang/Object;)I
       9: ireturn

  public java.lang.Object decode(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method decode:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[Ljava/lang/Object;
       5: areturn

  public int encodedLength(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class "[Ljava/lang/Object;"
       5: invokevirtual #35                 // Method encodedLength:([Ljava/lang/Object;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #36                 // class org/apache/hadoop/hbase/types/Struct
       2: invokevirtual #37                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #16                 // Field $assertionsDisabled:Z
      16: return
}
