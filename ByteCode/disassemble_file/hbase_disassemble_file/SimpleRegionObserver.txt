Compiled from "SimpleRegionObserver.java"
public class org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver implements org.apache.hadoop.hbase.coprocessor.RegionCoprocessor,org.apache.hadoop.hbase.coprocessor.RegionObserver {
  final java.util.concurrent.atomic.AtomicInteger ctBeforeDelete;

  final java.util.concurrent.atomic.AtomicInteger ctPreOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPostOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPreClose;

  final java.util.concurrent.atomic.AtomicInteger ctPostClose;

  final java.util.concurrent.atomic.AtomicInteger ctPreFlush;

  final java.util.concurrent.atomic.AtomicInteger ctPostFlush;

  final java.util.concurrent.atomic.AtomicInteger ctPreCompactSelect;

  final java.util.concurrent.atomic.AtomicInteger ctPostCompactSelect;

  final java.util.concurrent.atomic.AtomicInteger ctPreCompact;

  final java.util.concurrent.atomic.AtomicInteger ctPostCompact;

  final java.util.concurrent.atomic.AtomicInteger ctPreGet;

  final java.util.concurrent.atomic.AtomicInteger ctPostGet;

  final java.util.concurrent.atomic.AtomicInteger ctPrePut;

  final java.util.concurrent.atomic.AtomicInteger ctPostPut;

  final java.util.concurrent.atomic.AtomicInteger ctPreDeleted;

  final java.util.concurrent.atomic.AtomicInteger ctPrePrepareDeleteTS;

  final java.util.concurrent.atomic.AtomicInteger ctPostDeleted;

  final java.util.concurrent.atomic.AtomicInteger ctPreIncrement;

  final java.util.concurrent.atomic.AtomicInteger ctPreIncrementAfterRowLock;

  final java.util.concurrent.atomic.AtomicInteger ctPreAppend;

  final java.util.concurrent.atomic.AtomicInteger ctPreAppendAfterRowLock;

  final java.util.concurrent.atomic.AtomicInteger ctPostIncrement;

  final java.util.concurrent.atomic.AtomicInteger ctPostAppend;

  final java.util.concurrent.atomic.AtomicInteger ctPreCheckAndPut;

  final java.util.concurrent.atomic.AtomicInteger ctPreCheckAndPutAfterRowLock;

  final java.util.concurrent.atomic.AtomicInteger ctPostCheckAndPut;

  final java.util.concurrent.atomic.AtomicInteger ctPreCheckAndDelete;

  final java.util.concurrent.atomic.AtomicInteger ctPreCheckAndDeleteAfterRowLock;

  final java.util.concurrent.atomic.AtomicInteger ctPostCheckAndDelete;

  final java.util.concurrent.atomic.AtomicInteger ctPreScannerNext;

  final java.util.concurrent.atomic.AtomicInteger ctPostScannerNext;

  final java.util.concurrent.atomic.AtomicInteger ctPostScannerFilterRow;

  final java.util.concurrent.atomic.AtomicInteger ctPreScannerClose;

  final java.util.concurrent.atomic.AtomicInteger ctPostScannerClose;

  final java.util.concurrent.atomic.AtomicInteger ctPreScannerOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPostScannerOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPreBulkLoadHFile;

  final java.util.concurrent.atomic.AtomicInteger ctPostBulkLoadHFile;

  final java.util.concurrent.atomic.AtomicInteger ctPreBatchMutate;

  final java.util.concurrent.atomic.AtomicInteger ctPostBatchMutate;

  final java.util.concurrent.atomic.AtomicInteger ctPreReplayWALs;

  final java.util.concurrent.atomic.AtomicInteger ctPostReplayWALs;

  final java.util.concurrent.atomic.AtomicInteger ctPreWALRestore;

  final java.util.concurrent.atomic.AtomicInteger ctPostWALRestore;

  final java.util.concurrent.atomic.AtomicInteger ctPreStoreFileReaderOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPostStoreFileReaderOpen;

  final java.util.concurrent.atomic.AtomicInteger ctPostBatchMutateIndispensably;

  final java.util.concurrent.atomic.AtomicInteger ctPostStartRegionOperation;

  final java.util.concurrent.atomic.AtomicInteger ctPostCloseRegionOperation;

  final java.util.concurrent.atomic.AtomicBoolean throwOnPostFlush;

  static final java.lang.String TABLE_SKIPPED;

  public org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field ctBeforeDelete:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: iconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      25: putfield      #5                  // Field ctPreOpen:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_0
      29: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      32: dup
      33: iconst_0
      34: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      37: putfield      #6                  // Field ctPostOpen:Ljava/util/concurrent/atomic/AtomicInteger;
      40: aload_0
      41: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      44: dup
      45: iconst_0
      46: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      49: putfield      #7                  // Field ctPreClose:Ljava/util/concurrent/atomic/AtomicInteger;
      52: aload_0
      53: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      56: dup
      57: iconst_0
      58: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      61: putfield      #8                  // Field ctPostClose:Ljava/util/concurrent/atomic/AtomicInteger;
      64: aload_0
      65: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      68: dup
      69: iconst_0
      70: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      73: putfield      #9                  // Field ctPreFlush:Ljava/util/concurrent/atomic/AtomicInteger;
      76: aload_0
      77: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      80: dup
      81: iconst_0
      82: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      85: putfield      #10                 // Field ctPostFlush:Ljava/util/concurrent/atomic/AtomicInteger;
      88: aload_0
      89: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      92: dup
      93: iconst_0
      94: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      97: putfield      #11                 // Field ctPreCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
     100: aload_0
     101: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     104: dup
     105: iconst_0
     106: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     109: putfield      #12                 // Field ctPostCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
     112: aload_0
     113: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     116: dup
     117: iconst_0
     118: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     121: putfield      #13                 // Field ctPreCompact:Ljava/util/concurrent/atomic/AtomicInteger;
     124: aload_0
     125: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     128: dup
     129: iconst_0
     130: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     133: putfield      #14                 // Field ctPostCompact:Ljava/util/concurrent/atomic/AtomicInteger;
     136: aload_0
     137: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     140: dup
     141: iconst_0
     142: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     145: putfield      #15                 // Field ctPreGet:Ljava/util/concurrent/atomic/AtomicInteger;
     148: aload_0
     149: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     152: dup
     153: iconst_0
     154: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     157: putfield      #16                 // Field ctPostGet:Ljava/util/concurrent/atomic/AtomicInteger;
     160: aload_0
     161: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     164: dup
     165: iconst_0
     166: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     169: putfield      #17                 // Field ctPrePut:Ljava/util/concurrent/atomic/AtomicInteger;
     172: aload_0
     173: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     176: dup
     177: iconst_0
     178: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     181: putfield      #18                 // Field ctPostPut:Ljava/util/concurrent/atomic/AtomicInteger;
     184: aload_0
     185: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     188: dup
     189: iconst_0
     190: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     193: putfield      #19                 // Field ctPreDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
     196: aload_0
     197: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     200: dup
     201: iconst_0
     202: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     205: putfield      #20                 // Field ctPrePrepareDeleteTS:Ljava/util/concurrent/atomic/AtomicInteger;
     208: aload_0
     209: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     212: dup
     213: iconst_0
     214: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     217: putfield      #21                 // Field ctPostDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
     220: aload_0
     221: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     224: dup
     225: iconst_0
     226: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     229: putfield      #22                 // Field ctPreIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
     232: aload_0
     233: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     236: dup
     237: iconst_0
     238: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     241: putfield      #23                 // Field ctPreIncrementAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
     244: aload_0
     245: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     248: dup
     249: iconst_0
     250: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     253: putfield      #24                 // Field ctPreAppend:Ljava/util/concurrent/atomic/AtomicInteger;
     256: aload_0
     257: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     260: dup
     261: iconst_0
     262: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     265: putfield      #25                 // Field ctPreAppendAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
     268: aload_0
     269: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     272: dup
     273: iconst_0
     274: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     277: putfield      #26                 // Field ctPostIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
     280: aload_0
     281: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     284: dup
     285: iconst_0
     286: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     289: putfield      #27                 // Field ctPostAppend:Ljava/util/concurrent/atomic/AtomicInteger;
     292: aload_0
     293: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     296: dup
     297: iconst_0
     298: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     301: putfield      #28                 // Field ctPreCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
     304: aload_0
     305: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     308: dup
     309: iconst_0
     310: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     313: putfield      #29                 // Field ctPreCheckAndPutAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
     316: aload_0
     317: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     320: dup
     321: iconst_0
     322: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     325: putfield      #30                 // Field ctPostCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
     328: aload_0
     329: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     332: dup
     333: iconst_0
     334: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     337: putfield      #31                 // Field ctPreCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
     340: aload_0
     341: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     344: dup
     345: iconst_0
     346: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     349: putfield      #32                 // Field ctPreCheckAndDeleteAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
     352: aload_0
     353: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     356: dup
     357: iconst_0
     358: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     361: putfield      #33                 // Field ctPostCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
     364: aload_0
     365: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     368: dup
     369: iconst_0
     370: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     373: putfield      #34                 // Field ctPreScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
     376: aload_0
     377: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     380: dup
     381: iconst_0
     382: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     385: putfield      #35                 // Field ctPostScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
     388: aload_0
     389: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     392: dup
     393: iconst_0
     394: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     397: putfield      #36                 // Field ctPostScannerFilterRow:Ljava/util/concurrent/atomic/AtomicInteger;
     400: aload_0
     401: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     404: dup
     405: iconst_0
     406: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     409: putfield      #37                 // Field ctPreScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
     412: aload_0
     413: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     416: dup
     417: iconst_0
     418: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     421: putfield      #38                 // Field ctPostScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
     424: aload_0
     425: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     428: dup
     429: iconst_0
     430: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     433: putfield      #39                 // Field ctPreScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
     436: aload_0
     437: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     440: dup
     441: iconst_0
     442: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     445: putfield      #40                 // Field ctPostScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
     448: aload_0
     449: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     452: dup
     453: iconst_0
     454: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     457: putfield      #41                 // Field ctPreBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
     460: aload_0
     461: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     464: dup
     465: iconst_0
     466: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     469: putfield      #42                 // Field ctPostBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
     472: aload_0
     473: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     476: dup
     477: iconst_0
     478: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     481: putfield      #43                 // Field ctPreBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
     484: aload_0
     485: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     488: dup
     489: iconst_0
     490: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     493: putfield      #44                 // Field ctPostBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
     496: aload_0
     497: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     500: dup
     501: iconst_0
     502: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     505: putfield      #45                 // Field ctPreReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
     508: aload_0
     509: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     512: dup
     513: iconst_0
     514: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     517: putfield      #46                 // Field ctPostReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
     520: aload_0
     521: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     524: dup
     525: iconst_0
     526: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     529: putfield      #47                 // Field ctPreWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
     532: aload_0
     533: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     536: dup
     537: iconst_0
     538: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     541: putfield      #48                 // Field ctPostWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
     544: aload_0
     545: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     548: dup
     549: iconst_0
     550: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     553: putfield      #49                 // Field ctPreStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
     556: aload_0
     557: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     560: dup
     561: iconst_0
     562: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     565: putfield      #50                 // Field ctPostStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
     568: aload_0
     569: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     572: dup
     573: iconst_0
     574: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     577: putfield      #51                 // Field ctPostBatchMutateIndispensably:Ljava/util/concurrent/atomic/AtomicInteger;
     580: aload_0
     581: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     584: dup
     585: iconst_0
     586: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     589: putfield      #52                 // Field ctPostStartRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
     592: aload_0
     593: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     596: dup
     597: iconst_0
     598: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     601: putfield      #53                 // Field ctPostCloseRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
     604: aload_0
     605: new           #54                 // class java/util/concurrent/atomic/AtomicBoolean
     608: dup
     609: iconst_0
     610: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     613: putfield      #56                 // Field throwOnPostFlush:Ljava/util/concurrent/atomic/AtomicBoolean;
     616: return

  public void setThrowOnPostFlush(java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #56                 // Field throwOnPostFlush:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: aload_1
       5: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
       8: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      11: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.RegionObserver> getRegionObserver();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public void start(org.apache.hadoop.hbase.CoprocessorEnvironment) throws java.io.IOException;
    Code:
       0: return

  public void preOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctPreOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ctPostOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public boolean wasOpened();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctPreOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #6                  // Field ctPostOpen:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void preClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctPreClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ctPostClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public boolean wasClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctPreClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #8                  // Field ctPostClose:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public org.apache.hadoop.hbase.regionserver.InternalScanner preFlush(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.InternalScanner, org.apache.hadoop.hbase.regionserver.FlushLifeCycleTracker) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field ctPreFlush:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_3
       9: areturn

  public void postFlush(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.StoreFile, org.apache.hadoop.hbase.regionserver.FlushLifeCycleTracker) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctPostFlush:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #56                 // Field throwOnPostFlush:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      15: ifeq          28
      18: new           #63                 // class java/io/IOException
      21: dup
      22: ldc           #64                 // String throwOnPostFlush is true in postFlush
      24: invokespecial #65                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  public boolean wasFlushed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ctPreFlush:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #10                 // Field ctPostFlush:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void preCompactSelection(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, java.util.List<? extends org.apache.hadoop.hbase.regionserver.StoreFile>, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field ctPreCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postCompactSelection(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, java.util.List<? extends org.apache.hadoop.hbase.regionserver.StoreFile>, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker, org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest);
    Code:
       0: aload_0
       1: getfield      #12                 // Field ctPostCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public org.apache.hadoop.hbase.regionserver.InternalScanner preCompact(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.InternalScanner, org.apache.hadoop.hbase.regionserver.ScanType, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker, org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field ctPreCompact:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_3
       9: areturn

  public void postCompact(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.StoreFile, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker, org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field ctPostCompact:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public boolean wasCompacted();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ctPreCompact:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #14                 // Field ctPostCompact:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void preScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Scan) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field ctPreScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public org.apache.hadoop.hbase.regionserver.RegionScanner postScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Scan, org.apache.hadoop.hbase.regionserver.RegionScanner) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field ctPostScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_3
       9: areturn

  public boolean preScannerNext(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, java.util.List<org.apache.hadoop.hbase.client.Result>, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field ctPreScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iload         5
      10: ireturn

  public boolean postScannerNext(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, java.util.List<org.apache.hadoop.hbase.client.Result>, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field ctPostScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iload         5
      10: ireturn

  public boolean postScannerFilterRow(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner, org.apache.hadoop.hbase.Cell, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field ctPostScannerFilterRow:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iload         4
      10: ireturn

  public void preScannerClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field ctPreScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postScannerClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.InternalScanner) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field ctPostScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void preGetOp(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Get, java.util.List<org.apache.hadoop.hbase.Cell>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore        4
      11: aload         4
      13: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      16: aload         4
      18: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      23: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      26: aload_2
      27: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      30: aload_3
      31: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #15                 // Field ctPreGet:Ljava/util/concurrent/atomic/AtomicInteger;
      38: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      41: pop
      42: return

  public void postGetOp(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Get, java.util.List<org.apache.hadoop.hbase.Cell>);
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore        4
      11: aload         4
      13: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      16: aload         4
      18: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      23: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      26: aload_2
      27: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      30: aload_3
      31: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      34: aload         4
      36: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      41: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Region.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      46: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      51: getstatic     #72                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.TEST_TABLE:Lorg/apache/hadoop/hbase/TableName;
      54: invokevirtual #73                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      57: ifeq          159
      60: iconst_0
      61: istore        5
      63: iconst_0
      64: istore        6
      66: iconst_0
      67: istore        7
      69: aload_3
      70: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore        8
      77: aload         8
      79: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          144
      87: aload         8
      89: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
      97: astore        9
      99: aload         9
     101: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     104: invokestatic  #79                 // Method org/apache/hadoop/hbase/CellUtil.matchingFamily:(Lorg/apache/hadoop/hbase/Cell;[B)Z
     107: ifeq          113
     110: iconst_1
     111: istore        5
     113: aload         9
     115: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     118: invokestatic  #79                 // Method org/apache/hadoop/hbase/CellUtil.matchingFamily:(Lorg/apache/hadoop/hbase/Cell;[B)Z
     121: ifeq          127
     124: iconst_1
     125: istore        6
     127: aload         9
     129: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     132: invokestatic  #79                 // Method org/apache/hadoop/hbase/CellUtil.matchingFamily:(Lorg/apache/hadoop/hbase/Cell;[B)Z
     135: ifeq          141
     138: iconst_1
     139: istore        7
     141: goto          77
     144: iload         5
     146: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     149: iload         6
     151: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     154: iload         7
     156: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     159: aload_0
     160: getfield      #16                 // Field ctPostGet:Ljava/util/concurrent/atomic/AtomicInteger;
     163: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     166: pop
     167: return

  public void prePut(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Put, org.apache.hadoop.hbase.wal.WALEdit, org.apache.hadoop.hbase.client.Durability) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #83                 // Method org/apache/hadoop/hbase/client/Put.getFamilyCellMap:()Ljava/util/NavigableMap;
       4: astore        5
       6: aload_1
       7: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
      12: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
      15: astore        6
      17: aload         6
      19: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      22: aload         6
      24: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      29: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      32: aload         5
      34: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      37: aload         6
      39: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      44: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Region.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      49: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      54: getstatic     #72                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.TEST_TABLE:Lorg/apache/hadoop/hbase/TableName;
      57: invokevirtual #73                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      60: ifeq          300
      63: aload         5
      65: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
      68: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #85                 // class java/util/List
      76: astore        7
      78: aload         7
      80: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      83: aload         7
      85: iconst_0
      86: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      91: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      94: aload         7
      96: iconst_0
      97: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     105: astore        8
     107: aload         8
     109: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     114: aload         8
     116: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     121: aload         8
     123: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     128: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     131: iconst_0
     132: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     135: arraylength
     136: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     139: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     142: aload         5
     144: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     147: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #85                 // class java/util/List
     155: astore        7
     157: aload         7
     159: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     162: aload         7
     164: iconst_0
     165: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     170: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     173: aload         7
     175: iconst_0
     176: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     181: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     184: astore        8
     186: aload         8
     188: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     193: aload         8
     195: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     200: aload         8
     202: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     207: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     210: iconst_0
     211: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     214: arraylength
     215: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     218: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     221: aload         5
     223: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     226: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     231: checkcast     #85                 // class java/util/List
     234: astore        7
     236: aload         7
     238: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     241: aload         7
     243: iconst_0
     244: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     249: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     252: aload         7
     254: iconst_0
     255: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     260: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     263: astore        8
     265: aload         8
     267: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     272: aload         8
     274: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     279: aload         8
     281: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     286: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     289: iconst_0
     290: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     293: arraylength
     294: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     297: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     300: aload_0
     301: getfield      #17                 // Field ctPrePut:Ljava/util/concurrent/atomic/AtomicInteger;
     304: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     307: pop
     308: return

  public void postPut(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Put, org.apache.hadoop.hbase.wal.WALEdit, org.apache.hadoop.hbase.client.Durability) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #83                 // Method org/apache/hadoop/hbase/client/Put.getFamilyCellMap:()Ljava/util/NavigableMap;
       4: astore        5
       6: aload_1
       7: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
      12: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
      15: astore        6
      17: aload         6
      19: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      22: aload         6
      24: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      29: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      32: aload         5
      34: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      37: aload         5
      39: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
      42: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #85                 // class java/util/List
      50: astore        7
      52: aload         6
      54: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      59: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Region.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      64: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      69: getstatic     #72                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.TEST_TABLE:Lorg/apache/hadoop/hbase/TableName;
      72: invokevirtual #73                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      75: ifeq          300
      78: aload         7
      80: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      83: aload         7
      85: iconst_0
      86: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      91: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      94: aload         7
      96: iconst_0
      97: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     105: astore        8
     107: aload         8
     109: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     114: aload         8
     116: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     121: aload         8
     123: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     128: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     131: iconst_0
     132: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     135: arraylength
     136: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     139: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     142: aload         5
     144: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     147: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #85                 // class java/util/List
     155: astore        7
     157: aload         7
     159: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     162: aload         7
     164: iconst_0
     165: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     170: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     173: aload         7
     175: iconst_0
     176: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     181: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     184: astore        8
     186: aload         8
     188: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     193: aload         8
     195: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     200: aload         8
     202: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     207: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     210: iconst_0
     211: getstatic     #80                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.B:[B
     214: arraylength
     215: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     218: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     221: aload         5
     223: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     226: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     231: checkcast     #85                 // class java/util/List
     234: astore        7
     236: aload         7
     238: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     241: aload         7
     243: iconst_0
     244: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     249: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
     252: aload         7
     254: iconst_0
     255: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     260: checkcast     #77                 // class org/apache/hadoop/hbase/Cell
     263: astore        8
     265: aload         8
     267: invokeinterface #87,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierArray:()[B
     272: aload         8
     274: invokeinterface #88,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierOffset:()I
     279: aload         8
     281: invokeinterface #89,  1           // InterfaceMethod org/apache/hadoop/hbase/Cell.getQualifierLength:()I
     286: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     289: iconst_0
     290: getstatic     #81                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.C:[B
     293: arraylength
     294: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([BII[BII)Z
     297: invokestatic  #82                 // Method org/junit/Assert.assertTrue:(Z)V
     300: aload_0
     301: getfield      #18                 // Field ctPostPut:Ljava/util/concurrent/atomic/AtomicInteger;
     304: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     307: pop
     308: return

  public void preDelete(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Delete, org.apache.hadoop.hbase.wal.WALEdit, org.apache.hadoop.hbase.client.Durability) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #91                 // Method org/apache/hadoop/hbase/client/Delete.getFamilyCellMap:()Ljava/util/NavigableMap;
       4: astore        5
       6: aload_1
       7: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
      12: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
      15: astore        6
      17: aload         6
      19: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      22: aload         6
      24: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      29: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      32: aload         5
      34: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #4                  // Field ctBeforeDelete:Ljava/util/concurrent/atomic/AtomicInteger;
      41: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      44: ifle          55
      47: aload_0
      48: getfield      #19                 // Field ctPreDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
      51: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      54: pop
      55: return

  public void prePrepareTimeStampForDeleteVersion(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Mutation, org.apache.hadoop.hbase.Cell, byte[], org.apache.hadoop.hbase.client.Get) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field ctPrePrepareDeleteTS:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postDelete(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Delete, org.apache.hadoop.hbase.wal.WALEdit, org.apache.hadoop.hbase.client.Durability) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #91                 // Method org/apache/hadoop/hbase/client/Delete.getFamilyCellMap:()Ljava/util/NavigableMap;
       4: astore        5
       6: aload_1
       7: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
      12: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
      15: astore        6
      17: aload         6
      19: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      22: aload         6
      24: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      29: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      32: aload         5
      34: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #4                  // Field ctBeforeDelete:Ljava/util/concurrent/atomic/AtomicInteger;
      41: iconst_0
      42: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      45: aload_0
      46: getfield      #21                 // Field ctPostDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
      49: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      52: pop
      53: return

  public void preBatchMutate(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.MiniBatchOperationInProgress<org.apache.hadoop.hbase.client.Mutation>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore_3
      10: aload_3
      11: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      14: aload_3
      15: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      20: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      23: aload_2
      24: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #43                 // Field ctPreBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
      31: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      34: pop
      35: return

  public void postBatchMutate(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.MiniBatchOperationInProgress<org.apache.hadoop.hbase.client.Mutation>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore_3
      10: aload_3
      11: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      14: aload_3
      15: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      20: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      23: aload_2
      24: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #44                 // Field ctPostBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
      31: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      34: pop
      35: return

  public void postStartRegionOperation(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Region$Operation) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #52                 // Field ctPostStartRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postCloseRegionOperation(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Region$Operation) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #52                 // Field ctPostStartRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          18
      10: aload_0
      11: getfield      #53                 // Field ctPostCloseRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      17: pop
      18: return

  public void postBatchMutateIndispensably(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.MiniBatchOperationInProgress<org.apache.hadoop.hbase.client.Mutation>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field ctPostBatchMutateIndispensably:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public org.apache.hadoop.hbase.client.Result preIncrement(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Increment) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field ctPreIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public org.apache.hadoop.hbase.client.Result preIncrementAfterRowLock(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Increment) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field ctPreIncrementAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public org.apache.hadoop.hbase.client.Result postIncrement(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Increment, org.apache.hadoop.hbase.client.Result) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field ctPostIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_3
       9: areturn

  public boolean preCheckAndPut(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Put, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field ctPreCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public boolean preCheckAndPutAfterRowLock(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Put, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field ctPreCheckAndPutAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public boolean postCheckAndPut(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Put, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field ctPostCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public boolean preCheckAndDelete(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Delete, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field ctPreCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public boolean preCheckAndDeleteAfterRowLock(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Delete, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field ctPreCheckAndDeleteAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public boolean postCheckAndDelete(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, byte[], byte[], byte[], org.apache.hadoop.hbase.CompareOperator, org.apache.hadoop.hbase.filter.ByteArrayComparable, org.apache.hadoop.hbase.client.Delete, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field ctPostCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: iconst_1
       9: ireturn

  public org.apache.hadoop.hbase.client.Result preAppendAfterRowLock(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Append) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field ctPreAppendAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public org.apache.hadoop.hbase.client.Result preAppend(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Append) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field ctPreAppend:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public org.apache.hadoop.hbase.client.Result postAppend(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Append, org.apache.hadoop.hbase.client.Result) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field ctPostAppend:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public void preBulkLoadHFile(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, java.util.List<org.apache.hadoop.hbase.util.Pair<byte[], java.lang.String>>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore_3
      10: aload_3
      11: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      14: aload_3
      15: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      20: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      23: aload_3
      24: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      29: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Region.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      34: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      39: getstatic     #72                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.TEST_TABLE:Lorg/apache/hadoop/hbase/TableName;
      42: invokevirtual #73                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      45: ifeq          152
      48: aload_2
      49: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      52: lconst_1
      53: aload_2
      54: invokeinterface #93,  1           // InterfaceMethod java/util/List.size:()I
      59: i2l
      60: invokestatic  #94                 // Method org/junit/Assert.assertEquals:(JJ)V
      63: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
      66: aload_2
      67: iconst_0
      68: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      73: checkcast     #95                 // class org/apache/hadoop/hbase/util/Pair
      76: invokevirtual #96                 // Method org/apache/hadoop/hbase/util/Pair.getFirst:()Ljava/lang/Object;
      79: checkcast     #97                 // class "[B"
      82: invokestatic  #98                 // Method org/junit/Assert.assertArrayEquals:([B[B)V
      85: aload_2
      86: iconst_0
      87: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      92: checkcast     #95                 // class org/apache/hadoop/hbase/util/Pair
      95: invokevirtual #99                 // Method org/apache/hadoop/hbase/util/Pair.getSecond:()Ljava/lang/Object;
      98: checkcast     #100                // class java/lang/String
     101: astore        4
     103: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     106: invokestatic  #101                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
     109: astore        5
     111: aload         4
     113: aload         4
     115: invokevirtual #102                // Method java/lang/String.length:()I
     118: aload         5
     120: invokevirtual #102                // Method java/lang/String.length:()I
     123: isub
     124: iconst_1
     125: isub
     126: invokevirtual #103                // Method java/lang/String.substring:(I)Ljava/lang/String;
     129: new           #104                // class java/lang/StringBuilder
     132: dup
     133: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #106                // String /
     138: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload         5
     143: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokestatic  #109                // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload_0
     153: getfield      #41                 // Field ctPreBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
     156: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     159: pop
     160: return

  public void postBulkLoadHFile(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, java.util.List<org.apache.hadoop.hbase.util.Pair<byte[], java.lang.String>>, java.util.Map<byte[], java.util.List<org.apache.hadoop.fs.Path>>) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.getEnvironment:()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
       6: checkcast     #67                 // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       9: astore        4
      11: aload         4
      13: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      16: aload         4
      18: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      23: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      26: aload         4
      28: invokeinterface #69,  1           // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getRegion:()Lorg/apache/hadoop/hbase/regionserver/Region;
      33: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Region.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      38: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      43: getstatic     #72                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.TEST_TABLE:Lorg/apache/hadoop/hbase/TableName;
      46: invokevirtual #73                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      49: ifeq          156
      52: aload_2
      53: invokestatic  #68                 // Method org/junit/Assert.assertNotNull:(Ljava/lang/Object;)V
      56: lconst_1
      57: aload_2
      58: invokeinterface #93,  1           // InterfaceMethod java/util/List.size:()I
      63: i2l
      64: invokestatic  #94                 // Method org/junit/Assert.assertEquals:(JJ)V
      67: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
      70: aload_2
      71: iconst_0
      72: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      77: checkcast     #95                 // class org/apache/hadoop/hbase/util/Pair
      80: invokevirtual #96                 // Method org/apache/hadoop/hbase/util/Pair.getFirst:()Ljava/lang/Object;
      83: checkcast     #97                 // class "[B"
      86: invokestatic  #98                 // Method org/junit/Assert.assertArrayEquals:([B[B)V
      89: aload_2
      90: iconst_0
      91: invokeinterface #86,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      96: checkcast     #95                 // class org/apache/hadoop/hbase/util/Pair
      99: invokevirtual #99                 // Method org/apache/hadoop/hbase/util/Pair.getSecond:()Ljava/lang/Object;
     102: checkcast     #100                // class java/lang/String
     105: astore        5
     107: getstatic     #78                 // Field org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.A:[B
     110: invokestatic  #101                // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
     113: astore        6
     115: aload         5
     117: aload         5
     119: invokevirtual #102                // Method java/lang/String.length:()I
     122: aload         6
     124: invokevirtual #102                // Method java/lang/String.length:()I
     127: isub
     128: iconst_1
     129: isub
     130: invokevirtual #103                // Method java/lang/String.substring:(I)Ljava/lang/String;
     133: new           #104                // class java/lang/StringBuilder
     136: dup
     137: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #106                // String /
     142: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload         6
     147: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokestatic  #109                // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     156: aload_0
     157: getfield      #42                 // Field ctPostBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
     160: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     163: pop
     164: return

  public void preReplayWALs(org.apache.hadoop.hbase.coprocessor.ObserverContext<? extends org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field ctPreReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void postReplayWALs(org.apache.hadoop.hbase.coprocessor.ObserverContext<? extends org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #46                 // Field ctPostReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void preWALRestore(org.apache.hadoop.hbase.coprocessor.ObserverContext<? extends org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.wal.WALKey, org.apache.hadoop.hbase.wal.WALEdit) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokeinterface #110,  1          // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getTableName:()Lorg/apache/hadoop/hbase/TableName;
       6: invokevirtual #111                // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
       9: astore        5
      11: aload         5
      13: ldc           #113                // String SKIPPED_BY_PREWALRESTORE
      15: invokevirtual #114                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          28
      21: aload_1
      22: invokeinterface #115,  1          // InterfaceMethod org/apache/hadoop/hbase/coprocessor/ObserverContext.bypass:()V
      27: return
      28: aload_0
      29: getfield      #47                 // Field ctPreWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
      32: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      35: pop
      36: return

  public void postWALRestore(org.apache.hadoop.hbase.coprocessor.ObserverContext<? extends org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.wal.WALKey, org.apache.hadoop.hbase.wal.WALEdit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field ctPostWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public org.apache.hadoop.hbase.regionserver.StoreFileReader preStoreFileReaderOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.io.FSDataInputStreamWrapper, long, org.apache.hadoop.hbase.io.hfile.CacheConfig, org.apache.hadoop.hbase.io.Reference, org.apache.hadoop.hbase.regionserver.StoreFileReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field ctPreStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aconst_null
       9: areturn

  public org.apache.hadoop.hbase.regionserver.StoreFileReader postStoreFileReaderOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.io.FSDataInputStreamWrapper, long, org.apache.hadoop.hbase.io.hfile.CacheConfig, org.apache.hadoop.hbase.io.Reference, org.apache.hadoop.hbase.regionserver.StoreFileReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field ctPostStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload         9
      10: areturn

  public boolean hadPreGet();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ctPreGet:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostGet();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ctPostGet:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPrePut();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ctPrePut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostPut();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ctPostPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreBatchMutate();
    Code:
       0: aload_0
       1: getfield      #43                 // Field ctPreBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostBatchMutate();
    Code:
       0: aload_0
       1: getfield      #44                 // Field ctPostBatchMutate:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostBatchMutateIndispensably();
    Code:
       0: aload_0
       1: getfield      #51                 // Field ctPostBatchMutateIndispensably:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostStartRegionOperation();
    Code:
       0: aload_0
       1: getfield      #52                 // Field ctPostStartRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostCloseRegionOperation();
    Code:
       0: aload_0
       1: getfield      #53                 // Field ctPostCloseRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadDelete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctBeforeDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifgt          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int getCtPostStartRegionOperation();
    Code:
       0: aload_0
       1: getfield      #52                 // Field ctPostStartRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostCloseRegionOperation();
    Code:
       0: aload_0
       1: getfield      #53                 // Field ctPostCloseRegionOperation:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public boolean hadPreCheckAndPut();
    Code:
       0: aload_0
       1: getfield      #28                 // Field ctPreCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreCheckAndPutAfterRowLock();
    Code:
       0: aload_0
       1: getfield      #29                 // Field ctPreCheckAndPutAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostCheckAndPut();
    Code:
       0: aload_0
       1: getfield      #30                 // Field ctPostCheckAndPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreCheckAndDelete();
    Code:
       0: aload_0
       1: getfield      #31                 // Field ctPreCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreCheckAndDeleteAfterRowLock();
    Code:
       0: aload_0
       1: getfield      #32                 // Field ctPreCheckAndDeleteAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostCheckAndDelete();
    Code:
       0: aload_0
       1: getfield      #33                 // Field ctPostCheckAndDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreIncrement();
    Code:
       0: aload_0
       1: getfield      #22                 // Field ctPreIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreIncrementAfterRowLock();
    Code:
       0: aload_0
       1: getfield      #23                 // Field ctPreIncrementAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostIncrement();
    Code:
       0: aload_0
       1: getfield      #26                 // Field ctPostIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreAppend();
    Code:
       0: aload_0
       1: getfield      #24                 // Field ctPreAppend:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreAppendAfterRowLock();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ctPreAppendAfterRowLock:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostAppend();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ctPostAppend:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPrePreparedDeleteTS();
    Code:
       0: aload_0
       1: getfield      #20                 // Field ctPrePrepareDeleteTS:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreReplayWALs();
    Code:
       0: aload_0
       1: getfield      #45                 // Field ctPreReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostReplayWALs();
    Code:
       0: aload_0
       1: getfield      #46                 // Field ctPostReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreWALRestore();
    Code:
       0: aload_0
       1: getfield      #47                 // Field ctPreWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPostWALRestore();
    Code:
       0: aload_0
       1: getfield      #48                 // Field ctPostWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean wasScannerNextCalled();
    Code:
       0: aload_0
       1: getfield      #34                 // Field ctPreScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #35                 // Field ctPostScannerNext:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean wasScannerFilterRowCalled();
    Code:
       0: aload_0
       1: getfield      #36                 // Field ctPostScannerFilterRow:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean wasScannerCloseCalled();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ctPreScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #38                 // Field ctPostScannerClose:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean wasScannerOpenCalled();
    Code:
       0: aload_0
       1: getfield      #39                 // Field ctPreScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #40                 // Field ctPostScannerOpen:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hadDeleted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field ctPreDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #21                 // Field ctPostDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hadPostBulkLoadHFile();
    Code:
       0: aload_0
       1: getfield      #42                 // Field ctPostBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean hadPreBulkLoadHFile();
    Code:
       0: aload_0
       1: getfield      #41                 // Field ctPreBulkLoadHFile:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int getCtBeforeDelete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctBeforeDelete:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctPreOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ctPostOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreClose();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ctPreClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostClose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ctPostClose:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreFlush();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ctPreFlush:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostFlush();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctPostFlush:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreCompactSelect();
    Code:
       0: aload_0
       1: getfield      #11                 // Field ctPreCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostCompactSelect();
    Code:
       0: aload_0
       1: getfield      #12                 // Field ctPostCompactSelect:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreCompact();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ctPreCompact:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostCompact();
    Code:
       0: aload_0
       1: getfield      #14                 // Field ctPostCompact:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreGet();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ctPreGet:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostGet();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ctPostGet:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPrePut();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ctPrePut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostPut();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ctPostPut:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreDeleted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field ctPreDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostDeleted();
    Code:
       0: aload_0
       1: getfield      #21                 // Field ctPostDeleted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreIncrement();
    Code:
       0: aload_0
       1: getfield      #22                 // Field ctPreIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostIncrement();
    Code:
       0: aload_0
       1: getfield      #26                 // Field ctPostIncrement:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreReplayWALs();
    Code:
       0: aload_0
       1: getfield      #45                 // Field ctPreReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostReplayWALs();
    Code:
       0: aload_0
       1: getfield      #46                 // Field ctPostReplayWALs:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPreWALRestore();
    Code:
       0: aload_0
       1: getfield      #47                 // Field ctPreWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCtPostWALRestore();
    Code:
       0: aload_0
       1: getfield      #48                 // Field ctPostWALRestore:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public boolean wasStoreFileReaderOpenCalled();
    Code:
       0: aload_0
       1: getfield      #49                 // Field ctPreStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          24
      10: aload_0
      11: getfield      #50                 // Field ctPostStoreFileReaderOpen:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
}
