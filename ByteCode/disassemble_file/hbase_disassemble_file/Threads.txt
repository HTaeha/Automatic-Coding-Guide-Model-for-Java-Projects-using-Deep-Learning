Compiled from "Threads.java"
public class org.apache.hadoop.hbase.util.Threads {
  public static final java.lang.Thread$UncaughtExceptionHandler LOGGING_EXCEPTION_HANDLER;

  public org.apache.hadoop.hbase.util.Threads();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T extends java.lang.Thread> T setDaemonThreadRunning(T);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method java/lang/Thread.getName:()Ljava/lang/String;
       5: invokestatic  #5                  // Method setDaemonThreadRunning:(Ljava/lang/Thread;Ljava/lang/String;)Ljava/lang/Thread;
       8: areturn

  public static <T extends java.lang.Thread> T setDaemonThreadRunning(T, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #6                  // Method setDaemonThreadRunning:(Ljava/lang/Thread;Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/lang/Thread;
       6: areturn

  public static <T extends java.lang.Thread> T setDaemonThreadRunning(T, java.lang.String, java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       5: aload_2
       6: ifnull        14
       9: aload_0
      10: aload_2
      11: invokevirtual #8                  // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
      14: aload_0
      15: iconst_1
      16: invokevirtual #9                  // Method java/lang/Thread.setDaemon:(Z)V
      19: aload_0
      20: invokevirtual #10                 // Method java/lang/Thread.start:()V
      23: aload_0
      24: areturn

  public static void shutdown(java.lang.Thread);
    Code:
       0: aload_0
       1: lconst_0
       2: invokestatic  #11                 // Method shutdown:(Ljava/lang/Thread;J)V
       5: return

  public static void shutdown(java.lang.Thread, long);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #12                 // Method java/lang/Thread.isAlive:()Z
       9: ifeq          59
      12: aload_0
      13: lload_1
      14: invokevirtual #13                 // Method java/lang/Thread.join:(J)V
      17: goto          5
      20: astore_3
      21: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      24: new           #15                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_0
      32: invokevirtual #4                  // Method java/lang/Thread.getName:()Ljava/lang/String;
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #18                 // String ; joinwait=
      40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: lload_1
      44: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: aload_3
      51: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: goto          5
      59: return
    Exception table:
       from    to  target type
          12    17    20   Class java/lang/InterruptedException

  public static void threadDumpingIsAlive(java.lang.Thread) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #12                 // Method java/lang/Thread.isAlive:()Z
       9: ifeq          57
      12: aload_0
      13: ldc2_w        #22                 // long 60000l
      16: invokevirtual #13                 // Method java/lang/Thread.join:(J)V
      19: aload_0
      20: invokevirtual #12                 // Method java/lang/Thread.isAlive:()Z
      23: ifeq          5
      26: getstatic     #24                 // Field java/lang/System.out:Ljava/io/PrintStream;
      29: new           #15                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #25                 // String Automatic Stack Trace every 60 seconds waiting on
      38: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #4                  // Method java/lang/Thread.getName:()Ljava/lang/String;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokestatic  #26                 // Method printThreadInfo:(Ljava/io/PrintStream;Ljava/lang/String;)V
      54: goto          5
      57: return

  public static void sleep(long);
    Code:
       0: lload_0
       1: invokestatic  #27                 // Method java/lang/Thread.sleep:(J)V
       4: goto          25
       7: astore_2
       8: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #28                 // String sleep interrupted
      13: aload_2
      14: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      25: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException

  public static void sleepWithoutInterrupt(long);
    Code:
       0: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: lload_2
       5: lload_0
       6: ladd
       7: lstore        4
       9: iconst_0
      10: istore        6
      12: lload_2
      13: lload         4
      15: lcmp
      16: ifge          41
      19: lload         4
      21: lload_2
      22: lsub
      23: invokestatic  #27                 // Method java/lang/Thread.sleep:(J)V
      26: goto          34
      29: astore        7
      31: iconst_1
      32: istore        6
      34: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
      37: lstore_2
      38: goto          12
      41: iload         6
      43: ifeq          52
      46: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      49: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      52: return
    Exception table:
       from    to  target type
          19    26    29   Class java/lang/InterruptedException

  public static java.util.concurrent.ThreadPoolExecutor getBoundedCachedThreadPool(int, long, java.util.concurrent.TimeUnit, java.util.concurrent.ThreadFactory);
    Code:
       0: new           #32                 // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iload_0
       5: iload_0
       6: lload_1
       7: aload_3
       8: new           #33                 // class java/util/concurrent/LinkedBlockingQueue
      11: dup
      12: invokespecial #34                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      15: aload         4
      17: invokespecial #35                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      20: astore        5
      22: aload         5
      24: iconst_1
      25: invokevirtual #36                 // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
      28: aload         5
      30: areturn

  public static java.util.concurrent.ThreadFactory getNamedThreadFactory(java.lang.String);
    Code:
       0: invokestatic  #37                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: invokevirtual #38                 // Method java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;
      12: goto          21
      15: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #39                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      21: astore_2
      22: new           #40                 // class org/apache/hadoop/hbase/util/Threads$2
      25: dup
      26: aload_2
      27: aload_0
      28: invokespecial #41                 // Method org/apache/hadoop/hbase/util/Threads$2."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
      31: areturn

  public static java.util.concurrent.ThreadFactory newDaemonThreadFactory(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #42                 // Method newDaemonThreadFactory:(Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/util/concurrent/ThreadFactory;
       5: areturn

  public static java.util.concurrent.ThreadFactory newDaemonThreadFactory(java.lang.String, java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method getNamedThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
       4: astore_2
       5: new           #44                 // class org/apache/hadoop/hbase/util/Threads$3
       8: dup
       9: aload_2
      10: aload_1
      11: invokespecial #45                 // Method org/apache/hadoop/hbase/util/Threads$3."<init>":(Ljava/util/concurrent/ThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;)V
      14: areturn

  public static void setLoggingUncaughtExceptionHandler(java.lang.Thread);
    Code:
       0: aload_0
       1: getstatic     #46                 // Field LOGGING_EXCEPTION_HANDLER:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: invokevirtual #8                  // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
       7: return

  public static void printThreadInfo(java.io.PrintStream, java.lang.String);
    Code:
       0: getstatic     #47                 // Field org/apache/hadoop/hbase/util/Threads$PrintThreadInfoLazyHolder.HELPER:Lorg/apache/hadoop/hbase/util/Threads$PrintThreadInfoHelper;
       3: ldc           #48                 // String Cannot find method. Check hadoop jars linked
       5: invokestatic  #49                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #50                 // class org/apache/hadoop/hbase/util/Threads$PrintThreadInfoHelper
      11: aload_0
      12: aload_1
      13: invokeinterface #51,  3           // InterfaceMethod org/apache/hadoop/hbase/util/Threads$PrintThreadInfoHelper.printThreadInfo:(Ljava/io/PrintStream;Ljava/lang/String;)V
      18: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.atomic.AtomicInteger access$100();
    Code:
       0: getstatic     #1                  // Field poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  static {};
    Code:
       0: ldc           #52                 // class org/apache/hadoop/hbase/util/Threads
       2: invokestatic  #53                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: new           #54                 // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: iconst_1
      13: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      16: putstatic     #1                  // Field poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
      19: new           #56                 // class org/apache/hadoop/hbase/util/Threads$1
      22: dup
      23: invokespecial #57                 // Method org/apache/hadoop/hbase/util/Threads$1."<init>":()V
      26: putstatic     #46                 // Field LOGGING_EXCEPTION_HANDLER:Ljava/lang/Thread$UncaughtExceptionHandler;
      29: return
}
