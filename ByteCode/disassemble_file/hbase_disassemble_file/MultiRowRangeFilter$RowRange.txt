Compiled from "MultiRowRangeFilter.java"
public class org.apache.hadoop.hbase.filter.MultiRowRangeFilter$RowRange extends org.apache.hadoop.hbase.filter.MultiRowRangeFilter$BasicRowRange {
  public org.apache.hadoop.hbase.filter.MultiRowRangeFilter$RowRange();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange."<init>":()V
       4: return

  public org.apache.hadoop.hbase.filter.MultiRowRangeFilter$RowRange(java.lang.String, boolean, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #2                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange."<init>":(Ljava/lang/String;ZLjava/lang/String;Z)V
       9: return

  public org.apache.hadoop.hbase.filter.MultiRowRangeFilter$RowRange(byte[], boolean, byte[], boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #3                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange."<init>":([BZ[BZ)V
       9: return

  public byte[] getComparisonData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field startRow:[B
       4: areturn

  public boolean isSearchRowInclusive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field startRowInclusive:Z
       4: ireturn

  public boolean isAscendingOrder();
    Code:
       0: iconst_1
       1: ireturn

  public int compareTo(org.apache.hadoop.hbase.filter.MultiRowRangeFilter$BasicRowRange);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.compareTo:(Lorg/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange;)I
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.hashCode:()I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean isValid();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.isValid:()Z
       4: ireturn

  public boolean contains(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #10                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.contains:([BII)Z
       7: ireturn

  public boolean contains(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.contains:([B)Z
       5: ireturn

  public boolean isStopRowInclusive();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.isStopRowInclusive:()Z
       4: ireturn

  public boolean isStartRowInclusive();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.isStartRowInclusive:()Z
       4: ireturn

  public byte[] getStopRow();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.getStopRow:()[B
       4: areturn

  public byte[] getStartRow();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/apache/hadoop/hbase/filter/MultiRowRangeFilter$BasicRowRange.getStartRow:()[B
       4: areturn
}
