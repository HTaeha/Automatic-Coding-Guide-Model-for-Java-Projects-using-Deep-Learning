Compiled from "HTableDescriptor.java"
public class org.apache.hadoop.hbase.HTableDescriptor implements org.apache.hadoop.hbase.client.TableDescriptor, java.lang.Comparable<org.apache.hadoop.hbase.HTableDescriptor> {
  public static final java.lang.String SPLIT_POLICY;

  public static final java.lang.String MAX_FILESIZE;

  public static final java.lang.String OWNER;

  public static final org.apache.hadoop.hbase.util.Bytes OWNER_KEY;

  public static final java.lang.String READONLY;

  public static final java.lang.String COMPACTION_ENABLED;

  public static final java.lang.String SPLIT_ENABLED;

  public static final java.lang.String MERGE_ENABLED;

  public static final java.lang.String MEMSTORE_FLUSHSIZE;

  public static final java.lang.String FLUSH_POLICY;

  public static final java.lang.String IS_ROOT;

  public static final java.lang.String IS_META;

  public static final java.lang.String DURABILITY;

  public static final java.lang.String REGION_REPLICATION;

  public static final java.lang.String REGION_MEMSTORE_REPLICATION;

  public static final java.lang.String NORMALIZATION_ENABLED;

  public static final java.lang.String NORMALIZER_TARGET_REGION_COUNT;

  public static final java.lang.String NORMALIZER_TARGET_REGION_SIZE;

  public static final java.lang.String PRIORITY;

  public static final boolean DEFAULT_READONLY;

  public static final boolean DEFAULT_COMPACTION_ENABLED;

  public static final boolean DEFAULT_NORMALIZATION_ENABLED;

  public static final long DEFAULT_MEMSTORE_FLUSH_SIZE;

  public static final int DEFAULT_REGION_REPLICATION;

  public static final boolean DEFAULT_REGION_MEMSTORE_REPLICATION;

  protected final org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor delegatee;

  public static final java.lang.String NAMESPACE_FAMILY_INFO;

  public static final byte[] NAMESPACE_FAMILY_INFO_BYTES;

  public static final byte[] NAMESPACE_COL_DESC_BYTES;

  public static final org.apache.hadoop.hbase.HTableDescriptor NAMESPACE_TABLEDESC;

  public org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor."<init>":(Lorg/apache/hadoop/hbase/TableName;)V
       9: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)V
      12: return

  public org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.HTableDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #5                  // Method "<init>":(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
       6: return

  protected org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.HTableDescriptor, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: ifeq          20
       5: new           #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       8: dup
       9: aload_1
      10: invokevirtual #6                  // Method getTableName:()Lorg/apache/hadoop/hbase/TableName;
      13: aload_1
      14: invokespecial #7                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor."<init>":(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      17: goto          24
      20: aload_1
      21: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      24: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)V
      27: return

  public org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptor);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       4: dup
       5: aload_1
       6: invokeinterface #9,  1            // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      11: aload_1
      12: invokespecial #7                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor."<init>":(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      15: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)V
      18: return

  public org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.TableName, org.apache.hadoop.hbase.HTableDescriptor);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #7                  // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor."<init>":(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      10: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)V
      13: return

  protected org.apache.hadoop.hbase.HTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: return

  public boolean isRootRegion();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMetaRegion();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #11                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isMetaRegion:()Z
       7: ireturn

  public boolean isMetaTable();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #12                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isMetaTable:()Z
       7: ireturn

  public java.util.Map<org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes> getValues();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #13                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValues:()Ljava/util/Map;
       7: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setValue(byte[], byte[]);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: aload_2
       6: invokevirtual #15                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setValue:([B[B)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: pop
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setValue(org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: aload_2
       6: invokevirtual #16                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setValue:(Lorg/apache/hadoop/hbase/util/Bytes;Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: pop
      10: aload_0
      11: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: aload_2
       6: invokevirtual #17                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setValue:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: pop
      10: aload_0
      11: areturn

  public void remove(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       8: invokevirtual #19                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeValue:([B)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: pop
      12: return

  public void remove(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #20                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeValue:(Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: return

  public void remove(byte[]);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #19                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeValue:([B)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: return

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #21                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isReadOnly:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setReadOnly(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #22                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setReadOnly:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean isCompactionEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #23                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isCompactionEnabled:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setCompactionEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #24                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setCompactionEnabled:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean isSplitEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #25                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isSplitEnabled:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setSplitEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #26                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setSplitEnabled:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean isMergeEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #27                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isMergeEnabled:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setMergeEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #28                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setMergeEnabled:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean isNormalizationEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #29                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.isNormalizationEnabled:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setNormalizationEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #30                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setNormalizationEnabled:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public int getNormalizerTargetRegionCount();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #31                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getNormalizerTargetRegionCount:()I
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setNormalizerTargetRegionCount(int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #32                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setNormalizerTargetRegionCount:(I)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public long getNormalizerTargetRegionSize();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #33                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getNormalizerTargetRegionSize:()J
       7: lreturn

  public org.apache.hadoop.hbase.HTableDescriptor setNormalizerTargetRegionSize(long);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: lload_1
       5: invokevirtual #34                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setNormalizerTargetRegionSize:(J)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setDurability(org.apache.hadoop.hbase.client.Durability);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #35                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setDurability:(Lorg/apache/hadoop/hbase/client/Durability;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.client.Durability getDurability();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #36                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getDurability:()Lorg/apache/hadoop/hbase/client/Durability;
       7: areturn

  public org.apache.hadoop.hbase.TableName getTableName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
       7: areturn

  public java.lang.String getNameAsString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
       7: invokevirtual #38                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setRegionSplitPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #39                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setRegionSplitPolicyClassName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public java.lang.String getRegionSplitPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #40                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getRegionSplitPolicyClassName:()Ljava/lang/String;
       7: areturn

  public long getMaxFileSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #41                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getMaxFileSize:()J
       7: lreturn

  public org.apache.hadoop.hbase.HTableDescriptor setMaxFileSize(long);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: lload_1
       5: invokevirtual #42                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setMaxFileSize:(J)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public long getMemStoreFlushSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #43                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getMemStoreFlushSize:()J
       7: lreturn

  public org.apache.hadoop.hbase.HTableDescriptor setMemStoreFlushSize(long);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: lload_1
       5: invokevirtual #44                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setMemStoreFlushSize:(J)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setFlushPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setFlushPolicyClassName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public java.lang.String getFlushPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #46                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getFlushPolicyClassName:()Ljava/lang/String;
       7: areturn

  public org.apache.hadoop.hbase.HTableDescriptor addFamily(org.apache.hadoop.hbase.HColumnDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #47                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor modifyFamily(org.apache.hadoop.hbase.HColumnDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #48                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.modifyColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean hasFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #49                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.hasColumnFamily:([B)Z
       8: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #50                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.String toStringCustomizedValues();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #51                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.toStringCustomizedValues:()Ljava/lang/String;
       7: areturn

  public java.lang.String toStringTableAttributes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #52                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.toStringTableAttributes:()Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #53                 // class org/apache/hadoop/hbase/HTableDescriptor
      11: ifeq          29
      14: aload_0
      15: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      18: aload_1
      19: checkcast     #53                 // class org/apache/hadoop/hbase/HTableDescriptor
      22: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      25: invokevirtual #54                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: iconst_0
      30: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #55                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.hashCode:()I
       7: ireturn

  public int compareTo(org.apache.hadoop.hbase.HTableDescriptor);
    Code:
       0: getstatic     #56                 // Field org/apache/hadoop/hbase/client/TableDescriptor.COMPARATOR:Ljava/util/Comparator;
       3: aload_0
       4: aload_1
       5: invokeinterface #57,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      10: ireturn

  public java.util.Collection<org.apache.hadoop.hbase.HColumnDescriptor> getFamilies();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #58                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamilies:()[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       7: invokestatic  #59                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: aload_0
      11: invokedynamic #60,  0             // InvokeDynamic #0:apply:(Lorg/apache/hadoop/hbase/HTableDescriptor;)Ljava/util/function/Function;
      16: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      21: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      24: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      29: checkcast     #64                 // class java/util/Collection
      32: areturn

  public int getRegionReplication();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #65                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getRegionReplication:()I
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setRegionReplication(int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #66                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setRegionReplication:(I)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean hasRegionMemstoreReplication();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method hasRegionMemStoreReplication:()Z
       4: ireturn

  public boolean hasRegionMemStoreReplication();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #68                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.hasRegionMemStoreReplication:()Z
       7: ireturn

  public org.apache.hadoop.hbase.HTableDescriptor setRegionMemstoreReplication(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method setRegionMemStoreReplication:(Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
       5: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setRegionMemStoreReplication(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #70                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setRegionMemStoreReplication:(Z)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setPriority(int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: iload_1
       5: invokevirtual #71                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setPriority:(I)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #72                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getPriority:()I
       7: ireturn

  public java.util.Set<byte[]> getFamiliesKeys();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #73                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamilyNames:()Ljava/util/Set;
       7: areturn

  public int getColumnFamilyCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #74                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamilyCount:()I
       7: ireturn

  public org.apache.hadoop.hbase.HColumnDescriptor[] getColumnFamilies();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #58                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamilies:()[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       7: invokestatic  #59                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: aload_0
      11: invokedynamic #60,  0             // InvokeDynamic #0:apply:(Lorg/apache/hadoop/hbase/HTableDescriptor;)Ljava/util/function/Function;
      16: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      21: invokedynamic #75,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      26: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      31: checkcast     #77                 // class "[Lorg/apache/hadoop/hbase/HColumnDescriptor;"
      34: areturn

  public org.apache.hadoop.hbase.HColumnDescriptor getFamily(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       5: aload_1
       6: invokevirtual #78                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamily:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       9: invokevirtual #79                 // Method toHColumnDescriptor:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/HColumnDescriptor;
      12: areturn

  public org.apache.hadoop.hbase.HColumnDescriptor removeFamily(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       5: aload_1
       6: invokevirtual #80                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeColumnFamily:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       9: invokevirtual #79                 // Method toHColumnDescriptor:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/HColumnDescriptor;
      12: areturn

  protected org.apache.hadoop.hbase.HColumnDescriptor toHColumnDescriptor(org.apache.hadoop.hbase.client.ColumnFamilyDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: instanceof    #81                 // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
      10: ifeq          25
      13: new           #82                 // class org/apache/hadoop/hbase/HColumnDescriptor
      16: dup
      17: aload_1
      18: checkcast     #81                 // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
      21: invokespecial #83                 // Method org/apache/hadoop/hbase/HColumnDescriptor."<init>":(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;)V
      24: areturn
      25: aload_1
      26: instanceof    #82                 // class org/apache/hadoop/hbase/HColumnDescriptor
      29: ifeq          37
      32: aload_1
      33: checkcast     #82                 // class org/apache/hadoop/hbase/HColumnDescriptor
      36: areturn
      37: new           #82                 // class org/apache/hadoop/hbase/HColumnDescriptor
      40: dup
      41: new           #81                 // class org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor
      44: dup
      45: aload_1
      46: invokespecial #84                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor."<init>":(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
      49: invokespecial #83                 // Method org/apache/hadoop/hbase/HColumnDescriptor."<init>":(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder$ModifyableColumnFamilyDescriptor;)V
      52: areturn

  public org.apache.hadoop.hbase.HTableDescriptor addCoprocessor(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #85                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setCoprocessor:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor addCoprocessor(java.lang.String, org.apache.hadoop.fs.Path, int, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokestatic  #86                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.newBuilder:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
       8: aload_2
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_2
      17: invokevirtual #87                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      20: invokevirtual #88                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.setJarPath:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
      23: iload_3
      24: invokevirtual #89                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.setPriority:(I)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
      27: aload         4
      29: ifnonnull     38
      32: invokestatic  #90                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      35: goto          40
      38: aload         4
      40: invokevirtual #91                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.setProperties:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
      43: invokevirtual #92                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;
      46: invokevirtual #93                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setCoprocessor:(Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      49: pop
      50: aload_0
      51: areturn

  public org.apache.hadoop.hbase.HTableDescriptor addCoprocessorWithSpec(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #94                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setCoprocessorWithSpec:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public boolean hasCoprocessor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #95                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.hasCoprocessor:(Ljava/lang/String;)Z
       8: ireturn

  public java.util.Collection<org.apache.hadoop.hbase.client.CoprocessorDescriptor> getCoprocessorDescriptors();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #96                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getCoprocessorDescriptors:()Ljava/util/List;
       7: areturn

  public java.util.List<java.lang.String> getCoprocessors();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method getCoprocessorDescriptors:()Ljava/util/Collection;
       4: invokeinterface #98,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #99,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      14: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #100                // class java/util/List
      30: areturn

  public void removeCoprocessor(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #101                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeCoprocessor:(Ljava/lang/String;)V
       8: return

  public org.apache.hadoop.hbase.HTableDescriptor setOwner(org.apache.hadoop.hbase.security.User);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #102                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setOwner:(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setOwnerString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #103                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setOwnerString:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       8: pop
       9: aload_0
      10: areturn

  public java.lang.String getOwnerString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #104                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getOwnerString:()Ljava/lang/String;
       7: areturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokestatic  #105                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.toByteArray:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)[B
       7: areturn

  public static org.apache.hadoop.hbase.HTableDescriptor parseFrom(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException, java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #106                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.parseFrom:([B)Lorg/apache/hadoop/hbase/client/TableDescriptor;
       4: astore_1
       5: aload_1
       6: instanceof    #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
       9: ifeq          24
      12: new           #53                 // class org/apache/hadoop/hbase/HTableDescriptor
      15: dup
      16: aload_1
      17: checkcast     #2                  // class org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor
      20: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;)V
      23: areturn
      24: new           #53                 // class org/apache/hadoop/hbase/HTableDescriptor
      27: dup
      28: aload_1
      29: invokespecial #107                // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      32: areturn

  public java.lang.String getConfigurationValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #108                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValue:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.util.Map<java.lang.String, java.lang.String> getConfiguration();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #13                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValues:()Ljava/util/Map;
       7: invokeinterface #109,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: invokeinterface #110,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      17: invokedynamic #111,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      22: invokedynamic #112,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      27: invokestatic  #113                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      30: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #114                // class java/util/Map
      38: areturn

  public org.apache.hadoop.hbase.HTableDescriptor setConfiguration(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: aload_2
       6: invokevirtual #17                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.setValue:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       9: pop
      10: aload_0
      11: areturn

  public void removeConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getDelegateeForModification:()Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       8: invokevirtual #19                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.removeValue:([B)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
      11: pop
      12: return

  public org.apache.hadoop.hbase.util.Bytes getValue(org.apache.hadoop.hbase.util.Bytes);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #115                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValue:(Lorg/apache/hadoop/hbase/util/Bytes;)Lorg/apache/hadoop/hbase/util/Bytes;
       8: areturn

  public java.lang.String getValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #108                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValue:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public byte[] getValue(byte[]);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #116                // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getValue:([B)[B
       8: areturn

  public java.util.Set<byte[]> getColumnFamilyNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: invokevirtual #73                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamilyNames:()Ljava/util/Set;
       7: areturn

  public boolean hasColumnFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #49                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.hasColumnFamily:([B)Z
       8: ireturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptor getColumnFamily(byte[]);
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: aload_1
       5: invokevirtual #78                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor.getColumnFamily:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
       8: areturn

  protected org.apache.hadoop.hbase.client.TableDescriptorBuilder$ModifyableTableDescriptor getDelegateeForModification();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegatee:Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder$ModifyableTableDescriptor;
       4: areturn

  public org.apache.hadoop.hbase.client.ColumnFamilyDescriptor[] getColumnFamilies();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getColumnFamilies:()[Lorg/apache/hadoop/hbase/HColumnDescriptor;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/apache/hadoop/hbase/HTableDescriptor
       5: invokevirtual #118                // Method compareTo:(Lorg/apache/hadoop/hbase/HTableDescriptor;)I
       8: ireturn

  static {};
    Code:
       0: getstatic     #126                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.OWNER_KEY:Lorg/apache/hadoop/hbase/util/Bytes;
       3: putstatic     #127                // Field OWNER_KEY:Lorg/apache/hadoop/hbase/util/Bytes;
       6: getstatic     #128                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.NAMESPACE_FAMILY_INFO_BYTES:[B
       9: putstatic     #129                // Field NAMESPACE_FAMILY_INFO_BYTES:[B
      12: getstatic     #130                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.NAMESPACE_COL_DESC_BYTES:[B
      15: putstatic     #131                // Field NAMESPACE_COL_DESC_BYTES:[B
      18: new           #53                 // class org/apache/hadoop/hbase/HTableDescriptor
      21: dup
      22: getstatic     #132                // Field org/apache/hadoop/hbase/client/TableDescriptorBuilder.NAMESPACE_TABLEDESC:Lorg/apache/hadoop/hbase/client/TableDescriptor;
      25: invokespecial #107                // Method "<init>":(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
      28: putstatic     #133                // Field NAMESPACE_TABLEDESC:Lorg/apache/hadoop/hbase/HTableDescriptor;
      31: return
}
