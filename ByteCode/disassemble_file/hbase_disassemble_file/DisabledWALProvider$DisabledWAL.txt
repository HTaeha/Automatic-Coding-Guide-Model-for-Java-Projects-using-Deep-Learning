Compiled from "DisabledWALProvider.java"
class org.apache.hadoop.hbase.wal.DisabledWALProvider$DisabledWAL implements org.apache.hadoop.hbase.wal.WAL {
  protected final java.util.List<org.apache.hadoop.hbase.regionserver.wal.WALActionsListener> listeners;

  protected final org.apache.hadoop.fs.Path path;

  protected final org.apache.hadoop.hbase.regionserver.wal.WALCoprocessorHost coprocessorHost;

  protected final java.util.concurrent.atomic.AtomicBoolean closed;

  public org.apache.hadoop.hbase.wal.DisabledWALProvider$DisabledWAL(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration, java.util.List<org.apache.hadoop.hbase.regionserver.wal.WALActionsListener>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #7                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #8                  // class org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost
      31: dup
      32: aload_0
      33: aload_2
      34: invokespecial #9                  // Method org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost."<init>":(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)V
      37: putfield      #10                 // Field coprocessorHost:Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
      40: aload_0
      41: aload_1
      42: putfield      #11                 // Field path:Lorg/apache/hadoop/fs/Path;
      45: aconst_null
      46: aload_3
      47: if_acmpeq     89
      50: aload_3
      51: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          89
      68: aload         4
      70: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
      78: astore        5
      80: aload_0
      81: aload         5
      83: invokevirtual #16                 // Method registerWALActionsListener:(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
      86: goto          58
      89: return

  public void registerWALActionsListener(org.apache.hadoop.hbase.regionserver.wal.WALActionsListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean unregisterWALActionsListener(org.apache.hadoop.hbase.regionserver.wal.WALActionsListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public byte[][] rollWriter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          175
      12: aload_0
      13: getfield      #4                  // Field listeners:Ljava/util/List;
      16: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          53
      31: aload_1
      32: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
      40: astore_2
      41: aload_2
      42: getstatic     #20                 // Field org/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason.ERROR:Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;
      45: invokeinterface #21,  2           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.logRollRequested:(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
      50: goto          22
      53: aload_0
      54: getfield      #4                  // Field listeners:Ljava/util/List;
      57: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore_1
      63: aload_1
      64: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          114
      72: aload_1
      73: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
      81: astore_2
      82: aload_2
      83: aload_0
      84: getfield      #11                 // Field path:Lorg/apache/hadoop/fs/Path;
      87: aload_0
      88: getfield      #11                 // Field path:Lorg/apache/hadoop/fs/Path;
      91: invokeinterface #22,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.preLogRoll:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      96: goto          111
      99: astore_3
     100: invokestatic  #24                 // Method org/apache/hadoop/hbase/wal/DisabledWALProvider.access$000:()Lorg/slf4j/Logger;
     103: ldc           #25                 // String Ignoring exception from listener.
     105: aload_3
     106: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     111: goto          63
     114: aload_0
     115: getfield      #4                  // Field listeners:Ljava/util/List;
     118: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     123: astore_1
     124: aload_1
     125: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          175
     133: aload_1
     134: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
     142: astore_2
     143: aload_2
     144: aload_0
     145: getfield      #11                 // Field path:Lorg/apache/hadoop/fs/Path;
     148: aload_0
     149: getfield      #11                 // Field path:Lorg/apache/hadoop/fs/Path;
     152: invokeinterface #27,  3           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.postLogRoll:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
     157: goto          172
     160: astore_3
     161: invokestatic  #24                 // Method org/apache/hadoop/hbase/wal/DisabledWALProvider.access$000:()Lorg/slf4j/Logger;
     164: ldc           #25                 // String Ignoring exception from listener.
     166: aload_3
     167: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     172: goto          124
     175: aconst_null
     176: checkcast     #28                 // class "[[B"
     179: areturn
    Exception table:
       from    to  target type
          82    96    99   Class java/io/IOException
         143   157   160   Class java/io/IOException

  public byte[][] rollWriter(boolean);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method rollWriter:()[[B
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          62
      12: aload_0
      13: getfield      #4                  // Field listeners:Ljava/util/List;
      16: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifne          62
      24: aload_0
      25: getfield      #4                  // Field listeners:Ljava/util/List;
      28: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_1
      34: aload_1
      35: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          62
      43: aload_1
      44: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
      52: astore_2
      53: aload_2
      54: invokeinterface #31,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.logCloseRequested:()V
      59: goto          34
      62: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method shutdown:()V
       4: return

  public long append(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.wal.WALKeyImpl, org.apache.hadoop.hbase.wal.WALEdit, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #33                 // Method org/apache/hadoop/hbase/wal/WALKeyImpl.getMvcc:()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
       4: invokevirtual #34                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.begin:()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
       7: astore        5
       9: aload_3
      10: invokevirtual #35                 // Method org/apache/hadoop/hbase/wal/WALEdit.isReplay:()Z
      13: ifne          60
      16: aload_3
      17: invokevirtual #36                 // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
      20: invokevirtual #37                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      23: astore        6
      25: aload         6
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          60
      35: aload         6
      37: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #38                 // class org/apache/hadoop/hbase/Cell
      45: astore        7
      47: aload         7
      49: aload         5
      51: invokevirtual #39                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
      54: invokestatic  #40                 // Method org/apache/hadoop/hbase/PrivateCellUtil.setSequenceId:(Lorg/apache/hadoop/hbase/Cell;J)V
      57: goto          25
      60: aload_2
      61: aload         5
      63: invokevirtual #41                 // Method org/apache/hadoop/hbase/wal/WALKeyImpl.setWriteEntry:(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
      66: aload_0
      67: getfield      #4                  // Field listeners:Ljava/util/List;
      70: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      75: ifne          192
      78: invokestatic  #42                 // Method java/lang/System.nanoTime:()J
      81: lstore        6
      83: lconst_0
      84: lstore        8
      86: aload_3
      87: invokevirtual #36                 // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
      90: invokevirtual #37                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      93: astore        10
      95: aload         10
      97: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          131
     105: aload         10
     107: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #38                 // class org/apache/hadoop/hbase/Cell
     115: astore        11
     117: lload         8
     119: aload         11
     121: invokestatic  #43                 // Method org/apache/hadoop/hbase/PrivateCellUtil.estimatedSerializedSizeOf:(Lorg/apache/hadoop/hbase/Cell;)I
     124: i2l
     125: ladd
     126: lstore        8
     128: goto          95
     131: invokestatic  #42                 // Method java/lang/System.nanoTime:()J
     134: lload         6
     136: lsub
     137: ldc2_w        #44                 // long 1000000l
     140: ldiv
     141: lstore        10
     143: aload_0
     144: getfield      #4                  // Field listeners:Ljava/util/List;
     147: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     152: astore        12
     154: aload         12
     156: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     161: ifeq          192
     164: aload         12
     166: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     171: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
     174: astore        13
     176: aload         13
     178: lload         8
     180: lload         10
     182: aload_2
     183: aload_3
     184: invokeinterface #46,  7           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.postAppend:(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
     189: goto          154
     192: ldc2_w        #47                 // long -1l
     195: lreturn

  public void updateStore(byte[], byte[], java.lang.Long, boolean);
    Code:
       0: return

  public void sync();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          52
      12: aload_0
      13: getfield      #4                  // Field listeners:Ljava/util/List;
      16: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          52
      31: aload_1
      32: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #15                 // class org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
      40: astore_2
      41: aload_2
      42: lconst_0
      43: iconst_0
      44: invokeinterface #49,  4           // InterfaceMethod org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.postSync:(JI)V
      49: goto          22
      52: return

  public void sync(long);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method sync:()V
       4: return

  public java.lang.Long startCacheFlush(byte[], java.util.Map<byte[], java.lang.Long>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #51,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       8: invokevirtual #52                 // Method startCacheFlush:([BLjava/util/Set;)Ljava/lang/Long;
      11: areturn

  public java.lang.Long startCacheFlush(byte[], java.util.Set<byte[]>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: ldc2_w        #47                 // long -1l
      15: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: areturn

  public void completeCacheFlush(byte[]);
    Code:
       0: return

  public void abortCacheFlush(byte[]);
    Code:
       0: return

  public org.apache.hadoop.hbase.regionserver.wal.WALCoprocessorHost getCoprocessorHost();
    Code:
       0: aload_0
       1: getfield      #10                 // Field coprocessorHost:Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
       4: areturn

  public long getEarliestMemStoreSeqNum(byte[]);
    Code:
       0: ldc2_w        #47                 // long -1l
       3: lreturn

  public long getEarliestMemStoreSeqNum(byte[], byte[]);
    Code:
       0: ldc2_w        #47                 // long -1l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: ldc           #56                 // String WAL disabled.
       2: areturn

  public java.util.OptionalLong getLogFileSizeIfBeingWritten(org.apache.hadoop.fs.Path);
    Code:
       0: invokestatic  #57                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
       3: areturn
}
