Compiled from "HFileArchiver.java"
class org.apache.hadoop.hbase.backup.HFileArchiver$FileablePath extends org.apache.hadoop.hbase.backup.HFileArchiver$File {
  public org.apache.hadoop.hbase.backup.HFileArchiver$FileablePath(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hadoop/hbase/backup/HFileArchiver$File."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: new           #3                  // class org/apache/hadoop/hbase/backup/HFileArchiver$FileStatusConverter
      14: dup
      15: aload_1
      16: invokespecial #4                  // Method org/apache/hadoop/hbase/backup/HFileArchiver$FileStatusConverter."<init>":(Lorg/apache/hadoop/fs/FileSystem;)V
      19: putfield      #5                  // Field getAsFile:Lorg/apache/hadoop/hbase/backup/HFileArchiver$FileStatusConverter;
      22: return

  public void delete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       8: iconst_1
       9: invokevirtual #7                  // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      12: ifne          45
      15: new           #8                  // class java/io/IOException
      18: dup
      19: new           #9                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #11                 // String Failed to delete:
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
      35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #16                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       7: areturn

  public java.util.Collection<org.apache.hadoop.hbase.backup.HFileArchiver$File> getChildren() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.isFile:(Lorg/apache/hadoop/fs/Path;)Z
      11: ifeq          18
      14: invokestatic  #18                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: areturn
      18: aload_0
      19: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      22: aload_0
      23: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
      26: invokevirtual #19                 // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      29: invokestatic  #20                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      32: aload_0
      33: getfield      #5                  // Field getAsFile:Lorg/apache/hadoop/hbase/backup/HFileArchiver$FileStatusConverter;
      36: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      41: invokestatic  #22                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      44: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      49: checkcast     #24                 // class java/util/Collection
      52: areturn

  public boolean isFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field fs:Lorg/apache/hadoop/fs/FileSystem;
       4: aload_0
       5: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       8: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.isFile:(Lorg/apache/hadoop/fs/Path;)Z
      11: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: return

  org.apache.hadoop.fs.Path getPath();
    Code:
       0: aload_0
       1: getfield      #2                  // Field file:Lorg/apache/hadoop/fs/Path;
       4: areturn
}
