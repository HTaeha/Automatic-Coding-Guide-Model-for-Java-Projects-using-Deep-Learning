Compiled from "WAL.java"
public interface org.apache.hadoop.hbase.wal.WAL extends java.io.Closeable,org.apache.hadoop.hbase.replication.regionserver.WALFileLengthProvider {
  public abstract void registerWALActionsListener(org.apache.hadoop.hbase.regionserver.wal.WALActionsListener);

  public abstract boolean unregisterWALActionsListener(org.apache.hadoop.hbase.regionserver.wal.WALActionsListener);

  public abstract byte[][] rollWriter() throws org.apache.hadoop.hbase.regionserver.wal.FailedLogCloseException, java.io.IOException;

  public abstract byte[][] rollWriter(boolean) throws org.apache.hadoop.hbase.regionserver.wal.FailedLogCloseException, java.io.IOException;

  public abstract void shutdown() throws java.io.IOException;

  public abstract void close() throws java.io.IOException;

  public abstract long append(org.apache.hadoop.hbase.client.RegionInfo, org.apache.hadoop.hbase.wal.WALKeyImpl, org.apache.hadoop.hbase.wal.WALEdit, boolean) throws java.io.IOException;

  public abstract void updateStore(byte[], byte[], java.lang.Long, boolean);

  public abstract void sync() throws java.io.IOException;

  public abstract void sync(long) throws java.io.IOException;

  public void sync(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod sync:()V
       6: return

  public void sync(long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokeinterface #2,  3            // InterfaceMethod sync:(J)V
       7: return

  public abstract java.lang.Long startCacheFlush(byte[], java.util.Set<byte[]>);

  public abstract java.lang.Long startCacheFlush(byte[], java.util.Map<byte[], java.lang.Long>);

  public abstract void completeCacheFlush(byte[]);

  public abstract void abortCacheFlush(byte[]);

  public abstract org.apache.hadoop.hbase.regionserver.wal.WALCoprocessorHost getCoprocessorHost();

  public abstract long getEarliestMemStoreSeqNum(byte[]);

  public abstract long getEarliestMemStoreSeqNum(byte[], byte[]);

  public abstract java.lang.String toString();
}
