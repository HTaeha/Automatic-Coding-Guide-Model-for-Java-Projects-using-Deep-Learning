Compiled from "SnapshotManifestV1.java"
class org.apache.hadoop.hbase.snapshot.SnapshotManifestV1$ManifestBuilder implements org.apache.hadoop.hbase.snapshot.SnapshotManifest$RegionVisitor<org.apache.hadoop.hbase.regionserver.HRegionFileSystem, org.apache.hadoop.fs.Path> {
  public org.apache.hadoop.hbase.snapshot.SnapshotManifestV1$ManifestBuilder(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #2                  // Field snapshotDir:Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field rootFs:Lorg/apache/hadoop/fs/FileSystem;
      19: aload_0
      20: aload_3
      21: aload_1
      22: invokevirtual #5                  // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      25: putfield      #6                  // Field workingDirFs:Lorg/apache/hadoop/fs/FileSystem;
      28: return

  public org.apache.hadoop.hbase.regionserver.HRegionFileSystem regionOpen(org.apache.hadoop.hbase.client.RegionInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: aload_0
       5: getfield      #6                  // Field workingDirFs:Lorg/apache/hadoop/fs/FileSystem;
       8: aload_0
       9: getfield      #2                  // Field snapshotDir:Lorg/apache/hadoop/fs/Path;
      12: aload_1
      13: invokestatic  #7                  // Method org/apache/hadoop/hbase/regionserver/HRegionFileSystem.createRegionOnFileSystem:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
      16: astore_2
      17: aload_2
      18: areturn

  public void regionClose(org.apache.hadoop.hbase.regionserver.HRegionFileSystem);
    Code:
       0: return

  public org.apache.hadoop.fs.Path familyOpen(org.apache.hadoop.hbase.regionserver.HRegionFileSystem, byte[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #8                  // Method org/apache/hadoop/hbase/util/Bytes.toString:([B)Ljava/lang/String;
       5: invokevirtual #9                  // Method org/apache/hadoop/hbase/regionserver/HRegionFileSystem.getStoreDir:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       8: astore_3
       9: aload_3
      10: areturn

  public void familyClose(org.apache.hadoop.hbase.regionserver.HRegionFileSystem, org.apache.hadoop.fs.Path);
    Code:
       0: return

  public void storeFile(org.apache.hadoop.hbase.regionserver.HRegionFileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.regionserver.StoreFileInfo) throws java.io.IOException;
    Code:
       0: new           #10                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_2
       5: aload_3
       6: invokevirtual #11                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getPath:()Lorg/apache/hadoop/fs/Path;
       9: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      12: invokespecial #13                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      15: astore        4
      17: iconst_1
      18: istore        5
      20: aload_3
      21: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.isReference:()Z
      24: ifeq          44
      27: aload_3
      28: invokevirtual #15                 // Method org/apache/hadoop/hbase/regionserver/StoreFileInfo.getReference:()Lorg/apache/hadoop/hbase/io/Reference;
      31: aload_0
      32: getfield      #6                  // Field workingDirFs:Lorg/apache/hadoop/fs/FileSystem;
      35: aload         4
      37: invokevirtual #16                 // Method org/apache/hadoop/hbase/io/Reference.write:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      40: pop
      41: goto          55
      44: aload_0
      45: getfield      #6                  // Field workingDirFs:Lorg/apache/hadoop/fs/FileSystem;
      48: aload         4
      50: invokevirtual #17                 // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
      53: istore        5
      55: iload         5
      57: ifne          88
      60: new           #18                 // class java/io/IOException
      63: dup
      64: new           #19                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #21                 // String Failed to create reference file:
      73: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         4
      78: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: return

  public void storeFile(java.lang.Object, java.lang.Object, org.apache.hadoop.hbase.regionserver.StoreFileInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/hadoop/hbase/regionserver/HRegionFileSystem
       5: aload_2
       6: checkcast     #10                 // class org/apache/hadoop/fs/Path
       9: aload_3
      10: invokevirtual #27                 // Method storeFile:(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)V
      13: return

  public void familyClose(java.lang.Object, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/hadoop/hbase/regionserver/HRegionFileSystem
       5: aload_2
       6: checkcast     #10                 // class org/apache/hadoop/fs/Path
       9: invokevirtual #28                 // Method familyClose:(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/fs/Path;)V
      12: return

  public java.lang.Object familyOpen(java.lang.Object, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/hadoop/hbase/regionserver/HRegionFileSystem
       5: aload_2
       6: invokevirtual #29                 // Method familyOpen:(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;[B)Lorg/apache/hadoop/fs/Path;
       9: areturn

  public void regionClose(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/hadoop/hbase/regionserver/HRegionFileSystem
       5: invokevirtual #30                 // Method regionClose:(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;)V
       8: return

  public java.lang.Object regionOpen(org.apache.hadoop.hbase.client.RegionInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method regionOpen:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
       5: areturn
}
