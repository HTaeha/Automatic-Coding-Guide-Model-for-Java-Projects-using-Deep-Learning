Compiled from "MultiVersionConcurrencyControl.java"
public class org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl {
  final java.util.concurrent.atomic.AtomicLong readPoint;

  final java.util.concurrent.atomic.AtomicLong writePoint;

  public static final long NONE;

  public static final long FIXED_SIZE;

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #6                  // class java/lang/Object
      32: dup
      33: invokespecial #1                  // Method java/lang/Object."<init>":()V
      36: putfield      #7                  // Field readWaiters:Ljava/lang/Object;
      39: aload_0
      40: new           #8                  // class java/util/LinkedList
      43: dup
      44: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
      47: putfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
      50: return

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #6                  // class java/lang/Object
      32: dup
      33: invokespecial #1                  // Method java/lang/Object."<init>":()V
      36: putfield      #7                  // Field readWaiters:Ljava/lang/Object;
      39: aload_0
      40: new           #8                  // class java/util/LinkedList
      43: dup
      44: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
      47: putfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
      50: aload_0
      51: lload_1
      52: ldc2_w        #12                 // long -1l
      55: invokevirtual #14                 // Method tryAdvanceTo:(JJ)Z
      58: pop
      59: return

  public void advanceTo(long);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getWritePoint:()J
       4: lstore_3
       5: lload_3
       6: lload_1
       7: lcmp
       8: iflt          14
      11: goto          29
      14: aload_0
      15: lload_1
      16: lload_3
      17: invokevirtual #14                 // Method tryAdvanceTo:(JJ)Z
      20: ifeq          26
      23: goto          29
      26: goto          0
      29: return

  boolean tryAdvanceTo(long, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
       4: dup
       5: astore        5
       7: monitorenter
       8: aload_0
       9: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      15: lstore        6
      17: aload_0
      18: getfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
      21: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      24: lstore        8
      26: lload         6
      28: lload         8
      30: lcmp
      31: ifeq          77
      34: new           #17                 // class java/lang/RuntimeException
      37: dup
      38: new           #18                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #20                 // String Already used this mvcc; currentRead=
      47: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: lload         6
      52: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #23                 // String , currentWrite=
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: lload         8
      62: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      65: ldc           #24                 // String ; too late to tryAdvanceTo
      67: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: lload_3
      78: ldc2_w        #12                 // long -1l
      81: lcmp
      82: ifeq          97
      85: lload_3
      86: lload         6
      88: lcmp
      89: ifeq          97
      92: iconst_0
      93: aload         5
      95: monitorexit
      96: ireturn
      97: lload_1
      98: lload         6
     100: lcmp
     101: ifge          109
     104: iconst_0
     105: aload         5
     107: monitorexit
     108: ireturn
     109: aload_0
     110: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
     113: lload_1
     114: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     117: aload_0
     118: getfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
     121: lload_1
     122: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     125: aload         5
     127: monitorexit
     128: goto          139
     131: astore        10
     133: aload         5
     135: monitorexit
     136: aload         10
     138: athrow
     139: iconst_1
     140: ireturn
    Exception table:
       from    to  target type
           8    96   131   any
          97   108   131   any
         109   128   131   any
         131   136   131   any

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry begin();
    Code:
       0: aload_0
       1: invokedynamic #28,  0             // InvokeDynamic #0:run:()Ljava/lang/Runnable;
       6: invokevirtual #29                 // Method begin:(Ljava/lang/Runnable;)Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
       9: areturn

  public org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry begin(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: lstore_3
      15: new           #31                 // class org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry
      18: dup
      19: lload_3
      20: invokespecial #32                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry."<init>":(J)V
      23: astore        5
      25: aload_0
      26: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
      29: aload         5
      31: invokevirtual #33                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_1
      36: invokeinterface #34,  1           // InterfaceMethod java/lang/Runnable.run:()V
      41: aload         5
      43: aload_2
      44: monitorexit
      45: areturn
      46: astore        6
      48: aload_2
      49: monitorexit
      50: aload         6
      52: athrow
    Exception table:
       from    to  target type
           7    45    46   any
          46    50    46   any

  public void await();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #35                 // Method begin:()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
       5: invokevirtual #36                 // Method completeAndWait:(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
       8: return

  public void completeAndWait(org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method complete:(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)Z
       5: ifne          13
       8: aload_0
       9: aload_1
      10: invokevirtual #38                 // Method waitForRead:(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
      13: return

  public boolean complete(org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry);
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_1
       8: invokevirtual #39                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.markCompleted:()V
      11: ldc2_w        #12                 // long -1l
      14: lstore_3
      15: iconst_0
      16: istore        5
      18: aload_0
      19: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
      22: invokevirtual #40                 // Method java/util/LinkedList.isEmpty:()Z
      25: ifne          126
      28: iconst_1
      29: istore        5
      31: aload_0
      32: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
      35: invokevirtual #41                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
      38: checkcast     #31                 // class org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry
      41: astore        6
      43: lload_3
      44: lconst_0
      45: lcmp
      46: ifle          101
      49: lload_3
      50: lconst_1
      51: ladd
      52: aload         6
      54: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
      57: lcmp
      58: ifeq          101
      61: new           #17                 // class java/lang/RuntimeException
      64: dup
      65: new           #18                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #43                 // String Invariant in complete violated, nextReadValue=
      74: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: lload_3
      78: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      81: ldc           #44                 // String , writeNumber=
      83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         6
      88: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
      91: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      94: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload         6
     103: invokevirtual #45                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.isCompleted:()Z
     106: ifeq          126
     109: aload         6
     111: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
     114: lstore_3
     115: aload_0
     116: getfield      #10                 // Field writeQueue:Ljava/util/LinkedList;
     119: invokevirtual #46                 // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
     122: pop
     123: goto          18
     126: iload         5
     128: ifne          141
     131: new           #17                 // class java/lang/RuntimeException
     134: dup
     135: ldc           #47                 // String There is no first!
     137: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: lload_3
     142: lconst_0
     143: lcmp
     144: ifle          184
     147: aload_0
     148: getfield      #7                  // Field readWaiters:Ljava/lang/Object;
     151: dup
     152: astore        6
     154: monitorenter
     155: aload_0
     156: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
     159: lload_3
     160: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     163: aload_0
     164: getfield      #7                  // Field readWaiters:Ljava/lang/Object;
     167: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     170: aload         6
     172: monitorexit
     173: goto          184
     176: astore        7
     178: aload         6
     180: monitorexit
     181: aload         7
     183: athrow
     184: aload_0
     185: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
     188: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     191: aload_1
     192: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
     195: lcmp
     196: iflt          203
     199: iconst_1
     200: goto          204
     203: iconst_0
     204: aload_2
     205: monitorexit
     206: ireturn
     207: astore        8
     209: aload_2
     210: monitorexit
     211: aload         8
     213: athrow
    Exception table:
       from    to  target type
         155   173   176   any
         176   181   176   any
           7   206   207   any
         207   211   207   any

  void waitForRead(org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: getfield      #7                  // Field readWaiters:Ljava/lang/Object;
       8: dup
       9: astore        4
      11: monitorenter
      12: aload_0
      13: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
      16: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      19: aload_1
      20: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
      23: lcmp
      24: ifge          88
      27: iload_3
      28: bipush        100
      30: irem
      31: ifne          65
      34: iload_3
      35: ifle          65
      38: getstatic     #49                 // Field LOG:Lorg/slf4j/Logger;
      41: new           #18                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #50                 // String STUCK:
      50: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      65: iinc          3, 1
      68: aload_0
      69: getfield      #7                  // Field readWaiters:Ljava/lang/Object;
      72: ldc2_w        #53                 // long 10l
      75: invokevirtual #55                 // Method java/lang/Object.wait:(J)V
      78: goto          12
      81: astore        5
      83: iconst_1
      84: istore_2
      85: goto          12
      88: aload         4
      90: monitorexit
      91: goto          102
      94: astore        6
      96: aload         4
      98: monitorexit
      99: aload         6
     101: athrow
     102: iload_2
     103: ifeq          112
     106: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     109: invokevirtual #58                 // Method java/lang/Thread.interrupt:()V
     112: return
    Exception table:
       from    to  target type
          68    78    81   Class java/lang/InterruptedException
          12    91    94   any
          94    99    94   any

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method org/apache/hbase/thirdparty/com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #60                 // String readPoint
       6: aload_0
       7: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
      10: invokevirtual #61                 // Method org/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper;
      13: ldc           #62                 // String writePoint
      15: aload_0
      16: getfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #61                 // Method org/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper;
      22: invokevirtual #63                 // Method org/apache/hbase/thirdparty/com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      25: areturn

  public long getReadPoint();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readPoint:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getWritePoint();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writePoint:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  static {};
    Code:
       0: ldc           #11                 // class org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl
       2: invokestatic  #64                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #49                 // Field LOG:Lorg/slf4j/Logger;
       8: getstatic     #65                 // Field org/apache/hadoop/hbase/util/ClassSize.OBJECT:I
      11: bipush        16
      13: iadd
      14: iconst_2
      15: getstatic     #67                 // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
      18: imul
      19: iadd
      20: invokestatic  #68                 // Method org/apache/hadoop/hbase/util/ClassSize.align:(I)I
      23: i2l
      24: putstatic     #69                 // Field FIXED_SIZE:J
      27: return
}
