Compiled from "WALProtos.java"
public interface org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALKeyOrBuilder extends com.google.protobuf.MessageOrBuilder {
  public abstract boolean hasEncodedRegionName();

  public abstract com.google.protobuf.ByteString getEncodedRegionName();

  public abstract boolean hasTableName();

  public abstract com.google.protobuf.ByteString getTableName();

  public abstract boolean hasLogSequenceNumber();

  public abstract long getLogSequenceNumber();

  public abstract boolean hasWriteTime();

  public abstract long getWriteTime();

  public abstract boolean hasClusterId();

  public abstract org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUID getClusterId();

  public abstract org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUIDOrBuilder getClusterIdOrBuilder();

  public abstract java.util.List<org.apache.hadoop.hbase.protobuf.generated.WALProtos$FamilyScope> getScopesList();

  public abstract org.apache.hadoop.hbase.protobuf.generated.WALProtos$FamilyScope getScopes(int);

  public abstract int getScopesCount();

  public abstract java.util.List<? extends org.apache.hadoop.hbase.protobuf.generated.WALProtos$FamilyScopeOrBuilder> getScopesOrBuilderList();

  public abstract org.apache.hadoop.hbase.protobuf.generated.WALProtos$FamilyScopeOrBuilder getScopesOrBuilder(int);

  public abstract boolean hasFollowingKvCount();

  public abstract int getFollowingKvCount();

  public abstract java.util.List<org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUID> getClusterIdsList();

  public abstract org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUID getClusterIds(int);

  public abstract int getClusterIdsCount();

  public abstract java.util.List<? extends org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUIDOrBuilder> getClusterIdsOrBuilderList();

  public abstract org.apache.hadoop.hbase.protobuf.generated.HBaseProtos$UUIDOrBuilder getClusterIdsOrBuilder(int);

  public abstract boolean hasNonceGroup();

  public abstract long getNonceGroup();

  public abstract boolean hasNonce();

  public abstract long getNonce();

  public abstract boolean hasOrigSequenceNumber();

  public abstract long getOrigSequenceNumber();
}
