Compiled from "TestSecureBulkLoadManager.java"
class org.apache.hadoop.hbase.regionserver.TestSecureBulkLoadManager$2 implements java.lang.Runnable {
  final org.apache.hadoop.fs.Path val$dir1;

  final java.util.concurrent.atomic.AtomicReference val$t1Exception;

  final org.apache.hadoop.hbase.regionserver.TestSecureBulkLoadManager this$0;

  org.apache.hadoop.hbase.regionserver.TestSecureBulkLoadManager$2(org.apache.hadoop.hbase.regionserver.TestSecureBulkLoadManager, org.apache.hadoop.fs.Path, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/regionserver/TestSecureBulkLoadManager;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$dir1:Lorg/apache/hadoop/fs/Path;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$t1Exception:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/regionserver/TestSecureBulkLoadManager;
       4: aload_0
       5: getfield      #2                  // Field val$dir1:Lorg/apache/hadoop/fs/Path;
       8: invokestatic  #5                  // Method org/apache/hadoop/hbase/regionserver/TestSecureBulkLoadManager.access$200:(Lorg/apache/hadoop/hbase/regionserver/TestSecureBulkLoadManager;Lorg/apache/hadoop/fs/Path;)V
      11: goto          34
      14: astore_1
      15: invokestatic  #7                  // Method org/apache/hadoop/hbase/regionserver/TestSecureBulkLoadManager.access$300:()Lorg/slf4j/Logger;
      18: ldc           #8                  // String bulk load failed .
      20: aload_1
      21: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: aload_0
      27: getfield      #3                  // Field val$t1Exception:Ljava/util/concurrent/atomic/AtomicReference;
      30: aload_1
      31: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      34: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Exception
}
