Compiled from "NoWritesCompactionsViolationPolicyEnforcement.java"
public class org.apache.hadoop.hbase.quotas.policies.NoWritesCompactionsViolationPolicyEnforcement extends org.apache.hadoop.hbase.quotas.policies.NoWritesViolationPolicyEnforcement {
  public org.apache.hadoop.hbase.quotas.policies.NoWritesCompactionsViolationPolicyEnforcement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/quotas/policies/NoWritesViolationPolicyEnforcement."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field disableCompactions:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: return

  public synchronized void enable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disableCompactions:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: istore_1
      10: iload_1
      11: ifne          35
      14: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      17: invokeinterface #7,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      22: ifeq          35
      25: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #8                  // String Compactions were already disabled upon enabling the policy
      30: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      35: return

  public synchronized void disable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disableCompactions:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: istore_1
      10: iload_1
      11: ifne          35
      14: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      17: invokeinterface #7,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      22: ifeq          35
      25: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      28: ldc           #10                 // String Compactions were already enabled upon disabling the policy
      30: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      35: return

  public java.lang.String getPolicyName();
    Code:
       0: getstatic     #11                 // Field org/apache/hadoop/hbase/quotas/SpaceViolationPolicy.NO_WRITES_COMPACTIONS:Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicy;
       3: invokevirtual #12                 // Method org/apache/hadoop/hbase/quotas/SpaceViolationPolicy.name:()Ljava/lang/String;
       6: areturn

  public boolean areCompactionsDisabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disableCompactions:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  static {};
    Code:
       0: ldc           #14                 // class org/apache/hadoop/hbase/quotas/policies/NoWritesCompactionsViolationPolicyEnforcement
       2: invokestatic  #15                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
