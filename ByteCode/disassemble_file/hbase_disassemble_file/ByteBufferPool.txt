Compiled from "ByteBufferPool.java"
public class org.apache.hadoop.hbase.io.ByteBufferPool {
  public static final java.lang.String MAX_POOL_SIZE_KEY;

  public static final java.lang.String BUFFER_SIZE_KEY;

  public static final int DEFAULT_BUFFER_SIZE;

  public org.apache.hadoop.hbase.io.ByteBufferPool(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #1                  // Method "<init>":(IIZ)V
       7: return

  public org.apache.hadoop.hbase.io.ByteBufferPool(int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #5                  // Field buffers:Ljava/util/Queue;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field maxPoolSizeInfoLevelLogged:Z
      20: aload_0
      21: iload_1
      22: putfield      #7                  // Field bufferSize:I
      25: aload_0
      26: iload_2
      27: putfield      #8                  // Field maxPoolSize:I
      30: aload_0
      31: iload_3
      32: putfield      #9                  // Field directByteBuffer:Z
      35: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      38: ldc           #11                 // String Created with bufferSize={} and maxPoolSize={}
      40: iload_1
      41: i2l
      42: invokestatic  #12                 // Method org/apache/hadoop/util/StringUtils.byteDesc:(J)Ljava/lang/String;
      45: iload_2
      46: i2l
      47: invokestatic  #12                 // Method org/apache/hadoop/util/StringUtils.byteDesc:(J)Ljava/lang/String;
      50: invokeinterface #13,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      55: aload_0
      56: new           #14                 // class java/util/concurrent/atomic/AtomicInteger
      59: dup
      60: iconst_0
      61: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      64: putfield      #16                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      67: return

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffers:Ljava/util/Queue;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #18                 // class java/nio/ByteBuffer
      12: astore_1
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #19                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      21: pop
      22: aload_1
      23: areturn
      24: aload_0
      25: getfield      #16                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.intValue:()I
      31: istore_2
      32: iload_2
      33: aload_0
      34: getfield      #8                  // Field maxPoolSize:I
      37: if_icmplt     158
      40: aload_0
      41: getfield      #6                  // Field maxPoolSizeInfoLevelLogged:Z
      44: ifeq          106
      47: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      50: invokeinterface #21,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      55: ifeq          156
      58: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      61: new           #22                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #24                 // String Pool already reached its max capacity :
      70: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: getfield      #8                  // Field maxPoolSize:I
      77: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #27                 // String  and no free buffers now. Consider increasing the value for '
      82: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #29                 // String hbase.ipc.server.reservoir.initial.max
      87: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #30                 // String ' ?
      92: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #32,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: goto          156
     106: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
     109: new           #22                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #24                 // String Pool already reached its max capacity :
     118: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: getfield      #8                  // Field maxPoolSize:I
     125: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     128: ldc           #27                 // String  and no free buffers now. Consider increasing the value for '
     130: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #29                 // String hbase.ipc.server.reservoir.initial.max
     135: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: ldc           #30                 // String ' ?
     140: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     151: aload_0
     152: iconst_1
     153: putfield      #6                  // Field maxPoolSizeInfoLevelLogged:Z
     156: aconst_null
     157: areturn
     158: aload_0
     159: getfield      #16                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
     162: iload_2
     163: iload_2
     164: iconst_1
     165: iadd
     166: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     169: ifne          175
     172: goto          24
     175: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
     178: invokeinterface #35,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     183: ifeq          216
     186: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
     189: new           #22                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     196: ldc           #36                 // String Creating a new offheap ByteBuffer of size:
     198: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_0
     202: getfield      #7                  // Field bufferSize:I
     205: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     208: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     216: aload_0
     217: getfield      #9                  // Field directByteBuffer:Z
     220: ifeq          233
     223: aload_0
     224: getfield      #7                  // Field bufferSize:I
     227: invokestatic  #38                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     230: goto          240
     233: aload_0
     234: getfield      #7                  // Field bufferSize:I
     237: invokestatic  #39                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     240: areturn

  public void putbackBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/nio/ByteBuffer.capacity:()I
       4: aload_0
       5: getfield      #7                  // Field bufferSize:I
       8: if_icmpne     23
      11: aload_0
      12: getfield      #9                  // Field directByteBuffer:Z
      15: aload_1
      16: invokevirtual #41                 // Method java/nio/ByteBuffer.isDirect:()Z
      19: ixor
      20: ifeq          34
      23: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #42                 // String Trying to put a buffer, not created by this pool! Will be just ignored
      28: invokeinterface #43,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      33: return
      34: aload_0
      35: getfield      #5                  // Field buffers:Ljava/util/Queue;
      38: aload_1
      39: invokeinterface #44,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      44: pop
      45: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufferSize:I
       4: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffers:Ljava/util/Queue;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  static {};
    Code:
       0: ldc           #28                 // class org/apache/hadoop/hbase/io/ByteBufferPool
       2: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
