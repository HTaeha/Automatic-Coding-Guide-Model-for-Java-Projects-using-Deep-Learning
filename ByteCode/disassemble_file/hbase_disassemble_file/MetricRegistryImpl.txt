Compiled from "MetricRegistryImpl.java"
public class org.apache.hadoop.hbase.metrics.impl.MetricRegistryImpl implements org.apache.hadoop.hbase.metrics.MetricRegistry {
  public org.apache.hadoop.hbase.metrics.impl.MetricRegistryImpl(org.apache.hadoop.hbase.metrics.MetricRegistryInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field info:Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
      20: return

  public org.apache.hadoop.hbase.metrics.Timer timer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #6,  0              // InvokeDynamic #0:get:(Lorg/apache/hadoop/hbase/metrics/impl/MetricRegistryImpl;)Ljava/util/function/Supplier;
      11: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #8                  // class org/apache/hadoop/hbase/metrics/Timer
      17: areturn

  protected org.apache.hadoop.hbase.metrics.Timer createTimer();
    Code:
       0: new           #9                  // class org/apache/hadoop/hbase/metrics/impl/TimerImpl
       3: dup
       4: invokespecial #10                 // Method org/apache/hadoop/hbase/metrics/impl/TimerImpl."<init>":()V
       7: areturn

  public org.apache.hadoop.hbase.metrics.Histogram histogram(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #11,  0             // InvokeDynamic #1:get:(Lorg/apache/hadoop/hbase/metrics/impl/MetricRegistryImpl;)Ljava/util/function/Supplier;
      11: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #12                 // class org/apache/hadoop/hbase/metrics/Histogram
      17: areturn

  protected org.apache.hadoop.hbase.metrics.Histogram createHistogram();
    Code:
       0: new           #13                 // class org/apache/hadoop/hbase/metrics/impl/HistogramImpl
       3: dup
       4: invokespecial #14                 // Method org/apache/hadoop/hbase/metrics/impl/HistogramImpl."<init>":()V
       7: areturn

  public org.apache.hadoop.hbase.metrics.Meter meter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #15,  0             // InvokeDynamic #2:get:(Lorg/apache/hadoop/hbase/metrics/impl/MetricRegistryImpl;)Ljava/util/function/Supplier;
      11: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #16                 // class org/apache/hadoop/hbase/metrics/Meter
      17: areturn

  protected org.apache.hadoop.hbase.metrics.Meter createMeter();
    Code:
       0: new           #17                 // class org/apache/hadoop/hbase/metrics/impl/DropwizardMeter
       3: dup
       4: invokespecial #18                 // Method org/apache/hadoop/hbase/metrics/impl/DropwizardMeter."<init>":()V
       7: areturn

  public org.apache.hadoop.hbase.metrics.Counter counter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #19,  0             // InvokeDynamic #3:get:(Lorg/apache/hadoop/hbase/metrics/impl/MetricRegistryImpl;)Ljava/util/function/Supplier;
      11: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #20                 // class org/apache/hadoop/hbase/metrics/Counter
      17: areturn

  protected org.apache.hadoop.hbase.metrics.Counter createCounter();
    Code:
       0: new           #21                 // class org/apache/hadoop/hbase/metrics/impl/CounterImpl
       3: dup
       4: invokespecial #22                 // Method org/apache/hadoop/hbase/metrics/impl/CounterImpl."<init>":()V
       7: areturn

  public java.util.Optional<org.apache.hadoop.hbase.metrics.Metric> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #24                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      13: areturn

  public org.apache.hadoop.hbase.metrics.Metric register(java.lang.String, org.apache.hadoop.hbase.metrics.Metric);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokedynamic #25,  0             // InvokeDynamic #4:get:(Lorg/apache/hadoop/hbase/metrics/Metric;)Ljava/util/function/Supplier;
      11: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #26                 // class org/apache/hadoop/hbase/metrics/Metric
      17: areturn

  public <T> org.apache.hadoop.hbase.metrics.Gauge<T> register(java.lang.String, org.apache.hadoop.hbase.metrics.Gauge<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method register:(Ljava/lang/String;Lorg/apache/hadoop/hbase/metrics/Metric;)Lorg/apache/hadoop/hbase/metrics/Metric;
       6: checkcast     #28                 // class org/apache/hadoop/hbase/metrics/Gauge
       9: areturn

  public void registerAll(org.apache.hadoop.hbase.metrics.MetricSet);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/apache/hadoop/hbase/metrics/MetricSet.getMetrics:()Ljava/util/Map;
       6: aload_0
       7: invokedynamic #30,  0             // InvokeDynamic #5:accept:(Lorg/apache/hadoop/hbase/metrics/impl/MetricRegistryImpl;)Ljava/util/function/BiConsumer;
      12: invokeinterface #31,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      17: return

  public java.util.Map<java.lang.String, org.apache.hadoop.hbase.metrics.Metric> getMetrics();
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public boolean remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metrics:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public org.apache.hadoop.hbase.metrics.MetricRegistryInfo getMetricRegistryInfo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field info:Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
       4: areturn
}
