Compiled from "FSWALEntry.java"
class org.apache.hadoop.hbase.regionserver.wal.FSWALEntry extends org.apache.hadoop.hbase.wal.WAL$Entry {
  org.apache.hadoop.hbase.regionserver.wal.FSWALEntry(long, org.apache.hadoop.hbase.wal.WALKeyImpl, org.apache.hadoop.hbase.wal.WALEdit, org.apache.hadoop.hbase.client.RegionInfo, boolean);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: invokespecial #1                  // Method org/apache/hadoop/hbase/wal/WAL$Entry."<init>":(Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
       7: aload_0
       8: iload         6
      10: putfield      #2                  // Field inMemstore:Z
      13: aload_0
      14: aload         5
      16: putfield      #3                  // Field regionInfo:Lorg/apache/hadoop/hbase/client/RegionInfo;
      19: aload_0
      20: lload_1
      21: putfield      #4                  // Field txid:J
      24: iload         6
      26: ifeq          61
      29: aload         4
      31: invokevirtual #5                  // Method org/apache/hadoop/hbase/wal/WALEdit.getFamilies:()Ljava/util/Set;
      34: astore        7
      36: aload_0
      37: aload         7
      39: ifnull        47
      42: aload         7
      44: goto          55
      47: aload         4
      49: invokevirtual #6                  // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
      52: invokestatic  #7                  // Method collectFamilies:(Ljava/util/List;)Ljava/util/Set;
      55: putfield      #8                  // Field familyNames:Ljava/util/Set;
      58: goto          68
      61: aload_0
      62: invokestatic  #9                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      65: putfield      #8                  // Field familyNames:Ljava/util/Set;
      68: return

  static java.util.Set<byte[]> collectFamilies(java.util.List<org.apache.hadoop.hbase.Cell>);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/apache/hbase/thirdparty/org/apache/commons/collections4/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          11
       7: invokestatic  #9                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      17: invokedynamic #12,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      22: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokedynamic #14,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      32: invokestatic  #15                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      35: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      40: checkcast     #17                 // class java/util/TreeSet
      43: invokevirtual #18                 // Method java/util/TreeSet.stream:()Ljava/util/stream/Stream;
      46: invokedynamic #19,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      51: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      56: invokedynamic #21,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      61: invokestatic  #15                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      64: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      69: checkcast     #22                 // class java/util/Set
      72: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String sequence=
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field txid:J
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #28                 // String ,
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokespecial #29                 // Method org/apache/hadoop/hbase/wal/WAL$Entry.toString:()Ljava/lang/String;
      28: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  boolean isInMemStore();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inMemstore:Z
       4: ireturn

  org.apache.hadoop.hbase.client.RegionInfo getRegionInfo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field regionInfo:Lorg/apache/hadoop/hbase/client/RegionInfo;
       4: areturn

  long getTxid();
    Code:
       0: aload_0
       1: getfield      #4                  // Field txid:J
       4: lreturn

  long stampRegionSequenceId(org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl$WriteEntry) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry.getWriteNumber:()J
       4: lstore_2
       5: aload_0
       6: invokevirtual #32                 // Method getEdit:()Lorg/apache/hadoop/hbase/wal/WALEdit;
       9: invokevirtual #33                 // Method org/apache/hadoop/hbase/wal/WALEdit.isReplay:()Z
      12: ifne          65
      15: aload_0
      16: getfield      #2                  // Field inMemstore:Z
      19: ifeq          65
      22: aload_0
      23: invokevirtual #32                 // Method getEdit:()Lorg/apache/hadoop/hbase/wal/WALEdit;
      26: invokevirtual #6                  // Method org/apache/hadoop/hbase/wal/WALEdit.getCells:()Ljava/util/ArrayList;
      29: invokevirtual #34                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          65
      44: aload         4
      46: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #37                 // class org/apache/hadoop/hbase/Cell
      54: astore        5
      56: aload         5
      58: lload_2
      59: invokestatic  #38                 // Method org/apache/hadoop/hbase/PrivateCellUtil.setSequenceId:(Lorg/apache/hadoop/hbase/Cell;J)V
      62: goto          34
      65: aload_0
      66: invokevirtual #39                 // Method getKey:()Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
      69: aload_1
      70: invokevirtual #40                 // Method org/apache/hadoop/hbase/wal/WALKeyImpl.setWriteEntry:(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
      73: lload_2
      74: lreturn

  java.util.Set<byte[]> getFamilyNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field familyNames:Ljava/util/Set;
       4: areturn
}
