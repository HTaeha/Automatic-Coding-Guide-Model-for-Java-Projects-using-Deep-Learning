Compiled from "HttpServer.java"
public class org.apache.hadoop.hbase.http.HttpServer$Builder {
  public org.apache.hadoop.hbase.http.HttpServer$Builder();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #11                 // Method org/apache/hbase/thirdparty/com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       8: putfield      #12                 // Field endpoints:Ljava/util/ArrayList;
      11: aload_0
      12: iconst_0
      13: putfield      #13                 // Field securityEnabled:Z
      16: aload_0
      17: ldc           #14                 // String webapps
      19: putfield      #9                  // Field appDir:Ljava/lang/String;
      22: aload_0
      23: iconst_m1
      24: putfield      #15                 // Field port:I
      27: return

  public org.apache.hadoop.hbase.http.HttpServer$Builder addEndpoint(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #12                 // Field endpoints:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder hostName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field hostName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder trustStore(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field trustStore:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #18                 // Field trustStorePassword:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #19                 // Field trustStoreType:Ljava/lang/String;
      15: aload_0
      16: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder keyStore(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field keyStore:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #21                 // Field keyStorePassword:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #22                 // Field keyStoreType:Ljava/lang/String;
      15: aload_0
      16: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder keyPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field keyPassword:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder needsClientAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field needsClientAuth:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setBindAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field bindAddress:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field port:I
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setFindPort(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field findPort:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setPathSpec(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field pathSpecs:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setACL(org.apache.hadoop.security.authorize.AccessControlList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field adminsAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setSecurityEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field securityEnabled:Z
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setUsernameConfKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field usernameConfKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setKeytabConfKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field keytabConfKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setKerberosNameRulesKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field kerberosNameRulesKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setSignatureSecretFileKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field signatureSecretFileKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setAppDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field appDir:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer$Builder setLogDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field logDir:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.http.HttpServer build() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #30                 // class org/apache/hadoop/HadoopIllegalArgumentException
      10: dup
      11: ldc           #31                 // String name is not set
      13: invokespecial #32                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #25                 // Field bindAddress:Ljava/lang/String;
      21: ifnull        96
      24: aload_0
      25: getfield      #15                 // Field port:I
      28: iconst_m1
      29: if_icmpeq     96
      32: aload_0
      33: getfield      #12                 // Field endpoints:Ljava/util/ArrayList;
      36: iconst_0
      37: new           #33                 // class java/net/URI
      40: dup
      41: ldc           #34                 // String http
      43: ldc           #35                 // String
      45: aload_0
      46: getfield      #25                 // Field bindAddress:Ljava/lang/String;
      49: aload_0
      50: getfield      #15                 // Field port:I
      53: ldc           #35                 // String
      55: ldc           #35                 // String
      57: ldc           #35                 // String
      59: invokespecial #36                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      62: invokevirtual #37                 // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      65: goto          96
      68: astore_1
      69: new           #30                 // class org/apache/hadoop/HadoopIllegalArgumentException
      72: dup
      73: new           #39                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #41                 // String Invalid endpoint:
      82: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_1
      86: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #32                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: getfield      #12                 // Field endpoints:Ljava/util/ArrayList;
     100: invokevirtual #45                 // Method java/util/ArrayList.isEmpty:()Z
     103: ifeq          116
     106: new           #30                 // class org/apache/hadoop/HadoopIllegalArgumentException
     109: dup
     110: ldc           #46                 // String No endpoints specified
     112: invokespecial #32                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_0
     117: getfield      #3                  // Field hostName:Ljava/lang/String;
     120: ifnonnull     141
     123: aload_0
     124: aload_0
     125: getfield      #12                 // Field endpoints:Ljava/util/ArrayList;
     128: iconst_0
     129: invokevirtual #47                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     132: checkcast     #33                 // class java/net/URI
     135: invokevirtual #48                 // Method java/net/URI.getHost:()Ljava/lang/String;
     138: putfield      #3                  // Field hostName:Ljava/lang/String;
     141: aload_0
     142: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     145: ifnonnull     159
     148: aload_0
     149: new           #49                 // class org/apache/hadoop/conf/Configuration
     152: dup
     153: invokespecial #50                 // Method org/apache/hadoop/conf/Configuration."<init>":()V
     156: putfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     159: new           #1                  // class org/apache/hadoop/hbase/http/HttpServer
     162: dup
     163: aload_0
     164: aconst_null
     165: invokespecial #51                 // Method org/apache/hadoop/hbase/http/HttpServer."<init>":(Lorg/apache/hadoop/hbase/http/HttpServer$Builder;Lorg/apache/hadoop/hbase/http/HttpServer$1;)V
     168: astore_1
     169: aload_0
     170: getfield      #13                 // Field securityEnabled:Z
     173: ifeq          204
     176: aload_1
     177: aload_0
     178: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
     181: aload_0
     182: getfield      #3                  // Field hostName:Ljava/lang/String;
     185: aload_0
     186: getfield      #26                 // Field usernameConfKey:Ljava/lang/String;
     189: aload_0
     190: getfield      #27                 // Field keytabConfKey:Ljava/lang/String;
     193: aload_0
     194: getfield      #28                 // Field kerberosNameRulesKey:Ljava/lang/String;
     197: aload_0
     198: getfield      #29                 // Field signatureSecretFileKey:Ljava/lang/String;
     201: invokestatic  #52                 // Method org/apache/hadoop/hbase/http/HttpServer.access$100:(Lorg/apache/hadoop/hbase/http/HttpServer;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     204: aload_0
     205: getfield      #12                 // Field endpoints:Ljava/util/ArrayList;
     208: invokevirtual #53                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     211: astore_2
     212: aload_2
     213: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     218: ifeq          583
     221: aload_2
     222: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     227: checkcast     #33                 // class java/net/URI
     230: astore_3
     231: aconst_null
     232: astore        4
     234: aload_3
     235: invokevirtual #56                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     238: astore        5
     240: new           #57                 // class org/eclipse/jetty/server/HttpConfiguration
     243: dup
     244: invokespecial #58                 // Method org/eclipse/jetty/server/HttpConfiguration."<init>":()V
     247: astore        6
     249: aload         6
     251: ldc           #59                 // String https
     253: invokevirtual #60                 // Method org/eclipse/jetty/server/HttpConfiguration.setSecureScheme:(Ljava/lang/String;)V
     256: aload         6
     258: ldc           #61                 // int 65536
     260: invokevirtual #62                 // Method org/eclipse/jetty/server/HttpConfiguration.setHeaderCacheSize:(I)V
     263: aload         6
     265: ldc           #61                 // int 65536
     267: invokevirtual #63                 // Method org/eclipse/jetty/server/HttpConfiguration.setResponseHeaderSize:(I)V
     270: aload         6
     272: ldc           #61                 // int 65536
     274: invokevirtual #64                 // Method org/eclipse/jetty/server/HttpConfiguration.setRequestHeaderSize:(I)V
     277: ldc           #34                 // String http
     279: aload         5
     281: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     284: ifeq          319
     287: new           #66                 // class org/eclipse/jetty/server/ServerConnector
     290: dup
     291: aload_1
     292: getfield      #67                 // Field org/apache/hadoop/hbase/http/HttpServer.webServer:Lorg/eclipse/jetty/server/Server;
     295: iconst_1
     296: anewarray     #68                 // class org/eclipse/jetty/server/ConnectionFactory
     299: dup
     300: iconst_0
     301: new           #69                 // class org/eclipse/jetty/server/HttpConnectionFactory
     304: dup
     305: aload         6
     307: invokespecial #70                 // Method org/eclipse/jetty/server/HttpConnectionFactory."<init>":(Lorg/eclipse/jetty/server/HttpConfiguration;)V
     310: aastore
     311: invokespecial #71                 // Method org/eclipse/jetty/server/ServerConnector."<init>":(Lorg/eclipse/jetty/server/Server;[Lorg/eclipse/jetty/server/ConnectionFactory;)V
     314: astore        4
     316: goto          524
     319: ldc           #59                 // String https
     321: aload         5
     323: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     326: ifeq          497
     329: new           #57                 // class org/eclipse/jetty/server/HttpConfiguration
     332: dup
     333: aload         6
     335: invokespecial #72                 // Method org/eclipse/jetty/server/HttpConfiguration."<init>":(Lorg/eclipse/jetty/server/HttpConfiguration;)V
     338: astore        7
     340: aload         7
     342: new           #73                 // class org/eclipse/jetty/server/SecureRequestCustomizer
     345: dup
     346: invokespecial #74                 // Method org/eclipse/jetty/server/SecureRequestCustomizer."<init>":()V
     349: invokevirtual #75                 // Method org/eclipse/jetty/server/HttpConfiguration.addCustomizer:(Lorg/eclipse/jetty/server/HttpConfiguration$Customizer;)V
     352: new           #76                 // class org/eclipse/jetty/util/ssl/SslContextFactory
     355: dup
     356: invokespecial #77                 // Method org/eclipse/jetty/util/ssl/SslContextFactory."<init>":()V
     359: astore        8
     361: aload         8
     363: aload_0
     364: getfield      #24                 // Field needsClientAuth:Z
     367: invokevirtual #78                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setNeedClientAuth:(Z)V
     370: aload         8
     372: aload_0
     373: getfield      #23                 // Field keyPassword:Ljava/lang/String;
     376: invokevirtual #79                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setKeyManagerPassword:(Ljava/lang/String;)V
     379: aload_0
     380: getfield      #20                 // Field keyStore:Ljava/lang/String;
     383: ifnull        413
     386: aload         8
     388: aload_0
     389: getfield      #20                 // Field keyStore:Ljava/lang/String;
     392: invokevirtual #80                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setKeyStorePath:(Ljava/lang/String;)V
     395: aload         8
     397: aload_0
     398: getfield      #22                 // Field keyStoreType:Ljava/lang/String;
     401: invokevirtual #81                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setKeyStoreType:(Ljava/lang/String;)V
     404: aload         8
     406: aload_0
     407: getfield      #21                 // Field keyStorePassword:Ljava/lang/String;
     410: invokevirtual #82                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setKeyStorePassword:(Ljava/lang/String;)V
     413: aload_0
     414: getfield      #17                 // Field trustStore:Ljava/lang/String;
     417: ifnull        447
     420: aload         8
     422: aload_0
     423: getfield      #17                 // Field trustStore:Ljava/lang/String;
     426: invokevirtual #83                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setTrustStorePath:(Ljava/lang/String;)V
     429: aload         8
     431: aload_0
     432: getfield      #19                 // Field trustStoreType:Ljava/lang/String;
     435: invokevirtual #84                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setTrustStoreType:(Ljava/lang/String;)V
     438: aload         8
     440: aload_0
     441: getfield      #18                 // Field trustStorePassword:Ljava/lang/String;
     444: invokevirtual #85                 // Method org/eclipse/jetty/util/ssl/SslContextFactory.setTrustStorePassword:(Ljava/lang/String;)V
     447: new           #66                 // class org/eclipse/jetty/server/ServerConnector
     450: dup
     451: aload_1
     452: getfield      #67                 // Field org/apache/hadoop/hbase/http/HttpServer.webServer:Lorg/eclipse/jetty/server/Server;
     455: iconst_2
     456: anewarray     #68                 // class org/eclipse/jetty/server/ConnectionFactory
     459: dup
     460: iconst_0
     461: new           #86                 // class org/eclipse/jetty/server/SslConnectionFactory
     464: dup
     465: aload         8
     467: getstatic     #87                 // Field org/eclipse/jetty/http/HttpVersion.HTTP_1_1:Lorg/eclipse/jetty/http/HttpVersion;
     470: invokevirtual #88                 // Method org/eclipse/jetty/http/HttpVersion.toString:()Ljava/lang/String;
     473: invokespecial #89                 // Method org/eclipse/jetty/server/SslConnectionFactory."<init>":(Lorg/eclipse/jetty/util/ssl/SslContextFactory;Ljava/lang/String;)V
     476: aastore
     477: dup
     478: iconst_1
     479: new           #69                 // class org/eclipse/jetty/server/HttpConnectionFactory
     482: dup
     483: aload         7
     485: invokespecial #70                 // Method org/eclipse/jetty/server/HttpConnectionFactory."<init>":(Lorg/eclipse/jetty/server/HttpConfiguration;)V
     488: aastore
     489: invokespecial #71                 // Method org/eclipse/jetty/server/ServerConnector."<init>":(Lorg/eclipse/jetty/server/Server;[Lorg/eclipse/jetty/server/ConnectionFactory;)V
     492: astore        4
     494: goto          524
     497: new           #30                 // class org/apache/hadoop/HadoopIllegalArgumentException
     500: dup
     501: new           #39                 // class java/lang/StringBuilder
     504: dup
     505: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     508: ldc           #90                 // String unknown scheme for endpoint:
     510: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     513: aload_3
     514: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     517: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     520: invokespecial #32                 // Method org/apache/hadoop/HadoopIllegalArgumentException."<init>":(Ljava/lang/String;)V
     523: athrow
     524: aload         4
     526: sipush        128
     529: invokevirtual #91                 // Method org/eclipse/jetty/server/ServerConnector.setAcceptQueueSize:(I)V
     532: getstatic     #92                 // Field org/apache/hadoop/util/Shell.WINDOWS:Z
     535: ifeq          544
     538: aload         4
     540: iconst_0
     541: invokevirtual #93                 // Method org/eclipse/jetty/server/ServerConnector.setReuseAddress:(Z)V
     544: aload         4
     546: aload_3
     547: invokevirtual #48                 // Method java/net/URI.getHost:()Ljava/lang/String;
     550: invokevirtual #94                 // Method org/eclipse/jetty/server/ServerConnector.setHost:(Ljava/lang/String;)V
     553: aload         4
     555: aload_3
     556: invokevirtual #95                 // Method java/net/URI.getPort:()I
     559: iconst_m1
     560: if_icmpne     567
     563: iconst_0
     564: goto          571
     567: aload_3
     568: invokevirtual #95                 // Method java/net/URI.getPort:()I
     571: invokevirtual #96                 // Method org/eclipse/jetty/server/ServerConnector.setPort:(I)V
     574: aload_1
     575: aload         4
     577: invokestatic  #97                 // Method org/apache/hadoop/hbase/http/HttpServer.access$200:(Lorg/apache/hadoop/hbase/http/HttpServer;Lorg/eclipse/jetty/server/ServerConnector;)V
     580: goto          212
     583: aload_1
     584: invokestatic  #98                 // Method org/apache/hadoop/hbase/http/HttpServer.access$300:(Lorg/apache/hadoop/hbase/http/HttpServer;)V
     587: aload_1
     588: areturn
    Exception table:
       from    to  target type
          32    65    68   Class java/net/URISyntaxException

  static java.lang.String access$400(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appDir:Ljava/lang/String;
       4: areturn

  static java.lang.String access$500(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logDir:Ljava/lang/String;
       4: areturn

  static java.lang.String access$600(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  static org.apache.hadoop.conf.Configuration access$700(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  static org.apache.hadoop.security.authorize.AccessControlList access$800(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field adminsAcl:Lorg/apache/hadoop/security/authorize/AccessControlList;
       4: areturn

  static boolean access$900(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field findPort:Z
       4: ireturn

  static java.lang.String access$1000(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field hostName:Ljava/lang/String;
       4: areturn

  static java.lang.String[] access$1100(org.apache.hadoop.hbase.http.HttpServer$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pathSpecs:[Ljava/lang/String;
       4: areturn
}
