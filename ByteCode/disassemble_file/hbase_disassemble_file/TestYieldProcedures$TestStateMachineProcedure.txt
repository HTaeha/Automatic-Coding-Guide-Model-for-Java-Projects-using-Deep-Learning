Compiled from "TestYieldProcedures.java"
public class org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure extends org.apache.hadoop.hbase.procedure2.StateMachineProcedure<org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestProcEnv, org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State> {
  public org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(ZZ)V
       6: return

  public org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure(boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/hadoop/hbase/procedure2/StateMachineProcedure."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #8                  // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: iload_1
      29: putfield      #9                  // Field abortOnFinalStep:Z
      32: aload_0
      33: iload_2
      34: putfield      #10                 // Field throwInterruptOnceOnEachStep:Z
      37: return

  public java.util.ArrayList<org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$ExecutionInfo> getExecutionInfo();
    Code:
       0: aload_0
       1: getfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
       4: areturn

  protected org.apache.hadoop.hbase.procedure2.StateMachineProcedure$Flow executeFromState(org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestProcEnv, org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv.nextTimestamp:()J
       4: lstore_3
       5: invokestatic  #12                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures.access$700:()Lorg/slf4j/Logger;
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #15                 // Method getProcId:()J
      19: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      22: ldc           #17                 // String  execute step
      24: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String  ts=
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_3
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      48: aload_0
      49: getfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
      52: new           #23                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$ExecutionInfo
      55: dup
      56: lload_3
      57: aload_2
      58: iconst_0
      59: invokespecial #24                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$ExecutionInfo."<init>":(JLorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;Z)V
      62: invokevirtual #25                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      65: pop
      66: ldc2_w        #26                 // long 150l
      69: invokestatic  #28                 // Method java/lang/Thread.sleep:(J)V
      72: aload_0
      73: getfield      #10                 // Field throwInterruptOnceOnEachStep:Z
      76: ifeq          113
      79: aload_0
      80: getfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
      83: invokevirtual #29                 // Method java/util/ArrayList.size:()I
      86: iconst_1
      87: isub
      88: iconst_2
      89: irem
      90: ifne          113
      93: invokestatic  #12                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures.access$700:()Lorg/slf4j/Logger;
      96: ldc           #30                 // String THROW INTERRUPT
      98: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: new           #32                 // class java/lang/InterruptedException
     106: dup
     107: ldc           #33                 // String test interrupt
     109: invokespecial #34                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: getstatic     #35                 // Field org/apache/hadoop/hbase/procedure2/TestYieldProcedures$1.$SwitchMap$org$apache$hadoop$hbase$procedure2$TestYieldProcedures$TestStateMachineProcedure$State:[I
     116: aload_2
     117: invokevirtual #36                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.ordinal:()I
     120: iaload
     121: tableswitch   { // 1 to 3
                     1: 148
                     2: 158
                     3: 168
               default: 194
          }
     148: aload_0
     149: getstatic     #37                 // Field org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.STATE_2:Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
     152: invokevirtual #38                 // Method setNextState:(Ljava/lang/Object;)V
     155: goto          202
     158: aload_0
     159: getstatic     #39                 // Field org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.STATE_3:Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
     162: invokevirtual #38                 // Method setNextState:(Ljava/lang/Object;)V
     165: goto          202
     168: aload_0
     169: getfield      #9                  // Field abortOnFinalStep:Z
     172: ifeq          190
     175: aload_0
     176: ldc           #40                 // String test
     178: new           #41                 // class java/io/IOException
     181: dup
     182: ldc           #42                 // String Requested abort on final step
     184: invokespecial #43                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     187: invokevirtual #44                 // Method setFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: getstatic     #45                 // Field org/apache/hadoop/hbase/procedure2/StateMachineProcedure$Flow.NO_MORE_STATE:Lorg/apache/hadoop/hbase/procedure2/StateMachineProcedure$Flow;
     193: areturn
     194: new           #46                 // class java/lang/UnsupportedOperationException
     197: dup
     198: invokespecial #47                 // Method java/lang/UnsupportedOperationException."<init>":()V
     201: athrow
     202: getstatic     #48                 // Field org/apache/hadoop/hbase/procedure2/StateMachineProcedure$Flow.HAS_MORE_STATE:Lorg/apache/hadoop/hbase/procedure2/StateMachineProcedure$Flow;
     205: areturn

  protected void rollbackState(org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestProcEnv, org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv.nextTimestamp:()J
       4: lstore_3
       5: invokestatic  #12                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures.access$700:()Lorg/slf4j/Logger;
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #15                 // Method getProcId:()J
      19: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      22: ldc           #49                 // String  rollback state
      24: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String  ts=
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_3
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      48: aload_0
      49: getfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
      52: new           #23                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$ExecutionInfo
      55: dup
      56: lload_3
      57: aload_2
      58: iconst_1
      59: invokespecial #24                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$ExecutionInfo."<init>":(JLorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;Z)V
      62: invokevirtual #25                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      65: pop
      66: ldc2_w        #26                 // long 150l
      69: invokestatic  #28                 // Method java/lang/Thread.sleep:(J)V
      72: aload_0
      73: getfield      #10                 // Field throwInterruptOnceOnEachStep:Z
      76: ifeq          113
      79: aload_0
      80: getfield      #5                  // Field executionInfo:Ljava/util/ArrayList;
      83: invokevirtual #29                 // Method java/util/ArrayList.size:()I
      86: iconst_1
      87: isub
      88: iconst_2
      89: irem
      90: ifne          113
      93: invokestatic  #12                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures.access$700:()Lorg/slf4j/Logger;
      96: ldc           #30                 // String THROW INTERRUPT
      98: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     103: new           #32                 // class java/lang/InterruptedException
     106: dup
     107: ldc           #33                 // String test interrupt
     109: invokespecial #34                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: getstatic     #35                 // Field org/apache/hadoop/hbase/procedure2/TestYieldProcedures$1.$SwitchMap$org$apache$hadoop$hbase$procedure2$TestYieldProcedures$TestStateMachineProcedure$State:[I
     116: aload_2
     117: invokevirtual #36                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.ordinal:()I
     120: iaload
     121: tableswitch   { // 1 to 3
                     1: 148
                     2: 151
                     3: 154
               default: 157
          }
     148: goto          165
     151: goto          165
     154: goto          165
     157: new           #46                 // class java/lang/UnsupportedOperationException
     160: dup
     161: invokespecial #47                 // Method java/lang/UnsupportedOperationException."<init>":()V
     164: athrow
     165: return

  protected org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State getState(int);
    Code:
       0: invokestatic  #50                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.values:()[Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
       3: iload_1
       4: aaload
       5: areturn

  protected int getStateId(org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.ordinal:()I
       4: ireturn

  protected org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State getInitialState();
    Code:
       0: getstatic     #51                 // Field org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State.STATE_1:Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
       3: areturn

  protected boolean isYieldBeforeExecuteFromState(org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestProcEnv, org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestStateMachineProcedure$State);
    Code:
       0: iconst_1
       1: ireturn

  protected boolean abort(org.apache.hadoop.hbase.procedure2.TestYieldProcedures$TestProcEnv);
    Code:
       0: aload_0
       1: getfield      #8                  // Field aborted:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: iconst_1
       9: ireturn

  protected boolean abort(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv
       5: invokevirtual #54                 // Method abort:(Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv;)Z
       8: ireturn

  protected boolean isYieldBeforeExecuteFromState(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv
       5: aload_2
       6: checkcast     #55                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State
       9: invokevirtual #56                 // Method isYieldBeforeExecuteFromState:(Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv;Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;)Z
      12: ireturn

  protected java.lang.Object getInitialState();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getInitialState:()Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
       4: areturn

  protected int getStateId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #55                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State
       5: invokevirtual #58                 // Method getStateId:(Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;)I
       8: ireturn

  protected java.lang.Object getState(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method getState:(I)Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;
       5: areturn

  protected void rollbackState(java.lang.Object, java.lang.Object) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv
       5: aload_2
       6: checkcast     #55                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State
       9: invokevirtual #60                 // Method rollbackState:(Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv;Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;)V
      12: return

  protected org.apache.hadoop.hbase.procedure2.StateMachineProcedure$Flow executeFromState(java.lang.Object, java.lang.Object) throws org.apache.hadoop.hbase.procedure2.ProcedureSuspendedException, org.apache.hadoop.hbase.procedure2.ProcedureYieldException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv
       5: aload_2
       6: checkcast     #55                 // class org/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State
       9: invokevirtual #61                 // Method executeFromState:(Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestProcEnv;Lorg/apache/hadoop/hbase/procedure2/TestYieldProcedures$TestStateMachineProcedure$State;)Lorg/apache/hadoop/hbase/procedure2/StateMachineProcedure$Flow;
      12: areturn
}
