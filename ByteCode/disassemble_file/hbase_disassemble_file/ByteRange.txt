Compiled from "ByteRange.java"
public interface org.apache.hadoop.hbase.util.ByteRange extends java.lang.Comparable<org.apache.hadoop.hbase.util.ByteRange> {
  public abstract byte[] getBytes();

  public abstract org.apache.hadoop.hbase.util.ByteRange unset();

  public abstract org.apache.hadoop.hbase.util.ByteRange set(int);

  public abstract org.apache.hadoop.hbase.util.ByteRange set(byte[]);

  public abstract org.apache.hadoop.hbase.util.ByteRange set(byte[], int, int);

  public abstract int getOffset();

  public abstract org.apache.hadoop.hbase.util.ByteRange setOffset(int);

  public abstract int getLength();

  public abstract org.apache.hadoop.hbase.util.ByteRange setLength(int);

  public abstract boolean isEmpty();

  public abstract byte get(int);

  public abstract short getShort(int);

  public abstract int getInt(int);

  public abstract long getLong(int);

  public abstract long getVLong(int);

  public abstract org.apache.hadoop.hbase.util.ByteRange get(int, byte[]);

  public abstract org.apache.hadoop.hbase.util.ByteRange get(int, byte[], int, int);

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte);

  public abstract org.apache.hadoop.hbase.util.ByteRange putShort(int, short);

  public abstract org.apache.hadoop.hbase.util.ByteRange putInt(int, int);

  public abstract org.apache.hadoop.hbase.util.ByteRange putLong(int, long);

  public abstract int putVLong(int, long);

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte[]);

  public abstract org.apache.hadoop.hbase.util.ByteRange put(int, byte[], int, int);

  public abstract byte[] deepCopyToNewArray();

  public abstract org.apache.hadoop.hbase.util.ByteRange deepCopy();

  public abstract void deepCopyTo(byte[], int);

  public abstract void deepCopySubRangeTo(int, int, byte[], int);

  public abstract org.apache.hadoop.hbase.util.ByteRange shallowCopy();

  public abstract org.apache.hadoop.hbase.util.ByteRange shallowCopySubRange(int, int);
}
