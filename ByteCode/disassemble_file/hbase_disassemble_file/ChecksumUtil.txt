Compiled from "ChecksumUtil.java"
public class org.apache.hadoop.hbase.io.hfile.ChecksumUtil {
  public static final org.slf4j.Logger LOG;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.io.hfile.ChecksumUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static void generateChecksums(byte[], int, int, byte[], int, org.apache.hadoop.hbase.util.ChecksumType, int) throws java.io.IOException;
    Code:
       0: aload         5
       2: getstatic     #2                  // Field org/apache/hadoop/hbase/util/ChecksumType.NULL:Lorg/apache/hadoop/hbase/util/ChecksumType;
       5: if_acmpne     9
       8: return
       9: aload         5
      11: invokevirtual #3                  // Method org/apache/hadoop/hbase/util/ChecksumType.getDataChecksumType:()Lorg/apache/hadoop/util/DataChecksum$Type;
      14: iload         6
      16: invokestatic  #4                  // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      19: astore        7
      21: aload         7
      23: aload_0
      24: iload_1
      25: iload_2
      26: iload_1
      27: isub
      28: invokestatic  #5                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      31: aload_3
      32: iload         4
      34: aload_3
      35: arraylength
      36: iload         4
      38: isub
      39: invokestatic  #5                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      42: invokevirtual #6                  // Method org/apache/hadoop/util/DataChecksum.calculateChunkedSums:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
      45: return

  static boolean validateChecksum(java.nio.ByteBuffer, java.lang.String, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #7                  // Field org/apache/hadoop/hbase/io/hfile/HFileBlock$Header.CHECKSUM_TYPE_INDEX:I
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.get:(I)B
       7: invokestatic  #9                  // Method org/apache/hadoop/hbase/util/ChecksumType.codeToType:(B)Lorg/apache/hadoop/hbase/util/ChecksumType;
      10: astore        5
      12: aload         5
      14: getstatic     #2                  // Field org/apache/hadoop/hbase/util/ChecksumType.NULL:Lorg/apache/hadoop/hbase/util/ChecksumType;
      17: if_acmpne     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getstatic     #10                 // Field org/apache/hadoop/hbase/io/hfile/HFileBlock$Header.BYTES_PER_CHECKSUM_INDEX:I
      26: invokevirtual #11                 // Method java/nio/ByteBuffer.getInt:(I)I
      29: istore        6
      31: aload         5
      33: invokevirtual #3                  // Method org/apache/hadoop/hbase/util/ChecksumType.getDataChecksumType:()Lorg/apache/hadoop/util/DataChecksum$Type;
      36: iload         6
      38: invokestatic  #4                  // Method org/apache/hadoop/util/DataChecksum.newDataChecksum:(Lorg/apache/hadoop/util/DataChecksum$Type;I)Lorg/apache/hadoop/util/DataChecksum;
      41: astore        7
      43: getstatic     #12                 // Field $assertionsDisabled:Z
      46: ifne          62
      49: aload         7
      51: ifnonnull     62
      54: new           #13                 // class java/lang/AssertionError
      57: dup
      58: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: aload_0
      63: getstatic     #15                 // Field org/apache/hadoop/hbase/io/hfile/HFileBlock$Header.ON_DISK_DATA_SIZE_WITH_HEADER_INDEX:I
      66: invokevirtual #11                 // Method java/nio/ByteBuffer.getInt:(I)I
      69: istore        8
      71: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      74: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      79: ifeq          173
      82: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      85: new           #18                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #20                 // String dataLength=
      94: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: invokevirtual #22                 // Method java/nio/ByteBuffer.capacity:()I
     101: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: ldc           #24                 // String , sizeWithHeader=
     106: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: iload         8
     111: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: ldc           #25                 // String , checksumType=
     116: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         5
     121: invokevirtual #26                 // Method org/apache/hadoop/hbase/util/ChecksumType.getName:()Ljava/lang/String;
     124: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #27                 // String , file=
     129: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_1
     133: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #28                 // String , offset=
     138: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: lload_2
     142: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     145: ldc           #30                 // String , headerSize=
     147: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: iload         4
     152: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #31                 // String , bytesPerChecksum=
     157: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: iload         6
     162: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     165: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     173: aload_0
     174: invokevirtual #34                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     177: iconst_0
     178: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     181: iload         8
     183: invokevirtual #36                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     186: checkcast     #37                 // class java/nio/ByteBuffer
     189: astore        9
     191: aload_0
     192: invokevirtual #34                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     195: iload         8
     197: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     200: aload_0
     201: invokevirtual #22                 // Method java/nio/ByteBuffer.capacity:()I
     204: invokevirtual #36                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     207: checkcast     #37                 // class java/nio/ByteBuffer
     210: astore        10
     212: aload         7
     214: aload         9
     216: aload         10
     218: aload_1
     219: lconst_0
     220: invokevirtual #38                 // Method org/apache/hadoop/util/DataChecksum.verifyChunkedSums:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/lang/String;J)V
     223: goto          230
     226: astore        9
     228: iconst_0
     229: ireturn
     230: iconst_1
     231: ireturn
    Exception table:
       from    to  target type
         173   223   226   Class org/apache/hadoop/fs/ChecksumException

  static long numBytes(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #40                 // Method numChunks:(JI)J
       5: ldc2_w        #42                 // long 4l
       8: lmul
       9: lreturn

  static long numChunks(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: i2l
       3: ldiv
       4: lstore_3
       5: lload_0
       6: iload_2
       7: i2l
       8: lrem
       9: lconst_0
      10: lcmp
      11: ifeq          18
      14: lload_3
      15: lconst_1
      16: ladd
      17: lstore_3
      18: lload_3
      19: lreturn

  static void reserveSpaceForChecksums(java.io.ByteArrayOutputStream, int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: i2l
       2: iload_2
       3: invokestatic  #40                 // Method numChunks:(JI)J
       6: lstore_3
       7: lload_3
       8: ldc2_w        #42                 // long 4l
      11: lmul
      12: lstore        5
      14: lload         5
      16: lconst_0
      17: lcmp
      18: ifle          54
      21: lload         5
      23: getstatic     #44                 // Field DUMMY_VALUE:[B
      26: arraylength
      27: i2l
      28: invokestatic  #45                 // Method java/lang/Math.min:(JJ)J
      31: lstore        7
      33: aload_0
      34: getstatic     #44                 // Field DUMMY_VALUE:[B
      37: iconst_0
      38: lload         7
      40: l2i
      41: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      44: lload         5
      46: lload         7
      48: lsub
      49: lstore        5
      51: goto          14
      54: return

  public static void generateExceptionForChecksumFailureForTest(boolean);
    Code:
       0: iload_0
       1: putstatic     #47                 // Field generateExceptions:Z
       4: return

  static {};
    Code:
       0: ldc           #48                 // class org/apache/hadoop/hbase/io/hfile/ChecksumUtil
       2: invokevirtual #49                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #12                 // Field $assertionsDisabled:Z
      16: ldc           #48                 // class org/apache/hadoop/hbase/io/hfile/ChecksumUtil
      18: invokestatic  #50                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      24: sipush        512
      27: newarray       byte
      29: putstatic     #44                 // Field DUMMY_VALUE:[B
      32: iconst_0
      33: putstatic     #47                 // Field generateExceptions:Z
      36: return
}
