Compiled from "ReusableStreamGzipCodec.java"
class org.apache.hadoop.hbase.io.compress.ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream extends java.util.zip.GZIPOutputStream {
  public org.apache.hadoop.hbase.io.compress.ReusableStreamGzipCodec$ReusableGzipOutputStream$ResetableGZIPOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: return

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
       4: invokevirtual #3                  // Method java/util/zip/Deflater.reset:()V
       7: aload_0
       8: getfield      #4                  // Field crc:Ljava/util/zip/CRC32;
      11: invokevirtual #5                  // Method java/util/zip/CRC32.reset:()V
      14: aload_0
      15: getfield      #6                  // Field out:Ljava/io/OutputStream;
      18: invokestatic  #7                  // Method org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream.access$100:()[B
      21: invokevirtual #8                  // Method java/io/OutputStream.write:([B)V
      24: return

  public void finish() throws java.io.IOException;
    Code:
       0: getstatic     #9                  // Field HAS_BROKEN_FINISH:Z
       3: ifeq          141
       6: aload_0
       7: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
      10: invokevirtual #10                 // Method java/util/zip/Deflater.finished:()Z
      13: ifne          145
      16: aload_0
      17: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
      20: invokevirtual #11                 // Method java/util/zip/Deflater.finish:()V
      23: aload_0
      24: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
      27: invokevirtual #10                 // Method java/util/zip/Deflater.finished:()Z
      30: ifne          119
      33: aload_0
      34: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
      37: aload_0
      38: getfield      #12                 // Field buf:[B
      41: iconst_0
      42: aload_0
      43: getfield      #12                 // Field buf:[B
      46: arraylength
      47: invokevirtual #13                 // Method java/util/zip/Deflater.deflate:([BII)I
      50: istore_1
      51: aload_0
      52: getfield      #2                  // Field def:Ljava/util/zip/Deflater;
      55: invokevirtual #10                 // Method java/util/zip/Deflater.finished:()Z
      58: ifeq          99
      61: iload_1
      62: aload_0
      63: getfield      #12                 // Field buf:[B
      66: arraylength
      67: bipush        8
      69: isub
      70: if_icmpgt     99
      73: aload_0
      74: aload_0
      75: getfield      #12                 // Field buf:[B
      78: iload_1
      79: invokespecial #15                 // Method writeTrailer:([BI)V
      82: iinc          1, 8
      85: aload_0
      86: getfield      #6                  // Field out:Ljava/io/OutputStream;
      89: aload_0
      90: getfield      #12                 // Field buf:[B
      93: iconst_0
      94: iload_1
      95: invokevirtual #16                 // Method java/io/OutputStream.write:([BII)V
      98: return
      99: iload_1
     100: ifle          116
     103: aload_0
     104: getfield      #6                  // Field out:Ljava/io/OutputStream;
     107: aload_0
     108: getfield      #12                 // Field buf:[B
     111: iconst_0
     112: iload_1
     113: invokevirtual #16                 // Method java/io/OutputStream.write:([BII)V
     116: goto          23
     119: bipush        8
     121: newarray       byte
     123: astore_1
     124: aload_0
     125: aload_1
     126: iconst_0
     127: invokespecial #15                 // Method writeTrailer:([BI)V
     130: aload_0
     131: getfield      #6                  // Field out:Ljava/io/OutputStream;
     134: aload_1
     135: invokevirtual #8                  // Method java/io/OutputStream.write:([B)V
     138: goto          145
     141: aload_0
     142: invokespecial #17                 // Method java/util/zip/GZIPOutputStream.finish:()V
     145: return

  static {};
    Code:
       0: invokestatic  #23                 // Method org/apache/hadoop/hbase/util/JVM.isGZIPOutputStreamFinishBroken:()Z
       3: putstatic     #9                  // Field HAS_BROKEN_FINISH:Z
       6: return
}
