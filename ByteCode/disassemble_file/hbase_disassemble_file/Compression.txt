Compiled from "Compression.java"
public final class org.apache.hadoop.hbase.io.compress.Compression {
  public static org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompressionAlgorithmByName(java.lang.String);
    Code:
       0: ldc           #12                 // class org/apache/hadoop/hbase/io/compress/Compression$Algorithm
       2: invokevirtual #13                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
       5: checkcast     #14                 // class "[Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;"
       8: astore_1
       9: aload_1
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_3
      20: if_icmpge     50
      23: aload_2
      24: iload         4
      26: aaload
      27: astore        5
      29: aload         5
      31: invokevirtual #15                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.getName:()Ljava/lang/String;
      34: aload_0
      35: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: aload         5
      43: areturn
      44: iinc          4, 1
      47: goto          17
      50: new           #17                 // class java/lang/IllegalArgumentException
      53: dup
      54: new           #18                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #20                 // String Unsupported compression algorithm name:
      63: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow

  public static java.lang.String[] getSupportedAlgorithms();
    Code:
       0: ldc           #12                 // class org/apache/hadoop/hbase/io/compress/Compression$Algorithm
       2: invokevirtual #13                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
       5: checkcast     #14                 // class "[Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;"
       8: astore_0
       9: aload_0
      10: arraylength
      11: anewarray     #24                 // class java/lang/String
      14: astore_1
      15: iconst_0
      16: istore_2
      17: aload_0
      18: astore_3
      19: aload_3
      20: arraylength
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     56
      33: aload_3
      34: iload         5
      36: aaload
      37: astore        6
      39: aload_1
      40: iload_2
      41: iinc          2, 1
      44: aload         6
      46: invokevirtual #15                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.getName:()Ljava/lang/String;
      49: aastore
      50: iinc          5, 1
      53: goto          26
      56: aload_1
      57: areturn

  public static void decompress(byte[], int, java.io.InputStream, int, int, org.apache.hadoop.hbase.io.compress.Compression$Algorithm) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: isub
       4: iload         4
       6: if_icmpge     49
       9: new           #17                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #18                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #25                 // String Output buffer does not have enough space to hold
      22: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload         4
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #27                 // String  decompressed bytes, available:
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: arraylength
      37: iload_1
      38: isub
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aconst_null
      50: astore        6
      52: aload         5
      54: invokevirtual #28                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.getDecompressor:()Lorg/apache/hadoop/io/compress/Decompressor;
      57: astore        6
      59: aload         5
      61: aload_2
      62: aload         6
      64: iconst_0
      65: invokevirtual #29                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.createDecompressionStream:(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;
      68: astore        7
      70: aload         7
      72: aload_0
      73: iload_1
      74: iload         4
      76: invokestatic  #30                 // Method org/apache/hadoop/io/IOUtils.readFully:(Ljava/io/InputStream;[BII)V
      79: aload         7
      81: invokevirtual #31                 // Method java/io/InputStream.close:()V
      84: aload         6
      86: ifnull        116
      89: aload         5
      91: aload         6
      93: invokevirtual #32                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
      96: goto          116
      99: astore        8
     101: aload         6
     103: ifnull        113
     106: aload         5
     108: aload         6
     110: invokevirtual #32                 // Method org/apache/hadoop/hbase/io/compress/Compression$Algorithm.returnDecompressor:(Lorg/apache/hadoop/io/compress/Decompressor;)V
     113: aload         8
     115: athrow
     116: return
    Exception table:
       from    to  target type
          52    84    99   any
          99   101    99   any

  static java.lang.ClassLoader access$100();
    Code:
       0: invokestatic  #2                  // Method getClassLoaderForCodec:()Ljava/lang/ClassLoader;
       3: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #6                  // class org/apache/hadoop/hbase/io/compress/Compression
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
