Compiled from "BufferedDataBlockEncoder.java"
public class org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$SeekerState {
  protected org.apache.hadoop.hbase.nio.ByteBuff currentBuffer;

  protected org.apache.hadoop.hbase.io.TagCompressionContext tagCompressionContext;

  protected int valueOffset;

  protected int keyLength;

  protected int valueLength;

  protected int lastCommonPrefix;

  protected int tagsLength;

  protected int tagsOffset;

  protected int tagsCompressedLength;

  protected boolean uncompressTags;

  protected byte[] keyBuffer;

  protected byte[] tagsBuffer;

  protected long memstoreTS;

  protected int nextKvOffset;

  protected org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue currentKey;

  public org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$SeekerState(org.apache.hadoop.hbase.util.ObjectIntPair<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field valueOffset:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field tagsLength:I
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field tagsOffset:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field tagsCompressedLength:I
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field uncompressTags:Z
      29: aload_0
      30: getstatic     #7                  // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
      33: putfield      #8                  // Field keyBuffer:[B
      36: aload_0
      37: getstatic     #7                  // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
      40: putfield      #9                  // Field tagsBuffer:[B
      43: aload_0
      44: new           #10                 // class org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue
      47: dup
      48: invokespecial #11                 // Method org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue."<init>":()V
      51: putfield      #12                 // Field currentKey:Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;
      54: aload_0
      55: aload_1
      56: putfield      #13                 // Field tmpPair:Lorg/apache/hadoop/hbase/util/ObjectIntPair;
      59: aload_0
      60: iload_2
      61: putfield      #14                 // Field includeTags:Z
      64: return

  protected boolean isValid();
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueOffset:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected void invalidate();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #2                  // Field valueOffset:I
       5: aload_0
       6: iconst_0
       7: putfield      #5                  // Field tagsCompressedLength:I
      10: aload_0
      11: getfield      #12                 // Field currentKey:Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;
      14: invokevirtual #15                 // Method org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue.clear:()V
      17: aload_0
      18: iconst_1
      19: putfield      #6                  // Field uncompressTags:Z
      22: aload_0
      23: aconst_null
      24: putfield      #16                 // Field currentBuffer:Lorg/apache/hadoop/hbase/nio/ByteBuff;
      27: return

  protected void ensureSpaceForKey();
    Code:
       0: aload_0
       1: getfield      #17                 // Field keyLength:I
       4: aload_0
       5: getfield      #8                  // Field keyBuffer:[B
       8: arraylength
       9: if_icmple     54
      12: invokestatic  #18                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.access$000:()I
      15: aload_0
      16: getfield      #17                 // Field keyLength:I
      19: invokestatic  #19                 // Method java/lang/Math.max:(II)I
      22: iconst_1
      23: isub
      24: invokestatic  #20                 // Method java/lang/Integer.highestOneBit:(I)I
      27: iconst_1
      28: ishl
      29: istore_1
      30: iload_1
      31: newarray       byte
      33: astore_2
      34: aload_0
      35: getfield      #8                  // Field keyBuffer:[B
      38: iconst_0
      39: aload_2
      40: iconst_0
      41: aload_0
      42: getfield      #8                  // Field keyBuffer:[B
      45: arraylength
      46: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_0
      50: aload_2
      51: putfield      #8                  // Field keyBuffer:[B
      54: return

  protected void ensureSpaceForTags();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tagsLength:I
       4: aload_0
       5: getfield      #9                  // Field tagsBuffer:[B
       8: arraylength
       9: if_icmple     54
      12: invokestatic  #18                 // Method org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.access$000:()I
      15: aload_0
      16: getfield      #3                  // Field tagsLength:I
      19: invokestatic  #19                 // Method java/lang/Math.max:(II)I
      22: iconst_1
      23: isub
      24: invokestatic  #20                 // Method java/lang/Integer.highestOneBit:(I)I
      27: iconst_1
      28: ishl
      29: istore_1
      30: iload_1
      31: newarray       byte
      33: astore_2
      34: aload_0
      35: getfield      #9                  // Field tagsBuffer:[B
      38: iconst_0
      39: aload_2
      40: iconst_0
      41: aload_0
      42: getfield      #9                  // Field tagsBuffer:[B
      45: arraylength
      46: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_0
      50: aload_2
      51: putfield      #9                  // Field tagsBuffer:[B
      54: return

  protected void setKey(byte[], long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field currentKey:Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getfield      #17                 // Field keyLength:I
      10: invokevirtual #22                 // Method org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue.setKey:([BII)V
      13: aload_0
      14: lload_2
      15: putfield      #23                 // Field memstoreTS:J
      18: return

  protected void copyFromNext(org.apache.hadoop.hbase.io.encoding.BufferedDataBlockEncoder$SeekerState);
    Code:
       0: aload_0
       1: getfield      #8                  // Field keyBuffer:[B
       4: arraylength
       5: aload_1
       6: getfield      #8                  // Field keyBuffer:[B
       9: arraylength
      10: if_icmpeq     30
      13: aload_0
      14: aload_1
      15: getfield      #8                  // Field keyBuffer:[B
      18: invokevirtual #24                 // Method "[B".clone:()Ljava/lang/Object;
      21: checkcast     #25                 // class "[B"
      24: putfield      #8                  // Field keyBuffer:[B
      27: goto          85
      30: aload_0
      31: invokevirtual #26                 // Method isValid:()Z
      34: ifne          57
      37: aload_1
      38: getfield      #8                  // Field keyBuffer:[B
      41: iconst_0
      42: aload_0
      43: getfield      #8                  // Field keyBuffer:[B
      46: iconst_0
      47: aload_1
      48: getfield      #17                 // Field keyLength:I
      51: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: goto          85
      57: aload_1
      58: getfield      #8                  // Field keyBuffer:[B
      61: aload_1
      62: getfield      #27                 // Field lastCommonPrefix:I
      65: aload_0
      66: getfield      #8                  // Field keyBuffer:[B
      69: aload_1
      70: getfield      #27                 // Field lastCommonPrefix:I
      73: aload_1
      74: getfield      #17                 // Field keyLength:I
      77: aload_1
      78: getfield      #27                 // Field lastCommonPrefix:I
      81: isub
      82: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      85: aload_0
      86: getfield      #12                 // Field currentKey:Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;
      89: aload_1
      90: getfield      #12                 // Field currentKey:Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;
      93: invokevirtual #28                 // Method org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue.set:(Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;)V
      96: aload_0
      97: aload_1
      98: getfield      #2                  // Field valueOffset:I
     101: putfield      #2                  // Field valueOffset:I
     104: aload_0
     105: aload_1
     106: getfield      #17                 // Field keyLength:I
     109: putfield      #17                 // Field keyLength:I
     112: aload_0
     113: aload_1
     114: getfield      #29                 // Field valueLength:I
     117: putfield      #29                 // Field valueLength:I
     120: aload_0
     121: aload_1
     122: getfield      #27                 // Field lastCommonPrefix:I
     125: putfield      #27                 // Field lastCommonPrefix:I
     128: aload_0
     129: aload_1
     130: getfield      #30                 // Field nextKvOffset:I
     133: putfield      #30                 // Field nextKvOffset:I
     136: aload_0
     137: aload_1
     138: getfield      #23                 // Field memstoreTS:J
     141: putfield      #23                 // Field memstoreTS:J
     144: aload_0
     145: aload_1
     146: getfield      #16                 // Field currentBuffer:Lorg/apache/hadoop/hbase/nio/ByteBuff;
     149: putfield      #16                 // Field currentBuffer:Lorg/apache/hadoop/hbase/nio/ByteBuff;
     152: aload_0
     153: aload_1
     154: getfield      #4                  // Field tagsOffset:I
     157: putfield      #4                  // Field tagsOffset:I
     160: aload_0
     161: aload_1
     162: getfield      #3                  // Field tagsLength:I
     165: putfield      #3                  // Field tagsLength:I
     168: aload_1
     169: getfield      #31                 // Field tagCompressionContext:Lorg/apache/hadoop/hbase/io/TagCompressionContext;
     172: ifnull        183
     175: aload_0
     176: aload_1
     177: getfield      #31                 // Field tagCompressionContext:Lorg/apache/hadoop/hbase/io/TagCompressionContext;
     180: putfield      #31                 // Field tagCompressionContext:Lorg/apache/hadoop/hbase/io/TagCompressionContext;
     183: return

  public org.apache.hadoop.hbase.Cell toCell();
    Code:
       0: aload_0
       1: getfield      #29                 // Field valueLength:I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: aload_0
       9: getfield      #14                 // Field includeTags:Z
      12: ifeq          48
      15: aload_0
      16: getfield      #31                 // Field tagCompressionContext:Lorg/apache/hadoop/hbase/io/TagCompressionContext;
      19: ifnonnull     48
      22: aload_0
      23: getfield      #4                  // Field tagsOffset:I
      26: aload_0
      27: getfield      #2                  // Field valueOffset:I
      30: aload_0
      31: getfield      #29                 // Field valueLength:I
      34: iadd
      35: isub
      36: istore        4
      38: iload_3
      39: iload         4
      41: aload_0
      42: getfield      #3                  // Field tagsLength:I
      45: iadd
      46: iadd
      47: istore_3
      48: aload_0
      49: getfield      #16                 // Field currentBuffer:Lorg/apache/hadoop/hbase/nio/ByteBuff;
      52: aload_0
      53: getfield      #2                  // Field valueOffset:I
      56: iload_3
      57: aload_0
      58: getfield      #13                 // Field tmpPair:Lorg/apache/hadoop/hbase/util/ObjectIntPair;
      61: invokevirtual #32                 // Method org/apache/hadoop/hbase/nio/ByteBuff.asSubByteBuffer:(IILorg/apache/hadoop/hbase/util/ObjectIntPair;)V
      64: aload_0
      65: getfield      #13                 // Field tmpPair:Lorg/apache/hadoop/hbase/util/ObjectIntPair;
      68: invokevirtual #33                 // Method org/apache/hadoop/hbase/util/ObjectIntPair.getFirst:()Ljava/lang/Object;
      71: checkcast     #34                 // class java/nio/ByteBuffer
      74: astore_1
      75: aload_0
      76: getfield      #13                 // Field tmpPair:Lorg/apache/hadoop/hbase/util/ObjectIntPair;
      79: invokevirtual #35                 // Method org/apache/hadoop/hbase/util/ObjectIntPair.getSecond:()I
      82: istore_2
      83: aload_1
      84: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      87: ifeq          99
      90: aload_0
      91: aload_1
      92: iload_2
      93: iload         4
      95: invokespecial #37                 // Method toOnheapCell:(Ljava/nio/ByteBuffer;II)Lorg/apache/hadoop/hbase/Cell;
      98: areturn
      99: aload_0
     100: aload_1
     101: iload_2
     102: iload         4
     104: invokespecial #38                 // Method toOffheapCell:(Ljava/nio/ByteBuffer;II)Lorg/apache/hadoop/hbase/Cell;
     107: areturn
}
