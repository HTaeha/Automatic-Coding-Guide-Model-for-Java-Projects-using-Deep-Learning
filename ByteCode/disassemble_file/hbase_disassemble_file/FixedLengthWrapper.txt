Compiled from "FixedLengthWrapper.java"
public class org.apache.hadoop.hbase.types.FixedLengthWrapper<T> implements org.apache.hadoop.hbase.types.DataType<T> {
  protected final org.apache.hadoop.hbase.types.DataType<T> base;

  protected final int length;

  public org.apache.hadoop.hbase.types.FixedLengthWrapper(org.apache.hadoop.hbase.types.DataType<T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field length:I
      14: return

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field length:I
       4: ireturn

  public boolean isOrderPreserving();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isOrderPreserving:()Z
       9: ireturn

  public org.apache.hadoop.hbase.util.Order getOrder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.getOrder:()Lorg/apache/hadoop/hbase/util/Order;
       9: areturn

  public boolean isNullable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.isNullable:()Z
       9: ireturn

  public boolean isSkippable();
    Code:
       0: iconst_1
       1: ireturn

  public int encodedLength(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field length:I
       4: ireturn

  public java.lang.Class<T> encodedClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/hbase/types/DataType.encodedClass:()Ljava/lang/Class;
       9: areturn

  public int skip(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: aload_1
       1: aload_1
       2: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getPosition:()I
       7: aload_0
       8: getfield      #3                  // Field length:I
      11: iadd
      12: invokeinterface #9,  2            // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.setPosition:(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
      17: pop
      18: aload_0
      19: getfield      #3                  // Field length:I
      22: ireturn

  public T decode(org.apache.hadoop.hbase.util.PositionedByteRange);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getRemaining:()I
       6: aload_0
       7: getfield      #3                  // Field length:I
      10: if_icmpge     85
      13: new           #11                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #12                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #14                 // String Not enough buffer remaining. src.offset:
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getOffset:()I
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #18                 // String  src.length:
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getLength:()I
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #20                 // String  src.position:
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getPosition:()I
      63: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #21                 // String  max length:
      68: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #3                  // Field length:I
      75: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: new           #24                 // class org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange
      88: dup
      89: aload_0
      90: getfield      #3                  // Field length:I
      93: invokespecial #25                 // Method org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange."<init>":(I)V
      96: astore_2
      97: aload_1
      98: aload_2
      99: invokeinterface #26,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getBytes:()[B
     104: invokeinterface #27,  2           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.get:([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
     109: pop
     110: aload_0
     111: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
     114: aload_2
     115: invokeinterface #28,  2           // InterfaceMethod org/apache/hadoop/hbase/types/DataType.decode:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
     120: areturn

  public int encode(org.apache.hadoop.hbase.util.PositionedByteRange, T);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getRemaining:()I
       6: aload_0
       7: getfield      #3                  // Field length:I
      10: if_icmpge     85
      13: new           #11                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #12                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #29                 // String Not enough buffer remaining. dst.offset:
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokeinterface #16,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getOffset:()I
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #30                 // String  dst.length:
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getLength:()I
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #31                 // String  dst.position:
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokeinterface #8,  1            // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.getPosition:()I
      63: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #21                 // String  max length:
      68: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: getfield      #3                  // Field length:I
      75: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #2                  // Field base:Lorg/apache/hadoop/hbase/types/DataType;
      89: aload_1
      90: aload_2
      91: invokeinterface #32,  3           // InterfaceMethod org/apache/hadoop/hbase/types/DataType.encode:(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
      96: istore_3
      97: iload_3
      98: aload_0
      99: getfield      #3                  // Field length:I
     102: if_icmple     149
     105: new           #11                 // class java/lang/IllegalArgumentException
     108: dup
     109: new           #12                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #33                 // String Length of encoded value (
     118: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload_3
     122: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc           #34                 // String ) exceeds max length (
     127: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #3                  // Field length:I
     134: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     137: ldc           #35                 // String ).
     139: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: iload_3
     150: aload_0
     151: getfield      #3                  // Field length:I
     154: if_icmpge     171
     157: aload_1
     158: iconst_0
     159: invokeinterface #36,  2           // InterfaceMethod org/apache/hadoop/hbase/util/PositionedByteRange.put:(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
     164: pop
     165: iinc          3, 1
     168: goto          149
     171: iload_3
     172: ireturn
}
