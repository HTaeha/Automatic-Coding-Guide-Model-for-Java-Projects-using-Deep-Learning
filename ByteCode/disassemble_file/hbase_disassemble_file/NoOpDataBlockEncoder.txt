Compiled from "NoOpDataBlockEncoder.java"
public class org.apache.hadoop.hbase.io.hfile.NoOpDataBlockEncoder implements org.apache.hadoop.hbase.io.hfile.HFileDataBlockEncoder {
  public static final org.apache.hadoop.hbase.io.hfile.NoOpDataBlockEncoder INSTANCE;

  public int encode(org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext.getEncodingState:()Lorg/apache/hadoop/hbase/io/encoding/EncodingState;
       6: checkcast     #3                  // class org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$NoneEncodingState
       9: astore        4
      11: aload         4
      13: getfield      #4                  // Field org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$NoneEncodingState.encoder:Lorg/apache/hadoop/hbase/io/encoding/NoneEncoder;
      16: astore        5
      18: aload         5
      20: aload_1
      21: invokevirtual #5                  // Method org/apache/hadoop/hbase/io/encoding/NoneEncoder.write:(Lorg/apache/hadoop/hbase/Cell;)I
      24: ireturn

  public boolean useEncodedScanner();
    Code:
       0: iconst_0
       1: ireturn

  public void saveMetadata(org.apache.hadoop.hbase.io.hfile.HFile$Writer);
    Code:
       0: return

  public org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getDataBlockEncoding();
    Code:
       0: getstatic     #6                  // Field org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.NONE:Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
       3: areturn

  public org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getEffectiveEncodingInCache(boolean);
    Code:
       0: getstatic     #6                  // Field org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.NONE:Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
       3: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #8                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext newDataBlockEncodingContext(byte[], org.apache.hadoop.hbase.io.hfile.HFileContext);
    Code:
       0: new           #9                  // class org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: invokespecial #10                 // Method org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext."<init>":(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
      10: areturn

  public org.apache.hadoop.hbase.io.encoding.HFileBlockDecodingContext newDataBlockDecodingContext(org.apache.hadoop.hbase.io.hfile.HFileContext);
    Code:
       0: new           #11                 // class org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext."<init>":(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
       8: areturn

  public void startBlockEncoding(org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #9                  // class org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext
       6: if_acmpeq     55
       9: new           #13                 // class java/io/IOException
      12: dup
      13: new           #14                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_0
      21: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #18                 // String  only accepts
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #9                  // class org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext
      37: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #19                 // String  as the encoding context.
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: checkcast     #9                  // class org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext
      59: astore_3
      60: aload_3
      61: aload_2
      62: invokevirtual #22                 // Method org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext.prepareEncoding:(Ljava/io/DataOutputStream;)V
      65: new           #23                 // class org/apache/hadoop/hbase/io/encoding/NoneEncoder
      68: dup
      69: aload_2
      70: aload_3
      71: invokespecial #24                 // Method org/apache/hadoop/hbase/io/encoding/NoneEncoder."<init>":(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
      74: astore        4
      76: new           #3                  // class org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$NoneEncodingState
      79: dup
      80: aconst_null
      81: invokespecial #25                 // Method org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$NoneEncodingState."<init>":(Lorg/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$1;)V
      84: astore        5
      86: aload         5
      88: aload         4
      90: putfield      #4                  // Field org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder$NoneEncodingState.encoder:Lorg/apache/hadoop/hbase/io/encoding/NoneEncoder;
      93: aload_1
      94: aload         5
      96: invokeinterface #26,  2           // InterfaceMethod org/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext.setEncodingState:(Lorg/apache/hadoop/hbase/io/encoding/EncodingState;)V
     101: return

  public void endBlockEncoding(org.apache.hadoop.hbase.io.encoding.HFileBlockEncodingContext, java.io.DataOutputStream, byte[], org.apache.hadoop.hbase.io.hfile.BlockType) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #27                 // Field org/apache/hadoop/hbase/io/hfile/BlockType.DATA:Lorg/apache/hadoop/hbase/io/hfile/BlockType;
       4: invokeinterface #28,  2           // InterfaceMethod org/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext.postEncoding:(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
       9: return

  static {};
    Code:
       0: new           #29                 // class org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder
       3: dup
       4: invokespecial #30                 // Method "<init>":()V
       7: putstatic     #31                 // Field INSTANCE:Lorg/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder;
      10: return
}
