Compiled from "ScannerContext.java"
class org.apache.hadoop.hbase.regionserver.ScannerContext$ProgressFields {
  int batch;

  long dataSize;

  long heapSize;

  org.apache.hadoop.hbase.regionserver.ScannerContext$ProgressFields(int, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field DEFAULT_BATCH:I
       8: putfield      #3                  // Field batch:I
      11: aload_0
      12: getstatic     #4                  // Field DEFAULT_SIZE:J
      15: putfield      #5                  // Field dataSize:J
      18: aload_0
      19: getstatic     #4                  // Field DEFAULT_SIZE:J
      22: putfield      #6                  // Field heapSize:J
      25: aload_0
      26: iload_1
      27: lload_2
      28: lload         4
      30: invokevirtual #7                  // Method setFields:(IJJ)V
      33: return

  void setFields(int, long, long);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #8                  // Method setBatch:(I)V
       5: aload_0
       6: lload_2
       7: invokevirtual #9                  // Method setDataSize:(J)V
      10: aload_0
      11: lload         4
      13: invokevirtual #10                 // Method setHeapSize:(J)V
      16: return

  int getBatch();
    Code:
       0: aload_0
       1: getfield      #3                  // Field batch:I
       4: ireturn

  void setBatch(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field batch:I
       5: return

  long getDataSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field dataSize:J
       4: lreturn

  long getHeapSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field heapSize:J
       4: lreturn

  void setDataSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field dataSize:J
       5: return

  void setHeapSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field heapSize:J
       5: return

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #13                 // String {
      11: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #15                 // String batch:
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field batch:I
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #17                 // String , dataSize:
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #5                  // Field dataSize:J
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #19                 // String , heapSize:
      50: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #6                  // Field heapSize:J
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: ldc           #20                 // String }
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: areturn

  static {};
    Code:
       0: iconst_m1
       1: putstatic     #2                  // Field DEFAULT_BATCH:I
       4: ldc2_w        #22                 // long -1l
       7: putstatic     #4                  // Field DEFAULT_SIZE:J
      10: return
}
