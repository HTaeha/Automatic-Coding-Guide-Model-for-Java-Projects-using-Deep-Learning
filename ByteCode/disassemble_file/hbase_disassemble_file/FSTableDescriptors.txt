Compiled from "FSTableDescriptors.java"
public class org.apache.hadoop.hbase.util.FSTableDescriptors implements org.apache.hadoop.hbase.TableDescriptors {
  long cachehits;

  long invocations;

  public static final java.lang.String TABLEINFO_FILE_PREFIX;

  public static final java.lang.String TABLEINFO_DIR;

  public static final java.lang.String TMP_DIR;

  static final java.util.Comparator<org.apache.hadoop.fs.FileStatus> TABLEINFO_FILESTATUS_COMPARATOR;

  static final int WIDTH_OF_SEQUENCE_ID;

  public org.apache.hadoop.hbase.util.FSTableDescriptors(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #1                  // Method org/apache/hadoop/hbase/util/FSUtils.getCurrentFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       6: aload_1
       7: invokestatic  #2                  // Method org/apache/hadoop/hbase/util/FSUtils.getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      10: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
      13: return

  public org.apache.hadoop.hbase.util.FSTableDescriptors(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iconst_1
       6: invokespecial #4                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
       9: return

  public org.apache.hadoop.hbase.util.FSTableDescriptors(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aconst_null
       9: invokespecial #5                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLjava/util/function/Function;)V
      12: return

  public org.apache.hadoop.hbase.util.FSTableDescriptors(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, boolean, java.util.function.Function<org.apache.hadoop.hbase.client.TableDescriptorBuilder, org.apache.hadoop.hbase.client.TableDescriptorBuilder>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #7                  // Field cachehits:J
       9: aload_0
      10: lconst_0
      11: putfield      #8                  // Field invocations:J
      14: aload_0
      15: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      18: dup
      19: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      22: putfield      #11                 // Field cache:Ljava/util/Map;
      25: aload_0
      26: aload_2
      27: putfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      30: aload_0
      31: aload_3
      32: putfield      #13                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      35: aload_0
      36: iload         4
      38: putfield      #14                 // Field fsreadonly:Z
      41: aload_0
      42: iload         5
      44: putfield      #15                 // Field usecache:Z
      47: aload_0
      48: aload         6
      50: ifnonnull     60
      53: aload_1
      54: invokestatic  #16                 // Method createMetaTableDescriptor:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
      57: goto          77
      60: aload         6
      62: aload_1
      63: invokestatic  #17                 // Method createMetaTableDescriptorBuilder:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      66: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #19                 // class org/apache/hadoop/hbase/client/TableDescriptorBuilder
      74: invokevirtual #20                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
      77: putfield      #21                 // Field metaTableDescriptor:Lorg/apache/hadoop/hbase/client/TableDescriptor;
      80: return

  public static org.apache.hadoop.hbase.client.TableDescriptorBuilder createMetaTableDescriptorBuilder(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: getstatic     #22                 // Field org/apache/hadoop/hbase/TableName.META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
       3: invokestatic  #23                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.newBuilder:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
       6: getstatic     #24                 // Field org/apache/hadoop/hbase/HConstants.CATALOG_FAMILY:[B
       9: invokestatic  #25                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      12: aload_0
      13: ldc           #27                 // String hbase.meta.versions
      15: iconst_3
      16: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      19: invokevirtual #29                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setMaxVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      22: iconst_1
      23: invokevirtual #30                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setInMemory:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      26: aload_0
      27: ldc           #31                 // String hbase.meta.blocksize
      29: sipush        8192
      32: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      35: invokevirtual #32                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBlocksize:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      38: iconst_0
      39: invokevirtual #33                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setScope:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      42: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      45: invokevirtual #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBloomFilterType:(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      48: invokevirtual #36                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      51: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      54: getstatic     #38                 // Field org/apache/hadoop/hbase/HConstants.TABLE_FAMILY:[B
      57: invokestatic  #25                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      60: aload_0
      61: ldc           #27                 // String hbase.meta.versions
      63: iconst_3
      64: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      67: invokevirtual #29                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setMaxVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      70: iconst_1
      71: invokevirtual #30                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setInMemory:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      74: sipush        8192
      77: invokevirtual #32                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBlocksize:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      80: iconst_0
      81: invokevirtual #33                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setScope:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      84: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
      87: invokevirtual #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBloomFilterType:(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
      90: invokevirtual #36                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      93: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
      96: getstatic     #39                 // Field org/apache/hadoop/hbase/HConstants.REPLICATION_BARRIER_FAMILY:[B
      99: invokestatic  #25                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     102: ldc           #40                 // int 2147483647
     104: invokevirtual #29                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setMaxVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     107: iconst_1
     108: invokevirtual #30                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setInMemory:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     111: iconst_0
     112: invokevirtual #33                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setScope:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     115: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     118: invokevirtual #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBloomFilterType:(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     121: invokevirtual #36                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
     124: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
     127: getstatic     #41                 // Field org/apache/hadoop/hbase/HConstants.NAMESPACE_FAMILY:[B
     130: invokestatic  #25                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.newBuilder:([B)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     133: aload_0
     134: ldc           #27                 // String hbase.meta.versions
     136: iconst_3
     137: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     140: invokevirtual #29                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setMaxVersions:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     143: iconst_1
     144: invokevirtual #30                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setInMemory:(Z)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     147: aload_0
     148: ldc           #31                 // String hbase.meta.blocksize
     150: sipush        8192
     153: invokevirtual #28                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     156: invokevirtual #32                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBlocksize:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     159: iconst_0
     160: invokevirtual #33                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setScope:(I)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     163: getstatic     #34                 // Field org/apache/hadoop/hbase/regionserver/BloomType.NONE:Lorg/apache/hadoop/hbase/regionserver/BloomType;
     166: invokevirtual #35                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.setBloomFilterType:(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder;
     169: invokevirtual #36                 // Method org/apache/hadoop/hbase/client/ColumnFamilyDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
     172: invokevirtual #37                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setColumnFamily:(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
     175: ldc           #42                 // class org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint
     177: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
     180: invokestatic  #44                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.newBuilder:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
     183: ldc           #46                 // int 536870911
     185: invokevirtual #47                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.setPriority:(I)Lorg/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder;
     188: invokevirtual #48                 // Method org/apache/hadoop/hbase/client/CoprocessorDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;
     191: invokevirtual #49                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.setCoprocessor:(Lorg/apache/hadoop/hbase/client/CoprocessorDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
     194: areturn

  public static org.apache.hadoop.hbase.client.TableDescriptor createMetaTableDescriptor(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method createMetaTableDescriptorBuilder:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
       4: invokevirtual #20                 // Method org/apache/hadoop/hbase/client/TableDescriptorBuilder.build:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
       7: areturn

  public void setCacheOn() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field cache:Ljava/util/Map;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: iconst_1
      11: putfield      #15                 // Field usecache:Z
      14: return

  public void setCacheOff() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #15                 // Field usecache:Z
       5: aload_0
       6: getfield      #11                 // Field cache:Ljava/util/Map;
       9: invokeinterface #50,  1           // InterfaceMethod java/util/Map.clear:()V
      14: return

  public boolean isUsecache();
    Code:
       0: aload_0
       1: getfield      #15                 // Field usecache:Z
       4: ireturn

  public org.apache.hadoop.hbase.client.TableDescriptor get(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field invocations:J
       5: lconst_1
       6: ladd
       7: putfield      #8                  // Field invocations:J
      10: getstatic     #22                 // Field org/apache/hadoop/hbase/TableName.META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      13: aload_1
      14: invokevirtual #51                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      17: ifeq          35
      20: aload_0
      21: dup
      22: getfield      #7                  // Field cachehits:J
      25: lconst_1
      26: ladd
      27: putfield      #7                  // Field cachehits:J
      30: aload_0
      31: getfield      #21                 // Field metaTableDescriptor:Lorg/apache/hadoop/hbase/client/TableDescriptor;
      34: areturn
      35: getstatic     #52                 // Field org/apache/hadoop/hbase/HConstants.HBASE_NON_USER_TABLE_DIRS:Ljava/util/List;
      38: aload_1
      39: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
      42: invokeinterface #54,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      47: ifeq          77
      50: new           #55                 // class java/io/IOException
      53: dup
      54: new           #56                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #58                 // String No descriptor found for non table =
      63: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_1
      67: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: getfield      #15                 // Field usecache:Z
      81: ifeq          114
      84: aload_0
      85: getfield      #11                 // Field cache:Ljava/util/Map;
      88: aload_1
      89: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      94: checkcast     #64                 // class org/apache/hadoop/hbase/client/TableDescriptor
      97: astore_2
      98: aload_2
      99: ifnull        114
     102: aload_0
     103: dup
     104: getfield      #7                  // Field cachehits:J
     107: lconst_1
     108: ladd
     109: putfield      #7                  // Field cachehits:J
     112: aload_2
     113: areturn
     114: aconst_null
     115: astore_2
     116: aload_0
     117: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     120: aload_0
     121: getfield      #13                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
     124: aload_1
     125: invokestatic  #65                 // Method getTableDescriptorFromFs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
     128: astore_2
     129: goto          197
     132: astore_3
     133: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     136: new           #56                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #68                 // String Exception during readTableDecriptor. Current table name =
     145: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_1
     149: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     152: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: aload_3
     156: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     161: goto          197
     164: astore_3
     165: goto          197
     168: astore_3
     169: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     172: new           #56                 // class java/lang/StringBuilder
     175: dup
     176: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     179: ldc           #68                 // String Exception during readTableDecriptor. Current table name =
     181: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_1
     185: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     188: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: aload_3
     192: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     197: aload_0
     198: getfield      #15                 // Field usecache:Z
     201: ifeq          220
     204: aload_2
     205: ifnull        220
     208: aload_0
     209: getfield      #11                 // Field cache:Ljava/util/Map;
     212: aload_1
     213: aload_2
     214: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     219: pop
     220: aload_2
     221: areturn
    Exception table:
       from    to  target type
         116   129   132   Class java/lang/NullPointerException
         116   129   164   Class org/apache/hadoop/hbase/TableInfoMissingException
         116   129   168   Class java/io/IOException

  public java.util.Map<java.lang.String, org.apache.hadoop.hbase.client.TableDescriptor> getAll() throws java.io.IOException;
    Code:
       0: new           #72                 // class java/util/TreeMap
       3: dup
       4: invokespecial #73                 // Method java/util/TreeMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #74                 // Field fsvisited:Z
      12: ifeq          110
      15: aload_0
      16: getfield      #15                 // Field usecache:Z
      19: ifeq          110
      22: aload_0
      23: getfield      #11                 // Field cache:Ljava/util/Map;
      26: invokeinterface #75,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #76,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          84
      46: aload_2
      47: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #79                 // class java/util/Map$Entry
      55: astore_3
      56: aload_1
      57: aload_3
      58: invokeinterface #80,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #81                 // class org/apache/hadoop/hbase/TableName
      66: invokevirtual #82                 // Method org/apache/hadoop/hbase/TableName.toString:()Ljava/lang/String;
      69: aload_3
      70: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          37
      84: aload_1
      85: aload_0
      86: getfield      #21                 // Field metaTableDescriptor:Lorg/apache/hadoop/hbase/client/TableDescriptor;
      89: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      94: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
      97: aload_0
      98: getfield      #21                 // Field metaTableDescriptor:Lorg/apache/hadoop/hbase/client/TableDescriptor;
     101: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          227
     110: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     113: ldc           #85                 // String Fetching table descriptors from the filesystem.
     115: invokeinterface #86,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     120: iconst_1
     121: istore_2
     122: aload_0
     123: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     126: aload_0
     127: getfield      #13                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
     130: invokestatic  #87                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableDirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
     133: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     138: astore_3
     139: aload_3
     140: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifeq          227
     148: aload_3
     149: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #89                 // class org/apache/hadoop/fs/Path
     157: astore        4
     159: aconst_null
     160: astore        5
     162: aload_0
     163: aload         4
     165: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableName:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
     168: invokevirtual #91                 // Method get:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
     171: astore        5
     173: goto          190
     176: astore        6
     178: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     181: ldc           #93                 // String Trouble retrieving htd
     183: aload         6
     185: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: aload         5
     192: ifnonnull     200
     195: iconst_0
     196: istore_2
     197: goto          139
     200: aload_1
     201: aload         5
     203: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
     208: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
     211: aload         5
     213: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     218: pop
     219: aload_0
     220: iload_2
     221: putfield      #74                 // Field fsvisited:Z
     224: goto          139
     227: aload_1
     228: areturn
    Exception table:
       from    to  target type
         162   173   176   Class java/io/FileNotFoundException

  public java.util.Map<java.lang.String, org.apache.hadoop.hbase.client.TableDescriptor> getByNamespace(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #72                 // class java/util/TreeMap
       3: dup
       4: invokespecial #73                 // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      12: aload_0
      13: getfield      #13                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
      16: aload_1
      17: invokestatic  #95                 // Method org/apache/hadoop/hbase/util/FSUtils.getNamespaceDir:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      20: invokestatic  #96                 // Method org/apache/hadoop/hbase/util/FSUtils.getLocalTableDirs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
      23: astore_3
      24: aload_3
      25: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          113
      42: aload         4
      44: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #89                 // class org/apache/hadoop/fs/Path
      52: astore        5
      54: aconst_null
      55: astore        6
      57: aload_0
      58: aload         5
      60: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableName:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
      63: invokevirtual #91                 // Method get:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
      66: astore        6
      68: goto          85
      71: astore        7
      73: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
      76: ldc           #93                 // String Trouble retrieving htd
      78: aload         7
      80: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      85: aload         6
      87: ifnonnull     93
      90: goto          32
      93: aload_2
      94: aload         5
      96: invokestatic  #90                 // Method org/apache/hadoop/hbase/util/FSUtils.getTableName:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
      99: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
     102: aload         6
     104: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: goto          32
     113: aload_2
     114: areturn
    Exception table:
       from    to  target type
          57    68    71   Class java/io/FileNotFoundException

  public void add(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field fsreadonly:Z
       4: ifeq          17
       7: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      10: dup
      11: ldc           #98                 // String Cannot add a table descriptor - in read only mode
      13: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      23: astore_2
      24: getstatic     #22                 // Field org/apache/hadoop/hbase/TableName.META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
      27: aload_2
      28: invokevirtual #51                 // Method org/apache/hadoop/hbase/TableName.equals:(Ljava/lang/Object;)Z
      31: ifeq          44
      34: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      37: dup
      38: ldc           #100                // String Not implemented
      40: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: getstatic     #52                 // Field org/apache/hadoop/hbase/HConstants.HBASE_NON_USER_TABLE_DIRS:Ljava/util/List;
      47: aload_2
      48: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
      51: invokeinterface #54,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      56: ifeq          94
      59: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      62: dup
      63: new           #56                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #101                // String Cannot add a table descriptor for a reserved subdirectory name:
      72: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      81: invokevirtual #53                 // Method org/apache/hadoop/hbase/TableName.getNameAsString:()Ljava/lang/String;
      84: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: aload_1
      96: invokevirtual #102                // Method updateTableDescriptor:(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/fs/Path;
      99: pop
     100: return

  public org.apache.hadoop.hbase.client.TableDescriptor remove(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field fsreadonly:Z
       4: ifeq          17
       7: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      10: dup
      11: ldc           #103                // String Cannot remove a table descriptor - in read only mode
      13: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #104                // Method getTableDir:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      22: astore_2
      23: aload_0
      24: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      27: aload_2
      28: invokevirtual #105                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      31: ifeq          76
      34: aload_0
      35: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      38: aload_2
      39: iconst_1
      40: invokevirtual #106                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      43: ifne          76
      46: new           #55                 // class java/io/IOException
      49: dup
      50: new           #56                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #107                // String Failed delete of
      59: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokevirtual #108                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      66: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #11                 // Field cache:Ljava/util/Map;
      80: aload_1
      81: invokeinterface #109,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #64                 // class org/apache/hadoop/hbase/client/TableDescriptor
      89: astore_3
      90: aload_3
      91: areturn

  public boolean isTableInfoExists(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #110                // Method getTableInfoPath:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/FileStatus;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static org.apache.hadoop.fs.FileStatus getTableInfoPath(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #112                // Method getTableInfoPath:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
       6: areturn

  static org.apache.hadoop.fs.FileStatus getCurrentTableInfoStatus(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #117                // Field TABLEINFO_PATHFILTER:Lorg/apache/hadoop/fs/PathFilter;
       5: invokestatic  #118                // Method org/apache/hadoop/hbase/util/FSUtils.listStatus:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
       8: astore_3
       9: aload_3
      10: ifnull        19
      13: aload_3
      14: arraylength
      15: iconst_1
      16: if_icmpge     21
      19: aconst_null
      20: areturn
      21: aconst_null
      22: astore        4
      24: aload_3
      25: astore        5
      27: aload         5
      29: arraylength
      30: istore        6
      32: iconst_0
      33: istore        7
      35: iload         7
      37: iload         6
      39: if_icmpge     79
      42: aload         5
      44: iload         7
      46: aaload
      47: astore        8
      49: aload         4
      51: ifnull        69
      54: getstatic     #119                // Field TABLEINFO_FILESTATUS_COMPARATOR:Ljava/util/Comparator;
      57: aload         8
      59: aload         4
      61: invokeinterface #120,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      66: ifge          73
      69: aload         8
      71: astore        4
      73: iinc          7, 1
      76: goto          35
      79: iload_2
      80: ifeq          209
      83: aload_3
      84: arraylength
      85: iconst_1
      86: if_icmple     209
      89: aload_3
      90: astore        5
      92: aload         5
      94: arraylength
      95: istore        6
      97: iconst_0
      98: istore        7
     100: iload         7
     102: iload         6
     104: if_icmpge     209
     107: aload         5
     109: iload         7
     111: aaload
     112: astore        8
     114: aload         8
     116: invokevirtual #121                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     119: astore        9
     121: aload         8
     123: aload         4
     125: invokevirtual #122                // Method org/apache/hadoop/fs/FileStatus.equals:(Ljava/lang/Object;)Z
     128: ifne          203
     131: aload_0
     132: aload         8
     134: invokevirtual #121                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
     137: iconst_0
     138: invokevirtual #106                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     141: ifne          175
     144: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     147: new           #56                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #123                // String Failed cleanup of
     156: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload         9
     161: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     164: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #124,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     172: goto          203
     175: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     178: new           #56                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #125                // String Cleaned up old tableinfo file
     187: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload         9
     192: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokeinterface #126,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     203: iinc          7, 1
     206: goto          100
     209: aload         4
     211: areturn

  org.apache.hadoop.fs.Path getTableDir(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: getfield      #13                 // Field rootdir:Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: invokestatic  #127                // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
       8: areturn

  static int getTableInfoSequenceId(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: getstatic     #130                // Field TABLEINFO_FILE_REGEX:Ljava/util/regex/Pattern;
       9: aload_0
      10: invokevirtual #131                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      13: invokevirtual #132                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      16: astore_1
      17: aload_1
      18: invokevirtual #133                // Method java/util/regex/Matcher.matches:()Z
      21: ifne          36
      24: new           #134                // class java/lang/IllegalArgumentException
      27: dup
      28: aload_0
      29: invokevirtual #108                // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      32: invokespecial #135                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_1
      37: iconst_2
      38: invokevirtual #136                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      41: astore_2
      42: aload_2
      43: ifnull        53
      46: aload_2
      47: invokevirtual #137                // Method java/lang/String.length:()I
      50: ifgt          55
      53: iconst_0
      54: ireturn
      55: aload_1
      56: iconst_2
      57: invokevirtual #136                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      60: invokestatic  #138                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      63: ireturn

  static java.lang.String getTableInfoFileName(int);
    Code:
       0: new           #56                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #139                // String .tableinfo.
       9: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_0
      13: invokestatic  #140                // Method formatTableInfoSequenceId:(I)Ljava/lang/String;
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public static org.apache.hadoop.hbase.client.TableDescriptor getTableDescriptorFromFs(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #127                // Method org/apache/hadoop/hbase/util/FSUtils.getTableDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokestatic  #141                // Method getTableDescriptorFromFs:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
      11: areturn

  public static org.apache.hadoop.hbase.client.TableDescriptor getTableDescriptorFromFs(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #112                // Method getTableInfoPath:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FileStatus;
       6: astore_2
       7: aload_2
       8: ifnonnull     38
      11: new           #70                 // class org/apache/hadoop/hbase/TableInfoMissingException
      14: dup
      15: new           #56                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #142                // String No table descriptor file under
      24: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #143                // Method org/apache/hadoop/hbase/TableInfoMissingException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_2
      40: invokestatic  #144                // Method readTableDescriptor:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
      43: areturn

  org.apache.hadoop.fs.Path updateTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field fsreadonly:Z
       4: ifeq          17
       7: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      10: dup
      11: ldc           #156                // String Cannot update a table descriptor - in read only mode
      13: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokevirtual #104                // Method getTableDir:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      29: astore_3
      30: aload_0
      31: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      34: aload_1
      35: aload_3
      36: aload_0
      37: aload_3
      38: invokespecial #111                // Method getTableInfoPath:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      41: invokestatic  #157                // Method writeTableDescriptor:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/fs/Path;
      44: astore        4
      46: aload         4
      48: ifnonnull     61
      51: new           #55                 // class java/io/IOException
      54: dup
      55: ldc           #158                // String Failed update
      57: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
      64: new           #56                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #159                // String Updated tableinfo=
      73: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         4
      78: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #160,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      89: aload_0
      90: getfield      #15                 // Field usecache:Z
      93: ifeq          113
      96: aload_0
      97: getfield      #11                 // Field cache:Ljava/util/Map;
     100: aload_1
     101: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
     106: aload_1
     107: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload         4
     115: areturn

  public void deleteTableDescriptorIfExists(org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field fsreadonly:Z
       4: ifeq          17
       7: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      10: dup
      11: ldc           #161                // String Cannot delete a table descriptor - in read only mode
      13: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #104                // Method getTableDir:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      22: astore_2
      23: new           #89                 // class org/apache/hadoop/fs/Path
      26: dup
      27: aload_2
      28: ldc           #114                // String .tabledesc
      30: invokespecial #115                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      33: astore_3
      34: aload_0
      35: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      38: aload_3
      39: ldc           #40                 // int 2147483647
      41: invokestatic  #163                // Method deleteTableDescriptorFiles:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;I)V
      44: return

  public boolean createTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #186                // Method createTableDescriptor:(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Z
       6: ireturn

  public boolean createTableDescriptor(org.apache.hadoop.hbase.client.TableDescriptor, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #84,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
       7: invokevirtual #104                // Method getTableDir:(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: iload_2
      15: invokevirtual #187                // Method createTableDescriptorForTableDirectory:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Z
      18: ireturn

  public boolean createTableDescriptorForTableDirectory(org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.client.TableDescriptor, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field fsreadonly:Z
       4: ifeq          17
       7: new           #97                 // class org/apache/commons/lang3/NotImplementedException
      10: dup
      11: ldc           #188                // String Cannot create a table descriptor - in read only mode
      13: invokespecial #99                 // Method org/apache/commons/lang3/NotImplementedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      21: aload_1
      22: invokestatic  #189                // Method getTableInfoPath:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      25: astore        4
      27: aload         4
      29: ifnull        120
      32: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
      35: new           #56                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #190                // String Current path=
      44: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #121                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      52: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #126,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      63: iload_3
      64: ifne          120
      67: aload_0
      68: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      71: aload         4
      73: invokevirtual #121                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
      76: invokevirtual #105                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      79: ifeq          120
      82: aload         4
      84: invokevirtual #145                // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      87: lconst_0
      88: lcmp
      89: ifle          120
      92: aload_0
      93: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
      96: aload         4
      98: invokestatic  #144                // Method readTableDescriptor:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
     101: aload_2
     102: invokevirtual #191                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifeq          120
     108: getstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
     111: ldc           #192                // String TableInfo already exists.. Skipping creation
     113: invokeinterface #86,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     118: iconst_0
     119: ireturn
     120: aload_0
     121: getfield      #12                 // Field fs:Lorg/apache/hadoop/fs/FileSystem;
     124: aload_2
     125: aload_1
     126: aload         4
     128: invokestatic  #157                // Method writeTableDescriptor:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/fs/Path;
     131: astore        5
     133: aload         5
     135: ifnull        142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: ireturn

  static {};
    Code:
       0: ldc           #113                // class org/apache/hadoop/hbase/util/FSTableDescriptors
       2: invokestatic  #193                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #67                 // Field LOG:Lorg/slf4j/Logger;
       8: new           #194                // class org/apache/hadoop/hbase/util/FSTableDescriptors$1
      11: dup
      12: invokespecial #195                // Method org/apache/hadoop/hbase/util/FSTableDescriptors$1."<init>":()V
      15: putstatic     #119                // Field TABLEINFO_FILESTATUS_COMPARATOR:Ljava/util/Comparator;
      18: new           #196                // class org/apache/hadoop/hbase/util/FSTableDescriptors$2
      21: dup
      22: invokespecial #197                // Method org/apache/hadoop/hbase/util/FSTableDescriptors$2."<init>":()V
      25: putstatic     #117                // Field TABLEINFO_PATHFILTER:Lorg/apache/hadoop/fs/PathFilter;
      28: ldc           #198                // String .tableinfo(\.([0-9]{10}))?$
      30: invokestatic  #199                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      33: putstatic     #130                // Field TABLEINFO_FILE_REGEX:Ljava/util/regex/Pattern;
      36: return
}
