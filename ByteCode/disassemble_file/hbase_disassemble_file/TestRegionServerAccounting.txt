Compiled from "TestRegionServerAccounting.java"
public class org.apache.hadoop.hbase.regionserver.TestRegionServerAccounting {
  public static final org.apache.hadoop.hbase.HBaseClassTestRule CLASS_RULE;

  public org.apache.hadoop.hbase.regionserver.TestRegionServerAccounting();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setUpConf();
    Code:
       0: invokestatic  #2                  // Method org/apache/hadoop/hbase/HBaseConfiguration.create:()Lorg/apache/hadoop/conf/Configuration;
       3: putstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       6: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       9: ldc           #5                  // String hbase.regionserver.global.memstore.size
      11: ldc           #7                  // float 0.2f
      13: invokevirtual #8                  // Method org/apache/hadoop/conf/Configuration.setFloat:(Ljava/lang/String;F)V
      16: return

  public void testOnheapMemstoreHigherWaterMarkLimits();
    Code:
       0: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
       3: dup
       4: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       7: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      10: astore_1
      11: aload_1
      12: invokevirtual #11                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.getGlobalMemStoreLimit:()J
      15: lstore_2
      16: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      19: dup
      20: lload_2
      21: lload_2
      22: lconst_0
      23: iconst_0
      24: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      27: astore        4
      29: aload_1
      30: aload         4
      32: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      35: getstatic     #15                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      38: aload_1
      39: invokevirtual #16                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveHighWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      42: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      45: return

  public void testOnheapMemstoreLowerWaterMarkLimits();
    Code:
       0: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
       3: dup
       4: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       7: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      10: astore_1
      11: aload_1
      12: invokevirtual #11                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.getGlobalMemStoreLimit:()J
      15: lstore_2
      16: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      19: dup
      20: lload_2
      21: lload_2
      22: lconst_0
      23: iconst_0
      24: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      27: astore        4
      29: aload_1
      30: aload         4
      32: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      35: getstatic     #18                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      38: aload_1
      39: invokevirtual #19                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveLowWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      42: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      45: return

  public void testOffheapMemstoreHigherWaterMarkLimitsDueToDataSize();
    Code:
       0: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #20                 // String hbase.regionserver.offheap.global.memstore.size
       5: ldc2_w        #21                 // long 1024l
       8: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
      11: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
      14: dup
      15: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      18: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      21: astore_1
      22: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      25: dup
      26: ldc2_w        #24                 // long 3221225472l
      29: lconst_0
      30: ldc2_w        #26                 // long 1073741824l
      33: bipush        100
      35: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      38: astore_2
      39: aload_1
      40: aload_2
      41: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      44: getstatic     #28                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_OFFHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      47: aload_1
      48: invokevirtual #16                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveHighWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      51: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      54: return

  public void testOffheapMemstoreHigherWaterMarkLimitsDueToHeapSize();
    Code:
       0: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #20                 // String hbase.regionserver.offheap.global.memstore.size
       5: ldc2_w        #21                 // long 1024l
       8: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
      11: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
      14: dup
      15: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      18: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      21: astore_1
      22: aload_1
      23: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.getGlobalOnHeapMemStoreLimit:()J
      26: lstore_2
      27: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      30: dup
      31: lload_2
      32: lload_2
      33: lconst_0
      34: bipush        100
      36: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      39: astore        4
      41: aload_1
      42: aload         4
      44: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      47: getstatic     #15                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_HIGHER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      50: aload_1
      51: invokevirtual #16                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveHighWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      54: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: return

  public void testOffheapMemstoreLowerWaterMarkLimitsDueToDataSize();
    Code:
       0: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #20                 // String hbase.regionserver.offheap.global.memstore.size
       5: ldc2_w        #21                 // long 1024l
       8: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
      11: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
      14: dup
      15: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      18: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      21: astore_1
      22: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      25: dup
      26: ldc2_w        #24                 // long 3221225472l
      29: lconst_0
      30: ldc2_w        #26                 // long 1073741824l
      33: bipush        100
      35: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      38: astore_2
      39: aload_1
      40: aload_2
      41: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      44: getstatic     #30                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_OFFHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      47: aload_1
      48: invokevirtual #19                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveLowWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      51: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      54: return

  public void testOffheapMemstoreLowerWaterMarkLimitsDueToHeapSize();
    Code:
       0: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       3: ldc           #20                 // String hbase.regionserver.offheap.global.memstore.size
       5: ldc2_w        #21                 // long 1024l
       8: invokevirtual #23                 // Method org/apache/hadoop/conf/Configuration.setLong:(Ljava/lang/String;J)V
      11: new           #9                  // class org/apache/hadoop/hbase/regionserver/RegionServerAccounting
      14: dup
      15: getstatic     #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
      18: invokespecial #10                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting."<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      21: astore_1
      22: aload_1
      23: invokevirtual #29                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.getGlobalOnHeapMemStoreLimit:()J
      26: lstore_2
      27: new           #12                 // class org/apache/hadoop/hbase/regionserver/MemStoreSize
      30: dup
      31: lload_2
      32: lload_2
      33: lconst_0
      34: bipush        100
      36: invokespecial #13                 // Method org/apache/hadoop/hbase/regionserver/MemStoreSize."<init>":(JJJI)V
      39: astore        4
      41: aload_1
      42: aload         4
      44: invokevirtual #14                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.incGlobalMemStoreSize:(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
      47: getstatic     #18                 // Field org/apache/hadoop/hbase/regionserver/FlushType.ABOVE_ONHEAP_LOWER_MARK:Lorg/apache/hadoop/hbase/regionserver/FlushType;
      50: aload_1
      51: invokevirtual #19                 // Method org/apache/hadoop/hbase/regionserver/RegionServerAccounting.isAboveLowWaterMark:()Lorg/apache/hadoop/hbase/regionserver/FlushType;
      54: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: return

  static {};
    Code:
       0: ldc           #6                  // class org/apache/hadoop/hbase/regionserver/TestRegionServerAccounting
       2: invokestatic  #31                 // Method org/apache/hadoop/hbase/HBaseClassTestRule.forClass:(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       5: putstatic     #32                 // Field CLASS_RULE:Lorg/apache/hadoop/hbase/HBaseClassTestRule;
       8: return
}
