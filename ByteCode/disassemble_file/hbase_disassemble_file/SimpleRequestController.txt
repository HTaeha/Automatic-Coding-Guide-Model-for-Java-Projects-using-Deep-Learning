Compiled from "SimpleRequestController.java"
class org.apache.hadoop.hbase.client.SimpleRequestController implements org.apache.hadoop.hbase.client.RequestController {
  public static final java.lang.String HBASE_CLIENT_MAX_PERREQUEST_HEAPSIZE;

  static final long DEFAULT_HBASE_CLIENT_MAX_PERREQUEST_HEAPSIZE;

  public static final java.lang.String HBASE_CLIENT_MAX_PERREQUEST_ROWS;

  static final long DEFAULT_HBASE_CLIENT_MAX_PERREQUEST_ROWS;

  public static final java.lang.String HBASE_CLIENT_MAX_SUBMIT_HEAPSIZE;

  static final long DEFAULT_HBASE_CLIENT_MAX_SUBMIT_HEAPSIZE;

  final java.util.concurrent.atomic.AtomicLong tasksInProgress;

  final java.util.concurrent.ConcurrentMap<byte[], java.util.concurrent.atomic.AtomicInteger> taskCounterPerRegion;

  final java.util.concurrent.ConcurrentMap<org.apache.hadoop.hbase.ServerName, java.util.concurrent.atomic.AtomicInteger> taskCounterPerServer;

  final int maxConcurrentTasksPerRegion;

  final int maxConcurrentTasksPerServer;

  public static final java.lang.String THRESHOLD_TO_LOG_UNDONE_TASK_DETAILS;

  public static final java.lang.String THRESHOLD_TO_LOG_REGION_DETAILS;

  static final boolean $assertionsDisabled;

  org.apache.hadoop.hbase.client.SimpleRequestController(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #6                  // class java/util/concurrent/ConcurrentSkipListMap
      20: dup
      21: getstatic     #7                  // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      24: invokespecial #8                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":(Ljava/util/Comparator;)V
      27: putfield      #9                  // Field taskCounterPerRegion:Ljava/util/concurrent/ConcurrentMap;
      30: aload_0
      31: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      34: dup
      35: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      38: putfield      #12                 // Field taskCounterPerServer:Ljava/util/concurrent/ConcurrentMap;
      41: aload_0
      42: aload_1
      43: ldc           #14                 // String hbase.client.max.total.tasks
      45: bipush        100
      47: invokestatic  #15                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)I
      50: putfield      #16                 // Field maxTotalConcurrentTasks:I
      53: aload_0
      54: aload_1
      55: ldc           #17                 // String hbase.client.max.perserver.tasks
      57: iconst_2
      58: invokestatic  #15                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)I
      61: putfield      #18                 // Field maxConcurrentTasksPerServer:I
      64: aload_0
      65: aload_1
      66: ldc           #19                 // String hbase.client.max.perregion.tasks
      68: iconst_1
      69: invokestatic  #15                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)I
      72: putfield      #20                 // Field maxConcurrentTasksPerRegion:I
      75: aload_0
      76: aload_1
      77: ldc           #21                 // String hbase.client.max.perrequest.heapsize
      79: ldc2_w        #22                 // long 4194304l
      82: invokestatic  #24                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;J)J
      85: putfield      #25                 // Field maxHeapSizePerRequest:J
      88: aload_0
      89: aload_1
      90: ldc           #26                 // String hbase.client.max.perrequest.rows
      92: ldc2_w        #27                 // long 2048l
      95: invokestatic  #24                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;J)J
      98: putfield      #29                 // Field maxRowsPerRequest:J
     101: aload_0
     102: aload_1
     103: ldc           #30                 // String hbase.client.max.submit.heapsize
     105: ldc2_w        #22                 // long 4194304l
     108: invokestatic  #24                 // Method checkAndGet:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;J)J
     111: putfield      #31                 // Field maxHeapSizeSubmit:J
     114: aload_0
     115: aload_1
     116: ldc           #32                 // String hbase.client.threshold.log.details
     118: bipush        10
     120: invokevirtual #33                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     123: putfield      #34                 // Field thresholdToLogUndoneTaskDetails:I
     126: aload_0
     127: aload_1
     128: ldc           #35                 // String hbase.client.threshold.log.region.details
     130: iconst_2
     131: invokevirtual #33                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
     134: putfield      #36                 // Field thresholdToLogRegionDetails:I
     137: return

  static org.apache.hadoop.hbase.client.RequestController$Checker newChecker(java.util.List<org.apache.hadoop.hbase.client.SimpleRequestController$RowChecker>);
    Code:
       0: new           #47                 // class org/apache/hadoop/hbase/client/SimpleRequestController$1
       3: dup
       4: aload_0
       5: invokespecial #48                 // Method org/apache/hadoop/hbase/client/SimpleRequestController$1."<init>":(Ljava/util/List;)V
       8: areturn

  public org.apache.hadoop.hbase.client.RequestController$Checker newChecker();
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: iconst_4
       5: invokespecial #50                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_1
       9: aload_1
      10: new           #51                 // class org/apache/hadoop/hbase/client/SimpleRequestController$TaskCountChecker
      13: dup
      14: aload_0
      15: getfield      #16                 // Field maxTotalConcurrentTasks:I
      18: aload_0
      19: getfield      #18                 // Field maxConcurrentTasksPerServer:I
      22: aload_0
      23: getfield      #20                 // Field maxConcurrentTasksPerRegion:I
      26: aload_0
      27: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      30: aload_0
      31: getfield      #12                 // Field taskCounterPerServer:Ljava/util/concurrent/ConcurrentMap;
      34: aload_0
      35: getfield      #9                  // Field taskCounterPerRegion:Ljava/util/concurrent/ConcurrentMap;
      38: invokespecial #52                 // Method org/apache/hadoop/hbase/client/SimpleRequestController$TaskCountChecker."<init>":(IIILjava/util/concurrent/atomic/AtomicLong;Ljava/util/Map;Ljava/util/Map;)V
      41: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: aload_1
      48: new           #54                 // class org/apache/hadoop/hbase/client/SimpleRequestController$RequestHeapSizeChecker
      51: dup
      52: aload_0
      53: getfield      #25                 // Field maxHeapSizePerRequest:J
      56: invokespecial #55                 // Method org/apache/hadoop/hbase/client/SimpleRequestController$RequestHeapSizeChecker."<init>":(J)V
      59: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: aload_1
      66: new           #56                 // class org/apache/hadoop/hbase/client/SimpleRequestController$SubmittedSizeChecker
      69: dup
      70: aload_0
      71: getfield      #31                 // Field maxHeapSizeSubmit:J
      74: invokespecial #57                 // Method org/apache/hadoop/hbase/client/SimpleRequestController$SubmittedSizeChecker."<init>":(J)V
      77: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: aload_1
      84: new           #58                 // class org/apache/hadoop/hbase/client/SimpleRequestController$RequestRowsChecker
      87: dup
      88: aload_0
      89: getfield      #29                 // Field maxRowsPerRequest:J
      92: invokespecial #59                 // Method org/apache/hadoop/hbase/client/SimpleRequestController$RequestRowsChecker."<init>":(J)V
      95: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     100: pop
     101: aload_1
     102: invokestatic  #60                 // Method newChecker:(Ljava/util/List;)Lorg/apache/hadoop/hbase/client/RequestController$Checker;
     105: areturn

  public void incTaskCounters(java.util.Collection<byte[]>, org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #12                 // Field taskCounterPerServer:Ljava/util/concurrent/ConcurrentMap;
      12: aload_2
      13: invokedynamic #62,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      18: invokestatic  #63                 // Method org/apache/hadoop/hbase/util/ConcurrentMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      21: checkcast     #64                 // class java/util/concurrent/atomic/AtomicInteger
      24: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      27: pop
      28: aload_1
      29: aload_0
      30: invokedynamic #66,  0             // InvokeDynamic #1:accept:(Lorg/apache/hadoop/hbase/client/SimpleRequestController;)Ljava/util/function/Consumer;
      35: invokeinterface #67,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      40: return

  public void decTaskCounters(java.util.Collection<byte[]>, org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #68,  0             // InvokeDynamic #2:accept:(Lorg/apache/hadoop/hbase/client/SimpleRequestController;)Ljava/util/function/Consumer;
       7: invokeinterface #67,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      12: aload_0
      13: getfield      #12                 // Field taskCounterPerServer:Ljava/util/concurrent/ConcurrentMap;
      16: aload_2
      17: invokeinterface #69,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #64                 // class java/util/concurrent/atomic/AtomicInteger
      25: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      28: pop
      29: aload_0
      30: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      33: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      36: pop2
      37: aload_0
      38: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      41: dup
      42: astore_3
      43: monitorenter
      44: aload_0
      45: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      48: invokevirtual #72                 // Method java/lang/Object.notifyAll:()V
      51: aload_3
      52: monitorexit
      53: goto          63
      56: astore        4
      58: aload_3
      59: monitorexit
      60: aload         4
      62: athrow
      63: return
    Exception table:
       from    to  target type
          44    53    56   any
          56    60    56   any

  public long getNumberOfTasksInProgress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void waitForMaximumCurrentTasks(long, long, int, java.util.function.Consumer<java.lang.Long>) throws java.io.InterruptedIOException;
    Code:
       0: getstatic     #74                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #75                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #76                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: invokestatic  #77                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      23: lstore        7
      25: ldc2_w        #79                 // long 9223372036854775807l
      28: lstore        11
      30: aload_0
      31: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
      34: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      37: dup2
      38: lstore        9
      40: lload_1
      41: lcmp
      42: ifle          188
      45: lload         11
      47: lload         9
      49: lcmp
      50: ifeq          97
      53: invokestatic  #77                 // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
      56: lstore        13
      58: lload         13
      60: lload         7
      62: iload         5
      64: i2l
      65: ladd
      66: lcmp
      67: ifle          97
      70: lload         13
      72: lstore        7
      74: aload         6
      76: ifnull        91
      79: aload         6
      81: lload         9
      83: invokestatic  #81                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      86: invokeinterface #82,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      91: aload_0
      92: lload         9
      94: invokespecial #83                 // Method logDetailsOfUndoneTasks:(J)V
      97: lload         9
      99: lstore        11
     101: aload_0
     102: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
     105: dup
     106: astore        13
     108: monitorenter
     109: aload_0
     110: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
     113: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     116: lload         11
     118: lcmp
     119: ifne          132
     122: aload_0
     123: getfield      #5                  // Field tasksInProgress:Ljava/util/concurrent/atomic/AtomicLong;
     126: ldc2_w        #84                 // long 10l
     129: invokevirtual #86                 // Method java/lang/Object.wait:(J)V
     132: aload         13
     134: monitorexit
     135: goto          146
     138: astore        15
     140: aload         13
     142: monitorexit
     143: aload         15
     145: athrow
     146: goto          30
     149: astore        13
     151: new           #88                 // class java/io/InterruptedIOException
     154: dup
     155: new           #38                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #89                 // String #
     164: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: lload_3
     168: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     171: ldc           #90                 // String , interrupted. currentNumberOfTask=
     173: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: lload         9
     178: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     181: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokespecial #91                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
     187: athrow
     188: return
    Exception table:
       from    to  target type
         109   135   138   any
         138   143   138   any
         101   146   149   Class java/lang/InterruptedException

  public void waitForFreeSlot(long, int, java.util.function.Consumer<java.lang.Long>) throws java.io.InterruptedIOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field maxTotalConcurrentTasks:I
       5: iconst_1
       6: isub
       7: i2l
       8: lload_1
       9: iload_3
      10: aload         4
      12: invokevirtual #110                // Method waitForMaximumCurrentTasks:(JJILjava/util/function/Consumer;)V
      15: return

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/hbase/client/SimpleRequestController
       2: invokevirtual #111                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #74                 // Field $assertionsDisabled:Z
      16: ldc           #1                  // class org/apache/hadoop/hbase/client/SimpleRequestController
      18: invokestatic  #112                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #102                // Field LOG:Lorg/slf4j/Logger;
      24: return
}
