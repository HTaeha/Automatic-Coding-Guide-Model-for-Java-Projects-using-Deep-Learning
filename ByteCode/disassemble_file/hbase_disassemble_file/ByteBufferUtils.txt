Compiled from "ByteBufferUtils.java"
public final class org.apache.hadoop.hbase.util.ByteBufferUtils {
  public static final int VALUE_MASK;

  public static final int NEXT_BIT_SHIFT;

  public static final int NEXT_BIT_MASK;

  static final boolean UNSAFE_AVAIL;

  public static final boolean UNSAFE_UNALIGNED;

  public static void writeVLong(java.nio.ByteBuffer, long);
    Code:
       0: lload_1
       1: ldc2_w        #2                  // long -112l
       4: lcmp
       5: iflt          25
       8: lload_1
       9: ldc2_w        #4                  // long 127l
      12: lcmp
      13: ifgt          25
      16: aload_0
      17: lload_1
      18: l2i
      19: i2b
      20: invokevirtual #6                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: return
      25: bipush        -112
      27: istore_3
      28: lload_1
      29: lconst_0
      30: lcmp
      31: ifge          43
      34: lload_1
      35: ldc2_w        #7                  // long -1l
      38: lxor
      39: lstore_1
      40: bipush        -120
      42: istore_3
      43: lload_1
      44: lstore        4
      46: lload         4
      48: lconst_0
      49: lcmp
      50: ifeq          66
      53: lload         4
      55: bipush        8
      57: lshr
      58: lstore        4
      60: iinc          3, -1
      63: goto          46
      66: aload_0
      67: iload_3
      68: i2b
      69: invokevirtual #6                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      72: pop
      73: iload_3
      74: bipush        -120
      76: if_icmpge     87
      79: iload_3
      80: bipush        120
      82: iadd
      83: ineg
      84: goto          92
      87: iload_3
      88: bipush        112
      90: iadd
      91: ineg
      92: istore_3
      93: iload_3
      94: istore        6
      96: iload         6
      98: ifeq          138
     101: iload         6
     103: iconst_1
     104: isub
     105: bipush        8
     107: imul
     108: istore        7
     110: ldc2_w        #9                  // long 255l
     113: iload         7
     115: lshl
     116: lstore        8
     118: aload_0
     119: lload_1
     120: lload         8
     122: land
     123: iload         7
     125: lshr
     126: l2i
     127: i2b
     128: invokevirtual #6                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     131: pop
     132: iinc          6, -1
     135: goto          96
     138: return

  public static long readVLong(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: iload_1
       6: invokestatic  #12                 // Method org/apache/hadoop/io/WritableUtils.decodeVIntSize:(B)I
       9: istore_2
      10: iload_2
      11: iconst_1
      12: if_icmpne     18
      15: iload_1
      16: i2l
      17: lreturn
      18: lconst_0
      19: lstore_3
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload_2
      26: iconst_1
      27: isub
      28: if_icmpge     58
      31: aload_0
      32: invokevirtual #11                 // Method java/nio/ByteBuffer.get:()B
      35: istore        6
      37: lload_3
      38: bipush        8
      40: lshl
      41: lstore_3
      42: lload_3
      43: iload         6
      45: sipush        255
      48: iand
      49: i2l
      50: lor
      51: lstore_3
      52: iinc          5, 1
      55: goto          23
      58: iload_1
      59: invokestatic  #13                 // Method org/apache/hadoop/io/WritableUtils.isNegativeVInt:(B)Z
      62: ifeq          73
      65: lload_3
      66: ldc2_w        #7                  // long -1l
      69: lxor
      70: goto          74
      73: lload_3
      74: lreturn

  public static int putCompressedInt(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: istore_3
       4: iload_3
       5: bipush        127
       7: iand
       8: i2b
       9: istore        4
      11: iload_3
      12: bipush        7
      14: iushr
      15: istore_3
      16: iload_3
      17: ifeq          28
      20: iload         4
      22: bipush        -128
      24: ior
      25: i2b
      26: istore        4
      28: aload_0
      29: iload         4
      31: invokevirtual #15                 // Method java/io/OutputStream.write:(I)V
      34: iinc          2, 1
      37: iload_3
      38: ifne          4
      41: iload_2
      42: ireturn

  public static void putInt(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
       4: ifeq          20
       7: aload_0
       8: checkcast     #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
      11: iload_1
      12: invokeinterface #17,  2           // InterfaceMethod org/apache/hadoop/hbase/io/ByteBufferWriter.writeInt:(I)V
      17: goto          25
      20: aload_0
      21: iload_1
      22: invokestatic  #18                 // Method org/apache/hadoop/hbase/io/util/StreamUtils.writeInt:(Ljava/io/OutputStream;I)V
      25: return

  public static byte toByte(java.nio.ByteBuffer, int);
    Code:
       0: getstatic     #19                 // Field UNSAFE_AVAIL:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: invokestatic  #20                 // Method org/apache/hadoop/hbase/util/UnsafeAccess.toByte:(Ljava/nio/ByteBuffer;I)B
      11: ireturn
      12: aload_0
      13: iload_1
      14: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      17: ireturn

  public static void moveBufferToStream(java.io.OutputStream, java.nio.ByteBuffer, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       6: iload_2
       7: invokestatic  #23                 // Method copyBufferToStream:(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
      10: aload_1
      11: iload_2
      12: invokestatic  #24                 // Method skip:(Ljava/nio/ByteBuffer;I)V
      15: return

  public static void copyBufferToStream(java.io.OutputStream, java.nio.ByteBuffer, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
       4: ifeq          22
       7: aload_0
       8: checkcast     #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokeinterface #25,  4           // InterfaceMethod org/apache/hadoop/hbase/io/ByteBufferWriter.write:(Ljava/nio/ByteBuffer;II)V
      19: goto          74
      22: aload_1
      23: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      26: ifeq          47
      29: aload_0
      30: aload_1
      31: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      34: aload_1
      35: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      38: iload_2
      39: iadd
      40: iload_3
      41: invokevirtual #29                 // Method java/io/OutputStream.write:([BII)V
      44: goto          74
      47: iconst_0
      48: istore        4
      50: iload         4
      52: iload_3
      53: if_icmpge     74
      56: aload_0
      57: aload_1
      58: iload_2
      59: iload         4
      61: iadd
      62: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      65: invokevirtual #15                 // Method java/io/OutputStream.write:(I)V
      68: iinc          4, 1
      71: goto          50
      74: return

  public static void copyBufferToStream(java.io.DataOutput, java.nio.ByteBuffer, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
       4: ifeq          22
       7: aload_0
       8: checkcast     #16                 // class org/apache/hadoop/hbase/io/ByteBufferWriter
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokeinterface #25,  4           // InterfaceMethod org/apache/hadoop/hbase/io/ByteBufferWriter.write:(Ljava/nio/ByteBuffer;II)V
      19: goto          78
      22: aload_1
      23: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      26: ifeq          49
      29: aload_0
      30: aload_1
      31: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      34: aload_1
      35: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      38: iload_2
      39: iadd
      40: iload_3
      41: invokeinterface #31,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      46: goto          78
      49: iconst_0
      50: istore        4
      52: iload         4
      54: iload_3
      55: if_icmpge     78
      58: aload_0
      59: aload_1
      60: iload_2
      61: iload         4
      63: iadd
      64: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      67: invokeinterface #32,  2           // InterfaceMethod java/io/DataOutput.write:(I)V
      72: iinc          4, 1
      75: goto          52
      78: return

  public static int putLong(java.io.OutputStream, long, int) throws java.io.IOException;
    Code:
       0: lload_1
       1: lstore        4
       3: iconst_0
       4: istore        6
       6: iload         6
       8: iload_3
       9: if_icmpge     37
      12: aload_0
      13: lload         4
      15: ldc2_w        #9                  // long 255l
      18: land
      19: l2i
      20: i2b
      21: invokevirtual #15                 // Method java/io/OutputStream.write:(I)V
      24: lload         4
      26: bipush        8
      28: lushr
      29: lstore        4
      31: iinc          6, 1
      34: goto          6
      37: iload_3
      38: ireturn

  public static int putByte(java.nio.ByteBuffer, int, byte);
    Code:
       0: getstatic     #19                 // Field UNSAFE_AVAIL:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokestatic  #33                 // Method org/apache/hadoop/hbase/util/UnsafeAccess.putByte:(Ljava/nio/ByteBuffer;IB)I
      12: ireturn
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #34                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      19: pop
      20: iload_1
      21: iconst_1
      22: iadd
      23: ireturn

  public static int longFitsIn(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          9
       6: bipush        8
       8: ireturn
       9: lload_0
      10: ldc2_w        #35                 // long 4294967296l
      13: lcmp
      14: ifge          49
      17: lload_0
      18: ldc2_w        #37                 // long 65536l
      21: lcmp
      22: ifge          37
      25: lload_0
      26: ldc2_w        #39                 // long 256l
      29: lcmp
      30: ifge          35
      33: iconst_1
      34: ireturn
      35: iconst_2
      36: ireturn
      37: lload_0
      38: ldc2_w        #41                 // long 16777216l
      41: lcmp
      42: ifge          47
      45: iconst_3
      46: ireturn
      47: iconst_4
      48: ireturn
      49: lload_0
      50: ldc2_w        #43                 // long 281474976710656l
      53: lcmp
      54: ifge          70
      57: lload_0
      58: ldc2_w        #45                 // long 1099511627776l
      61: lcmp
      62: ifge          67
      65: iconst_5
      66: ireturn
      67: bipush        6
      69: ireturn
      70: lload_0
      71: ldc2_w        #47                 // long 72057594037927936l
      74: lcmp
      75: ifge          81
      78: bipush        7
      80: ireturn
      81: bipush        8
      83: ireturn

  public static int intFitsIn(int);
    Code:
       0: iload_0
       1: ifge          6
       4: iconst_4
       5: ireturn
       6: iload_0
       7: ldc           #49                 // int 65536
       9: if_icmpge     23
      12: iload_0
      13: sipush        256
      16: if_icmpge     21
      19: iconst_1
      20: ireturn
      21: iconst_2
      22: ireturn
      23: iload_0
      24: ldc           #50                 // int 16777216
      26: if_icmpgt     31
      29: iconst_3
      30: ireturn
      31: iconst_4
      32: ireturn

  public static int readCompressedInt(java.io.InputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: invokevirtual #51                 // Method java/io/InputStream.read:()I
       8: i2b
       9: istore_3
      10: iload_1
      11: iload_3
      12: bipush        127
      14: iand
      15: bipush        7
      17: iload_2
      18: imul
      19: ishl
      20: iadd
      21: istore_1
      22: iinc          2, 1
      25: iload_2
      26: iconst_5
      27: if_icmple     64
      30: new           #53                 // class java/lang/IllegalStateException
      33: dup
      34: new           #54                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #56                 // String Corrupted compressed int (too long:
      43: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_2
      47: iconst_1
      48: iadd
      49: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #59                 // String  bytes)
      54: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iconst_0
      65: iload_3
      66: sipush        128
      69: iand
      70: if_icmpne     4
      73: iload_1
      74: ireturn

  public static int readCompressedInt(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.get:()B
       4: istore_1
       5: iload_1
       6: sipush        128
       9: iand
      10: ifeq          26
      13: iload_1
      14: bipush        127
      16: iand
      17: aload_0
      18: invokestatic  #62                 // Method readCompressedInt:(Ljava/nio/ByteBuffer;)I
      21: bipush        7
      23: ishl
      24: iadd
      25: ireturn
      26: iload_1
      27: bipush        127
      29: iand
      30: ireturn

  public static long readLong(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_2
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iload_1
       8: if_icmpge     35
      11: lload_2
      12: aload_0
      13: invokevirtual #51                 // Method java/io/InputStream.read:()I
      16: i2l
      17: ldc2_w        #9                  // long 255l
      20: land
      21: bipush        8
      23: iload         4
      25: imul
      26: lshl
      27: lor
      28: lstore_2
      29: iinc          4, 1
      32: goto          5
      35: lload_2
      36: lreturn

  public static long readLong(java.nio.ByteBuffer, int);
    Code:
       0: lconst_0
       1: lstore_2
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iload_1
       8: if_icmpge     38
      11: lload_2
      12: aload_0
      13: invokevirtual #11                 // Method java/nio/ByteBuffer.get:()B
      16: i2l
      17: ldc2_w        #9                  // long 255l
      20: land
      21: ldc2_w        #63                 // long 8l
      24: iload         4
      26: i2l
      27: lmul
      28: l2i
      29: lshl
      30: lor
      31: lstore_2
      32: iinc          4, 1
      35: goto          5
      38: lload_2
      39: lreturn

  public static void copyFromStreamToBuffer(java.nio.ByteBuffer, java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          33
       7: aload_1
       8: aload_0
       9: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      12: aload_0
      13: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      16: aload_0
      17: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      20: iadd
      21: iload_2
      22: invokevirtual #65                 // Method java/io/DataInputStream.readFully:([BII)V
      25: aload_0
      26: iload_2
      27: invokestatic  #24                 // Method skip:(Ljava/nio/ByteBuffer;I)V
      30: goto          55
      33: iconst_0
      34: istore_3
      35: iload_3
      36: iload_2
      37: if_icmpge     55
      40: aload_0
      41: aload_1
      42: invokevirtual #66                 // Method java/io/DataInputStream.readByte:()B
      45: invokevirtual #6                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      48: pop
      49: iinc          3, 1
      52: goto          35
      55: return

  public static java.nio.ByteBuffer drainInputStreamToBuffer(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #67                 // class java/io/ByteArrayOutputStream
       3: dup
       4: sipush        4096
       7: invokespecial #68                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      10: astore_1
      11: aload_0
      12: aload_1
      13: sipush        4096
      16: iconst_1
      17: invokestatic  #69                 // Method org/apache/hadoop/io/IOUtils.copyBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
      20: aload_1
      21: invokevirtual #70                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      24: invokestatic  #71                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      27: astore_2
      28: aload_2
      29: invokevirtual #72                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      32: pop
      33: aload_2
      34: areturn

  public static void copyFromBufferToBuffer(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          62
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      11: ifeq          62
      14: aload_0
      15: invokevirtual #73                 // Method java/nio/ByteBuffer.remaining:()I
      18: istore_2
      19: aload_0
      20: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      23: aload_0
      24: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      27: aload_1
      28: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      31: aload_1
      32: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      35: iload_2
      36: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_1
      40: aload_1
      41: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      44: iload_2
      45: iadd
      46: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      49: pop
      50: aload_0
      51: aload_0
      52: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
      55: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      58: pop
      59: goto          116
      62: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      65: ifeq          110
      68: aload_0
      69: invokevirtual #73                 // Method java/nio/ByteBuffer.remaining:()I
      72: istore_2
      73: aload_0
      74: aload_0
      75: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      78: aload_1
      79: aload_1
      80: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      83: iload_2
      84: invokestatic  #77                 // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      87: aload_1
      88: aload_1
      89: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      92: iload_2
      93: iadd
      94: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      97: pop
      98: aload_0
      99: aload_0
     100: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
     103: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     106: pop
     107: goto          116
     110: aload_1
     111: aload_0
     112: invokevirtual #78                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     115: pop
     116: return

  public static void copyFromBufferToBuffer(java.nio.ByteBuffer, java.nio.ByteBuffer, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          42
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      11: ifeq          42
      14: aload_0
      15: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      18: iload_2
      19: aload_0
      20: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      23: iadd
      24: aload_1
      25: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      28: aload_1
      29: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      32: iload_3
      33: iadd
      34: iload         4
      36: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: goto          101
      42: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      45: ifeq          60
      48: aload_0
      49: iload_2
      50: aload_1
      51: iload_3
      52: iload         4
      54: invokestatic  #77                 // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      57: goto          101
      60: aload_1
      61: invokevirtual #79                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      64: astore        5
      66: aload         5
      68: iload_3
      69: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      72: pop
      73: aload_0
      74: invokevirtual #79                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      77: astore        6
      79: aload         6
      81: iload_2
      82: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      85: iload_2
      86: iload         4
      88: iadd
      89: invokevirtual #80                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      92: pop
      93: aload         5
      95: aload         6
      97: invokevirtual #78                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     100: pop
     101: return

  public static void copyFromBufferToBuffer(java.nio.ByteBuffer, java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          49
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      11: ifeq          49
      14: aload_0
      15: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      18: iload_2
      19: aload_0
      20: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      23: iadd
      24: aload_1
      25: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      28: aload_1
      29: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      32: aload_1
      33: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      36: iadd
      37: iload_3
      38: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_1
      42: iload_3
      43: invokestatic  #24                 // Method skip:(Ljava/nio/ByteBuffer;I)V
      46: goto          100
      49: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      52: ifeq          74
      55: aload_0
      56: iload_2
      57: aload_1
      58: aload_1
      59: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      62: iload_3
      63: invokestatic  #77                 // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      66: aload_1
      67: iload_3
      68: invokestatic  #24                 // Method skip:(Ljava/nio/ByteBuffer;I)V
      71: goto          100
      74: aload_0
      75: invokevirtual #79                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      78: astore        4
      80: aload         4
      82: iload_2
      83: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      86: iload_2
      87: iload_3
      88: iadd
      89: invokevirtual #80                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      92: pop
      93: aload_1
      94: aload         4
      96: invokevirtual #78                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      99: pop
     100: return

  public static int findCommonPrefix(java.nio.ByteBuffer, int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     37
       9: aload_0
      10: iload_1
      11: iload         4
      13: iadd
      14: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      17: aload_0
      18: iload_2
      19: iload         4
      21: iadd
      22: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      25: if_icmpeq     31
      28: goto          37
      31: iinc          4, 1
      34: goto          3
      37: iload         4
      39: ireturn

  public static int findCommonPrefix(byte[], int, int, byte[], int, int);
    Code:
       0: iload_2
       1: iload         5
       3: invokestatic  #81                 // Method java/lang/Math.min:(II)I
       6: istore        6
       8: iconst_0
       9: istore        7
      11: iload         7
      13: iload         6
      15: if_icmpge     40
      18: aload_0
      19: iload_1
      20: iload         7
      22: iadd
      23: baload
      24: aload_3
      25: iload         4
      27: iload         7
      29: iadd
      30: baload
      31: if_icmpne     40
      34: iinc          7, 1
      37: goto          11
      40: iload         7
      42: ireturn

  public static int findCommonPrefix(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: iload         5
       3: invokestatic  #81                 // Method java/lang/Math.min:(II)I
       6: istore        6
       8: iconst_0
       9: istore        7
      11: iload         7
      13: iload         6
      15: if_icmpge     44
      18: aload_0
      19: iload_1
      20: iload         7
      22: iadd
      23: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      26: aload_3
      27: iload         4
      29: iload         7
      31: iadd
      32: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      35: if_icmpne     44
      38: iinc          7, 1
      41: goto          11
      44: iload         7
      46: ireturn

  public static boolean arePartsEqual(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: iload_2
       1: iload         4
       3: if_icmpeq     8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
      12: ifeq          51
      15: iconst_0
      16: aload_0
      17: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      20: aload_0
      21: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      24: iload_1
      25: iadd
      26: iload_2
      27: aload_0
      28: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      31: aload_0
      32: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      35: iload_3
      36: iadd
      37: iload         4
      39: invokestatic  #82                 // Method org/apache/hadoop/hbase/util/Bytes.compareTo:([BII[BII)I
      42: if_icmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: istore        5
      54: iload         5
      56: iload         4
      58: if_icmpge     88
      61: aload_0
      62: iload_1
      63: iload         5
      65: iadd
      66: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      69: aload_0
      70: iload_3
      71: iload         5
      73: iadd
      74: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      77: if_icmpeq     82
      80: iconst_0
      81: ireturn
      82: iinc          5, 1
      85: goto          54
      88: iconst_1
      89: ireturn

  public static void skip(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       5: iload_1
       6: iadd
       7: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      10: pop
      11: return

  public static void extendLimit(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
       5: iload_1
       6: iadd
       7: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      10: pop
      11: return

  public static byte[] toBytes(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
       9: iload_1
      10: isub
      11: newarray       byte
      13: astore_3
      14: aload_0
      15: iload_1
      16: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: aload_3
      22: invokevirtual #84                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_0
      27: iload_2
      28: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_3
      33: areturn

  public static byte[] toBytes(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: iload_2
      10: if_icmpge     31
      13: aload_3
      14: iload         4
      16: aload_0
      17: iload_1
      18: iload         4
      20: iadd
      21: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      24: bastore
      25: iinc          4, 1
      28: goto          7
      31: aload_3
      32: areturn

  public static boolean equals(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: ifeq          9
       4: iload         5
       6: ifne          21
       9: iload_2
      10: iload         5
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: iload_1
      23: iload_2
      24: iadd
      25: iconst_1
      26: isub
      27: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      30: aload_3
      31: iload         4
      33: iload         5
      35: iadd
      36: iconst_1
      37: isub
      38: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      41: if_icmpeq     46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: iload_1
      48: iload_2
      49: aload_3
      50: iload         4
      52: iload         5
      54: invokestatic  #85                 // Method compareTo:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public static int hashCode(java.nio.ByteBuffer, int, int);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_1
       3: istore        4
       5: iload         4
       7: iload_1
       8: iload_2
       9: iadd
      10: if_icmpge     31
      13: bipush        31
      15: iload_3
      16: imul
      17: aload_0
      18: iload         4
      20: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      23: iadd
      24: istore_3
      25: iinc          4, 1
      28: goto          5
      31: iload_3
      32: ireturn

  public static int compareTo(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #86                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ComparerHolder.BEST_COMPARER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Comparer;
       3: aload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: invokevirtual #87                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Comparer.compareTo:(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
      14: ireturn

  public static boolean equals(java.nio.ByteBuffer, int, int, byte[], int, int);
    Code:
       0: iload_2
       1: ifeq          9
       4: iload         5
       6: ifne          21
       9: iload_2
      10: iload         5
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
      21: aload_0
      22: iload_1
      23: iload_2
      24: iadd
      25: iconst_1
      26: isub
      27: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      30: aload_3
      31: iload         4
      33: iload         5
      35: iadd
      36: iconst_1
      37: isub
      38: baload
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: iload_1
      46: iload_2
      47: aload_3
      48: iload         4
      50: iload         5
      52: invokestatic  #88                 // Method compareTo:(Ljava/nio/ByteBuffer;II[BII)I
      55: ifne          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public static int compareTo(byte[], int, int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #86                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ComparerHolder.BEST_COMPARER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Comparer;
       3: aload_0
       4: iload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: invokevirtual #89                 // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Comparer.compareTo:([BIILjava/nio/ByteBuffer;II)I
      14: ireturn

  public static int compareTo(java.nio.ByteBuffer, int, int, byte[], int, int);
    Code:
       0: aload_3
       1: iload         4
       3: iload         5
       5: aload_0
       6: iload_1
       7: iload_2
       8: invokestatic  #90                 // Method compareTo:([BIILjava/nio/ByteBuffer;II)I
      11: iconst_m1
      12: imul
      13: ireturn

  static int compareToUnsafe(java.lang.Object, long, int, java.lang.Object, long, int);
    Code:
       0: bipush        8
       2: istore        8
       4: iload_3
       5: iload         7
       7: invokestatic  #81                 // Method java/lang/Math.min:(II)I
      10: istore        9
      12: iload         9
      14: bipush        -8
      16: iand
      17: istore        10
      19: iconst_0
      20: istore        11
      22: iload         11
      24: iload         10
      26: if_icmpge     136
      29: getstatic     #91                 // Field org/apache/hadoop/hbase/util/UnsafeAccess.theUnsafe:Lsun/misc/Unsafe;
      32: aload_0
      33: lload_1
      34: iload         11
      36: i2l
      37: ladd
      38: invokevirtual #92                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      41: lstore        12
      43: getstatic     #91                 // Field org/apache/hadoop/hbase/util/UnsafeAccess.theUnsafe:Lsun/misc/Unsafe;
      46: aload         4
      48: lload         5
      50: iload         11
      52: i2l
      53: ladd
      54: invokevirtual #92                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      57: lstore        14
      59: lload         12
      61: lload         14
      63: lcmp
      64: ifeq          130
      67: getstatic     #93                 // Field org/apache/hadoop/hbase/util/UnsafeAccess.LITTLE_ENDIAN:Z
      70: ifne          95
      73: lload         12
      75: ldc2_w        #95                 // long -9223372036854775808l
      78: ladd
      79: lload         14
      81: ldc2_w        #95                 // long -9223372036854775808l
      84: ladd
      85: lcmp
      86: ifge          93
      89: iconst_m1
      90: goto          94
      93: iconst_1
      94: ireturn
      95: lload         12
      97: lload         14
      99: lxor
     100: invokestatic  #97                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
     103: bipush        -8
     105: iand
     106: istore        16
     108: lload         12
     110: iload         16
     112: lushr
     113: ldc2_w        #9                  // long 255l
     116: land
     117: l2i
     118: lload         14
     120: iload         16
     122: lushr
     123: ldc2_w        #9                  // long 255l
     126: land
     127: l2i
     128: isub
     129: ireturn
     130: iinc          11, 8
     133: goto          22
     136: iload         11
     138: iload         9
     140: if_icmpge     200
     143: getstatic     #91                 // Field org/apache/hadoop/hbase/util/UnsafeAccess.theUnsafe:Lsun/misc/Unsafe;
     146: aload_0
     147: lload_1
     148: iload         11
     150: i2l
     151: ladd
     152: invokevirtual #98                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
     155: sipush        255
     158: iand
     159: istore        12
     161: getstatic     #91                 // Field org/apache/hadoop/hbase/util/UnsafeAccess.theUnsafe:Lsun/misc/Unsafe;
     164: aload         4
     166: lload         5
     168: iload         11
     170: i2l
     171: ladd
     172: invokevirtual #98                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
     175: sipush        255
     178: iand
     179: istore        13
     181: iload         12
     183: iload         13
     185: if_icmpeq     194
     188: iload         12
     190: iload         13
     192: isub
     193: ireturn
     194: iinc          11, 1
     197: goto          136
     200: iload_3
     201: iload         7
     203: isub
     204: ireturn

  public static short toShort(java.nio.ByteBuffer, int);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: invokevirtual #100                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.toShort:(Ljava/nio/ByteBuffer;I)S
       8: ireturn

  public static int toInt(java.nio.ByteBuffer);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: invokevirtual #101                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.toInt:(Ljava/nio/ByteBuffer;)I
       7: ireturn

  public static int toInt(java.nio.ByteBuffer, int);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: invokevirtual #102                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.toInt:(Ljava/nio/ByteBuffer;I)I
       8: ireturn

  public static int readAsInt(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: aload_0
       4: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
       7: if_icmple     58
      10: new           #103                // class java/lang/IllegalArgumentException
      13: dup
      14: new           #54                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #104                // String offset (
      23: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #105                // String ) + length (
      32: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #106                // String ) exceed the limit of the buffer:
      41: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
      48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: iconst_0
      59: istore_3
      60: iload_1
      61: istore        4
      63: iload         4
      65: iload_1
      66: iload_2
      67: iadd
      68: if_icmpge     95
      71: iload_3
      72: bipush        8
      74: ishl
      75: istore_3
      76: iload_3
      77: aload_0
      78: iload         4
      80: invokestatic  #30                 // Method toByte:(Ljava/nio/ByteBuffer;I)B
      83: sipush        255
      86: iand
      87: ixor
      88: istore_3
      89: iinc          4, 1
      92: goto          63
      95: iload_3
      96: ireturn

  public static long toLong(java.nio.ByteBuffer, int);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: invokevirtual #108                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.toLong:(Ljava/nio/ByteBuffer;I)J
       8: lreturn

  public static void putInt(java.nio.ByteBuffer, int);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: invokevirtual #109                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putInt:(Ljava/nio/ByteBuffer;I)V
       8: return

  public static int putInt(java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #110                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putInt:(Ljava/nio/ByteBuffer;II)I
       9: ireturn

  public static double toDouble(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #111                // Method toLong:(Ljava/nio/ByteBuffer;I)J
       5: invokestatic  #112                // Method java/lang/Double.longBitsToDouble:(J)D
       8: dreturn

  public static java.math.BigDecimal toBigDecimal(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: ifnull        19
       4: iload_2
       5: iconst_5
       6: if_icmplt     19
       9: iload_1
      10: iload_2
      11: iadd
      12: aload_0
      13: invokevirtual #76                 // Method java/nio/ByteBuffer.limit:()I
      16: if_icmple     21
      19: aconst_null
      20: areturn
      21: aload_0
      22: iload_1
      23: invokestatic  #113                // Method toInt:(Ljava/nio/ByteBuffer;I)I
      26: istore_3
      27: iload_2
      28: iconst_4
      29: isub
      30: newarray       byte
      32: astore        4
      34: aload         4
      36: aload_0
      37: iload_1
      38: iconst_4
      39: iadd
      40: iconst_0
      41: iload_2
      42: iconst_4
      43: isub
      44: invokestatic  #114                // Method copyFromBufferToArray:([BLjava/nio/ByteBuffer;III)V
      47: new           #115                // class java/math/BigDecimal
      50: dup
      51: new           #116                // class java/math/BigInteger
      54: dup
      55: aload         4
      57: invokespecial #117                // Method java/math/BigInteger."<init>":([B)V
      60: iload_3
      61: invokespecial #118                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      64: areturn

  public static void putShort(java.nio.ByteBuffer, short);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: invokevirtual #119                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putShort:(Ljava/nio/ByteBuffer;S)V
       8: return

  public static int putShort(java.nio.ByteBuffer, int, short);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #120                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putShort:(Ljava/nio/ByteBuffer;IS)I
       9: ireturn

  public static int putAsShort(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iadd
       4: iload_2
       5: i2b
       6: invokevirtual #34                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
       9: pop
      10: iload_2
      11: bipush        8
      13: ishr
      14: istore_2
      15: aload_0
      16: iload_1
      17: iload_2
      18: i2b
      19: invokevirtual #34                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      22: pop
      23: iload_1
      24: iconst_2
      25: iadd
      26: ireturn

  public static void putLong(java.nio.ByteBuffer, long);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: lload_1
       5: invokevirtual #121                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putLong:(Ljava/nio/ByteBuffer;J)V
       8: return

  public static int putLong(java.nio.ByteBuffer, int, long);
    Code:
       0: getstatic     #99                 // Field org/apache/hadoop/hbase/util/ByteBufferUtils$ConverterHolder.BEST_CONVERTER:Lorg/apache/hadoop/hbase/util/ByteBufferUtils$Converter;
       3: aload_0
       4: iload_1
       5: lload_2
       6: invokevirtual #122                // Method org/apache/hadoop/hbase/util/ByteBufferUtils$Converter.putLong:(Ljava/nio/ByteBuffer;IJ)I
       9: ireturn

  public static void copyFromArrayToBuffer(java.nio.ByteBuffer, byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          40
       7: aload_1
       8: iload_2
       9: aload_0
      10: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      13: aload_0
      14: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      17: aload_0
      18: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      21: iadd
      22: iload_3
      23: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload_0
      27: aload_0
      28: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      31: iload_3
      32: iadd
      33: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: goto          79
      40: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      43: ifeq          71
      46: aload_1
      47: iload_2
      48: aload_0
      49: aload_0
      50: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      53: iload_3
      54: invokestatic  #123                // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:([BILjava/nio/ByteBuffer;II)V
      57: aload_0
      58: aload_0
      59: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      62: iload_3
      63: iadd
      64: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      67: pop
      68: goto          79
      71: aload_0
      72: aload_1
      73: iload_2
      74: iload_3
      75: invokevirtual #124                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      78: pop
      79: return

  public static void copyFromArrayToBuffer(java.nio.ByteBuffer, int, byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          27
       7: aload_2
       8: iload_3
       9: aload_0
      10: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      13: aload_0
      14: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      17: iload_1
      18: iadd
      19: iload         4
      21: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: goto          68
      27: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      30: ifeq          45
      33: aload_2
      34: iload_3
      35: aload_0
      36: iload_1
      37: iload         4
      39: invokestatic  #123                // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:([BILjava/nio/ByteBuffer;II)V
      42: goto          68
      45: aload_0
      46: invokevirtual #79                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      49: astore        5
      51: aload         5
      53: iload_1
      54: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      57: pop
      58: aload         5
      60: aload_2
      61: iload_3
      62: iload         4
      64: invokevirtual #124                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      67: pop
      68: return

  public static void copyFromBufferToArray(byte[], java.nio.ByteBuffer, int, int, int);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          27
       7: aload_1
       8: invokevirtual #27                 // Method java/nio/ByteBuffer.array:()[B
      11: iload_2
      12: aload_1
      13: invokevirtual #28                 // Method java/nio/ByteBuffer.arrayOffset:()I
      16: iadd
      17: aload_0
      18: iload_3
      19: iload         4
      21: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: goto          68
      27: getstatic     #19                 // Field UNSAFE_AVAIL:Z
      30: ifeq          45
      33: aload_1
      34: iload_2
      35: aload_0
      36: iload_3
      37: iload         4
      39: invokestatic  #125                // Method org/apache/hadoop/hbase/util/UnsafeAccess.copy:(Ljava/nio/ByteBuffer;I[BII)V
      42: goto          68
      45: aload_1
      46: invokevirtual #79                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      49: astore        5
      51: aload         5
      53: iload_2
      54: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      57: pop
      58: aload         5
      60: aload_0
      61: iload_3
      62: iload         4
      64: invokevirtual #126                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      67: pop
      68: return

  public static byte[] copyOfRange(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore_3
       4: iload_3
       5: ifge          39
       8: new           #103                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #54                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      19: iload_1
      20: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: ldc           #127                // String  >
      25: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_2
      29: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: iload_3
      40: newarray       byte
      42: astore        4
      44: aload         4
      46: aload_0
      47: iload_1
      48: iconst_0
      49: iload_3
      50: invokestatic  #114                // Method copyFromBufferToArray:([BLjava/nio/ByteBuffer;III)V
      53: aload         4
      55: areturn

  public static java.lang.String toStringBinary(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #54                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: iload_1
       9: aload_0
      10: invokevirtual #128                // Method java/nio/ByteBuffer.capacity:()I
      13: if_icmplt     21
      16: aload_3
      17: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: areturn
      21: iload_1
      22: iload_2
      23: iadd
      24: aload_0
      25: invokevirtual #128                // Method java/nio/ByteBuffer.capacity:()I
      28: if_icmple     38
      31: aload_0
      32: invokevirtual #128                // Method java/nio/ByteBuffer.capacity:()I
      35: iload_1
      36: isub
      37: istore_2
      38: iload_1
      39: istore        4
      41: iload         4
      43: iload_1
      44: iload_2
      45: iadd
      46: if_icmpge     152
      49: aload_0
      50: iload         4
      52: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
      55: sipush        255
      58: iand
      59: istore        5
      61: iload         5
      63: bipush        48
      65: if_icmplt     75
      68: iload         5
      70: bipush        57
      72: if_icmple     113
      75: iload         5
      77: bipush        65
      79: if_icmplt     89
      82: iload         5
      84: bipush        90
      86: if_icmple     113
      89: iload         5
      91: bipush        97
      93: if_icmplt     103
      96: iload         5
      98: bipush        122
     100: if_icmple     113
     103: ldc           #129                // String  `~!@#$%^&*()-_=+[]{}|;:'\",.<>/?
     105: iload         5
     107: invokevirtual #130                // Method java/lang/String.indexOf:(I)I
     110: iflt          124
     113: aload_3
     114: iload         5
     116: i2c
     117: invokevirtual #131                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: pop
     121: goto          146
     124: aload_3
     125: ldc           #132                // String \x%02X
     127: iconst_1
     128: anewarray     #133                // class java/lang/Object
     131: dup
     132: iconst_0
     133: iload         5
     135: invokestatic  #134                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: aastore
     139: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     142: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: iinc          4, 1
     149: goto          41
     152: aload_3
     153: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: areturn

  public static java.lang.String toStringBinary(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokevirtual #128                // Method java/nio/ByteBuffer.capacity:()I
       6: invokestatic  #136                // Method toStringBinary:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: invokestatic  #137                // Method org/apache/hadoop/hbase/util/UnsafeAvailChecker.isAvailable:()Z
       3: putstatic     #19                 // Field UNSAFE_AVAIL:Z
       6: invokestatic  #138                // Method org/apache/hadoop/hbase/util/UnsafeAvailChecker.unaligned:()Z
       9: putstatic     #139                // Field UNSAFE_UNALIGNED:Z
      12: return
}
