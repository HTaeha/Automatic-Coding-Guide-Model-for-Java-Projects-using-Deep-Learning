Compiled from "ImmutableBytesWritable.java"
public class org.apache.hadoop.hbase.io.ImmutableBytesWritable implements org.apache.hadoop.io.WritableComparable<org.apache.hadoop.hbase.io.ImmutableBytesWritable> {
  public org.apache.hadoop.hbase.io.ImmutableBytesWritable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.hbase.io.ImmutableBytesWritable(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #2                  // Method "<init>":([BII)V
       8: return

  public org.apache.hadoop.hbase.io.ImmutableBytesWritable(org.apache.hadoop.hbase.io.ImmutableBytesWritable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method get:()[B
       5: aload_1
       6: invokevirtual #4                  // Method getOffset:()I
       9: aload_1
      10: invokevirtual #5                  // Method getLength:()I
      13: invokespecial #2                  // Method "<init>":([BII)V
      16: return

  public org.apache.hadoop.hbase.io.ImmutableBytesWritable(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field bytes:[B
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field offset:I
      14: aload_0
      15: iload_3
      16: putfield      #8                  // Field length:I
      19: return

  public byte[] get();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Uninitialiized. Null constructor called w/o accompaying readFields invocation
      13: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #6                  // Field bytes:[B
      21: areturn

  public void set(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #12                 // Method set:([BII)V
       8: return

  public void set(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field bytes:[B
       5: aload_0
       6: iload_2
       7: putfield      #7                  // Field offset:I
      10: aload_0
      11: iload_3
      12: putfield      #8                  // Field length:I
      15: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Uninitialiized. Null constructor called w/o accompaying readFields invocation
      13: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field length:I
      21: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: ifnonnull     17
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Uninitialiized. Null constructor called w/o accompaying readFields invocation
      13: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field length:I
      21: ireturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #7                  // Field offset:I
       4: ireturn

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readInt:()I
       7: putfield      #8                  // Field length:I
      10: aload_0
      11: aload_0
      12: getfield      #8                  // Field length:I
      15: newarray       byte
      17: putfield      #6                  // Field bytes:[B
      20: aload_1
      21: aload_0
      22: getfield      #6                  // Field bytes:[B
      25: iconst_0
      26: aload_0
      27: getfield      #8                  // Field length:I
      30: invokeinterface #14,  4           // InterfaceMethod java/io/DataInput.readFully:([BII)V
      35: aload_0
      36: iconst_0
      37: putfield      #7                  // Field offset:I
      40: return

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field length:I
       5: invokeinterface #15,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      10: aload_1
      11: aload_0
      12: getfield      #6                  // Field bytes:[B
      15: aload_0
      16: getfield      #7                  // Field offset:I
      19: aload_0
      20: getfield      #8                  // Field length:I
      23: invokeinterface #16,  4           // InterfaceMethod java/io/DataOutput.write:([BII)V
      28: return

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #7                  // Field offset:I
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #7                  // Field offset:I
      12: aload_0
      13: getfield      #8                  // Field length:I
      16: iadd
      17: if_icmpge     38
      20: bipush        31
      22: iload_1
      23: imul
      24: aload_0
      25: getfield      #6                  // Field bytes:[B
      28: iload_2
      29: baload
      30: iadd
      31: istore_1
      32: iinc          2, 1
      35: goto          7
      38: iload_1
      39: ireturn

  public int compareTo(org.apache.hadoop.hbase.io.ImmutableBytesWritable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: aload_0
       5: getfield      #7                  // Field offset:I
       8: aload_0
       9: getfield      #8                  // Field length:I
      12: aload_1
      13: getfield      #6                  // Field bytes:[B
      16: aload_1
      17: getfield      #7                  // Field offset:I
      20: aload_1
      21: getfield      #8                  // Field length:I
      24: invokestatic  #17                 // Method org/apache/hadoop/io/WritableComparator.compareBytes:([BII[BII)I
      27: ireturn

  public int compareTo(byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: aload_0
       5: getfield      #7                  // Field offset:I
       8: aload_0
       9: getfield      #8                  // Field length:I
      12: aload_1
      13: iconst_0
      14: aload_1
      15: arraylength
      16: invokestatic  #17                 // Method org/apache/hadoop/io/WritableComparator.compareBytes:([BII[BII)I
      19: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #18                 // class "[B"
       4: ifeq          27
       7: aload_0
       8: aload_1
       9: checkcast     #18                 // class "[B"
      12: checkcast     #18                 // class "[B"
      15: invokevirtual #19                 // Method compareTo:([B)I
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: aload_1
      28: instanceof    #20                 // class org/apache/hadoop/hbase/io/ImmutableBytesWritable
      31: ifeq          51
      34: aload_0
      35: aload_1
      36: checkcast     #20                 // class org/apache/hadoop/hbase/io/ImmutableBytesWritable
      39: invokevirtual #21                 // Method compareTo:(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)I
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: ireturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: iconst_3
       5: aload_0
       6: getfield      #8                  // Field length:I
       9: imul
      10: invokespecial #23                 // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_1
      14: aload_0
      15: getfield      #7                  // Field offset:I
      18: aload_0
      19: getfield      #8                  // Field length:I
      22: iadd
      23: istore_2
      24: aload_0
      25: getfield      #7                  // Field offset:I
      28: istore_3
      29: iload_3
      30: iload_2
      31: if_icmpge     85
      34: aload_1
      35: bipush        32
      37: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: pop
      41: sipush        255
      44: aload_0
      45: getfield      #6                  // Field bytes:[B
      48: iload_3
      49: baload
      50: iand
      51: invokestatic  #25                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      54: astore        4
      56: aload         4
      58: invokevirtual #26                 // Method java/lang/String.length:()I
      61: iconst_2
      62: if_icmpge     72
      65: aload_1
      66: bipush        48
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: aload         4
      75: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: pop
      79: iinc          3, 1
      82: goto          29
      85: aload_1
      86: invokevirtual #28                 // Method java/lang/StringBuilder.length:()I
      89: ifle          100
      92: aload_1
      93: iconst_1
      94: invokevirtual #29                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
      97: goto          102
     100: ldc           #30                 // String
     102: areturn

  public static byte[][] toArray(java.util.List<byte[]>);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
       6: anewarray     #18                 // class "[B"
       9: astore_1
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      19: if_icmpge     41
      22: aload_1
      23: iload_2
      24: aload_0
      25: iload_2
      26: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #18                 // class "[B"
      34: aastore
      35: iinc          2, 1
      38: goto          12
      41: aload_1
      42: areturn

  public byte[] copyBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:[B
       4: aload_0
       5: getfield      #7                  // Field offset:I
       8: aload_0
       9: getfield      #7                  // Field offset:I
      12: aload_0
      13: getfield      #8                  // Field length:I
      16: iadd
      17: invokestatic  #33                 // Method java/util/Arrays.copyOfRange:([BII)[B
      20: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/hadoop/hbase/io/ImmutableBytesWritable
       5: invokevirtual #21                 // Method compareTo:(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #20                 // class org/apache/hadoop/hbase/io/ImmutableBytesWritable
       2: new           #34                 // class org/apache/hadoop/hbase/io/ImmutableBytesWritable$Comparator
       5: dup
       6: invokespecial #35                 // Method org/apache/hadoop/hbase/io/ImmutableBytesWritable$Comparator."<init>":()V
       9: invokestatic  #36                 // Method org/apache/hadoop/io/WritableComparator.define:(Ljava/lang/Class;Lorg/apache/hadoop/io/WritableComparator;)V
      12: return
}
