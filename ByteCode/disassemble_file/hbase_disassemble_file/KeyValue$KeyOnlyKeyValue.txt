Compiled from "KeyValue.java"
public class org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue extends org.apache.hadoop.hbase.KeyValue {
  public org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/KeyValue."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field rowLen:S
       9: return

  public org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #3                  // Method "<init>":([BII)V
       8: return

  public org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/KeyValue."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field rowLen:S
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field bytes:[B
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field length:I
      19: aload_0
      20: iload_2
      21: putfield      #6                  // Field offset:I
      24: aload_0
      25: aload_0
      26: getfield      #4                  // Field bytes:[B
      29: aload_0
      30: getfield      #6                  // Field offset:I
      33: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/Bytes.toShort:([BI)S
      36: putfield      #2                  // Field rowLen:S
      39: return

  public void set(org.apache.hadoop.hbase.KeyValue$KeyOnlyKeyValue);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #4                  // Field bytes:[B
       5: putfield      #4                  // Field bytes:[B
       8: aload_0
       9: aload_1
      10: getfield      #5                  // Field length:I
      13: putfield      #5                  // Field length:I
      16: aload_0
      17: aload_1
      18: getfield      #6                  // Field offset:I
      21: putfield      #6                  // Field offset:I
      24: aload_0
      25: aload_1
      26: getfield      #2                  // Field rowLen:S
      29: putfield      #2                  // Field rowLen:S
      32: return

  public void clear();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #2                  // Field rowLen:S
       5: aload_0
       6: aconst_null
       7: putfield      #4                  // Field bytes:[B
      10: aload_0
      11: iconst_0
      12: putfield      #6                  // Field offset:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field length:I
      20: return

  public int getKeyOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: ireturn

  public void setKey(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field bytes:[B
       5: aload_0
       6: iload_2
       7: putfield      #6                  // Field offset:I
      10: aload_0
      11: iload_3
      12: putfield      #5                  // Field length:I
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field bytes:[B
      20: aload_0
      21: getfield      #6                  // Field offset:I
      24: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/Bytes.toShort:([BI)S
      27: putfield      #2                  // Field rowLen:S
      30: return

  public byte[] getKey();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getKeyLength:()I
       4: istore_1
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field bytes:[B
      13: aload_0
      14: invokevirtual #9                  // Method getKeyOffset:()I
      17: aload_2
      18: iconst_0
      19: iload_1
      20: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_2
      24: areturn

  public byte[] getRowArray();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: areturn

  public int getRowOffset();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getKeyOffset:()I
       4: iconst_2
       5: iadd
       6: ireturn

  public byte[] getFamilyArray();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: areturn

  public byte getFamilyLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: invokevirtual #12                 // Method getFamilyOffset:()I
       8: iconst_1
       9: isub
      10: baload
      11: ireturn

  public int getFamilyOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: iconst_2
       5: iadd
       6: aload_0
       7: invokevirtual #13                 // Method getRowLength:()S
      10: iadd
      11: iconst_1
      12: iadd
      13: ireturn

  public byte[] getQualifierArray();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: areturn

  public int getQualifierLength();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method getRowLength:()S
       5: aload_0
       6: invokevirtual #14                 // Method getFamilyLength:()B
       9: invokespecial #15                 // Method getQualifierLength:(II)I
      12: ireturn

  public int getQualifierOffset();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getFamilyOffset:()I
       4: aload_0
       5: invokevirtual #14                 // Method getFamilyLength:()B
       8: iadd
       9: ireturn

  public int getKeyLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: ireturn

  public short getRowLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rowLen:S
       4: ireturn

  public byte getTypeByte();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: aload_0
       5: getfield      #6                  // Field offset:I
       8: aload_0
       9: invokevirtual #8                  // Method getKeyLength:()I
      12: iadd
      13: iconst_1
      14: isub
      15: baload
      16: ireturn

  public long getTimestamp();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getTimestampOffset:()I
       4: istore_1
       5: aload_0
       6: getfield      #4                  // Field bytes:[B
       9: iload_1
      10: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Bytes.toLong:([BI)J
      13: lreturn

  public int getTimestampOffset();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getKeyOffset:()I
       4: aload_0
       5: invokevirtual #8                  // Method getKeyLength:()I
       8: iadd
       9: bipush        9
      11: isub
      12: ireturn

  public byte[] getTagsArray();
    Code:
       0: getstatic     #20                 // Field org/apache/hadoop/hbase/HConstants.EMPTY_BYTE_ARRAY:[B
       3: areturn

  public int getTagsOffset();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] getValueArray();
    Code:
       0: new           #21                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #22                 // String KeyOnlyKeyValue does not work with values.
       6: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getValueOffset();
    Code:
       0: new           #21                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #22                 // String KeyOnlyKeyValue does not work with values.
       6: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getValueLength();
    Code:
       0: new           #21                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #22                 // String KeyOnlyKeyValue does not work with values.
       6: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getTagsLength();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bytes:[B
       4: ifnull        15
       7: aload_0
       8: getfield      #4                  // Field bytes:[B
      11: arraylength
      12: ifne          18
      15: ldc           #24                 // String empty
      17: areturn
      18: new           #25                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      25: aload_0
      26: getfield      #4                  // Field bytes:[B
      29: aload_0
      30: getfield      #6                  // Field offset:I
      33: aload_0
      34: invokevirtual #8                  // Method getKeyLength:()I
      37: invokestatic  #27                 // Method keyToString:([BII)Ljava/lang/String;
      40: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #29                 // String /vlen=0/mvcc=0
      45: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/apache/hadoop/hbase/KeyValue.hashCode:()I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #32                 // Method org/apache/hadoop/hbase/KeyValue.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public long heapSize();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/apache/hadoop/hbase/KeyValue.heapSize:()J
       4: ldc2_w        #34                 // long 2l
       7: ladd
       8: lreturn

  public int write(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: new           #36                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #37                 // String A reader should never return this type of a Cell
       6: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/apache/hadoop/hbase/KeyValue.clone:()Lorg/apache/hadoop/hbase/KeyValue;
       4: areturn
}
