Compiled from "Cipher.java"
public abstract class org.apache.hadoop.hbase.io.crypto.Cipher {
  public static final int KEY_LENGTH;

  public static final int KEY_LENGTH_BITS;

  public static final int BLOCK_SIZE;

  public static final int IV_LENGTH;

  public static final java.lang.String RNG_ALGORITHM_KEY;

  public static final java.lang.String RNG_PROVIDER_KEY;

  public org.apache.hadoop.hbase.io.crypto.Cipher(org.apache.hadoop.hbase.io.crypto.CipherProvider);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field provider:Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;
       9: return

  public org.apache.hadoop.hbase.io.crypto.CipherProvider getProvider();
    Code:
       0: aload_0
       1: getfield      #3                  // Field provider:Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;
       4: areturn

  public abstract java.lang.String getName();

  public abstract int getKeyLength();

  public abstract int getIvLength();

  public abstract java.security.Key getRandomKey();

  public abstract org.apache.hadoop.hbase.io.crypto.Encryptor getEncryptor();

  public abstract org.apache.hadoop.hbase.io.crypto.Decryptor getDecryptor();

  public abstract java.io.OutputStream createEncryptionStream(java.io.OutputStream, org.apache.hadoop.hbase.io.crypto.Context, byte[]) throws java.io.IOException;

  public abstract java.io.OutputStream createEncryptionStream(java.io.OutputStream, org.apache.hadoop.hbase.io.crypto.Encryptor) throws java.io.IOException;

  public abstract java.io.InputStream createDecryptionStream(java.io.InputStream, org.apache.hadoop.hbase.io.crypto.Context, byte[]) throws java.io.IOException;

  public abstract java.io.InputStream createDecryptionStream(java.io.InputStream, org.apache.hadoop.hbase.io.crypto.Decryptor) throws java.io.IOException;
}
