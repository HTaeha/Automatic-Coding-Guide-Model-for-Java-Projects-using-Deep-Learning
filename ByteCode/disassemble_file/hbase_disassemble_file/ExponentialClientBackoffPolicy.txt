Compiled from "ExponentialClientBackoffPolicy.java"
public class org.apache.hadoop.hbase.client.backoff.ExponentialClientBackoffPolicy implements org.apache.hadoop.hbase.client.backoff.ClientBackoffPolicy {
  public static final long DEFAULT_MAX_BACKOFF;

  public static final java.lang.String MAX_BACKOFF_KEY;

  public org.apache.hadoop.hbase.client.backoff.ExponentialClientBackoffPolicy(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #3                  // String hbase.client.exponential-backoff.max
       8: ldc2_w        #4                  // long 300000l
      11: invokevirtual #6                  // Method org/apache/hadoop/conf/Configuration.getLong:(Ljava/lang/String;J)J
      14: putfield      #7                  // Field maxBackoff:J
      17: aload_0
      18: aload_1
      19: ldc           #9                  // String hbase.heap.occupancy.low_water_mark
      21: ldc           #10                 // float 0.95f
      23: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      26: putfield      #12                 // Field heapOccupancyLowWatermark:F
      29: aload_0
      30: aload_1
      31: ldc           #13                 // String hbase.heap.occupancy.high_water_mark
      33: ldc           #14                 // float 0.98f
      35: invokevirtual #11                 // Method org/apache/hadoop/conf/Configuration.getFloat:(Ljava/lang/String;F)F
      38: putfield      #15                 // Field heapOccupancyHighWatermark:F
      41: return

  public long getBackoffTime(org.apache.hadoop.hbase.ServerName, byte[], org.apache.hadoop.hbase.client.backoff.ServerStatistics);
    Code:
       0: aload_3
       1: ifnonnull     6
       4: lconst_0
       5: lreturn
       6: aload_3
       7: aload_2
       8: invokevirtual #16                 // Method org/apache/hadoop/hbase/client/backoff/ServerStatistics.getStatsForRegion:([B)Lorg/apache/hadoop/hbase/client/backoff/ServerStatistics$RegionStatistics;
      11: astore        4
      13: aload         4
      15: ifnonnull     20
      18: lconst_0
      19: lreturn
      20: aload         4
      22: invokevirtual #17                 // Method org/apache/hadoop/hbase/client/backoff/ServerStatistics$RegionStatistics.getMemStoreLoadPercent:()I
      25: i2d
      26: ldc2_w        #18                 // double 100.0d
      29: ddiv
      30: dstore        5
      32: aload         4
      34: invokevirtual #20                 // Method org/apache/hadoop/hbase/client/backoff/ServerStatistics$RegionStatistics.getHeapOccupancyPercent:()I
      37: i2f
      38: ldc           #21                 // float 100.0f
      40: fdiv
      41: fstore        7
      43: aload         4
      45: invokevirtual #22                 // Method org/apache/hadoop/hbase/client/backoff/ServerStatistics$RegionStatistics.getCompactionPressure:()I
      48: i2f
      49: ldc           #21                 // float 100.0f
      51: fdiv
      52: fstore        8
      54: fload         7
      56: aload_0
      57: getfield      #12                 // Field heapOccupancyLowWatermark:F
      60: fcmpl
      61: iflt          107
      64: fload         7
      66: aload_0
      67: getfield      #15                 // Field heapOccupancyHighWatermark:F
      70: fcmpl
      71: ifle          80
      74: aload_0
      75: getfield      #15                 // Field heapOccupancyHighWatermark:F
      78: fstore        7
      80: dload         5
      82: fload         7
      84: f2d
      85: aload_0
      86: getfield      #12                 // Field heapOccupancyLowWatermark:F
      89: f2d
      90: aload_0
      91: getfield      #15                 // Field heapOccupancyHighWatermark:F
      94: f2d
      95: ldc2_w        #23                 // double 0.1d
      98: dconst_1
      99: invokestatic  #25                 // Method scale:(DDDDD)D
     102: invokestatic  #26                 // Method java/lang/Math.max:(DD)D
     105: dstore        5
     107: dload         5
     109: fload         8
     111: f2d
     112: invokestatic  #26                 // Method java/lang/Math.max:(DD)D
     115: dstore        5
     117: dload         5
     119: ldc2_w        #27                 // double 4.0d
     122: invokestatic  #29                 // Method java/lang/Math.pow:(DD)D
     125: dstore        9
     127: dload         9
     129: dconst_1
     130: dcmpl
     131: ifle          137
     134: dconst_1
     135: dstore        9
     137: dload         9
     139: aload_0
     140: getfield      #7                  // Field maxBackoff:J
     143: l2d
     144: dmul
     145: d2l
     146: lreturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/hadoop/hbase/client/backoff/ExponentialClientBackoffPolicy
       2: invokestatic  #36                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #37                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
