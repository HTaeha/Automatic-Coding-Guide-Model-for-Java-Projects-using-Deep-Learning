Compiled from "LoadTestDataGeneratorWithACL.java"
public class org.apache.hadoop.hbase.util.test.LoadTestDataGeneratorWithACL extends org.apache.hadoop.hbase.util.MultiThreadedAction$DefaultDataGenerator {
  public org.apache.hadoop.hbase.util.test.LoadTestDataGeneratorWithACL(int, int, int, int, byte[]...);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #1                  // Method org/apache/hadoop/hbase/util/MultiThreadedAction$DefaultDataGenerator."<init>":(IIII[[B)V
      11: aload_0
      12: aconst_null
      13: putfield      #2                  // Field userNames:[Ljava/lang/String;
      16: aload_0
      17: bipush        100
      19: putfield      #3                  // Field specialPermCellInsertionFactor:I
      22: return

  public void initialize(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/hadoop/hbase/util/MultiThreadedAction$DefaultDataGenerator.initialize:([Ljava/lang/String;)V
       5: aload_1
       6: arraylength
       7: iconst_3
       8: if_icmpeq     21
      11: new           #5                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #6                  // String LoadTestDataGeneratorWithACL can have 1st arguement which would be super user, the 2nd argument would be the user list and the 3rd argument should be the factor representing the row keys for which only write ACLs will be added.
      17: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: iconst_1
      23: aaload
      24: astore_2
      25: aload_0
      26: aload_2
      27: ldc           #9                  // String ,
      29: invokevirtual #10                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      32: putfield      #2                  // Field userNames:[Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: iconst_2
      38: aaload
      39: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      42: putfield      #3                  // Field specialPermCellInsertionFactor:I
      45: return

  public org.apache.hadoop.hbase.client.Mutation beforeMutate(long, org.apache.hadoop.hbase.client.Mutation) throws java.io.IOException;
    Code:
       0: aload_3
       1: instanceof    #12                 // class org/apache/hadoop/hbase/client/Delete
       4: ifne          141
       7: aload_0
       8: getfield      #2                  // Field userNames:[Ljava/lang/String;
      11: ifnull        141
      14: aload_0
      15: getfield      #2                  // Field userNames:[Ljava/lang/String;
      18: arraylength
      19: ifle          141
      22: lload_1
      23: l2i
      24: aload_0
      25: getfield      #2                  // Field userNames:[Ljava/lang/String;
      28: arraylength
      29: irem
      30: istore        4
      32: lload_1
      33: l2i
      34: aload_0
      35: getfield      #3                  // Field specialPermCellInsertionFactor:I
      38: irem
      39: ifne          112
      42: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      45: invokeinterface #14,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      50: ifeq          80
      53: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      56: new           #15                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #17                 // String Adding special perm
      65: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: lload_1
      69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #21,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      80: aload_3
      81: aload_0
      82: getfield      #2                  // Field userNames:[Ljava/lang/String;
      85: iload         4
      87: aaload
      88: new           #22                 // class org/apache/hadoop/hbase/security/access/Permission
      91: dup
      92: iconst_1
      93: anewarray     #23                 // class org/apache/hadoop/hbase/security/access/Permission$Action
      96: dup
      97: iconst_0
      98: getstatic     #24                 // Field org/apache/hadoop/hbase/security/access/Permission$Action.WRITE:Lorg/apache/hadoop/hbase/security/access/Permission$Action;
     101: aastore
     102: invokespecial #25                 // Method org/apache/hadoop/hbase/security/access/Permission."<init>":([Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
     105: invokevirtual #26                 // Method org/apache/hadoop/hbase/client/Mutation.setACL:(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission;)Lorg/apache/hadoop/hbase/client/Mutation;
     108: pop
     109: goto          141
     112: aload_3
     113: aload_0
     114: getfield      #2                  // Field userNames:[Ljava/lang/String;
     117: iload         4
     119: aaload
     120: new           #22                 // class org/apache/hadoop/hbase/security/access/Permission
     123: dup
     124: iconst_1
     125: anewarray     #23                 // class org/apache/hadoop/hbase/security/access/Permission$Action
     128: dup
     129: iconst_0
     130: getstatic     #27                 // Field org/apache/hadoop/hbase/security/access/Permission$Action.READ:Lorg/apache/hadoop/hbase/security/access/Permission$Action;
     133: aastore
     134: invokespecial #25                 // Method org/apache/hadoop/hbase/security/access/Permission."<init>":([Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
     137: invokevirtual #26                 // Method org/apache/hadoop/hbase/client/Mutation.setACL:(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission;)Lorg/apache/hadoop/hbase/client/Mutation;
     140: pop
     141: aload_3
     142: areturn

  static {};
    Code:
       0: ldc           #8                  // class org/apache/hadoop/hbase/util/test/LoadTestDataGeneratorWithACL
       2: invokestatic  #28                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
