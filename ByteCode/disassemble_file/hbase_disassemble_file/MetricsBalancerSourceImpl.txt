Compiled from "MetricsBalancerSourceImpl.java"
public class org.apache.hadoop.hbase.master.balancer.MetricsBalancerSourceImpl extends org.apache.hadoop.hbase.metrics.BaseSourceImpl implements org.apache.hadoop.hbase.master.balancer.MetricsBalancerSource {
  public org.apache.hadoop.hbase.master.balancer.MetricsBalancerSourceImpl();
    Code:
       0: aload_0
       1: ldc           #2                  // String Balancer
       3: ldc           #3                  // String Metrics about HBase master balancer
       5: ldc           #4                  // String master
       7: ldc           #5                  // String Master,sub=Balancer
       9: invokespecial #6                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public org.apache.hadoop.hbase.master.balancer.MetricsBalancerSourceImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #7                  // Method org/apache/hadoop/hbase/metrics/BaseSourceImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: iconst_1
      11: invokevirtual #8                  // Method updateBalancerStatus:(Z)V
      14: return

  public void init();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       5: ldc           #10                 // String balancerCluster
       7: invokevirtual #11                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newTimeHistogram:(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MutableTimeHistogram;
      10: putfield      #12                 // Field blanceClusterHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
      13: aload_0
      14: aload_0
      15: getfield      #9                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      18: ldc           #13                 // String miscInvocationCount
      20: ldc           #14                 // String
      22: lconst_0
      23: invokevirtual #15                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.newCounter:(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      26: putfield      #16                 // Field miscCount:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
      29: return

  public void updateBalanceCluster(long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field blanceClusterHisto:Lorg/apache/hadoop/metrics2/MetricHistogram;
       4: lload_1
       5: invokeinterface #17,  3           // InterfaceMethod org/apache/hadoop/metrics2/MetricHistogram.add:(J)V
      10: return

  public void incrMiscInvocations();
    Code:
       0: aload_0
       1: getfield      #16                 // Field miscCount:Lorg/apache/hadoop/metrics2/lib/MutableFastCounter;
       4: invokevirtual #18                 // Method org/apache/hadoop/metrics2/lib/MutableFastCounter.incr:()V
       7: return

  public void updateBalancerStatus(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field metricsRegistry:Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
       4: ldc           #19                 // String isBalancerActive
       6: ldc           #14                 // String
       8: iload_1
       9: invokestatic  #20                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      12: iconst_1
      13: invokevirtual #21                 // Method org/apache/hadoop/metrics2/lib/DynamicMetricsRegistry.tag:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/hadoop/metrics2/lib/DynamicMetricsRegistry;
      16: pop
      17: return
}
