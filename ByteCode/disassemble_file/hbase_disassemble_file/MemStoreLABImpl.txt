Compiled from "MemStoreLABImpl.java"
public class org.apache.hadoop.hbase.regionserver.MemStoreLABImpl implements org.apache.hadoop.hbase.regionserver.MemStoreLAB {
  static final org.slf4j.Logger LOG;

  java.util.Set<java.lang.Integer> chunks;

  public org.apache.hadoop.hbase.regionserver.MemStoreLABImpl();
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/hadoop/conf/Configuration
       4: dup
       5: invokespecial #2                  // Method org/apache/hadoop/conf/Configuration."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/apache/hadoop/conf/Configuration;)V
      11: return

  public org.apache.hadoop.hbase.regionserver.MemStoreLABImpl(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #7                  // Field currChunk:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      23: putfield      #10                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: aload_0
      27: new           #11                 // class java/util/concurrent/ConcurrentSkipListSet
      30: dup
      31: invokespecial #12                 // Method java/util/concurrent/ConcurrentSkipListSet."<init>":()V
      34: putfield      #13                 // Field chunks:Ljava/util/Set;
      37: aload_0
      38: iconst_0
      39: putfield      #14                 // Field closed:Z
      42: aload_0
      43: new           #15                 // class java/util/concurrent/atomic/AtomicBoolean
      46: dup
      47: iconst_0
      48: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      51: putfield      #17                 // Field reclaimed:Ljava/util/concurrent/atomic/AtomicBoolean;
      54: aload_0
      55: new           #18                 // class java/util/concurrent/atomic/AtomicInteger
      58: dup
      59: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      62: putfield      #20                 // Field openScannerCount:Ljava/util/concurrent/atomic/AtomicInteger;
      65: aload_0
      66: aload_1
      67: ldc           #22                 // String hbase.hregion.memstore.mslab.chunksize
      69: ldc           #23                 // int 2097152
      71: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      74: putfield      #25                 // Field dataChunkSize:I
      77: aload_0
      78: aload_1
      79: ldc           #26                 // String hbase.hregion.memstore.mslab.max.allocation
      81: ldc           #27                 // int 262144
      83: invokevirtual #24                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      86: putfield      #28                 // Field maxAlloc:I
      89: aload_0
      90: invokestatic  #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getInstance:()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      93: putfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      96: aload_0
      97: getfield      #28                 // Field maxAlloc:I
     100: aload_0
     101: getfield      #25                 // Field dataChunkSize:I
     104: if_icmpgt     111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ldc           #31                 // String hbase.hregion.memstore.mslab.max.allocation must be less than hbase.hregion.memstore.mslab.chunksize
     114: invokestatic  #32                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     117: aload_0
     118: getstatic     #33                 // Field org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType.CHUNK_MAP:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
     121: putfield      #34                 // Field idxType:Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
     124: return

  public org.apache.hadoop.hbase.Cell copyCellInto(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_1
       1: instanceof    #35                 // class org/apache/hadoop/hbase/ByteBufferExtendedCell
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #35                 // class org/apache/hadoop/hbase/ByteBufferExtendedCell
      12: aload_0
      13: getfield      #28                 // Field maxAlloc:I
      16: invokespecial #36                 // Method copyBBECellInto:(Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;I)Lorg/apache/hadoop/hbase/Cell;
      19: goto          31
      22: aload_0
      23: aload_1
      24: aload_0
      25: getfield      #28                 // Field maxAlloc:I
      28: invokespecial #37                 // Method copyCellInto:(Lorg/apache/hadoop/hbase/Cell;I)Lorg/apache/hadoop/hbase/Cell;
      31: areturn

  public org.apache.hadoop.hbase.Cell forceCopyOfBigCellInto(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method org/apache/hadoop/hbase/regionserver/Segment.getCellLength:(Lorg/apache/hadoop/hbase/Cell;)I
       4: istore_2
       5: iinc          2, 4
       8: iload_2
       9: iflt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #39                 // String negative size
      19: invokestatic  #32                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      22: iload_2
      23: aload_0
      24: getfield      #25                 // Field dataChunkSize:I
      27: if_icmpgt     40
      30: aload_0
      31: aload_1
      32: aload_0
      33: getfield      #25                 // Field dataChunkSize:I
      36: invokespecial #37                 // Method copyCellInto:(Lorg/apache/hadoop/hbase/Cell;I)Lorg/apache/hadoop/hbase/Cell;
      39: areturn
      40: aload_0
      41: iload_2
      42: invokevirtual #40                 // Method getNewExternalChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      45: astore_3
      46: aload_3
      47: iload_2
      48: invokevirtual #41                 // Method org/apache/hadoop/hbase/regionserver/Chunk.alloc:(I)I
      51: istore        4
      53: aload_1
      54: aload_3
      55: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/Chunk.getData:()Ljava/nio/ByteBuffer;
      58: iload         4
      60: iload_2
      61: invokestatic  #43                 // Method copyToChunkCell:(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;II)Lorg/apache/hadoop/hbase/Cell;
      64: areturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field closed:Z
       5: aload_0
       6: getfield      #20                 // Field openScannerCount:Ljava/util/concurrent/atomic/AtomicInteger;
       9: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      12: istore_1
      13: iload_1
      14: ifne          21
      17: aload_0
      18: invokespecial #62                 // Method recycleChunks:()V
      21: return

  public void incScannerCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field openScannerCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public void decScannerCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field openScannerCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: aload_0
       9: getfield      #14                 // Field closed:Z
      12: ifeq          23
      15: iload_1
      16: ifne          23
      19: aload_0
      20: invokespecial #62                 // Method recycleChunks:()V
      23: return

  public org.apache.hadoop.hbase.regionserver.Chunk getNewExternalChunk(org.apache.hadoop.hbase.regionserver.ChunkCreator$ChunkType);
    Code:
       0: getstatic     #77                 // Field org/apache/hadoop/hbase/regionserver/MemStoreLABImpl$1.$SwitchMap$org$apache$hadoop$hbase$regionserver$ChunkCreator$ChunkType:[I
       3: aload_1
       4: invokevirtual #78                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 36
                     3: 64
               default: 64
          }
      36: aload_0
      37: getfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      40: aload_1
      41: invokevirtual #79                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getChunk:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      44: astore_2
      45: aload_0
      46: getfield      #13                 // Field chunks:Ljava/util/Set;
      49: aload_2
      50: invokevirtual #74                 // Method org/apache/hadoop/hbase/regionserver/Chunk.getId:()I
      53: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokeinterface #76,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_2
      63: areturn
      64: aconst_null
      65: areturn

  public org.apache.hadoop.hbase.regionserver.Chunk getNewExternalChunk(int);
    Code:
       0: iload_1
       1: invokestatic  #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getInstance:()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
       4: pop
       5: iconst_4
       6: iadd
       7: istore_2
       8: iload_2
       9: invokestatic  #29                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getInstance:()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      12: invokevirtual #80                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getChunkSize:()I
      15: if_icmpgt     26
      18: aload_0
      19: getstatic     #81                 // Field org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType.DATA_CHUNK:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
      22: invokevirtual #82                 // Method getNewExternalChunk:(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      25: areturn
      26: aload_0
      27: getfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      30: iload_1
      31: invokevirtual #83                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getJumboChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      34: astore_3
      35: aload_0
      36: getfield      #13                 // Field chunks:Ljava/util/Set;
      39: aload_3
      40: invokevirtual #74                 // Method org/apache/hadoop/hbase/regionserver/Chunk.getId:()I
      43: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokeinterface #76,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_3
      53: areturn

  public boolean isOnHeap();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method isOffHeap:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isOffHeap();
    Code:
       0: aload_0
       1: getfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
       4: invokevirtual #85                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.isOffheap:()Z
       7: ireturn

  org.apache.hadoop.hbase.regionserver.Chunk getCurrentChunk();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currChunk:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #69                 // class org/apache/hadoop/hbase/regionserver/Chunk
      10: areturn

  java.util.concurrent.BlockingQueue<org.apache.hadoop.hbase.regionserver.Chunk> getPooledChunks();
    Code:
       0: new           #86                 // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: invokespecial #87                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #13                 // Field chunks:Ljava/util/Set;
      12: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          75
      27: aload_2
      28: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #91                 // class java/lang/Integer
      36: astore_3
      37: aload_0
      38: getfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      41: aload_3
      42: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
      45: invokevirtual #93                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.getChunk:(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
      48: astore        4
      50: aload         4
      52: ifnull        72
      55: aload         4
      57: invokevirtual #94                 // Method org/apache/hadoop/hbase/regionserver/Chunk.isFromPool:()Z
      60: ifeq          72
      63: aload_1
      64: aload         4
      66: invokeinterface #95,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          18
      75: aload_1
      76: areturn

  java.lang.Integer getNumOfChunksReturnedToPool();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field chunks:Ljava/util/Set;
       6: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          51
      21: aload_2
      22: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #91                 // class java/lang/Integer
      30: astore_3
      31: aload_0
      32: getfield      #30                 // Field chunkCreator:Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
      35: aload_3
      36: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
      39: invokevirtual #96                 // Method org/apache/hadoop/hbase/regionserver/ChunkCreator.isChunkInPool:(I)Z
      42: ifeq          48
      45: iinc          1, 1
      48: goto          12
      51: iload_1
      52: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: areturn

  static {};
    Code:
       0: ldc           #97                 // class org/apache/hadoop/hbase/regionserver/MemStoreLABImpl
       2: invokestatic  #98                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #99                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
