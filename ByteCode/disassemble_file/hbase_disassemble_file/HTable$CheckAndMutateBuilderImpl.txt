Compiled from "HTable.java"
class org.apache.hadoop.hbase.client.HTable$CheckAndMutateBuilderImpl implements org.apache.hadoop.hbase.client.Table$CheckAndMutateBuilder {
  final org.apache.hadoop.hbase.client.HTable this$0;

  org.apache.hadoop.hbase.client.HTable$CheckAndMutateBuilderImpl(org.apache.hadoop.hbase.client.HTable, byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HTable;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: ldc           #3                  // String row is null
      13: invokestatic  #4                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #5                  // class "[B"
      19: putfield      #6                  // Field row:[B
      22: aload_0
      23: aload_3
      24: ldc           #7                  // String family is null
      26: invokestatic  #4                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #5                  // class "[B"
      32: putfield      #8                  // Field family:[B
      35: return

  public org.apache.hadoop.hbase.client.Table$CheckAndMutateBuilder qualifier(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #9                  // String qualifier is null. Consider using an empty byte array, or just do not call this method if you want a null qualifier
       4: invokestatic  #4                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #5                  // class "[B"
      10: putfield      #10                 // Field qualifier:[B
      13: aload_0
      14: areturn

  public org.apache.hadoop.hbase.client.Table$CheckAndMutateBuilder timeRange(org.apache.hadoop.hbase.io.TimeRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.client.Table$CheckAndMutateBuilder ifNotExists();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/apache/hadoop/hbase/CompareOperator.EQUAL:Lorg/apache/hadoop/hbase/CompareOperator;
       4: putfield      #13                 // Field op:Lorg/apache/hadoop/hbase/CompareOperator;
       7: aload_0
       8: aconst_null
       9: putfield      #14                 // Field value:[B
      12: aload_0
      13: areturn

  public org.apache.hadoop.hbase.client.Table$CheckAndMutateBuilder ifMatches(org.apache.hadoop.hbase.CompareOperator, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #15                 // String compareOp is null
       4: invokestatic  #4                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #16                 // class org/apache/hadoop/hbase/CompareOperator
      10: putfield      #13                 // Field op:Lorg/apache/hadoop/hbase/CompareOperator;
      13: aload_0
      14: aload_2
      15: ldc           #17                 // String value is null
      17: invokestatic  #4                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class "[B"
      23: putfield      #14                 // Field value:[B
      26: aload_0
      27: areturn

  public boolean thenPut(org.apache.hadoop.hbase.client.Put) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HTable;
       4: aload_1
       5: invokestatic  #19                 // Method org/apache/hadoop/hbase/client/HTable.access$000:(Lorg/apache/hadoop/hbase/client/HTable;Lorg/apache/hadoop/hbase/client/Put;)V
       8: aload_0
       9: invokespecial #20                 // Method preCheck:()V
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HTable;
      16: aload_0
      17: getfield      #6                  // Field row:[B
      20: aload_0
      21: getfield      #8                  // Field family:[B
      24: aload_0
      25: getfield      #10                 // Field qualifier:[B
      28: aload_0
      29: getfield      #13                 // Field op:Lorg/apache/hadoop/hbase/CompareOperator;
      32: invokevirtual #21                 // Method org/apache/hadoop/hbase/CompareOperator.name:()Ljava/lang/String;
      35: aload_0
      36: getfield      #14                 // Field value:[B
      39: aload_0
      40: getfield      #11                 // Field timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
      43: aload_1
      44: invokestatic  #22                 // Method org/apache/hadoop/hbase/client/HTable.access$100:(Lorg/apache/hadoop/hbase/client/HTable;[B[B[BLjava/lang/String;[BLorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Put;)Z
      47: ireturn

  public boolean thenDelete(org.apache.hadoop.hbase.client.Delete) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method preCheck:()V
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HTable;
       8: aload_0
       9: getfield      #6                  // Field row:[B
      12: aload_0
      13: getfield      #8                  // Field family:[B
      16: aload_0
      17: getfield      #10                 // Field qualifier:[B
      20: aload_0
      21: getfield      #13                 // Field op:Lorg/apache/hadoop/hbase/CompareOperator;
      24: invokevirtual #21                 // Method org/apache/hadoop/hbase/CompareOperator.name:()Ljava/lang/String;
      27: aload_0
      28: getfield      #14                 // Field value:[B
      31: aload_0
      32: getfield      #11                 // Field timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
      35: aload_1
      36: invokestatic  #23                 // Method org/apache/hadoop/hbase/client/HTable.access$200:(Lorg/apache/hadoop/hbase/client/HTable;[B[B[BLjava/lang/String;[BLorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Delete;)Z
      39: ireturn

  public boolean thenMutate(org.apache.hadoop.hbase.client.RowMutations) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method preCheck:()V
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/hadoop/hbase/client/HTable;
       8: aload_0
       9: getfield      #6                  // Field row:[B
      12: aload_0
      13: getfield      #8                  // Field family:[B
      16: aload_0
      17: getfield      #10                 // Field qualifier:[B
      20: aload_0
      21: getfield      #13                 // Field op:Lorg/apache/hadoop/hbase/CompareOperator;
      24: invokevirtual #21                 // Method org/apache/hadoop/hbase/CompareOperator.name:()Ljava/lang/String;
      27: aload_0
      28: getfield      #14                 // Field value:[B
      31: aload_0
      32: getfield      #11                 // Field timeRange:Lorg/apache/hadoop/hbase/io/TimeRange;
      35: aload_1
      36: invokestatic  #24                 // Method org/apache/hadoop/hbase/client/HTable.access$300:(Lorg/apache/hadoop/hbase/client/HTable;[B[B[BLjava/lang/String;[BLorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
      39: ireturn
}
