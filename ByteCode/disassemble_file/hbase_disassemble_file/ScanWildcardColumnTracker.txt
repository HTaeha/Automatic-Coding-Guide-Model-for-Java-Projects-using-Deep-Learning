Compiled from "ScanWildcardColumnTracker.java"
public class org.apache.hadoop.hbase.regionserver.querymatcher.ScanWildcardColumnTracker implements org.apache.hadoop.hbase.regionserver.querymatcher.ColumnTracker {
  public org.apache.hadoop.hbase.regionserver.querymatcher.ScanWildcardColumnTracker(int, int, long, org.apache.hadoop.hbase.CellComparator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field currentCount:I
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field maxVersions:I
      19: aload_0
      20: iload_1
      21: putfield      #5                  // Field minVersions:I
      24: aload_0
      25: lload_3
      26: putfield      #6                  // Field oldestStamp:J
      29: aload_0
      30: aload         5
      32: putfield      #7                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      35: return

  public org.apache.hadoop.hbase.regionserver.querymatcher.ScanQueryMatcher$MatchCode checkColumn(org.apache.hadoop.hbase.Cell, byte) throws java.io.IOException;
    Code:
       0: getstatic     #8                  // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
       3: areturn

  public org.apache.hadoop.hbase.regionserver.querymatcher.ScanQueryMatcher$MatchCode checkVersions(org.apache.hadoop.hbase.Cell, long, byte, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
       4: ifnonnull     29
       7: aload_0
       8: aload_1
       9: invokespecial #9                  // Method resetCell:(Lorg/apache/hadoop/hbase/Cell;)V
      12: iload         5
      14: ifeq          21
      17: getstatic     #8                  // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      20: areturn
      21: aload_0
      22: iload         4
      24: lload_2
      25: invokespecial #10                 // Method checkVersion:(BJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      28: areturn
      29: aload_0
      30: getfield      #7                  // Field comparator:Lorg/apache/hadoop/hbase/CellComparator;
      33: aload_1
      34: aload_0
      35: getfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
      38: invokeinterface #11,  3           // InterfaceMethod org/apache/hadoop/hbase/CellComparator.compareQualifiers:(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
      43: istore        6
      45: iload         6
      47: ifne          81
      50: iload         5
      52: ifeq          59
      55: getstatic     #8                  // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      58: areturn
      59: aload_0
      60: lload_2
      61: iload         4
      63: invokespecial #12                 // Method sameAsPreviousTSAndType:(JB)Z
      66: ifeq          73
      69: getstatic     #13                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.SKIP:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      72: areturn
      73: aload_0
      74: iload         4
      76: lload_2
      77: invokespecial #10                 // Method checkVersion:(BJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
      80: areturn
      81: aload_0
      82: invokespecial #14                 // Method resetTSAndType:()V
      85: iload         6
      87: ifle          112
      90: aload_0
      91: aload_1
      92: invokespecial #9                  // Method resetCell:(Lorg/apache/hadoop/hbase/Cell;)V
      95: iload         5
      97: ifeq          104
     100: getstatic     #8                  // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.INCLUDE:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     103: areturn
     104: aload_0
     105: iload         4
     107: lload_2
     108: invokespecial #10                 // Method checkVersion:(BJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
     111: areturn
     112: new           #15                 // class java/io/IOException
     115: dup
     116: new           #16                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #18                 // String ScanWildcardColumnTracker.checkColumn ran into a column actually smaller than the previous column:
     125: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_1
     129: invokestatic  #20                 // Method org/apache/hadoop/hbase/CellUtil.cloneQualifier:(Lorg/apache/hadoop/hbase/Cell;)[B
     132: invokestatic  #21                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
     135: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #23                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     144: athrow

  public void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
       5: aload_0
       6: invokespecial #14                 // Method resetTSAndType:()V
       9: return

  public org.apache.hadoop.hbase.regionserver.querymatcher.ColumnCount getColumnHint();
    Code:
       0: aconst_null
       1: areturn

  public boolean done();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hbase.regionserver.querymatcher.ScanQueryMatcher$MatchCode getNextRowOrNextColumn(org.apache.hadoop.hbase.Cell);
    Code:
       0: getstatic     #25                 // Field org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode.SEEK_NEXT_COL:Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
       3: areturn

  public void beforeShipped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
      12: invokestatic  #33                 // Method org/apache/hadoop/hbase/KeyValueUtil.toNewKeyCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
      15: putfield      #2                  // Field columnCell:Lorg/apache/hadoop/hbase/Cell;
      18: return

  public boolean isDone(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field minVersions:I
       4: ifgt          19
       7: aload_0
       8: lload_1
       9: invokespecial #26                 // Method isExpired:(J)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
}
