Compiled from "HFile.java"
public interface org.apache.hadoop.hbase.io.hfile.HFile$Reader extends java.io.Closeable,org.apache.hadoop.hbase.io.hfile.HFile$CachingBlockReader {
  public abstract java.lang.String getName();

  public abstract org.apache.hadoop.hbase.CellComparator getComparator();

  public abstract org.apache.hadoop.hbase.io.hfile.HFileScanner getScanner(boolean, boolean, boolean);

  public abstract org.apache.hadoop.hbase.io.hfile.HFileBlock getMetaBlock(java.lang.String, boolean) throws java.io.IOException;

  public abstract java.util.Map<byte[], byte[]> loadFileInfo() throws java.io.IOException;

  public abstract java.util.Optional<org.apache.hadoop.hbase.Cell> getLastKey();

  public abstract java.util.Optional<org.apache.hadoop.hbase.Cell> midKey() throws java.io.IOException;

  public abstract long length();

  public abstract long getEntries();

  public abstract java.util.Optional<org.apache.hadoop.hbase.Cell> getFirstKey();

  public abstract long indexSize();

  public abstract java.util.Optional<byte[]> getFirstRowKey();

  public abstract java.util.Optional<byte[]> getLastRowKey();

  public abstract org.apache.hadoop.hbase.io.hfile.FixedFileTrailer getTrailer();

  public abstract org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader getDataBlockIndexReader();

  public abstract org.apache.hadoop.hbase.io.hfile.HFileScanner getScanner(boolean, boolean);

  public abstract org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompressionAlgorithm();

  public abstract java.io.DataInput getGeneralBloomFilterMetadata() throws java.io.IOException;

  public abstract java.io.DataInput getDeleteBloomFilterMetadata() throws java.io.IOException;

  public abstract org.apache.hadoop.fs.Path getPath();

  public abstract void close(boolean) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getDataBlockEncoding();

  public abstract boolean hasMVCCInfo();

  public abstract org.apache.hadoop.hbase.io.hfile.HFileContext getFileContext();

  public abstract boolean isPrimaryReplicaReader();

  public abstract boolean shouldIncludeMemStoreTS();

  public abstract boolean isDecodeMemStoreTS();

  public abstract org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getEffectiveEncodingInCache(boolean);

  public abstract org.apache.hadoop.hbase.io.hfile.HFileBlock$FSReader getUncachedBlockReader();

  public abstract boolean prefetchComplete();

  public abstract void unbufferStream();
}
