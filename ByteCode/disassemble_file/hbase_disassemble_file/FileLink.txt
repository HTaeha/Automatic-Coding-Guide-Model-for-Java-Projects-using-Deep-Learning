Compiled from "FileLink.java"
public class org.apache.hadoop.hbase.io.FileLink {
  public static final java.lang.String BACK_REFERENCES_DIRECTORY_PREFIX;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.hbase.io.FileLink();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      14: return

  public org.apache.hadoop.hbase.io.FileLink(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path...);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #4                  // Method setLocations:(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V
      15: return

  public org.apache.hadoop.hbase.io.FileLink(java.util.Collection<org.apache.hadoop.fs.Path>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       9: aload_0
      10: aload_1
      11: aload_1
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.size:()I
      17: anewarray     #6                  // class org/apache/hadoop/fs/Path
      20: invokeinterface #7,  2            // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      25: checkcast     #8                  // class "[Lorg/apache/hadoop/fs/Path;"
      28: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      31: return

  public org.apache.hadoop.fs.Path[] getLocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokespecial #12                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_1
      16: ldc           #13                 // String  locations=[
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: iconst_0
      23: istore_2
      24: iload_2
      25: aload_0
      26: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      29: arraylength
      30: if_icmpge     64
      33: iload_2
      34: ifle          44
      37: aload_1
      38: ldc           #15                 // String ,
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: aload_0
      46: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      49: iload_2
      50: aaload
      51: invokevirtual #16                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: iinc          2, 1
      61: goto          24
      64: aload_1
      65: ldc           #17                 // String ]
      67: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public boolean exists(org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       7: arraylength
       8: if_icmpge     32
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      16: iload_2
      17: aaload
      18: invokevirtual #19                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: iinc          2, 1
      29: goto          2
      32: iconst_0
      33: ireturn

  public org.apache.hadoop.fs.Path getAvailablePath(org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       7: arraylength
       8: if_icmpge     37
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      16: iload_2
      17: aaload
      18: invokevirtual #19                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      21: ifeq          31
      24: aload_0
      25: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      28: iload_2
      29: aaload
      30: areturn
      31: iinc          2, 1
      34: goto          2
      37: new           #20                 // class java/io/FileNotFoundException
      40: dup
      41: new           #9                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #22                 // String Unable to open link:
      50: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #24                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      63: athrow

  public org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       7: arraylength
       8: if_icmpge     29
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      16: iload_2
      17: aaload
      18: invokevirtual #25                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      21: areturn
      22: astore_3
      23: iinc          2, 1
      26: goto          2
      29: new           #20                 // class java/io/FileNotFoundException
      32: dup
      33: new           #9                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #22                 // String Unable to open link:
      42: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #24                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      55: athrow
    Exception table:
       from    to  target type
          11    21    22   Class java/io/FileNotFoundException

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: new           #26                 // class org/apache/hadoop/fs/FSDataInputStream
       3: dup
       4: new           #27                 // class org/apache/hadoop/hbase/io/FileLink$FileLinkInputStream
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #28                 // Method org/apache/hadoop/hbase/io/FileLink$FileLinkInputStream."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;)V
      13: invokespecial #29                 // Method org/apache/hadoop/fs/FSDataInputStream."<init>":(Ljava/io/InputStream;)V
      16: areturn

  public org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.FileSystem, int) throws java.io.IOException;
    Code:
       0: new           #26                 // class org/apache/hadoop/fs/FSDataInputStream
       3: dup
       4: new           #27                 // class org/apache/hadoop/hbase/io/FileLink$FileLinkInputStream
       7: dup
       8: aload_1
       9: aload_0
      10: iload_2
      11: invokespecial #30                 // Method org/apache/hadoop/hbase/io/FileLink$FileLinkInputStream."<init>":(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;I)V
      14: invokespecial #29                 // Method org/apache/hadoop/fs/FSDataInputStream."<init>":(Ljava/io/InputStream;)V
      17: areturn

  protected void setLocations(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path...);
    Code:
       0: getstatic     #31                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_0
       7: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      10: ifnull        23
      13: new           #32                 // class java/lang/AssertionError
      16: dup
      17: ldc           #33                 // String Link locations already set
      19: invokespecial #34                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: new           #35                 // class java/util/ArrayList
      26: dup
      27: aload_2
      28: arraylength
      29: iconst_1
      30: iadd
      31: invokespecial #36                 // Method java/util/ArrayList."<init>":(I)V
      34: astore_3
      35: aload_1
      36: ifnull        47
      39: aload_3
      40: aload_1
      41: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: iconst_0
      48: istore        4
      50: iload         4
      52: aload_2
      53: arraylength
      54: if_icmpge     81
      57: aload_2
      58: iload         4
      60: aaload
      61: ifnull        75
      64: aload_3
      65: aload_2
      66: iload         4
      68: aaload
      69: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: iinc          4, 1
      78: goto          50
      81: aload_0
      82: aload_3
      83: iconst_0
      84: anewarray     #6                  // class org/apache/hadoop/fs/Path
      87: invokeinterface #38,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      92: checkcast     #8                  // class "[Lorg/apache/hadoop/fs/Path;"
      95: putfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      98: return

  public static org.apache.hadoop.fs.Path getBackReferencesDir(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: new           #6                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: new           #9                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #40                 // String .links-
      14: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_1
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: invokespecial #41                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      27: areturn

  public static java.lang.String getBackReferenceFileName(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       4: ldc           #40                 // String .links-
       6: invokevirtual #43                 // Method java/lang/String.length:()I
       9: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      12: areturn

  public static boolean isBackReferencesDir(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #42                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      10: ldc           #40                 // String .links-
      12: invokevirtual #45                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          35
      20: aload_0
      21: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      24: aload_1
      25: checkcast     #39                 // class org/apache/hadoop/hbase/io/FileLink
      28: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
      31: invokestatic  #47                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      34: ireturn
      35: iconst_0
      36: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field locations:[Lorg/apache/hadoop/fs/Path;
       4: invokestatic  #48                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
       7: ireturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/apache/hadoop/hbase/io/FileLink
       2: invokevirtual #49                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #31                 // Field $assertionsDisabled:Z
      16: ldc           #39                 // class org/apache/hadoop/hbase/io/FileLink
      18: invokestatic  #50                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      24: return
}
