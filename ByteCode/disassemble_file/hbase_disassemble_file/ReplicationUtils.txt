Compiled from "ReplicationUtils.java"
public final class org.apache.hadoop.hbase.replication.ReplicationUtils {
  public static final java.lang.String REPLICATION_ATTR_NAME;

  public static final java.lang.String REMOTE_WAL_DIR_NAME;

  public static final java.lang.String SYNC_WAL_SUFFIX;

  public static final java.lang.String REMOTE_WAL_REPLAY_SUFFIX;

  public static final java.lang.String REMOTE_WAL_SNAPSHOT_SUFFIX;

  public static final java.lang.String RENAME_WAL_SUFFIX;

  public static org.apache.hadoop.conf.Configuration getPeerClusterConfiguration(org.apache.hadoop.hbase.replication.ReplicationPeerConfig, org.apache.hadoop.conf.Configuration) throws org.apache.hadoop.hbase.replication.ReplicationException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getClusterKey:()Ljava/lang/String;
       5: invokestatic  #3                  // Method org/apache/hadoop/hbase/HBaseConfiguration.createClusterConf:(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
       8: astore_2
       9: goto          41
      12: astore_3
      13: new           #5                  // class org/apache/hadoop/hbase/replication/ReplicationException
      16: dup
      17: new           #6                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #8                  // String Can't get peer configuration for peer
      26: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: aload_3
      37: invokespecial #12                 // Method org/apache/hadoop/hbase/replication/ReplicationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: invokevirtual #13                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getConfiguration:()Ljava/util/Map;
      45: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      50: ifne          78
      53: new           #15                 // class org/apache/hadoop/hbase/CompoundConfiguration
      56: dup
      57: invokespecial #16                 // Method org/apache/hadoop/hbase/CompoundConfiguration."<init>":()V
      60: astore_3
      61: aload_3
      62: aload_2
      63: invokevirtual #17                 // Method org/apache/hadoop/hbase/CompoundConfiguration.add:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
      66: pop
      67: aload_3
      68: aload_0
      69: invokevirtual #13                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getConfiguration:()Ljava/util/Map;
      72: invokevirtual #18                 // Method org/apache/hadoop/hbase/CompoundConfiguration.addStringMap:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
      75: pop
      76: aload_3
      77: areturn
      78: aload_2
      79: areturn
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  public static void removeAllQueues(org.apache.hadoop.hbase.replication.ReplicationQueueStorage, java.lang.String) throws org.apache.hadoop.hbase.replication.ReplicationException;
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationQueueStorage.getListOfReplicators:()Ljava/util/List;
       6: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          116
      21: aload_2
      22: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #23                 // class org/apache/hadoop/hbase/ServerName
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #24,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationQueueStorage.getAllQueues:(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
      38: astore        4
      40: aload         4
      42: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        5
      49: aload         5
      51: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          106
      59: aload         5
      61: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #25                 // class java/lang/String
      69: astore        6
      71: new           #26                 // class org/apache/hadoop/hbase/replication/ReplicationQueueInfo
      74: dup
      75: aload         6
      77: invokespecial #27                 // Method org/apache/hadoop/hbase/replication/ReplicationQueueInfo."<init>":(Ljava/lang/String;)V
      80: astore        7
      82: aload         7
      84: invokevirtual #28                 // Method org/apache/hadoop/hbase/replication/ReplicationQueueInfo.getPeerId:()Ljava/lang/String;
      87: aload_1
      88: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          103
      94: aload_0
      95: aload_3
      96: aload         6
      98: invokeinterface #30,  3           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationQueueStorage.removeQueue:(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)V
     103: goto          49
     106: aload_0
     107: aload_3
     108: invokeinterface #31,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationQueueStorage.removeReplicatorIfQueueIsEmpty:(Lorg/apache/hadoop/hbase/ServerName;)V
     113: goto          12
     116: return

  public static boolean isNamespacesAndTableCFsEqual(org.apache.hadoop.hbase.replication.ReplicationPeerConfig, org.apache.hadoop.hbase.replication.ReplicationPeerConfig);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.replicateAllUserTables:()Z
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.replicateAllUserTables:()Z
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #45                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.replicateAllUserTables:()Z
      17: ifeq          54
      20: aload_0
      21: invokevirtual #46                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeNamespaces:()Ljava/util/Set;
      24: aload_1
      25: invokevirtual #46                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeNamespaces:()Ljava/util/Set;
      28: invokestatic  #47                 // Method isNamespacesEqual:(Ljava/util/Set;Ljava/util/Set;)Z
      31: ifeq          52
      34: aload_0
      35: invokevirtual #48                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeTableCFsMap:()Ljava/util/Map;
      38: aload_1
      39: invokevirtual #48                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeTableCFsMap:()Ljava/util/Map;
      42: invokestatic  #49                 // Method isTableCFsEqual:(Ljava/util/Map;Ljava/util/Map;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
      54: aload_0
      55: invokevirtual #50                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getNamespaces:()Ljava/util/Set;
      58: aload_1
      59: invokevirtual #50                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getNamespaces:()Ljava/util/Set;
      62: invokestatic  #47                 // Method isNamespacesEqual:(Ljava/util/Set;Ljava/util/Set;)Z
      65: ifeq          86
      68: aload_0
      69: invokevirtual #51                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getTableCFsMap:()Ljava/util/Map;
      72: aload_1
      73: invokevirtual #51                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getTableCFsMap:()Ljava/util/Map;
      76: invokestatic  #49                 // Method isTableCFsEqual:(Ljava/util/Map;Ljava/util/Map;)Z
      79: ifeq          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ireturn

  public static boolean isReplicationForBulkLoadDataEnabled(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #53                 // String hbase.replication.bulkload.enabled
       3: iconst_0
       4: invokevirtual #54                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public static boolean contains(org.apache.hadoop.hbase.replication.ReplicationPeerConfig, org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/apache/hadoop/hbase/TableName.getNamespaceAsString:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #45                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.replicateAllUserTables:()Z
       9: ifeq          91
      12: aload_0
      13: invokevirtual #46                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeNamespaces:()Ljava/util/Set;
      16: astore_3
      17: aload_3
      18: ifnull        33
      21: aload_3
      22: aload_2
      23: invokeinterface #56,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: invokevirtual #48                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getExcludeTableCFsMap:()Ljava/util/Map;
      37: astore        4
      39: aload         4
      41: ifnull        55
      44: aload         4
      46: aload_1
      47: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_1
      56: ireturn
      57: aload         4
      59: aload_1
      60: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #43                 // class java/util/List
      68: astore        5
      70: aload         5
      72: ifnull        89
      75: aload         5
      77: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      82: ifne          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn
      91: aload_0
      92: invokevirtual #50                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getNamespaces:()Ljava/util/Set;
      95: astore_3
      96: aload_0
      97: invokevirtual #51                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig.getTableCFsMap:()Ljava/util/Map;
     100: astore        4
     102: aload_3
     103: ifnonnull     113
     106: aload         4
     108: ifnonnull     113
     111: iconst_0
     112: ireturn
     113: aload_3
     114: ifnull        129
     117: aload_3
     118: aload_2
     119: invokeinterface #56,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     124: ifeq          129
     127: iconst_1
     128: ireturn
     129: aload         4
     131: ifnull        149
     134: aload         4
     136: aload_1
     137: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     142: ifeq          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: ireturn

  public static org.apache.hadoop.fs.FileSystem getRemoteWALFileSystem(org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #58                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_1
       5: invokespecial #59                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: invokevirtual #60                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      12: areturn

  public static org.apache.hadoop.fs.Path getPeerRemoteWALDir(java.lang.String, java.lang.String);
    Code:
       0: new           #58                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #61                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       9: areturn

  public static org.apache.hadoop.fs.Path getPeerRemoteWALDir(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: new           #58                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #62                 // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
       9: areturn

  public static org.apache.hadoop.fs.Path getPeerReplayWALDir(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method getPeerRemoteWALDir:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: ldc           #65                 // String -replay
       7: invokevirtual #66                 // Method org/apache/hadoop/fs/Path.suffix:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      10: areturn

  public static org.apache.hadoop.fs.Path getPeerSnapshotWALDir(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method getPeerRemoteWALDir:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: ldc           #68                 // String -snapshot
       7: invokevirtual #66                 // Method org/apache/hadoop/fs/Path.suffix:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      10: areturn

  public static org.apache.hadoop.fs.Path getPeerSnapshotWALDir(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method getPeerRemoteWALDir:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
       5: ldc           #68                 // String -snapshot
       7: invokevirtual #66                 // Method org/apache/hadoop/fs/Path.suffix:(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      10: areturn

  public static boolean sleepForRetries(java.lang.String, long, int, int);
    Code:
       0: getstatic     #69                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #70                 // String {}, sleeping {} times {}
       5: iconst_3
       6: anewarray     #71                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: aastore
      13: dup
      14: iconst_1
      15: lload_1
      16: invokestatic  #72                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: aastore
      20: dup
      21: iconst_2
      22: iload_3
      23: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      32: lload_1
      33: iload_3
      34: i2l
      35: lmul
      36: invokestatic  #75                 // Method java/lang/Thread.sleep:(J)V
      39: goto          60
      42: astore        5
      44: getstatic     #69                 // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #77                 // String Interrupted while sleeping between retries
      49: invokeinterface #78,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      54: invokestatic  #79                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      57: invokevirtual #80                 // Method java/lang/Thread.interrupt:()V
      60: iload_3
      61: iload         4
      63: if_icmpge     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ireturn
    Exception table:
       from    to  target type
           0    39    42   Class java/lang/InterruptedException

  static {};
    Code:
       0: ldc           #64                 // class org/apache/hadoop/hbase/replication/ReplicationUtils
       2: invokestatic  #81                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #69                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
