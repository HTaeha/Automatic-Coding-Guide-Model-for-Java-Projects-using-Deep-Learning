Compiled from "Size.java"
public final class org.apache.hadoop.hbase.Size implements java.lang.Comparable<org.apache.hadoop.hbase.Size> {
  public static final org.apache.hadoop.hbase.Size ZERO;

  public org.apache.hadoop.hbase.Size(double, org.apache.hadoop.hbase.Size$Unit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: dload_1
       5: dconst_0
       6: dcmpg
       7: ifge          42
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #3                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #5                  // String The value:
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: dload_1
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      30: ldc           #8                  // String  can't be negative
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: dload_1
      44: putfield      #11                 // Field value:D
      47: aload_0
      48: aload_3
      49: invokestatic  #12                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #13                 // class org/apache/hadoop/hbase/Size$Unit
      55: putfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
      58: return

  public org.apache.hadoop.hbase.Size$Unit getUnit();
    Code:
       0: aload_0
       1: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
       4: areturn

  public long getLongValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field value:D
       4: d2l
       5: lreturn

  public double get();
    Code:
       0: aload_0
       1: getfield      #11                 // Field value:D
       4: dreturn

  public double get(org.apache.hadoop.hbase.Size$Unit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field value:D
       4: dconst_0
       5: dcmpl
       6: ifne          14
       9: aload_0
      10: getfield      #11                 // Field value:D
      13: dreturn
      14: aload_0
      15: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
      18: invokevirtual #15                 // Method org/apache/hadoop/hbase/Size$Unit.getOrderOfSize:()I
      21: aload_1
      22: invokevirtual #15                 // Method org/apache/hadoop/hbase/Size$Unit.getOrderOfSize:()I
      25: isub
      26: istore_2
      27: iload_2
      28: ifne          36
      31: aload_0
      32: getfield      #11                 // Field value:D
      35: dreturn
      36: aload_0
      37: getfield      #11                 // Field value:D
      40: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      43: astore_3
      44: iconst_0
      45: istore        4
      47: iload         4
      49: iload_2
      50: invokestatic  #17                 // Method java/lang/Math.abs:(I)I
      53: if_icmpeq     84
      56: iload_2
      57: ifle          70
      60: aload_3
      61: getstatic     #18                 // Field SCALE_BASE:Ljava/math/BigDecimal;
      64: invokevirtual #19                 // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      67: goto          77
      70: aload_3
      71: getstatic     #18                 // Field SCALE_BASE:Ljava/math/BigDecimal;
      74: invokevirtual #20                 // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      77: astore_3
      78: iinc          4, 1
      81: goto          47
      84: aload_3
      85: invokevirtual #21                 // Method java/math/BigDecimal.doubleValue:()D
      88: dreturn

  public int compareTo(org.apache.hadoop.hbase.Size);
    Code:
       0: aload_0
       1: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
       4: invokevirtual #15                 // Method org/apache/hadoop/hbase/Size$Unit.getOrderOfSize:()I
       7: aload_1
       8: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
      11: invokevirtual #15                 // Method org/apache/hadoop/hbase/Size$Unit.getOrderOfSize:()I
      14: isub
      15: istore_2
      16: iload_2
      17: ifne          32
      20: aload_0
      21: getfield      #11                 // Field value:D
      24: aload_1
      25: getfield      #11                 // Field value:D
      28: invokestatic  #22                 // Method java/lang/Double.compare:(DD)I
      31: ireturn
      32: aload_0
      33: getfield      #11                 // Field value:D
      36: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      39: astore_3
      40: aload_1
      41: getfield      #11                 // Field value:D
      44: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      47: astore        4
      49: iload_2
      50: ifle          82
      53: iconst_0
      54: istore        5
      56: iload         5
      58: iload_2
      59: invokestatic  #17                 // Method java/lang/Math.abs:(I)I
      62: if_icmpeq     79
      65: aload_3
      66: getstatic     #18                 // Field SCALE_BASE:Ljava/math/BigDecimal;
      69: invokevirtual #19                 // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      72: astore_3
      73: iinc          5, 1
      76: goto          56
      79: goto          110
      82: iconst_0
      83: istore        5
      85: iload         5
      87: iload_2
      88: invokestatic  #17                 // Method java/lang/Math.abs:(I)I
      91: if_icmpeq     110
      94: aload         4
      96: getstatic     #18                 // Field SCALE_BASE:Ljava/math/BigDecimal;
      99: invokevirtual #19                 // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
     102: astore        4
     104: iinc          5, 1
     107: goto          85
     110: aload_3
     111: aload         4
     113: invokevirtual #23                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     116: ireturn

  public java.lang.String toString();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #11                 // Field value:D
      11: invokevirtual #7                  // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
      18: invokevirtual #24                 // Method org/apache/hadoop/hbase/Size$Unit.getSimpleName:()Ljava/lang/String;
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: instanceof    #25                 // class org/apache/hadoop/hbase/Size
      17: ifeq          37
      20: aload_0
      21: aload_1
      22: checkcast     #25                 // class org/apache/hadoop/hbase/Size
      25: invokevirtual #26                 // Method compareTo:(Lorg/apache/hadoop/hbase/Size;)I
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn
      37: iconst_0
      38: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #27                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #11                 // Field value:D
      10: invokestatic  #28                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #14                 // Field unit:Lorg/apache/hadoop/hbase/Size$Unit;
      20: aastore
      21: invokestatic  #29                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      24: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/hadoop/hbase/Size
       5: invokevirtual #26                 // Method compareTo:(Lorg/apache/hadoop/hbase/Size;)I
       8: ireturn

  static {};
    Code:
       0: new           #25                 // class org/apache/hadoop/hbase/Size
       3: dup
       4: dconst_0
       5: getstatic     #30                 // Field org/apache/hadoop/hbase/Size$Unit.KILOBYTE:Lorg/apache/hadoop/hbase/Size$Unit;
       8: invokespecial #31                 // Method "<init>":(DLorg/apache/hadoop/hbase/Size$Unit;)V
      11: putstatic     #32                 // Field ZERO:Lorg/apache/hadoop/hbase/Size;
      14: ldc2_w        #33                 // double 1024.0d
      17: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      20: putstatic     #18                 // Field SCALE_BASE:Ljava/math/BigDecimal;
      23: return
}
