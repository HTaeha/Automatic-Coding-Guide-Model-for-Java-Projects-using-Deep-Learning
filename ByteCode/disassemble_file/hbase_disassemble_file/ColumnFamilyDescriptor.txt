Compiled from "ColumnFamilyDescriptor.java"
public interface org.apache.hadoop.hbase.client.ColumnFamilyDescriptor {
  public static final java.util.Comparator<org.apache.hadoop.hbase.client.ColumnFamilyDescriptor> COMPARATOR;

  public static final org.apache.hadoop.hbase.util.Bytes REPLICATION_SCOPE_BYTES;

  public static final java.util.Comparator<org.apache.hadoop.hbase.client.ColumnFamilyDescriptor> COMPARATOR_IGNORE_REPLICATION;

  public abstract int getBlocksize();

  public abstract org.apache.hadoop.hbase.regionserver.BloomType getBloomFilterType();

  public abstract org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompactionCompressionType();

  public abstract org.apache.hadoop.hbase.io.compress.Compression$Algorithm getCompressionType();

  public abstract java.util.Map<java.lang.String, java.lang.String> getConfiguration();

  public abstract java.lang.String getConfigurationValue(java.lang.String);

  public abstract short getDFSReplication();

  public abstract org.apache.hadoop.hbase.io.encoding.DataBlockEncoding getDataBlockEncoding();

  public abstract byte[] getEncryptionKey();

  public abstract java.lang.String getEncryptionType();

  public abstract org.apache.hadoop.hbase.MemoryCompactionPolicy getInMemoryCompaction();

  public abstract org.apache.hadoop.hbase.KeepDeletedCells getKeepDeletedCells();

  public abstract int getMaxVersions();

  public abstract int getMinVersions();

  public abstract org.apache.hadoop.hbase.client.MobCompactPartitionPolicy getMobCompactPartitionPolicy();

  public abstract long getMobThreshold();

  public abstract byte[] getName();

  public abstract java.lang.String getNameAsString();

  public abstract int getScope();

  public abstract java.lang.String getStoragePolicy();

  public abstract int getTimeToLive();

  public abstract org.apache.hadoop.hbase.util.Bytes getValue(org.apache.hadoop.hbase.util.Bytes);

  public abstract byte[] getValue(byte[]);

  public abstract java.util.Map<org.apache.hadoop.hbase.util.Bytes, org.apache.hadoop.hbase.util.Bytes> getValues();

  public abstract boolean isBlockCacheEnabled();

  public abstract boolean isCacheBloomsOnWrite();

  public abstract boolean isCacheDataOnWrite();

  public abstract boolean isCacheIndexesOnWrite();

  public abstract boolean isCompressTags();

  public abstract boolean isEvictBlocksOnClose();

  public abstract boolean isInMemory();

  public abstract boolean isMobEnabled();

  public abstract boolean isPrefetchBlocksOnOpen();

  public abstract java.lang.String toStringCustomizedValues();

  public abstract boolean isNewVersionBehavior();

  static {};
    Code:
       0: invokedynamic #11,  0             // InvokeDynamic #0:compare:()Ljava/util/Comparator;
       5: putstatic     #12                 // Field COMPARATOR:Ljava/util/Comparator;
       8: new           #13                 // class org/apache/hadoop/hbase/util/Bytes
      11: dup
      12: ldc           #15                 // String REPLICATION_SCOPE
      14: invokestatic  #16                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
      17: invokespecial #17                 // Method org/apache/hadoop/hbase/util/Bytes."<init>":([B)V
      20: putstatic     #7                  // Field REPLICATION_SCOPE_BYTES:Lorg/apache/hadoop/hbase/util/Bytes;
      23: invokedynamic #18,  0             // InvokeDynamic #1:compare:()Ljava/util/Comparator;
      28: putstatic     #19                 // Field COMPARATOR_IGNORE_REPLICATION:Ljava/util/Comparator;
      31: return
}
