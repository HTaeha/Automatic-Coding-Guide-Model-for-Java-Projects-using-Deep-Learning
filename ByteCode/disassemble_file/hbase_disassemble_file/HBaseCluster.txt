Compiled from "HBaseCluster.java"
public abstract class org.apache.hadoop.hbase.HBaseCluster implements java.io.Closeable,org.apache.hadoop.conf.Configurable {
  static final org.slf4j.Logger LOG;

  protected org.apache.hadoop.conf.Configuration conf;

  protected org.apache.hadoop.hbase.ClusterMetrics initialClusterStatus;

  public org.apache.hadoop.hbase.HBaseCluster(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setConf:(Lorg/apache/hadoop/conf/Configuration;)V
       9: return

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #3                  // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public abstract org.apache.hadoop.hbase.ClusterMetrics getClusterMetrics() throws java.io.IOException;

  public org.apache.hadoop.hbase.ClusterMetrics getInitialClusterMetrics() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialClusterStatus:Lorg/apache/hadoop/hbase/ClusterMetrics;
       4: areturn

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$MasterService$BlockingInterface getMasterAdminService() throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getAdminProtocol(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ClientService$BlockingInterface getClientProtocol(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void startRegionServer(java.lang.String, int) throws java.io.IOException;

  public abstract void killRegionServer(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract boolean isKilledRS(org.apache.hadoop.hbase.ServerName);

  public abstract void stopRegionServer(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public void waitForRegionServerToStart(java.lang.String, int, long) throws java.io.IOException;
    Code:
       0: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
       3: lstore        5
       5: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
       8: lload         5
      10: lsub
      11: lload_3
      12: lcmp
      13: ifge          93
      16: aload_0
      17: invokevirtual #6                  // Method getClusterMetrics:()Lorg/apache/hadoop/hbase/ClusterMetrics;
      20: invokeinterface #7,  1            // InterfaceMethod org/apache/hadoop/hbase/ClusterMetrics.getLiveServerMetrics:()Ljava/util/Map;
      25: invokeinterface #8,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        7
      37: aload         7
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          84
      47: aload         7
      49: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #12                 // class org/apache/hadoop/hbase/ServerName
      57: astore        8
      59: aload         8
      61: invokevirtual #13                 // Method org/apache/hadoop/hbase/ServerName.getHostname:()Ljava/lang/String;
      64: aload_1
      65: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          81
      71: aload         8
      73: invokevirtual #15                 // Method org/apache/hadoop/hbase/ServerName.getPort:()I
      76: iload_2
      77: if_icmpne     81
      80: return
      81: goto          37
      84: ldc2_w        #16                 // long 100l
      87: invokestatic  #18                 // Method org/apache/hadoop/hbase/util/Threads.sleep:(J)V
      90: goto          5
      93: new           #19                 // class java/io/IOException
      96: dup
      97: new           #20                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #22                 // String did timeout
     106: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: lload_3
     110: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     113: ldc           #25                 // String ms waiting for region server to start:
     115: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_1
     119: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #27                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     128: athrow

  public abstract void waitForRegionServerToStop(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void startZkNode(java.lang.String, int) throws java.io.IOException;

  public abstract void killZkNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void stopZkNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void waitForZkNodeToStart(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void waitForZkNodeToStop(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void startDataNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void killDataNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void stopDataNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void waitForDataNodeToStart(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void waitForDataNodeToStop(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void startNameNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void killNameNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void stopNameNode(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void waitForNameNodeToStart(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void waitForNameNodeToStop(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public abstract void startMaster(java.lang.String, int) throws java.io.IOException;

  public abstract void killMaster(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void stopMaster(org.apache.hadoop.hbase.ServerName) throws java.io.IOException;

  public abstract void waitForMasterToStop(org.apache.hadoop.hbase.ServerName, long) throws java.io.IOException;

  public boolean waitForActiveAndReadyMaster() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #29                 // long 9223372036854775807l
       4: invokevirtual #31                 // Method waitForActiveAndReadyMaster:(J)Z
       7: ireturn

  public abstract boolean waitForActiveAndReadyMaster(long) throws java.io.IOException;

  public abstract void waitUntilShutDown() throws java.io.IOException;

  public abstract void shutdown() throws java.io.IOException;

  public boolean restoreInitialStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #32                 // Method getInitialClusterMetrics:()Lorg/apache/hadoop/hbase/ClusterMetrics;
       5: invokevirtual #33                 // Method restoreClusterMetrics:(Lorg/apache/hadoop/hbase/ClusterMetrics;)Z
       8: ireturn

  public boolean restoreClusterMetrics(org.apache.hadoop.hbase.ClusterMetrics) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.hadoop.hbase.ServerName getServerHoldingMeta() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #34                 // Field org/apache/hadoop/hbase/TableName.META_TABLE_NAME:Lorg/apache/hadoop/hbase/TableName;
       4: getstatic     #35                 // Field org/apache/hadoop/hbase/client/RegionInfoBuilder.FIRST_META_REGIONINFO:Lorg/apache/hadoop/hbase/client/RegionInfo;
       7: invokeinterface #36,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getRegionName:()[B
      12: invokevirtual #37                 // Method getServerHoldingRegion:(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/ServerName;
      15: areturn

  public abstract org.apache.hadoop.hbase.ServerName getServerHoldingRegion(org.apache.hadoop.hbase.TableName, byte[]) throws java.io.IOException;

  public boolean isDistributedCluster();
    Code:
       0: iconst_0
       1: ireturn

  public abstract void close() throws java.io.IOException;

  public void waitForNamenodeAvailable() throws java.lang.InterruptedException;
    Code:
       0: return

  public void waitForDatanodesRegistered(int) throws java.lang.Exception;
    Code:
       0: return

  static {};
    Code:
       0: ldc           #38                 // class org/apache/hadoop/hbase/HBaseCluster
       2: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #40                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #41                 // Field LOG:Lorg/slf4j/Logger;
      11: return
}
