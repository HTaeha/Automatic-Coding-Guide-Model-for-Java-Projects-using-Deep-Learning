Compiled from "ColumnPaginationFilter.java"
public class org.apache.hadoop.hbase.filter.ColumnPaginationFilter extends org.apache.hadoop.hbase.filter.FilterBase {
  public org.apache.hadoop.hbase.filter.ColumnPaginationFilter(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/FilterBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field limit:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field columnOffset:[B
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field count:I
      24: iload_1
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #6                  // String limit must be positive %s
      35: iload_1
      36: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      39: iload_2
      40: iflt          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ldc           #8                  // String offset must be positive %s
      50: iload_2
      51: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      54: aload_0
      55: iload_1
      56: putfield      #2                  // Field limit:I
      59: aload_0
      60: iload_2
      61: putfield      #3                  // Field offset:I
      64: return

  public org.apache.hadoop.hbase.filter.ColumnPaginationFilter(int, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/hbase/filter/FilterBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field limit:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field offset:I
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field columnOffset:[B
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field count:I
      24: iload_1
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #6                  // String limit must be positive %s
      35: iload_1
      36: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      39: aload_2
      40: ifnull        47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ldc           #9                  // String columnOffset must be non-null %s
      50: aload_2
      51: invokestatic  #10                 // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      54: aload_0
      55: iload_1
      56: putfield      #2                  // Field limit:I
      59: aload_0
      60: aload_2
      61: putfield      #4                  // Field columnOffset:[B
      64: return

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field limit:I
       4: ireturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field offset:I
       4: ireturn

  public byte[] getColumnOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field columnOffset:[B
       4: areturn

  public boolean filterRowKey(org.apache.hadoop.hbase.Cell) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.hadoop.hbase.filter.Filter$ReturnCode filterKeyValue(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method filterCell:(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
       5: areturn

  public org.apache.hadoop.hbase.filter.Filter$ReturnCode filterCell(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_0
       1: getfield      #4                  // Field columnOffset:[B
       4: ifnull        68
       7: aload_0
       8: getfield      #5                  // Field count:I
      11: aload_0
      12: getfield      #2                  // Field limit:I
      15: if_icmplt     22
      18: getstatic     #12                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.NEXT_ROW:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      21: areturn
      22: iconst_0
      23: istore_2
      24: aload_0
      25: getfield      #5                  // Field count:I
      28: ifne          46
      31: aload_1
      32: aload_0
      33: getfield      #4                  // Field columnOffset:[B
      36: iconst_0
      37: aload_0
      38: getfield      #4                  // Field columnOffset:[B
      41: arraylength
      42: invokestatic  #13                 // Method org/apache/hadoop/hbase/CellUtil.compareQualifiers:(Lorg/apache/hadoop/hbase/Cell;[BII)I
      45: istore_2
      46: iload_2
      47: ifge          54
      50: getstatic     #14                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.SEEK_NEXT_USING_HINT:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      53: areturn
      54: aload_0
      55: dup
      56: getfield      #5                  // Field count:I
      59: iconst_1
      60: iadd
      61: putfield      #5                  // Field count:I
      64: getstatic     #15                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE_AND_NEXT_COL:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      67: areturn
      68: aload_0
      69: getfield      #5                  // Field count:I
      72: aload_0
      73: getfield      #3                  // Field offset:I
      76: aload_0
      77: getfield      #2                  // Field limit:I
      80: iadd
      81: if_icmplt     88
      84: getstatic     #12                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.NEXT_ROW:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
      87: areturn
      88: aload_0
      89: getfield      #5                  // Field count:I
      92: aload_0
      93: getfield      #3                  // Field offset:I
      96: if_icmpge     105
      99: getstatic     #16                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.NEXT_COL:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     102: goto          108
     105: getstatic     #15                 // Field org/apache/hadoop/hbase/filter/Filter$ReturnCode.INCLUDE_AND_NEXT_COL:Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
     108: astore_2
     109: aload_0
     110: dup
     111: getfield      #5                  // Field count:I
     114: iconst_1
     115: iadd
     116: putfield      #5                  // Field count:I
     119: aload_2
     120: areturn

  public org.apache.hadoop.hbase.Cell getNextCellHint(org.apache.hadoop.hbase.Cell);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field columnOffset:[B
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field columnOffset:[B
      10: arraylength
      11: invokestatic  #17                 // Method org/apache/hadoop/hbase/PrivateCellUtil.createFirstOnRowCol:(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
      14: areturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field count:I
       5: return

  public static org.apache.hadoop.hbase.filter.Filter createFilterFromArguments(java.util.ArrayList<byte[]>);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method java/util/ArrayList.size:()I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #19                 // String Expected 2 but got: %s
      15: aload_0
      16: invokevirtual #18                 // Method java/util/ArrayList.size:()I
      19: invokestatic  #7                  // Method org/apache/hbase/thirdparty/com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      22: aload_0
      23: iconst_0
      24: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      27: checkcast     #21                 // class "[B"
      30: invokestatic  #22                 // Method org/apache/hadoop/hbase/filter/ParseFilter.convertByteArrayToInt:([B)I
      33: istore_1
      34: aload_0
      35: iconst_1
      36: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      39: checkcast     #21                 // class "[B"
      42: invokestatic  #22                 // Method org/apache/hadoop/hbase/filter/ParseFilter.convertByteArrayToInt:([B)I
      45: istore_2
      46: new           #23                 // class org/apache/hadoop/hbase/filter/ColumnPaginationFilter
      49: dup
      50: iload_1
      51: iload_2
      52: invokespecial #24                 // Method "<init>":(II)V
      55: areturn

  public byte[] toByteArray();
    Code:
       0: invokestatic  #25                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.newBuilder:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field limit:I
       9: invokevirtual #26                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder.setLimit:(I)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder;
      12: pop
      13: aload_0
      14: getfield      #3                  // Field offset:I
      17: iflt          29
      20: aload_1
      21: aload_0
      22: getfield      #3                  // Field offset:I
      25: invokevirtual #27                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder.setOffset:(I)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder;
      28: pop
      29: aload_0
      30: getfield      #4                  // Field columnOffset:[B
      33: ifnull        48
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field columnOffset:[B
      41: invokestatic  #28                 // Method org/apache/hbase/thirdparty/com/google/protobuf/UnsafeByteOperations.unsafeWrap:([B)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      44: invokevirtual #29                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder.setColumnOffset:(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder;
      47: pop
      48: aload_1
      49: invokevirtual #30                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter$Builder.build:()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter;
      52: invokevirtual #31                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.toByteArray:()[B
      55: areturn

  public static org.apache.hadoop.hbase.filter.ColumnPaginationFilter parseFrom(byte[]) throws org.apache.hadoop.hbase.exceptions.DeserializationException;
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.parseFrom:([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter;
       4: astore_1
       5: goto          18
       8: astore_2
       9: new           #34                 // class org/apache/hadoop/hbase/exceptions/DeserializationException
      12: dup
      13: aload_2
      14: invokespecial #35                 // Method org/apache/hadoop/hbase/exceptions/DeserializationException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
      18: aload_1
      19: invokevirtual #36                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.hasColumnOffset:()Z
      22: ifeq          44
      25: new           #23                 // class org/apache/hadoop/hbase/filter/ColumnPaginationFilter
      28: dup
      29: aload_1
      30: invokevirtual #37                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.getLimit:()I
      33: aload_1
      34: invokevirtual #38                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.getColumnOffset:()Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
      37: invokevirtual #39                 // Method org/apache/hbase/thirdparty/com/google/protobuf/ByteString.toByteArray:()[B
      40: invokespecial #40                 // Method "<init>":(I[B)V
      43: areturn
      44: new           #23                 // class org/apache/hadoop/hbase/filter/ColumnPaginationFilter
      47: dup
      48: aload_1
      49: invokevirtual #37                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.getLimit:()I
      52: aload_1
      53: invokevirtual #41                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/FilterProtos$ColumnPaginationFilter.getOffset:()I
      56: invokespecial #24                 // Method "<init>":(II)V
      59: areturn
    Exception table:
       from    to  target type
           0     5     8   Class org/apache/hbase/thirdparty/com/google/protobuf/InvalidProtocolBufferException

  boolean areSerializedFieldsEqual(org.apache.hadoop.hbase.filter.Filter);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #23                 // class org/apache/hadoop/hbase/filter/ColumnPaginationFilter
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #23                 // class org/apache/hadoop/hbase/filter/ColumnPaginationFilter
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field columnOffset:[B
      25: ifnull        59
      28: aload_0
      29: invokevirtual #42                 // Method getLimit:()I
      32: aload_2
      33: invokevirtual #42                 // Method getLimit:()I
      36: if_icmpne     57
      39: aload_0
      40: invokevirtual #43                 // Method getColumnOffset:()[B
      43: aload_2
      44: invokevirtual #43                 // Method getColumnOffset:()[B
      47: invokestatic  #44                 // Method org/apache/hadoop/hbase/util/Bytes.equals:([B[B)Z
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #42                 // Method getLimit:()I
      63: aload_2
      64: invokevirtual #42                 // Method getLimit:()I
      67: if_icmpne     85
      70: aload_0
      71: invokevirtual #45                 // Method getOffset:()I
      74: aload_2
      75: invokevirtual #45                 // Method getOffset:()I
      78: if_icmpne     85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field columnOffset:[B
       4: ifnull        60
       7: new           #46                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #49                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      21: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #51                 // String (
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #2                  // Field limit:I
      33: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #53                 // String ,
      38: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #4                  // Field columnOffset:[B
      45: invokestatic  #54                 // Method org/apache/hadoop/hbase/util/Bytes.toStringBinary:([B)Ljava/lang/String;
      48: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #55                 // String )
      53: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn
      60: ldc           #57                 // String %s (%d, %d)
      62: iconst_3
      63: anewarray     #58                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #49                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      75: aastore
      76: dup
      77: iconst_1
      78: aload_0
      79: getfield      #2                  // Field limit:I
      82: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: aastore
      86: dup
      87: iconst_2
      88: aload_0
      89: getfield      #3                  // Field offset:I
      92: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      95: aastore
      96: invokestatic  #60                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      99: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #61                 // class org/apache/hadoop/hbase/filter/Filter
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #61                 // class org/apache/hadoop/hbase/filter/Filter
      12: invokevirtual #62                 // Method areSerializedFieldsEqual:(Lorg/apache/hadoop/hbase/filter/Filter;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field columnOffset:[B
       4: ifnonnull     37
       7: iconst_2
       8: anewarray     #58                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #2                  // Field limit:I
      17: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_0
      24: getfield      #3                  // Field offset:I
      27: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: invokestatic  #63                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      34: goto          67
      37: iconst_2
      38: anewarray     #58                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_0
      44: getfield      #2                  // Field limit:I
      47: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: aastore
      51: dup
      52: iconst_1
      53: aload_0
      54: getfield      #4                  // Field columnOffset:[B
      57: invokestatic  #64                 // Method org/apache/hadoop/hbase/util/Bytes.hashCode:([B)I
      60: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: aastore
      64: invokestatic  #63                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      67: ireturn
}
