Compiled from "SplitWALManager.java"
final class org.apache.hadoop.hbase.master.SplitWALManager$SplitWorkerAssigner implements org.apache.hadoop.hbase.master.ServerListener {
  public org.apache.hadoop.hbase.master.SplitWALManager$SplitWorkerAssigner(org.apache.hadoop.hbase.master.MasterServices, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field currentWorkers:Ljava/util/Map;
      15: aload_0
      16: iload_2
      17: putfield      #5                  // Field maxSplitTasks:I
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field master:Lorg/apache/hadoop/hbase/master/MasterServices;
      25: aload_0
      26: new           #7                  // class org/apache/hadoop/hbase/procedure2/ProcedureEvent
      29: dup
      30: ldc           #8                  // String split-WAL-worker-assigning
      32: invokespecial #9                  // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent."<init>":(Ljava/lang/Object;)V
      35: putfield      #10                 // Field event:Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      38: aload_0
      39: getfield      #6                  // Field master:Lorg/apache/hadoop/hbase/master/MasterServices;
      42: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/master/MasterServices.getServerManager:()Lorg/apache/hadoop/hbase/master/ServerManager;
      47: aload_0
      48: invokevirtual #12                 // Method org/apache/hadoop/hbase/master/ServerManager.registerListener:(Lorg/apache/hadoop/hbase/master/ServerListener;)V
      51: return

  public synchronized java.util.Optional<org.apache.hadoop.hbase.ServerName> acquire();
    Code:
       0: aload_0
       1: getfield      #6                  // Field master:Lorg/apache/hadoop/hbase/master/MasterServices;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/master/MasterServices.getServerManager:()Lorg/apache/hadoop/hbase/master/ServerManager;
       9: invokevirtual #13                 // Method org/apache/hadoop/hbase/master/ServerManager.getOnlineServersList:()Ljava/util/List;
      12: astore_1
      13: aload_1
      14: invokestatic  #14                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      17: aload_1
      18: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      23: aload_0
      24: invokedynamic #16,  0             // InvokeDynamic #0:test:(Lorg/apache/hadoop/hbase/master/SplitWALManager$SplitWorkerAssigner;)Ljava/util/function/Predicate;
      29: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      34: invokeinterface #18,  1           // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      39: astore_2
      40: aload_2
      41: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
      44: ifeq          67
      47: aload_0
      48: getfield      #4                  // Field currentWorkers:Ljava/util/Map;
      51: aload_2
      52: invokevirtual #20                 // Method java/util/Optional.get:()Ljava/lang/Object;
      55: aload_0
      56: invokedynamic #21,  0             // InvokeDynamic #1:apply:(Lorg/apache/hadoop/hbase/master/SplitWALManager$SplitWorkerAssigner;)Ljava/util/function/BiFunction;
      61: invokeinterface #22,  3           // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      66: pop
      67: aload_2
      68: areturn

  public synchronized void release(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentWorkers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #23,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BiFunction;
      10: invokeinterface #22,  3           // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      15: pop
      16: return

  public void suspend(org.apache.hadoop.hbase.procedure2.Procedure<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field event:Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
       4: invokevirtual #24                 // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.suspend:()V
       7: aload_0
       8: getfield      #10                 // Field event:Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      11: aload_1
      12: invokevirtual #25                 // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.suspendIfNotReady:(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
      15: pop
      16: return

  public void wake(org.apache.hadoop.hbase.master.procedure.MasterProcedureScheduler);
    Code:
       0: aload_0
       1: getfield      #10                 // Field event:Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
       4: invokevirtual #26                 // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.isReady:()Z
       7: ifne          18
      10: aload_0
      11: getfield      #10                 // Field event:Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
      14: aload_1
      15: invokevirtual #27                 // Method org/apache/hadoop/hbase/procedure2/ProcedureEvent.wake:(Lorg/apache/hadoop/hbase/procedure2/AbstractProcedureScheduler;)V
      18: return

  public void serverAdded(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field master:Lorg/apache/hadoop/hbase/master/MasterServices;
       5: invokeinterface #28,  1           // InterfaceMethod org/apache/hadoop/hbase/master/MasterServices.getMasterProcedureExecutor:()Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;
      10: invokevirtual #29                 // Method org/apache/hadoop/hbase/procedure2/ProcedureExecutor.getEnvironment:()Ljava/lang/Object;
      13: checkcast     #30                 // class org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv
      16: invokevirtual #31                 // Method org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv.getProcedureScheduler:()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;
      19: invokevirtual #32                 // Method wake:(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;)V
      22: return

  public synchronized void addUsedWorker(org.apache.hadoop.hbase.ServerName);
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentWorkers:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: invokedynamic #33,  0             // InvokeDynamic #3:apply:(Lorg/apache/hadoop/hbase/master/SplitWALManager$SplitWorkerAssigner;)Ljava/util/function/BiFunction;
      11: invokeinterface #22,  3           // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      16: pop
      17: return
}
