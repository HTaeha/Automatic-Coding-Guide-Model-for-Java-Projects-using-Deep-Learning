Compiled from "SnapshotInfo.java"
final class org.apache.hadoop.hbase.snapshot.SnapshotInfo$3 implements org.apache.hadoop.hbase.snapshot.SnapshotReferenceUtil$SnapshotVisitor {
  final org.apache.hadoop.conf.Configuration val$conf;

  final org.apache.hadoop.hbase.client.SnapshotDescription val$snapshot;

  final org.apache.hadoop.fs.FileSystem val$fs;

  final java.util.concurrent.atomic.AtomicLong val$uniqueHFilesArchiveSize;

  final java.util.concurrent.atomic.AtomicLong val$uniqueHFilesMobSize;

  final java.util.concurrent.atomic.AtomicLong val$uniqueHFilesSize;

  final java.util.concurrent.ConcurrentHashMap val$filesMap;

  org.apache.hadoop.hbase.snapshot.SnapshotInfo$3(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.client.SnapshotDescription, org.apache.hadoop.fs.FileSystem, java.util.concurrent.atomic.AtomicLong, java.util.concurrent.atomic.AtomicLong, java.util.concurrent.atomic.AtomicLong, java.util.concurrent.ConcurrentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$conf:Lorg/apache/hadoop/conf/Configuration;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$snapshot:Lorg/apache/hadoop/hbase/client/SnapshotDescription;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$uniqueHFilesArchiveSize:Ljava/util/concurrent/atomic/AtomicLong;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$uniqueHFilesMobSize:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$uniqueHFilesSize:Ljava/util/concurrent/atomic/AtomicLong;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$filesMap:Ljava/util/concurrent/ConcurrentHashMap;
      39: aload_0
      40: invokespecial #8                  // Method java/lang/Object."<init>":()V
      43: return

  public void storeFile(org.apache.hadoop.hbase.client.RegionInfo, java.lang.String, org.apache.hadoop.hbase.shaded.protobuf.generated.SnapshotProtos$SnapshotRegionManifest$StoreFile) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #9                  // Method org/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile.hasReference:()Z
       4: ifne          209
       7: aload_0
       8: getfield      #1                  // Field val$conf:Lorg/apache/hadoop/conf/Configuration;
      11: aload_0
      12: getfield      #2                  // Field val$snapshot:Lorg/apache/hadoop/hbase/client/SnapshotDescription;
      15: invokevirtual #10                 // Method org/apache/hadoop/hbase/client/SnapshotDescription.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      18: aload_1
      19: invokeinterface #11,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      24: aload_2
      25: aload_3
      26: invokevirtual #12                 // Method org/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile.getName:()Ljava/lang/String;
      29: invokestatic  #13                 // Method org/apache/hadoop/hbase/io/HFileLink.build:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/HFileLink;
      32: astore        4
      34: iconst_0
      35: istore        10
      37: aload_0
      38: getfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      41: aload         4
      43: invokevirtual #14                 // Method org/apache/hadoop/hbase/io/HFileLink.getArchivePath:()Lorg/apache/hadoop/fs/Path;
      46: invokevirtual #15                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      49: ifeq          82
      52: aload         4
      54: invokevirtual #14                 // Method org/apache/hadoop/hbase/io/HFileLink.getArchivePath:()Lorg/apache/hadoop/fs/Path;
      57: astore        8
      59: aload_0
      60: getfield      #4                  // Field val$uniqueHFilesArchiveSize:Ljava/util/concurrent/atomic/AtomicLong;
      63: astore        9
      65: aload_0
      66: getfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      69: aload         8
      71: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
      74: invokevirtual #17                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
      77: lstore        5
      79: goto          154
      82: aload_0
      83: getfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
      86: aload         4
      88: invokevirtual #18                 // Method org/apache/hadoop/hbase/io/HFileLink.getMobPath:()Lorg/apache/hadoop/fs/Path;
      91: invokevirtual #15                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      94: ifeq          127
      97: aload         4
      99: invokevirtual #18                 // Method org/apache/hadoop/hbase/io/HFileLink.getMobPath:()Lorg/apache/hadoop/fs/Path;
     102: astore        8
     104: aload_0
     105: getfield      #5                  // Field val$uniqueHFilesMobSize:Ljava/util/concurrent/atomic/AtomicLong;
     108: astore        9
     110: aload_0
     111: getfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
     114: aload         8
     116: invokevirtual #16                 // Method org/apache/hadoop/fs/FileSystem.getFileStatus:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
     119: invokevirtual #17                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
     122: lstore        5
     124: goto          154
     127: aload         4
     129: invokevirtual #19                 // Method org/apache/hadoop/hbase/io/HFileLink.getOriginPath:()Lorg/apache/hadoop/fs/Path;
     132: astore        8
     134: aload_0
     135: getfield      #6                  // Field val$uniqueHFilesSize:Ljava/util/concurrent/atomic/AtomicLong;
     138: astore        9
     140: aload         4
     142: aload_0
     143: getfield      #3                  // Field val$fs:Lorg/apache/hadoop/fs/FileSystem;
     146: invokevirtual #20                 // Method org/apache/hadoop/hbase/io/HFileLink.getFileStatus:(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FileStatus;
     149: invokevirtual #17                 // Method org/apache/hadoop/fs/FileStatus.getLen:()J
     152: lstore        5
     154: aload_0
     155: getfield      #7                  // Field val$filesMap:Ljava/util/concurrent/ConcurrentHashMap;
     158: aload         8
     160: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     163: checkcast     #22                 // class java/lang/Integer
     166: astore        7
     168: aload         7
     170: ifnull        183
     173: aload         7
     175: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
     178: istore        10
     180: goto          191
     183: aload         9
     185: lload         5
     187: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     190: pop2
     191: aload_0
     192: getfield      #7                  // Field val$filesMap:Ljava/util/concurrent/ConcurrentHashMap;
     195: aload         8
     197: iinc          10, 1
     200: iload         10
     202: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     205: invokevirtual #26                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     208: pop
     209: return
}
