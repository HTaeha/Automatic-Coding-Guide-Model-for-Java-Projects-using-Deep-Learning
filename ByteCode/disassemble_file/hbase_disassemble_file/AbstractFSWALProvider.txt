Compiled from "AbstractFSWALProvider.java"
public abstract class org.apache.hadoop.hbase.wal.AbstractFSWALProvider<T extends org.apache.hadoop.hbase.regionserver.wal.AbstractFSWAL<?>> implements org.apache.hadoop.hbase.wal.WALProvider {
  public static final java.lang.String SEPARATE_OLDLOGDIR;

  public static final boolean DEFAULT_SEPARATE_OLDLOGDIR;

  protected volatile T wal;

  protected org.apache.hadoop.hbase.wal.WALFactory factory;

  protected org.apache.hadoop.conf.Configuration conf;

  protected java.util.List<org.apache.hadoop.hbase.regionserver.wal.WALActionsListener> listeners;

  protected java.lang.String providerId;

  protected java.util.concurrent.atomic.AtomicBoolean initialized;

  protected java.lang.String logPrefix;

  public static final java.lang.String WAL_FILE_NAME_DELIMITER;

  public static final java.lang.String META_WAL_PROVIDER_ID;

  static final java.lang.String DEFAULT_PROVIDER_ID;

  public static final java.lang.String SPLITTING_EXT;

  public org.apache.hadoop.hbase.wal.AbstractFSWALProvider();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #8                  // Field initialized:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      31: dup
      32: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      35: putfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      38: return

  public void init(org.apache.hadoop.hbase.wal.WALFactory, org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field initialized:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          22
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #14                 // String WALProvider.init should only be called once.
      18: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #16                 // Field factory:Lorg/apache/hadoop/hbase/wal/WALFactory;
      27: aload_0
      28: aload_2
      29: putfield      #17                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      32: aload_0
      33: aload_3
      34: putfield      #18                 // Field providerId:Ljava/lang/String;
      37: new           #19                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: getfield      #21                 // Field org/apache/hadoop/hbase/wal/WALFactory.factoryId:Ljava/lang/String;
      48: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: astore        4
      53: aload_3
      54: ifnull        88
      57: aload_3
      58: ldc           #24                 // String .
      60: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      63: ifeq          76
      66: aload         4
      68: aload_3
      69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: goto          88
      76: aload         4
      78: ldc           #24                 // String .
      80: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_3
      84: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_0
      89: aload         4
      91: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: putfield      #27                 // Field logPrefix:Ljava/lang/String;
      97: aload_0
      98: aload_2
      99: invokevirtual #28                 // Method doInit:(Lorg/apache/hadoop/conf/Configuration;)V
     102: return

  public java.util.List<org.apache.hadoop.hbase.wal.WAL> getWALs();
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: ifnull        22
       7: iconst_1
       8: anewarray     #30                 // class org/apache/hadoop/hbase/wal/WAL
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      17: aastore
      18: invokestatic  #31                 // Method org/apache/hbase/thirdparty/com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      21: areturn
      22: aload_0
      23: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      26: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      31: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      36: aload_0
      37: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      40: ifnonnull     63
      43: invokestatic  #34                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      46: astore_1
      47: aload_0
      48: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      51: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      56: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: aload_1
      62: areturn
      63: iconst_1
      64: anewarray     #30                 // class org/apache/hadoop/hbase/wal/WAL
      67: dup
      68: iconst_0
      69: aload_0
      70: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      73: aastore
      74: invokestatic  #31                 // Method org/apache/hbase/thirdparty/com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      77: astore_1
      78: aload_0
      79: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      82: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      87: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      92: aload_1
      93: areturn
      94: astore_2
      95: aload_0
      96: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      99: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
     104: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     109: aload_2
     110: athrow
    Exception table:
       from    to  target type
          36    47    94   any
          63    78    94   any

  public T getWAL(org.apache.hadoop.hbase.client.RegionInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: astore_2
       5: aload_2
       6: ifnull        11
       9: aload_2
      10: areturn
      11: aload_0
      12: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      15: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      25: aload_0
      26: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      29: astore_2
      30: aload_2
      31: ifnull        52
      34: aload_2
      35: astore_3
      36: aload_0
      37: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
      40: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_3
      51: areturn
      52: aload_0
      53: invokevirtual #37                 // Method createWAL:()Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      56: astore_2
      57: iconst_0
      58: istore_3
      59: aload_2
      60: invokevirtual #38                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.init:()V
      63: iconst_1
      64: istore_3
      65: iload_3
      66: ifne          89
      69: aload_2
      70: invokevirtual #39                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.close:()V
      73: goto          89
      76: astore        4
      78: iload_3
      79: ifne          86
      82: aload_2
      83: invokevirtual #39                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.close:()V
      86: aload         4
      88: athrow
      89: aload_0
      90: aload_2
      91: putfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
      94: aload_2
      95: astore        4
      97: aload_0
      98: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
     101: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
     106: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     111: aload         4
     113: areturn
     114: astore        5
     116: aload_0
     117: getfield      #11                 // Field walCreateLock:Ljava/util/concurrent/locks/ReadWriteLock;
     120: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
     125: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     130: aload         5
     132: athrow
    Exception table:
       from    to  target type
          59    65    76   any
          76    78    76   any
          25    36   114   any
          52    97   114   any
         114   116   114   any

  protected abstract T createWAL() throws java.io.IOException;

  protected abstract void doInit(org.apache.hadoop.conf.Configuration) throws java.io.IOException;

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #40                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.shutdown:()V
      13: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: invokevirtual #39                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.close:()V
      13: return

  public long getNumLogFiles();
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: lconst_0
      10: goto          18
      13: aload_1
      14: invokevirtual #41                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getNumLogFiles:()I
      17: i2l
      18: lreturn

  public long getLogFileSize();
    Code:
       0: aload_0
       1: getfield      #29                 // Field wal:Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: lconst_0
      10: goto          17
      13: aload_1
      14: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getLogFileSize:()J
      17: lreturn

  public static int getNumRolledLogFiles(org.apache.hadoop.hbase.wal.WAL);
    Code:
       0: aload_0
       1: checkcast     #43                 // class org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
       4: invokevirtual #44                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getNumRolledLogFiles:()I
       7: ireturn

  public static long getLogFileSize(org.apache.hadoop.hbase.wal.WAL);
    Code:
       0: aload_0
       1: checkcast     #43                 // class org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
       4: invokevirtual #42                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getLogFileSize:()J
       7: lreturn

  public static org.apache.hadoop.fs.Path getCurrentFileName(org.apache.hadoop.hbase.wal.WAL);
    Code:
       0: aload_0
       1: checkcast     #43                 // class org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
       4: invokevirtual #45                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getCurrentFileName:()Lorg/apache/hadoop/fs/Path;
       7: areturn

  static void requestLogRoll(org.apache.hadoop.hbase.wal.WAL);
    Code:
       0: aload_0
       1: checkcast     #43                 // class org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
       4: invokevirtual #46                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.requestLogRoll:()V
       7: return

  public static long extractFileNumFromWAL(org.apache.hadoop.hbase.wal.WAL);
    Code:
       0: aload_0
       1: checkcast     #43                 // class org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
       4: invokevirtual #45                 // Method org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL.getCurrentFileName:()Lorg/apache/hadoop/fs/Path;
       7: astore_1
       8: aload_1
       9: ifnonnull     22
      12: new           #47                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #48                 // String The WAL path couldn't be null
      18: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: getstatic     #50                 // Field WAL_FILE_NAME_PATTERN:Ljava/util/regex/Pattern;
      25: aload_1
      26: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      29: invokevirtual #52                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      32: astore_2
      33: aload_2
      34: invokevirtual #53                 // Method java/util/regex/Matcher.matches:()Z
      37: ifeq          49
      40: aload_2
      41: iconst_2
      42: invokevirtual #54                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      45: invokestatic  #55                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      48: lreturn
      49: new           #47                 // class java/lang/IllegalArgumentException
      52: dup
      53: new           #19                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      60: aload_1
      61: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #56                 // String  is not a valid wal file name
      69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow

  public static boolean validateWALFilename(java.lang.String);
    Code:
       0: getstatic     #50                 // Field WAL_FILE_NAME_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #52                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #53                 // Method java/util/regex/Matcher.matches:()Z
      10: ireturn

  public static java.lang.String getWALDirectoryName(java.lang.String);
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #58                 // String WALs
       6: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #60                 // String /
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: aload_0
      19: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_1
      24: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static java.lang.String getWALArchiveDirectoryName(org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #61                 // String oldWALs
       6: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_2
      10: aload_0
      11: ldc           #62                 // String hbase.separate.oldlogdir.by.regionserver
      13: iconst_0
      14: invokevirtual #63                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      17: ifeq          33
      20: aload_2
      21: ldc           #60                 // String /
      23: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_2
      28: aload_1
      29: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_2
      34: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public static org.apache.hadoop.hbase.ServerName getServerNameFromWALDirectoryName(org.apache.hadoop.conf.Configuration, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: invokevirtual #65                 // Method java/lang/String.length:()I
       8: ldc           #58                 // String WALs
      10: invokevirtual #65                 // Method java/lang/String.length:()I
      13: if_icmpgt     18
      16: aconst_null
      17: areturn
      18: aload_0
      19: ifnonnull     32
      22: new           #47                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #66                 // String parameter conf must be set
      28: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: ldc           #67                 // String hbase.rootdir
      35: invokevirtual #68                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      38: astore_2
      39: aload_2
      40: ifnull        50
      43: aload_2
      44: invokevirtual #69                 // Method java/lang/String.isEmpty:()Z
      47: ifeq          60
      50: new           #47                 // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #70                 // String hbase.rootdir key not found in conf.
      56: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: new           #19                 // class java/lang/StringBuilder
      63: dup
      64: aload_2
      65: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      68: astore_3
      69: aload_2
      70: ldc           #60                 // String /
      72: invokevirtual #71                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      75: ifne          85
      78: aload_3
      79: bipush        47
      81: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: pop
      85: aload_3
      86: ldc           #58                 // String WALs
      88: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: ldc           #58                 // String WALs
      94: ldc           #60                 // String /
      96: invokevirtual #71                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      99: ifne          109
     102: aload_3
     103: bipush        47
     105: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: pop
     109: aload_3
     110: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: astore        4
     115: aload_0
     116: invokestatic  #73                 // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
     119: new           #64                 // class org/apache/hadoop/fs/Path
     122: dup
     123: aload_1
     124: invokespecial #74                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     127: invokevirtual #75                 // Method org/apache/hadoop/fs/FileSystem.makeQualified:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
     130: invokevirtual #76                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
     133: astore        5
     135: goto          182
     138: astore        6
     140: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     143: new           #19                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #77                 // String Call to makeQualified failed on
     152: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_1
     156: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #78                 // String
     161: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload         6
     166: invokevirtual #79                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     169: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokeinterface #80,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     180: aconst_null
     181: areturn
     182: aload         5
     184: aload         4
     186: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     189: ifne          194
     192: aconst_null
     193: areturn
     194: aload         5
     196: aload         4
     198: invokevirtual #65                 // Method java/lang/String.length:()I
     201: invokevirtual #81                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     204: astore        6
     206: aload         6
     208: bipush        47
     210: invokevirtual #82                 // Method java/lang/String.indexOf:(I)I
     213: ldc           #83                 // String a,0,0
     215: invokevirtual #65                 // Method java/lang/String.length:()I
     218: if_icmpge     223
     221: aconst_null
     222: areturn
     223: new           #64                 // class org/apache/hadoop/fs/Path
     226: dup
     227: aload_1
     228: invokespecial #74                 // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
     231: astore        7
     233: aload         7
     235: invokestatic  #84                 // Method getServerNameFromWALDirectoryName:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ServerName;
     238: areturn
    Exception table:
       from    to  target type
         115   135   138   Class java/lang/IllegalArgumentException

  public static org.apache.hadoop.hbase.ServerName getServerNameFromWALDirectoryName(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #58                 // String WALs
      11: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      21: astore_1
      22: aconst_null
      23: astore_2
      24: aload_1
      25: ldc           #87                 // String -splitting
      27: invokevirtual #71                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      30: ifeq          49
      33: aload_1
      34: iconst_0
      35: aload_1
      36: invokevirtual #65                 // Method java/lang/String.length:()I
      39: ldc           #87                 // String -splitting
      41: invokevirtual #65                 // Method java/lang/String.length:()I
      44: isub
      45: invokevirtual #88                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      48: astore_1
      49: aload_1
      50: invokestatic  #89                 // Method org/apache/hadoop/hbase/ServerName.parseServerName:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
      53: astore_2
      54: goto          99
      57: astore_3
      58: aconst_null
      59: astore_2
      60: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      63: new           #19                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #90                 // String Cannot parse a server name from path=
      72: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #92                 // String ;
      81: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_3
      85: invokevirtual #93                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      88: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokeinterface #94,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      99: aload_2
     100: ifnull        141
     103: aload_2
     104: invokevirtual #95                 // Method org/apache/hadoop/hbase/ServerName.getStartcode:()J
     107: lconst_0
     108: lcmp
     109: ifge          141
     112: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     115: new           #19                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #96                 // String Invalid log file path=
     124: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokeinterface #94,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     139: aconst_null
     140: astore_2
     141: aload_2
     142: areturn
    Exception table:
       from    to  target type
          49    54    57   Class java/lang/IllegalArgumentException
          49    54    57   Class java/lang/IllegalStateException

  public static boolean isMetaFile(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       4: invokestatic  #97                 // Method isMetaFile:(Ljava/lang/String;)Z
       7: ireturn

  public static boolean isMetaFile(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: ldc           #98                 // String .meta
       7: invokevirtual #71                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean isArchivedLogFile(org.apache.hadoop.fs.Path);
    Code:
       0: ldc           #99                 // String /oldWALs/
       2: astore_1
       3: aload_0
       4: invokevirtual #76                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: aload_1
       8: invokevirtual #100                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      11: ireturn

  public static org.apache.hadoop.fs.Path getArchivedLogPath(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #101                // Method org/apache/hadoop/hbase/util/FSUtils.getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: astore_2
       5: new           #64                 // class org/apache/hadoop/fs/Path
       8: dup
       9: aload_2
      10: ldc           #61                 // String oldWALs
      12: invokespecial #102                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      15: astore_3
      16: aload_1
      17: ldc           #62                 // String hbase.separate.oldlogdir.by.regionserver
      19: iconst_0
      20: invokevirtual #63                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      23: ifeq          80
      26: aload_0
      27: invokestatic  #84                 // Method getServerNameFromWALDirectoryName:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ServerName;
      30: astore        4
      32: aload         4
      34: ifnonnull     66
      37: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      40: new           #19                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #103                // String Couldn't locate log:
      49: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #104,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      64: aload_0
      65: areturn
      66: new           #64                 // class org/apache/hadoop/fs/Path
      69: dup
      70: aload_3
      71: aload         4
      73: invokevirtual #105                // Method org/apache/hadoop/hbase/ServerName.getServerName:()Ljava/lang/String;
      76: invokespecial #102                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      79: astore_3
      80: new           #64                 // class org/apache/hadoop/fs/Path
      83: dup
      84: aload_3
      85: aload_0
      86: invokevirtual #51                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      89: invokespecial #102                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      92: astore        4
      94: aload_1
      95: invokestatic  #106                // Method org/apache/hadoop/hbase/util/FSUtils.getWALFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      98: astore        5
     100: aload         5
     102: aload         4
     104: invokevirtual #107                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     107: ifeq          150
     110: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     113: new           #19                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #108                // String Log
     122: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: ldc           #109                // String  was moved to
     131: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload         4
     136: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokeinterface #80,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     147: aload         4
     149: areturn
     150: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     153: new           #19                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #103                // String Couldn't locate log:
     162: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     169: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokeinterface #104,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     177: aload_0
     178: areturn

  public static org.apache.hadoop.hbase.wal.WAL$Reader openReader(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: ldc2_w        #110                // long 2000l
       3: lstore_2
       4: bipush        30
       6: istore        4
       8: iconst_0
       9: istore        5
      11: aconst_null
      12: astore        6
      14: aconst_null
      15: astore        7
      17: aload         7
      19: ifnonnull     157
      22: iload         5
      24: iinc          5, 1
      27: iload         4
      29: if_icmpge     157
      32: aload_0
      33: aload_1
      34: invokevirtual #112                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      37: aload_0
      38: aload_1
      39: invokestatic  #113                // Method org/apache/hadoop/hbase/wal/WALFactory.createReader:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
      42: astore        7
      44: aload         7
      46: areturn
      47: astore        8
      49: aload_0
      50: aload_1
      51: invokestatic  #115                // Method getArchivedLogPath:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      54: astore        9
      56: aload_0
      57: aload         9
      59: invokestatic  #116                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      62: ifne          72
      65: aload         9
      67: aload_1
      68: invokestatic  #117                // Method openReader:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
      71: areturn
      72: aload         8
      74: athrow
      75: astore        8
      77: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      80: new           #19                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #119                // String Try to recover the WAL lease
      89: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: aload         8
     101: invokeinterface #120,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: aload_1
     107: aload_0
     108: invokestatic  #121                // Method recoverLease:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
     111: aconst_null
     112: astore        7
     114: aload         8
     116: astore        6
     118: goto          140
     121: astore        8
     123: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #123                // String Got NPE opening reader, will retry.
     128: invokeinterface #94,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     133: aconst_null
     134: astore        7
     136: aload         8
     138: astore        6
     140: aload         7
     142: ifnonnull     17
     145: lload_2
     146: invokestatic  #124                // Method java/lang/Thread.sleep:(J)V
     149: goto          17
     152: astore        8
     154: goto          17
     157: new           #126                // class java/io/IOException
     160: dup
     161: ldc           #127                // String Could not open reader
     163: aload         6
     165: invokespecial #128                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     168: athrow
    Exception table:
       from    to  target type
          32    46    47   Class java/io/FileNotFoundException
          32    46    75   Class org/apache/hadoop/hbase/util/LeaseNotRecoveredException
          32    46   121   Class java/lang/NullPointerException
         145   149   152   Class java/lang/InterruptedException

  public void addWALActionsListener(org.apache.hadoop.hbase.regionserver.wal.WALActionsListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #135,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public static java.lang.String getWALPrefixFromWALName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #136                // Method getWALNameGroupFromWALName:(Ljava/lang/String;I)Ljava/lang/String;
       5: areturn

  public static long getWALStartTimeFromWALName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_2
       2: invokestatic  #136                // Method getWALNameGroupFromWALName:(Ljava/lang/String;I)Ljava/lang/String;
       5: invokestatic  #55                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
       8: lreturn

  public org.apache.hadoop.hbase.wal.WAL getWAL(org.apache.hadoop.hbase.client.RegionInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method getWAL:(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
       5: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/apache/hadoop/hbase/wal/AbstractFSWALProvider
       2: invokestatic  #138                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #139                // String (.+)\.(\d+)(\.[0-9A-Za-z]+)?
      10: invokestatic  #140                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #50                 // Field WAL_FILE_NAME_PATTERN:Ljava/util/regex/Pattern;
      16: return
}
