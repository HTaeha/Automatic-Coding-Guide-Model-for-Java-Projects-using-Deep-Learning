Compiled from "CommonFSUtils.java"
public abstract class org.apache.hadoop.hbase.util.CommonFSUtils {
  public static final java.lang.String HBASE_WAL_DIR;

  public static final java.lang.String UNSAFE_STREAM_CAPABILITY_ENFORCE;

  public static final java.lang.String FULL_RWX_PERMISSIONS;

  static final boolean $assertionsDisabled;

  protected org.apache.hadoop.hbase.util.CommonFSUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isStartingWithPath(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: invokevirtual #4                  // Method java/net/URI.getPath:()Ljava/lang/String;
       7: astore_2
       8: new           #5                  // class org/apache/hadoop/fs/Path
      11: dup
      12: aload_1
      13: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      16: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
      19: invokevirtual #4                  // Method java/net/URI.getPath:()Ljava/lang/String;
      22: astore_3
      23: aload_3
      24: aload_2
      25: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ireturn

  public static boolean isMatchingTail(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: new           #5                  // class org/apache/hadoop/fs/Path
       4: dup
       5: aload_1
       6: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
       9: invokestatic  #8                  // Method isMatchingTail:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      12: ireturn

  public static boolean isMatchingTail(org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method org/apache/hadoop/fs/Path.depth:()I
       4: aload_1
       5: invokevirtual #9                  // Method org/apache/hadoop/fs/Path.depth:()I
       8: if_icmpeq     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: astore_2
      15: aload_0
      16: astore        4
      18: iconst_0
      19: istore        6
      21: aload_2
      22: invokevirtual #10                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: ifnull        37
      30: aload_3
      31: invokevirtual #11                 // Method java/lang/String.length:()I
      34: ifgt          43
      37: iconst_1
      38: istore        6
      40: goto          87
      43: aload         4
      45: invokevirtual #10                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      48: astore        5
      50: aload         5
      52: ifnull        87
      55: aload         5
      57: invokevirtual #11                 // Method java/lang/String.length:()I
      60: ifgt          66
      63: goto          87
      66: aload_2
      67: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      70: astore_2
      71: aload         4
      73: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
      76: astore        4
      78: aload_3
      79: aload         5
      81: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifne          21
      87: iload         6
      89: ireturn

  public static boolean deleteDirectory(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ifeq          21
       8: aload_0
       9: aload_1
      10: iconst_1
      11: invokevirtual #15                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static long getDefaultBlockSize(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: astore_3
       7: aload_3
       8: ldc           #17                 // String getDefaultBlockSize
      10: iconst_1
      11: anewarray     #18                 // class java/lang/Class
      14: dup
      15: iconst_0
      16: ldc           #5                  // class org/apache/hadoop/fs/Path
      18: aastore
      19: invokevirtual #19                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      22: astore_2
      23: goto          57
      26: astore        4
      28: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      31: ldc           #21                 // String FileSystem doesn't support getDefaultBlockSize
      33: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      38: goto          57
      41: astore        4
      43: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      46: ldc           #24                 // String Doesn't have access to getDefaultBlockSize on FileSystems
      48: aload         4
      50: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: aconst_null
      56: astore_2
      57: aload_2
      58: ifnonnull     67
      61: aload_0
      62: aload_1
      63: invokevirtual #26                 // Method org/apache/hadoop/fs/FileSystem.getDefaultBlockSize:(Lorg/apache/hadoop/fs/Path;)J
      66: lreturn
      67: aload_2
      68: aload_0
      69: iconst_1
      70: anewarray     #27                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_1
      76: aastore
      77: invokevirtual #28                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      80: astore        4
      82: aload         4
      84: checkcast     #29                 // class java/lang/Long
      87: invokevirtual #30                 // Method java/lang/Long.longValue:()J
      90: lreturn
      91: astore        4
      93: new           #32                 // class java/io/IOException
      96: dup
      97: aload         4
      99: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     102: athrow
    Exception table:
       from    to  target type
           7    23    26   Class java/lang/NoSuchMethodException
           7    23    41   Class java/lang/SecurityException
          67    90    91   Class java/lang/Exception

  public static short getDefaultReplication(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: astore_3
       7: aload_3
       8: ldc           #34                 // String getDefaultReplication
      10: iconst_1
      11: anewarray     #18                 // class java/lang/Class
      14: dup
      15: iconst_0
      16: ldc           #5                  // class org/apache/hadoop/fs/Path
      18: aastore
      19: invokevirtual #19                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      22: astore_2
      23: goto          57
      26: astore        4
      28: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      31: ldc           #35                 // String FileSystem doesn't support getDefaultReplication
      33: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      38: goto          57
      41: astore        4
      43: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      46: ldc           #36                 // String Doesn't have access to getDefaultReplication on FileSystems
      48: aload         4
      50: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: aconst_null
      56: astore_2
      57: aload_2
      58: ifnonnull     67
      61: aload_0
      62: aload_1
      63: invokevirtual #37                 // Method org/apache/hadoop/fs/FileSystem.getDefaultReplication:(Lorg/apache/hadoop/fs/Path;)S
      66: ireturn
      67: aload_2
      68: aload_0
      69: iconst_1
      70: anewarray     #27                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_1
      76: aastore
      77: invokevirtual #28                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      80: astore        4
      82: aload         4
      84: checkcast     #38                 // class java/lang/Number
      87: invokevirtual #39                 // Method java/lang/Number.shortValue:()S
      90: ireturn
      91: astore        4
      93: new           #32                 // class java/io/IOException
      96: dup
      97: aload         4
      99: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     102: athrow
    Exception table:
       from    to  target type
           7    23    26   Class java/lang/NoSuchMethodException
           7    23    41   Class java/lang/SecurityException
          67    90    91   Class java/lang/Exception

  public static int getDefaultBufferSize(org.apache.hadoop.fs.FileSystem);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
       4: ldc           #41                 // String io.file.buffer.size
       6: sipush        4096
       9: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      12: ireturn

  public static org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.permission.FsPermission, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          56
      11: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      14: new           #44                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #46                 // String Creating file=
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #49                 // String  with permission=
      32: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #50                 // String , overwrite=
      41: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_3
      45: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      48: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      56: aload_0
      57: aload_1
      58: aload_2
      59: iload_3
      60: aload_0
      61: invokestatic  #54                 // Method getDefaultBufferSize:(Lorg/apache/hadoop/fs/FileSystem;)I
      64: aload_0
      65: aload_1
      66: invokestatic  #55                 // Method getDefaultReplication:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
      69: aload_0
      70: aload_1
      71: invokestatic  #56                 // Method getDefaultBlockSize:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
      74: aconst_null
      75: invokevirtual #57                 // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      78: areturn

  public static org.apache.hadoop.fs.permission.FsPermission getFilePermissions(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.conf.Configuration, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #59                 // String hbase.data.umask.enable
       3: iconst_0
       4: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: istore_3
       8: iload_3
       9: ifeq          102
      12: new           #61                 // class org/apache/hadoop/fs/permission/FsPermission
      15: dup
      16: ldc           #63                 // String 777
      18: invokespecial #64                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Ljava/lang/String;)V
      21: astore        4
      23: aload_1
      24: aload_2
      25: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      28: astore        5
      30: aload         5
      32: ifnonnull     39
      35: invokestatic  #66                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
      38: areturn
      39: new           #61                 // class org/apache/hadoop/fs/permission/FsPermission
      42: dup
      43: aload         5
      45: invokespecial #64                 // Method org/apache/hadoop/fs/permission/FsPermission."<init>":(Ljava/lang/String;)V
      48: astore        6
      50: aload         4
      52: aload         6
      54: invokevirtual #67                 // Method org/apache/hadoop/fs/permission/FsPermission.applyUMask:(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
      57: areturn
      58: astore        4
      60: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      63: new           #44                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #69                 // String Incorrect umask attempted to be created:
      72: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: aload_2
      77: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      80: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #70                 // String , using default file permissions.
      85: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: aload         4
      93: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: invokestatic  #66                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
     101: areturn
     102: invokestatic  #66                 // Method org/apache/hadoop/fs/permission/FsPermission.getFileDefault:()Lorg/apache/hadoop/fs/permission/FsPermission;
     105: areturn
    Exception table:
       from    to  target type
          12    38    58   Class java/lang/IllegalArgumentException
          39    57    58   Class java/lang/IllegalArgumentException

  public static org.apache.hadoop.fs.Path validateRootPath(org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: new           #72                 // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       8: invokespecial #74                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: invokevirtual #75                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ifnonnull     31
      21: new           #32                 // class java/io/IOException
      24: dup
      25: ldc           #76                 // String Root directory does not have a scheme
      27: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: areturn
      33: astore_1
      34: new           #32                 // class java/io/IOException
      37: dup
      38: ldc           #79                 // String Root directory path is not a valid URI -- check your hbase.rootdir configuration
      40: invokespecial #77                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: astore_2
      44: aload_2
      45: aload_1
      46: invokevirtual #80                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      49: pop
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    32    33   Class java/net/URISyntaxException

  public static java.lang.String removeWALRootPath(org.apache.hadoop.fs.Path, org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: astore_2
       5: aload_0
       6: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      15: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: ifne          23
      21: aload_3
      22: areturn
      23: aload_3
      24: aload_2
      25: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
      28: invokevirtual #11                 // Method java/lang/String.length:()I
      31: iconst_1
      32: iadd
      33: invokevirtual #82                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: areturn

  public static java.lang.String getPath(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/apache/hadoop/fs/Path.toUri:()Ljava/net/URI;
       4: invokevirtual #4                  // Method java/net/URI.getPath:()Ljava/lang/String;
       7: areturn

  public static org.apache.hadoop.fs.Path getRootDir(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: ldc           #83                 // String hbase.rootdir
       7: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      10: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      13: astore_1
      14: aload_1
      15: aload_0
      16: invokevirtual #84                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokevirtual #85                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      25: aload_2
      26: invokevirtual #86                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      29: invokevirtual #87                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      32: areturn

  public static void setRootDir(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #83                 // String hbase.rootdir
       3: aload_1
       4: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: invokevirtual #88                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static void setFsDefault(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #89                 // String fs.defaultFS
       3: aload_1
       4: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: invokevirtual #88                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static org.apache.hadoop.fs.FileSystem getRootDirFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: aload_1
       6: aload_0
       7: invokevirtual #84                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      10: areturn

  public static org.apache.hadoop.fs.Path getWALRootDir(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: ldc           #91                 // String hbase.wal.dir
       7: aload_0
       8: ldc           #83                 // String hbase.rootdir
      10: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      13: invokevirtual #92                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: aload_0
      22: invokestatic  #93                 // Method isValidWALRootDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Z
      25: ifne          33
      28: aload_0
      29: invokestatic  #90                 // Method getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      32: areturn
      33: aload_1
      34: aload_0
      35: invokevirtual #84                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      38: astore_2
      39: aload_1
      40: aload_2
      41: invokevirtual #85                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      44: aload_2
      45: invokevirtual #86                 // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      48: invokevirtual #87                 // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      51: areturn

  public static void setWALRootDir(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #91                 // String hbase.wal.dir
       3: aload_1
       4: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       7: invokevirtual #88                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public static org.apache.hadoop.fs.FileSystem getWALFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: aload_1
       6: aload_0
       7: invokevirtual #84                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      10: astore_2
      11: aload_0
      12: ldc           #94                 // String hbase.unsafe.stream.capability.enforce
      14: invokevirtual #65                 // Method org/apache/hadoop/conf/Configuration.get:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: aload_3
      19: ifnull        32
      22: aload_2
      23: invokevirtual #40                 // Method org/apache/hadoop/fs/FileSystem.getConf:()Lorg/apache/hadoop/conf/Configuration;
      26: ldc           #94                 // String hbase.unsafe.stream.capability.enforce
      28: aload_3
      29: invokevirtual #88                 // Method org/apache/hadoop/conf/Configuration.set:(Ljava/lang/String;Ljava/lang/String;)V
      32: aload_2
      33: areturn

  public static org.apache.hadoop.fs.Path getWALRegionDir(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.TableName, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #100                // Method getWALTableDir:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
       9: aload_2
      10: invokespecial #101                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      13: areturn

  public static org.apache.hadoop.fs.Path getWALTableDir(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.TableName) throws java.io.IOException;
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: new           #5                  // class org/apache/hadoop/fs/Path
       7: dup
       8: aload_0
       9: invokestatic  #81                 // Method getWALRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
      12: aload_1
      13: invokevirtual #102                // Method org/apache/hadoop/hbase/TableName.getNamespaceAsString:()Ljava/lang/String;
      16: invokespecial #101                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      19: aload_1
      20: invokevirtual #103                // Method org/apache/hadoop/hbase/TableName.getQualifierAsString:()Ljava/lang/String;
      23: invokespecial #101                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      26: areturn

  public static org.apache.hadoop.fs.Path getTableDir(org.apache.hadoop.fs.Path, org.apache.hadoop.hbase.TableName);
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #102                // Method org/apache/hadoop/hbase/TableName.getNamespaceAsString:()Ljava/lang/String;
       9: invokestatic  #104                // Method getNamespaceDir:(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      12: aload_1
      13: invokevirtual #103                // Method org/apache/hadoop/hbase/TableName.getQualifierAsString:()Ljava/lang/String;
      16: invokespecial #101                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      19: areturn

  public static org.apache.hadoop.hbase.TableName getTableName(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method org/apache/hadoop/fs/Path.getParent:()Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #10                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       7: aload_0
       8: invokevirtual #10                 // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
      11: invokestatic  #105                // Method org/apache/hadoop/hbase/TableName.valueOf:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
      14: areturn

  public static org.apache.hadoop.fs.Path getNamespaceDir(org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: new           #5                  // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: new           #5                  // class org/apache/hadoop/fs/Path
       8: dup
       9: ldc           #106                // String data
      11: new           #5                  // class org/apache/hadoop/fs/Path
      14: dup
      15: aload_1
      16: invokespecial #6                  // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      19: invokespecial #107                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
      22: invokespecial #108                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
      25: areturn

  public static void setStoragePolicy(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #109                // Method setStoragePolicy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)V
       7: goto          22
      10: astore_3
      11: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #110                // String We have chosen not to throw exception but some unexpectedly thrown out
      16: aload_3
      17: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  static void setStoragePolicy(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     26
       4: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       7: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      12: ifeq          25
      15: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #111                // String We were passed a null storagePolicy, exiting early.
      20: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      25: return
      26: aload_2
      27: invokevirtual #112                // Method java/lang/String.trim:()Ljava/lang/String;
      30: astore        4
      32: aload         4
      34: invokevirtual #113                // Method java/lang/String.isEmpty:()Z
      37: ifeq          62
      40: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      43: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      48: ifeq          61
      51: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      54: ldc           #114                // String We were passed an empty storagePolicy, exiting early.
      56: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      61: return
      62: aload         4
      64: getstatic     #115                // Field java/util/Locale.ROOT:Ljava/util/Locale;
      67: invokevirtual #116                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      70: astore        4
      72: aload         4
      74: ldc           #117                // String NONE
      76: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          106
      82: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      85: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      90: ifeq          105
      93: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      96: ldc           #118                // String We were passed the defer-to-hdfs policy {}, exiting early.
      98: aload         4
     100: invokeinterface #119,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     105: return
     106: aload_0
     107: aload_1
     108: aload         4
     110: invokestatic  #120                // Method invokeSetStoragePolicy:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     113: goto          148
     116: astore        5
     118: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     121: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     126: ifeq          141
     129: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
     132: ldc           #121                // String Failed to invoke set storage policy API on FS
     134: aload         5
     136: invokeinterface #122,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     141: iload_3
     142: ifeq          148
     145: aload         5
     147: athrow
     148: return
    Exception table:
       from    to  target type
         106   113   116   Class java/io/IOException

  public static boolean isHDFS(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #150                // Method org/apache/hadoop/fs/FileSystem.get:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       4: astore_1
       5: aload_1
       6: invokevirtual #85                 // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
       9: invokevirtual #75                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ldc           #151                // String hdfs
      16: invokevirtual #152                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      19: ireturn

  public static boolean isRecoveredEdits(org.apache.hadoop.fs.Path);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method org/apache/hadoop/fs/Path.toString:()Ljava/lang/String;
       4: ldc           #153                // String recovered.edits
       6: invokevirtual #154                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       9: ireturn

  public static org.apache.hadoop.fs.FileSystem getCurrentFileSystem(org.apache.hadoop.conf.Configuration) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: aload_0
       5: invokevirtual #84                 // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
       8: areturn

  public static org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.PathFilter) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: ifnonnull     14
       6: aload_0
       7: aload_1
       8: invokevirtual #155                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      11: goto          20
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #156                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
      20: astore_3
      21: goto          64
      24: astore        4
      26: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      29: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      34: ifeq          64
      37: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      40: new           #44                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: ldc           #158                // String  doesn't exist
      53: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      64: aload_3
      65: ifnull        74
      68: aload_3
      69: arraylength
      70: iconst_1
      71: if_icmpge     76
      74: aconst_null
      75: areturn
      76: aload_3
      77: areturn
    Exception table:
       from    to  target type
           2    21    24   Class java/io/FileNotFoundException

  public static org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #159                // Method listStatus:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
       6: areturn

  public static java.util.List<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: iconst_0
       5: invokevirtual #160                // Method org/apache/hadoop/fs/FileSystem.listFiles:(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/RemoteIterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #161,  1          // InterfaceMethod org/apache/hadoop/fs/RemoteIterator.hasNext:()Z
      15: ifeq          42
      18: aload_2
      19: ifnonnull     26
      22: invokestatic  #162                // Method org/apache/hbase/thirdparty/com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      25: astore_2
      26: aload_2
      27: aload_3
      28: invokeinterface #163,  1          // InterfaceMethod org/apache/hadoop/fs/RemoteIterator.next:()Ljava/lang/Object;
      33: invokeinterface #164,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: goto          9
      42: goto          84
      45: astore_3
      46: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      49: invokeinterface #43,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      54: ifeq          84
      57: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      60: new           #44                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_1
      68: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: ldc           #158                // String  doesn't exist
      73: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      84: aload_2
      85: areturn
    Exception table:
       from    to  target type
           2    42    45   Class java/io/FileNotFoundException

  public static boolean delete(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #15                 // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
       6: ireturn

  public static boolean isExists(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
       5: ireturn

  public static void logFileSystemState(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.slf4j.Logger) throws java.io.IOException;
    Code:
       0: aload_2
       1: new           #44                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #165                // String File system contents for path
      10: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      17: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokeinterface #137,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      25: aload_2
      26: aload_0
      27: aload_1
      28: ldc           #166                // String |-
      30: invokestatic  #167                // Method logFSTree:(Lorg/slf4j/Logger;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      33: return

  public static boolean renameAndSetModifyTime(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // Method org/apache/hadoop/hbase/util/EnvironmentEdgeManager.currentTime:()J
       5: ldc2_w        #172                // long -1l
       8: invokevirtual #174                // Method org/apache/hadoop/fs/FileSystem.setTimes:(Lorg/apache/hadoop/fs/Path;JJ)V
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokevirtual #175                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      17: ireturn

  public static void setupShortCircuitRead(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: ldc           #176                // String dfs.client.read.shortcircuit.skip.checksum
       3: iconst_0
       4: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
       7: istore_1
       8: aload_0
       9: ldc           #177                // String hbase.regionserver.checksum.verify
      11: iconst_1
      12: invokevirtual #60                 // Method org/apache/hadoop/conf/Configuration.getBoolean:(Ljava/lang/String;Z)Z
      15: istore_2
      16: iload_1
      17: ifeq          75
      20: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      23: new           #44                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #178                // String Configuration \"dfs.client.read.shortcircuit.skip.checksum\" should not be set to true.
      32: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: ifeq          44
      39: ldc           #179                // String  HBase checksum doesn't require it, see https://issues.apache.org/jira/browse/HBASE-6868.
      41: goto          46
      44: ldc           #180                // String
      46: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #181,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      57: getstatic     #182                // Field $assertionsDisabled:Z
      60: ifne          75
      63: iload_1
      64: ifeq          75
      67: new           #183                // class java/lang/AssertionError
      70: dup
      71: invokespecial #184                // Method java/lang/AssertionError."<init>":()V
      74: athrow
      75: aload_0
      76: invokestatic  #185                // Method checkShortCircuitReadBufferSize:(Lorg/apache/hadoop/conf/Configuration;)V
      79: return

  public static void checkShortCircuitReadBufferSize(org.apache.hadoop.conf.Configuration);
    Code:
       0: ldc           #186                // int 131072
       2: istore_1
       3: iconst_m1
       4: istore_2
       5: ldc           #187                // String dfs.client.read.shortcircuit.buffer.size
       7: astore_3
       8: aload_0
       9: ldc           #187                // String dfs.client.read.shortcircuit.buffer.size
      11: iconst_m1
      12: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      15: istore        4
      17: iload         4
      19: iconst_m1
      20: if_icmpeq     24
      23: return
      24: aload_0
      25: ldc           #188                // String hbase.dfs.client.read.shortcircuit.buffer.size
      27: ldc           #186                // int 131072
      29: invokevirtual #42                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      32: istore        5
      34: aload_0
      35: ldc           #187                // String dfs.client.read.shortcircuit.buffer.size
      37: iload         5
      39: invokestatic  #189                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      42: invokevirtual #190                // Method org/apache/hadoop/conf/Configuration.setIfUnset:(Ljava/lang/String;Ljava/lang/String;)V
      45: return

  public static org.apache.hadoop.fs.FSDataOutputStream createForWal(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #191                // Method org/apache/hadoop/hbase/util/CommonFSUtils$DfsBuilderUtility.createHelper:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
       6: areturn

  public static org.apache.hadoop.fs.FSDataOutputStream createForWal(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, int, short, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: lload         5
       8: iload         7
      10: invokestatic  #192                // Method org/apache/hadoop/hbase/util/CommonFSUtils$DfsBuilderUtility.createHelper:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZISJZ)Lorg/apache/hadoop/fs/FSDataOutputStream;
      13: areturn

  public static boolean hasCapability(org.apache.hadoop.fs.FSDataOutputStream, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #193                // class java/lang/NullPointerException
       7: dup
       8: ldc           #194                // String stream parameter must not be null.
      10: invokespecial #195                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_1
      15: istore_2
      16: getstatic     #196                // Field org/apache/hadoop/hbase/util/CommonFSUtils$StreamCapabilities.PRESENT:Z
      19: ifeq          74
      22: iconst_0
      23: istore_2
      24: getstatic     #197                // Field org/apache/hadoop/hbase/util/CommonFSUtils$StreamCapabilities.CLASS:Ljava/lang/Class;
      27: aload_0
      28: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #198                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      34: ifeq          74
      37: getstatic     #199                // Field org/apache/hadoop/hbase/util/CommonFSUtils$StreamCapabilities.METHOD:Ljava/lang/reflect/Method;
      40: aload_0
      41: iconst_1
      42: anewarray     #27                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_1
      48: aastore
      49: invokevirtual #28                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #200                // class java/lang/Boolean
      55: invokevirtual #201                // Method java/lang/Boolean.booleanValue:()Z
      58: istore_2
      59: goto          74
      62: astore_3
      63: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #203                // String Your Hadoop installation's StreamCapabilities implementation doesn't match our understanding of how it's supposed to work. Please file a JIRA and include the following stack trace. In the mean time we're interpreting this behavior difference as a lack of capability support, which will probably cause a failure.
      68: aload_3
      69: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: iload_2
      75: ireturn
    Exception table:
       from    to  target type
          37    59    62   Class java/lang/IllegalAccessException
          37    59    62   Class java/lang/IllegalArgumentException
          37    59    62   Class java/lang/reflect/InvocationTargetException

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #62                 // class org/apache/hadoop/hbase/util/CommonFSUtils
       2: invokevirtual #204                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #182                // Field $assertionsDisabled:Z
      16: ldc           #62                 // class org/apache/hadoop/hbase/util/CommonFSUtils
      18: invokestatic  #205                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      24: new           #206                // class java/util/concurrent/ConcurrentHashMap
      27: dup
      28: invokespecial #207                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      31: putstatic     #128                // Field warningMap:Ljava/util/Map;
      34: return
}
