Compiled from "ReplicationPeerConfig.java"
public class org.apache.hadoop.hbase.replication.ReplicationPeerConfig {
  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field tableCFsMap:Ljava/util/Map;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field namespaces:Ljava/util/Set;
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field replicateAllUserTables:Z
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
      24: aload_0
      25: aconst_null
      26: putfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
      29: aload_0
      30: lconst_0
      31: putfield      #8                  // Field bandwidth:J
      34: aload_0
      35: new           #34                 // class java/util/TreeMap
      38: dup
      39: getstatic     #35                 // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      42: invokespecial #36                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      45: putfield      #15                 // Field peerData:Ljava/util/Map;
      48: aload_0
      49: new           #30                 // class java/util/HashMap
      52: dup
      53: iconst_0
      54: invokespecial #37                 // Method java/util/HashMap."<init>":(I)V
      57: putfield      #17                 // Field configuration:Ljava/util/Map;
      60: aload_0
      61: iconst_0
      62: putfield      #27                 // Field serial:Z
      65: return

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setClusterKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field clusterKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setReplicationEndpointImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field replicationEndpointImpl:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getClusterKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clusterKey:Ljava/lang/String;
       4: areturn

  public java.lang.String getReplicationEndpointImpl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field replicationEndpointImpl:Ljava/lang/String;
       4: areturn

  public java.util.Map<byte[], byte[]> getPeerData();
    Code:
       0: aload_0
       1: getfield      #15                 // Field peerData:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getConfiguration();
    Code:
       0: aload_0
       1: getfield      #17                 // Field configuration:Ljava/util/Map;
       4: areturn

  public java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>> getTableCFsMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tableCFsMap:Ljava/util/Map;
       4: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setTableCFsMap(java.util.Map<org.apache.hadoop.hbase.TableName, ? extends java.util.Collection<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field tableCFsMap:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Set<java.lang.String> getNamespaces();
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespaces:Ljava/util/Set;
       4: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setNamespaces(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field namespaces:Ljava/util/Set;
       5: aload_0
       6: areturn

  public long getBandwidth();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bandwidth:J
       4: lreturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setBandwidth(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field bandwidth:J
       5: aload_0
       6: areturn

  public boolean replicateAllUserTables();
    Code:
       0: aload_0
       1: getfield      #5                  // Field replicateAllUserTables:Z
       4: ireturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setReplicateAllUserTables(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field replicateAllUserTables:Z
       5: aload_0
       6: areturn

  public java.util.Map<org.apache.hadoop.hbase.TableName, java.util.List<java.lang.String>> getExcludeTableCFsMap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
       4: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setExcludeTableCFsMap(java.util.Map<org.apache.hadoop.hbase.TableName, ? extends java.util.Collection<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Set<java.lang.String> getExcludeNamespaces();
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
       4: areturn

  public org.apache.hadoop.hbase.replication.ReplicationPeerConfig setExcludeNamespaces(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
       5: aload_0
       6: areturn

  public java.lang.String getRemoteWALDir();
    Code:
       0: aload_0
       1: getfield      #29                 // Field remoteWALDir:Ljava/lang/String;
       4: areturn

  public boolean isSyncReplication();
    Code:
       0: aload_0
       1: getfield      #29                 // Field remoteWALDir:Ljava/lang/String;
       4: invokestatic  #38                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder newBuilder();
    Code:
       0: new           #39                 // class org/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl
       3: dup
       4: invokespecial #40                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl."<init>":()V
       7: areturn

  public boolean isSerial();
    Code:
       0: aload_0
       1: getfield      #27                 // Field serial:Z
       4: ireturn

  public static org.apache.hadoop.hbase.replication.ReplicationPeerConfigBuilder newBuilder(org.apache.hadoop.hbase.replication.ReplicationPeerConfig);
    Code:
       0: new           #39                 // class org/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl
       3: dup
       4: invokespecial #40                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #41                 // Method getClusterKey:()Ljava/lang/String;
      13: invokevirtual #42                 // Method org/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl.setClusterKey:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      16: aload_0
      17: invokevirtual #43                 // Method getReplicationEndpointImpl:()Ljava/lang/String;
      20: invokeinterface #44,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setReplicationEndpointImpl:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      25: aload_0
      26: invokevirtual #45                 // Method getPeerData:()Ljava/util/Map;
      29: invokeinterface #46,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.putAllPeerData:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      34: aload_0
      35: invokevirtual #47                 // Method getConfiguration:()Ljava/util/Map;
      38: invokeinterface #48,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.putAllConfiguration:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      43: aload_0
      44: invokevirtual #49                 // Method getTableCFsMap:()Ljava/util/Map;
      47: invokeinterface #50,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setTableCFsMap:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      52: aload_0
      53: invokevirtual #51                 // Method getNamespaces:()Ljava/util/Set;
      56: invokeinterface #52,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setNamespaces:(Ljava/util/Set;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      61: aload_0
      62: invokevirtual #53                 // Method replicateAllUserTables:()Z
      65: invokeinterface #54,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setReplicateAllUserTables:(Z)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      70: aload_0
      71: invokevirtual #55                 // Method getExcludeTableCFsMap:()Ljava/util/Map;
      74: invokeinterface #56,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setExcludeTableCFsMap:(Ljava/util/Map;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      79: aload_0
      80: invokevirtual #57                 // Method getExcludeNamespaces:()Ljava/util/Set;
      83: invokeinterface #58,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setExcludeNamespaces:(Ljava/util/Set;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      88: aload_0
      89: invokevirtual #59                 // Method getBandwidth:()J
      92: invokeinterface #60,  3           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setBandwidth:(J)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
      97: aload_0
      98: invokevirtual #61                 // Method isSerial:()Z
     101: invokeinterface #62,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setSerial:(Z)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
     106: aload_0
     107: invokevirtual #63                 // Method getRemoteWALDir:()Ljava/lang/String;
     110: invokeinterface #64,  2           // InterfaceMethod org/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder.setRemoteWALDir:(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfigBuilder;
     115: pop
     116: aload_1
     117: areturn

  public java.lang.String toString();
    Code:
       0: new           #65                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #66                 // String clusterKey=
       6: invokespecial #67                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #10                 // Field clusterKey:Ljava/lang/String;
      13: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #69                 // String ,
      18: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: astore_1
      22: aload_1
      23: ldc           #70                 // String replicationEndpointImpl=
      25: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #12                 // Field replicationEndpointImpl:Ljava/lang/String;
      32: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #69                 // String ,
      37: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_1
      42: ldc           #71                 // String replicateAllUserTables=
      44: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #5                  // Field replicateAllUserTables:Z
      51: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      54: ldc           #69                 // String ,
      56: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_0
      61: getfield      #5                  // Field replicateAllUserTables:Z
      64: ifeq          128
      67: aload_0
      68: getfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
      71: ifnull        96
      74: aload_1
      75: ldc           #73                 // String excludeNamespaces=
      77: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
      84: invokevirtual #74                 // Method java/lang/Object.toString:()Ljava/lang/String;
      87: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #69                 // String ,
      92: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: pop
      96: aload_0
      97: getfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
     100: ifnull        186
     103: aload_1
     104: ldc           #75                 // String excludeTableCFsMap=
     106: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
     113: invokevirtual #74                 // Method java/lang/Object.toString:()Ljava/lang/String;
     116: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #69                 // String ,
     121: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: goto          186
     128: aload_0
     129: getfield      #4                  // Field namespaces:Ljava/util/Set;
     132: ifnull        157
     135: aload_1
     136: ldc           #76                 // String namespaces=
     138: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_0
     142: getfield      #4                  // Field namespaces:Ljava/util/Set;
     145: invokevirtual #74                 // Method java/lang/Object.toString:()Ljava/lang/String;
     148: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #69                 // String ,
     153: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: pop
     157: aload_0
     158: getfield      #3                  // Field tableCFsMap:Ljava/util/Map;
     161: ifnull        186
     164: aload_1
     165: ldc           #77                 // String tableCFs=
     167: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: getfield      #3                  // Field tableCFsMap:Ljava/util/Map;
     174: invokevirtual #74                 // Method java/lang/Object.toString:()Ljava/lang/String;
     177: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: ldc           #69                 // String ,
     182: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: pop
     186: aload_1
     187: ldc           #78                 // String bandwidth=
     189: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_0
     193: getfield      #8                  // Field bandwidth:J
     196: invokevirtual #79                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     199: ldc           #69                 // String ,
     201: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: pop
     205: aload_1
     206: ldc           #80                 // String serial=
     208: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: aload_0
     212: getfield      #27                 // Field serial:Z
     215: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     218: pop
     219: aload_0
     220: getfield      #29                 // Field remoteWALDir:Ljava/lang/String;
     223: ifnull        240
     226: aload_1
     227: ldc           #81                 // String ,remoteWALDir=
     229: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_0
     233: getfield      #29                 // Field remoteWALDir:Ljava/lang/String;
     236: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: pop
     240: aload_1
     241: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: areturn

  public boolean needToReplicate(org.apache.hadoop.hbase.TableName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field replicateAllUserTables:Z
       4: ifeq          56
       7: aload_0
       8: getfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
      11: ifnull        32
      14: aload_0
      15: getfield      #7                  // Field excludeNamespaces:Ljava/util/Set;
      18: aload_1
      19: invokevirtual #83                 // Method org/apache/hadoop/hbase/TableName.getNamespaceAsString:()Ljava/lang/String;
      22: invokeinterface #84,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
      36: ifnull        54
      39: aload_0
      40: getfield      #6                  // Field excludeTableCFsMap:Ljava/util/Map;
      43: aload_1
      44: invokeinterface #85,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_0
      53: ireturn
      54: iconst_1
      55: ireturn
      56: aload_0
      57: getfield      #4                  // Field namespaces:Ljava/util/Set;
      60: ifnull        81
      63: aload_0
      64: getfield      #4                  // Field namespaces:Ljava/util/Set;
      67: aload_1
      68: invokevirtual #83                 // Method org/apache/hadoop/hbase/TableName.getNamespaceAsString:()Ljava/lang/String;
      71: invokeinterface #84,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      76: ifeq          81
      79: iconst_1
      80: ireturn
      81: aload_0
      82: getfield      #3                  // Field tableCFsMap:Ljava/util/Map;
      85: ifnull        103
      88: aload_0
      89: getfield      #3                  // Field tableCFsMap:Ljava/util/Map;
      92: aload_1
      93: invokeinterface #85,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      98: ifeq          103
     101: iconst_1
     102: ireturn
     103: iconst_0
     104: ireturn

  org.apache.hadoop.hbase.replication.ReplicationPeerConfig(org.apache.hadoop.hbase.replication.ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl, org.apache.hadoop.hbase.replication.ReplicationPeerConfig$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig$ReplicationPeerConfigBuilderImpl;)V
       5: return
}
