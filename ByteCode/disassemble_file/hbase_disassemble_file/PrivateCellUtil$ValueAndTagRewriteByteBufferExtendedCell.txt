Compiled from "PrivateCellUtil.java"
class org.apache.hadoop.hbase.PrivateCellUtil$ValueAndTagRewriteByteBufferExtendedCell extends org.apache.hadoop.hbase.PrivateCellUtil$TagRewriteByteBufferExtendedCell {
  protected byte[] value;

  public org.apache.hadoop.hbase.PrivateCellUtil$ValueAndTagRewriteByteBufferExtendedCell(org.apache.hadoop.hbase.ByteBufferExtendedCell, byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #1                  // Method org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteByteBufferExtendedCell."<init>":(Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;[B)V
       6: aload_0
       7: aload_2
       8: putfield      #2                  // Field value:[B
      11: return

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: areturn

  public int getValueOffset();
    Code:
       0: iconst_0
       1: ireturn

  public int getValueLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #2                  // Field value:[B
      15: arraylength
      16: ireturn

  public java.nio.ByteBuffer getValueByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:[B
       4: invokestatic  #3                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: areturn

  public int getValuePosition();
    Code:
       0: iconst_0
       1: ireturn

  public long heapSize();
    Code:
       0: getstatic     #4                  // Field org/apache/hadoop/hbase/util/ClassSize.REFERENCE:I
       3: i2l
       4: aload_0
       5: invokespecial #5                  // Method org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteByteBufferExtendedCell.heapSize:()J
       8: ladd
       9: lstore_1
      10: aload_0
      11: getfield      #2                  // Field value:[B
      14: ifnull        27
      17: lload_1
      18: aload_0
      19: getfield      #2                  // Field value:[B
      22: invokestatic  #6                  // Method org/apache/hadoop/hbase/util/ClassSize.sizeOf:([B)J
      25: ladd
      26: lstore_1
      27: lload_1
      28: lreturn

  public int write(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #7                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       6: aload_0
       7: getfield      #2                  // Field value:[B
      10: aload_0
      11: getfield      #8                  // Field tags:[B
      14: invokestatic  #9                  // Method org/apache/hadoop/hbase/PrivateCellUtil$ValueAndTagRewriteCell.write:(Ljava/io/OutputStream;ZLorg/apache/hadoop/hbase/Cell;[B[B)I
      17: ireturn

  public int getSerializedSize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method org/apache/hadoop/hbase/PrivateCellUtil$TagRewriteByteBufferExtendedCell.getSerializedSize:(Z)I
       5: aload_0
       6: getfield      #7                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       9: invokevirtual #11                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.getValueLength:()I
      12: isub
      13: aload_0
      14: getfield      #2                  // Field value:[B
      17: arraylength
      18: iadd
      19: ireturn

  public void write(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #7                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       6: aload_0
       7: getfield      #2                  // Field value:[B
      10: aload_0
      11: getfield      #8                  // Field tags:[B
      14: invokestatic  #12                 // Method org/apache/hadoop/hbase/PrivateCellUtil$ValueAndTagRewriteCell.write:(Ljava/nio/ByteBuffer;ILorg/apache/hadoop/hbase/Cell;[B[B)V
      17: return

  public org.apache.hadoop.hbase.ExtendedCell deepClone();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cell:Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;
       4: invokevirtual #13                 // Method org/apache/hadoop/hbase/ByteBufferExtendedCell.deepClone:()Lorg/apache/hadoop/hbase/ExtendedCell;
       7: astore_1
       8: aload_1
       9: instanceof    #14                 // class org/apache/hadoop/hbase/ByteBufferExtendedCell
      12: ifeq          35
      15: new           #15                 // class org/apache/hadoop/hbase/PrivateCellUtil$ValueAndTagRewriteByteBufferExtendedCell
      18: dup
      19: aload_1
      20: checkcast     #14                 // class org/apache/hadoop/hbase/ByteBufferExtendedCell
      23: aload_0
      24: getfield      #2                  // Field value:[B
      27: aload_0
      28: getfield      #8                  // Field tags:[B
      31: invokespecial #16                 // Method "<init>":(Lorg/apache/hadoop/hbase/ByteBufferExtendedCell;[B[B)V
      34: areturn
      35: new           #17                 // class org/apache/hadoop/hbase/PrivateCellUtil$ValueAndTagRewriteCell
      38: dup
      39: aload_1
      40: aload_0
      41: getfield      #2                  // Field value:[B
      44: aload_0
      45: getfield      #8                  // Field tags:[B
      48: invokespecial #18                 // Method org/apache/hadoop/hbase/PrivateCellUtil$ValueAndTagRewriteCell."<init>":(Lorg/apache/hadoop/hbase/Cell;[B[B)V
      51: areturn
}
