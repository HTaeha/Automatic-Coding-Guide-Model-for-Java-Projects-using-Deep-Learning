Compiled from "ByteBufferInputStream.java"
public class org.apache.hadoop.hbase.io.ByteBufferInputStream extends java.io.InputStream {
  public org.apache.hadoop.hbase.io.ByteBufferInputStream(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
       9: return

  public int read();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #3                  // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      14: invokevirtual #4                  // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: iconst_m1
      23: ireturn

  public int read(byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method available:()I
       4: istore        4
       6: iload         4
       8: ifgt          13
      11: iconst_m1
      12: ireturn
      13: iload_3
      14: iload         4
      16: if_icmple     22
      19: iload         4
      21: istore_3
      22: iload_3
      23: ifgt          28
      26: iconst_0
      27: ireturn
      28: aload_1
      29: aload_0
      30: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      33: aload_0
      34: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      37: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      40: iload_2
      41: iload_3
      42: invokestatic  #7                  // Method org/apache/hadoop/hbase/util/ByteBufferUtils.copyFromBufferToArray:([BLjava/nio/ByteBuffer;III)V
      45: aload_0
      46: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      49: aload_0
      50: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      53: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      56: iload_3
      57: iadd
      58: invokevirtual #8                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      61: pop
      62: iload_3
      63: ireturn

  public long skip(long);
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #5                  // Method available:()I
       5: i2l
       6: invokestatic  #9                  // Method java/lang/Math.min:(JJ)J
       9: lstore_3
      10: lload_3
      11: lconst_0
      12: lcmp
      13: ifge          18
      16: lconst_0
      17: lstore_3
      18: aload_0
      19: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      22: aload_0
      23: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
      26: invokevirtual #6                  // Method java/nio/ByteBuffer.position:()I
      29: i2l
      30: lload_3
      31: ladd
      32: l2i
      33: invokevirtual #8                  // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: lload_3
      38: lreturn

  public int available();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn
}
