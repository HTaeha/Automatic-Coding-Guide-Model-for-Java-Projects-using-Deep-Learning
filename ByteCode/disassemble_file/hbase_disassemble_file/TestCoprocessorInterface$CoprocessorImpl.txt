Compiled from "TestCoprocessorInterface.java"
public class org.apache.hadoop.hbase.coprocessor.TestCoprocessorInterface$CoprocessorImpl implements org.apache.hadoop.hbase.coprocessor.RegionCoprocessor,org.apache.hadoop.hbase.coprocessor.RegionObserver {
  public org.apache.hadoop.hbase.coprocessor.TestCoprocessorInterface$CoprocessorImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void start(org.apache.hadoop.hbase.CoprocessorEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
       5: invokeinterface #3,  1            // InterfaceMethod org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.getSharedData:()Ljava/util/concurrent/ConcurrentMap;
      10: putfield      #4                  // Field sharedData:Ljava/util/concurrent/ConcurrentMap;
      13: aload_0
      14: getfield      #4                  // Field sharedData:Ljava/util/concurrent/ConcurrentMap;
      17: ldc           #5                  // String test1
      19: new           #6                  // class java/lang/Object
      22: dup
      23: invokespecial #1                  // Method java/lang/Object."<init>":()V
      26: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: iconst_1
      34: putfield      #8                  // Field startCalled:Z
      37: return

  public void stop(org.apache.hadoop.hbase.CoprocessorEnvironment);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field sharedData:Ljava/util/concurrent/ConcurrentMap;
       5: aload_0
       6: iconst_1
       7: putfield      #9                  // Field stopCalled:Z
      10: return

  public java.util.Optional<org.apache.hadoop.hbase.coprocessor.RegionObserver> getRegionObserver();
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       4: areturn

  public void preOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field preOpenCalled:Z
       5: return

  public void postOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field postOpenCalled:Z
       5: return

  public void preClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field preCloseCalled:Z
       5: return

  public void postClose(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field postCloseCalled:Z
       5: return

  public org.apache.hadoop.hbase.regionserver.InternalScanner preCompact(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.InternalScanner, org.apache.hadoop.hbase.regionserver.ScanType, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker, org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field preCompactCalled:Z
       5: aload_3
       6: areturn

  public void postCompact(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.Store, org.apache.hadoop.hbase.regionserver.StoreFile, org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker, org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field postCompactCalled:Z
       5: return

  public void preFlush(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.FlushLifeCycleTracker);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field preFlushCalled:Z
       5: return

  public void postFlush(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.regionserver.FlushLifeCycleTracker);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #18                 // Field postFlushCalled:Z
       5: return

  public org.apache.hadoop.hbase.regionserver.RegionScanner postScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext<org.apache.hadoop.hbase.coprocessor.RegionCoprocessorEnvironment>, org.apache.hadoop.hbase.client.Scan, org.apache.hadoop.hbase.regionserver.RegionScanner) throws java.io.IOException;
    Code:
       0: new           #19                 // class org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface$CustomScanner
       3: dup
       4: aload_3
       5: invokespecial #20                 // Method org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface$CustomScanner."<init>":(Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)V
       8: areturn

  boolean wasStarted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field startCalled:Z
       4: ireturn

  boolean wasStopped();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stopCalled:Z
       4: ireturn

  boolean wasOpened();
    Code:
       0: aload_0
       1: getfield      #11                 // Field preOpenCalled:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #12                 // Field postOpenCalled:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  boolean wasClosed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field preCloseCalled:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #14                 // Field postCloseCalled:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  boolean wasFlushed();
    Code:
       0: aload_0
       1: getfield      #17                 // Field preFlushCalled:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #18                 // Field postFlushCalled:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  boolean wasCompacted();
    Code:
       0: aload_0
       1: getfield      #15                 // Field preCompactCalled:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #16                 // Field postCompactCalled:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  java.util.Map<java.lang.String, java.lang.Object> getSharedData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sharedData:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
