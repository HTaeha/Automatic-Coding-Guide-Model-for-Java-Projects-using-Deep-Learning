Compiled from "HFileArchiveTestingUtil.java"
public class org.apache.hadoop.hbase.util.HFileArchiveTestingUtil {
  public static boolean compareArchiveToOriginal(org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileSystem, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method getFileLists:([Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/FileStatus;)Ljava/util/List;
       5: astore        4
       7: aload         4
       9: iconst_0
      10: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: checkcast     #4                  // class java/util/List
      18: astore        5
      20: aload         5
      22: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      25: aload         4
      27: iconst_1
      28: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: checkcast     #4                  // class java/util/List
      36: astore        6
      38: aload         6
      40: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      43: aload         4
      45: iconst_2
      46: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #4                  // class java/util/List
      54: astore        7
      56: aload         7
      58: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      61: iload_3
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: aload         7
      72: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
      77: ifle          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: if_icmpne     100
      88: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
      91: ldc           #8                  // String backedup files doesn't match expected.
      93: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      98: iconst_0
      99: ireturn
     100: aconst_null
     101: astore        8
     103: iload_3
     104: ifeq          133
     107: aload         5
     109: aload         7
     111: invokestatic  #10                 // Method assertArchiveEquality:(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
     114: astore        8
     116: aload         8
     118: ifnull        133
     121: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
     124: aload         8
     126: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     131: iconst_0
     132: ireturn
     133: aload         5
     135: aload         6
     137: invokestatic  #10                 // Method assertArchiveEquality:(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
     140: astore        8
     142: aload         8
     144: ifnull        159
     147: getstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
     150: aload         8
     152: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     157: iconst_0
     158: ireturn
     159: iconst_1
     160: ireturn

  public static void assertArchiveEqualToOriginal(org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileSystem) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #11                 // Method assertArchiveEqualToOriginal:([Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Z)V
       7: return

  public static void assertArchiveEqualToOriginal(org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileStatus[], org.apache.hadoop.fs.FileSystem, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method getFileLists:([Lorg/apache/hadoop/fs/FileStatus;[Lorg/apache/hadoop/fs/FileStatus;)Ljava/util/List;
       5: astore        4
       7: aload         4
       9: iconst_0
      10: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: checkcast     #4                  // class java/util/List
      18: astore        5
      20: aload         5
      22: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      25: aload         4
      27: iconst_1
      28: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: checkcast     #4                  // class java/util/List
      36: astore        6
      38: aload         6
      40: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      43: aload         4
      45: iconst_2
      46: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #4                  // class java/util/List
      54: astore        7
      56: aload         7
      58: invokestatic  #5                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      61: new           #12                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #14                 // String Didn't expect any backup files, but got:
      70: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload         7
      75: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: iload_3
      82: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      85: aload         7
      87: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
      92: ifle          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     103: invokestatic  #19                 // Method org/junit/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     106: aconst_null
     107: astore        8
     109: iload_3
     110: ifeq          128
     113: aload         5
     115: aload         7
     117: invokestatic  #10                 // Method assertArchiveEquality:(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
     120: pop
     121: aload         8
     123: aload         8
     125: invokestatic  #20                 // Method org/junit/Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
     128: aload         5
     130: aload         6
     132: invokestatic  #10                 // Method assertArchiveEquality:(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
     135: astore        8
     137: aload         8
     139: aload         8
     141: invokestatic  #20                 // Method org/junit/Assert.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V
     144: return

  public static org.apache.hadoop.fs.Path getRegionArchiveDir(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.regionserver.HRegion) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method org/apache/hadoop/hbase/util/FSUtils.getRootDir:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
       4: aload_1
       5: invokevirtual #63                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getTableDescriptor:()Lorg/apache/hadoop/hbase/client/TableDescriptor;
       8: invokeinterface #64,  1           // InterfaceMethod org/apache/hadoop/hbase/client/TableDescriptor.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      13: aload_1
      14: invokevirtual #65                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getRegionInfo:()Lorg/apache/hadoop/hbase/client/RegionInfo;
      17: invokeinterface #66,  1           // InterfaceMethod org/apache/hadoop/hbase/client/RegionInfo.getEncodedName:()Ljava/lang/String;
      22: invokestatic  #67                 // Method org/apache/hadoop/hbase/util/HFileArchiveUtil.getRegionArchiveDir:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
      25: areturn

  public static org.apache.hadoop.fs.Path getStoreArchivePath(org.apache.hadoop.conf.Configuration, org.apache.hadoop.hbase.regionserver.HRegion, org.apache.hadoop.hbase.regionserver.Store) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #65                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getRegionInfo:()Lorg/apache/hadoop/hbase/client/RegionInfo;
       5: aload_1
       6: invokevirtual #68                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getRegionFileSystem:()Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
       9: invokevirtual #69                 // Method org/apache/hadoop/hbase/regionserver/HRegionFileSystem.getTableDir:()Lorg/apache/hadoop/fs/Path;
      12: aload_2
      13: invokeinterface #70,  1           // InterfaceMethod org/apache/hadoop/hbase/regionserver/Store.getColumnFamilyDescriptor:()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
      18: invokeinterface #71,  1           // InterfaceMethod org/apache/hadoop/hbase/client/ColumnFamilyDescriptor.getName:()[B
      23: invokestatic  #72                 // Method org/apache/hadoop/hbase/util/HFileArchiveUtil.getStoreArchivePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
      26: areturn

  public static org.apache.hadoop.fs.Path getStoreArchivePath(org.apache.hadoop.hbase.HBaseTestingUtility, java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #73                 // Method org/apache/hadoop/hbase/util/Bytes.toBytes:(Ljava/lang/String;)[B
       4: astore_3
       5: aload_0
       6: invokevirtual #74                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getHBaseCluster:()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
       9: aload_3
      10: invokevirtual #75                 // Method org/apache/hadoop/hbase/MiniHBaseCluster.getRegions:([B)Ljava/util/List;
      13: astore        4
      15: aload         4
      17: iconst_0
      18: invokeinterface #3,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #76                 // class org/apache/hadoop/hbase/regionserver/HRegion
      26: astore        5
      28: aload         5
      30: aload_2
      31: invokevirtual #77                 // Method org/apache/hadoop/hbase/regionserver/HRegion.getStore:([B)Lorg/apache/hadoop/hbase/regionserver/HStore;
      34: astore        6
      36: aload_0
      37: invokevirtual #78                 // Method org/apache/hadoop/hbase/HBaseTestingUtility.getConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      40: aload         5
      42: aload         6
      44: invokestatic  #79                 // Method getStoreArchivePath:(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;)Lorg/apache/hadoop/fs/Path;
      47: areturn

  static {};
    Code:
       0: ldc           #80                 // class org/apache/hadoop/hbase/util/HFileArchiveTestingUtil
       2: invokestatic  #81                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
