Compiled from "EntryBuffers.java"
public class org.apache.hadoop.hbase.wal.EntryBuffers {
  org.apache.hadoop.hbase.wal.WALSplitter$PipelineController controller;

  java.util.Map<byte[], org.apache.hadoop.hbase.wal.WALSplitter$RegionEntryBuffer> buffers;

  java.util.Set<byte[]> currentlyWriting;

  long totalBuffered;

  long maxHeapUsage;

  boolean splitWriterCreationBounded;

  static final boolean $assertionsDisabled;

  public org.apache.hadoop.hbase.wal.EntryBuffers(org.apache.hadoop.hbase.wal.WALSplitter$PipelineController, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_0
       4: invokespecial #1                  // Method "<init>":(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
       7: return

  public org.apache.hadoop.hbase.wal.EntryBuffers(org.apache.hadoop.hbase.wal.WALSplitter$PipelineController, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/TreeMap
       8: dup
       9: getstatic     #4                  // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      12: invokespecial #5                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: putfield      #6                  // Field buffers:Ljava/util/Map;
      18: aload_0
      19: new           #7                  // class java/util/TreeSet
      22: dup
      23: getstatic     #4                  // Field org/apache/hadoop/hbase/util/Bytes.BYTES_COMPARATOR:Ljava/util/Comparator;
      26: invokespecial #8                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      29: putfield      #9                  // Field currentlyWriting:Ljava/util/Set;
      32: aload_0
      33: lconst_0
      34: putfield      #10                 // Field totalBuffered:J
      37: aload_0
      38: aload_1
      39: putfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
      42: aload_0
      43: lload_2
      44: putfield      #12                 // Field maxHeapUsage:J
      47: aload_0
      48: iload         4
      50: putfield      #13                 // Field splitWriterCreationBounded:Z
      53: return

  public void appendEntry(org.apache.hadoop.hbase.wal.WAL$Entry) throws java.lang.InterruptedException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/hadoop/hbase/wal/WAL$Entry.getKey:()Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
       4: astore_2
       5: aload_0
       6: dup
       7: astore        6
       9: monitorenter
      10: aload_0
      11: getfield      #6                  // Field buffers:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getEncodedRegionName:()[B
      20: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #17                 // class org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer
      28: astore_3
      29: aload_3
      30: ifnonnull     70
      33: new           #17                 // class org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer
      36: dup
      37: aload_2
      38: invokeinterface #18,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getTableName:()Lorg/apache/hadoop/hbase/TableName;
      43: aload_2
      44: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getEncodedRegionName:()[B
      49: invokespecial #19                 // Method org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer."<init>":(Lorg/apache/hadoop/hbase/TableName;[B)V
      52: astore_3
      53: aload_0
      54: getfield      #6                  // Field buffers:Ljava/util/Map;
      57: aload_2
      58: invokeinterface #15,  1           // InterfaceMethod org/apache/hadoop/hbase/wal/WALKey.getEncodedRegionName:()[B
      63: aload_3
      64: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_3
      71: aload_1
      72: invokevirtual #21                 // Method org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer.appendEntry:(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)J
      75: lstore        4
      77: aload         6
      79: monitorexit
      80: goto          91
      83: astore        7
      85: aload         6
      87: monitorexit
      88: aload         7
      90: athrow
      91: aload_0
      92: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
      95: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
      98: dup
      99: astore        6
     101: monitorenter
     102: aload_0
     103: dup
     104: getfield      #10                 // Field totalBuffered:J
     107: lload         4
     109: ladd
     110: putfield      #10                 // Field totalBuffered:J
     113: aload_0
     114: getfield      #10                 // Field totalBuffered:J
     117: aload_0
     118: getfield      #12                 // Field maxHeapUsage:J
     121: lcmp
     122: ifle          171
     125: aload_0
     126: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
     129: getfield      #23                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.thrown:Ljava/util/concurrent/atomic/AtomicReference;
     132: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     135: ifnonnull     171
     138: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
     141: ldc           #26                 // String Used {} bytes of buffered edits, waiting for IO threads
     143: aload_0
     144: getfield      #10                 // Field totalBuffered:J
     147: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     150: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     155: aload_0
     156: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
     159: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
     162: ldc2_w        #29                 // long 2000l
     165: invokevirtual #31                 // Method java/lang/Object.wait:(J)V
     168: goto          113
     171: aload_0
     172: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
     175: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
     178: invokevirtual #32                 // Method java/lang/Object.notifyAll:()V
     181: aload         6
     183: monitorexit
     184: goto          195
     187: astore        8
     189: aload         6
     191: monitorexit
     192: aload         8
     194: athrow
     195: aload_0
     196: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
     199: invokevirtual #33                 // Method org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.checkForErrors:()V
     202: return
    Exception table:
       from    to  target type
          10    80    83   any
          83    88    83   any
         102   184   187   any
         187   192   187   any

  synchronized org.apache.hadoop.hbase.wal.WALSplitter$RegionEntryBuffer getChunkToWrite();
    Code:
       0: aload_0
       1: getfield      #13                 // Field splitWriterCreationBounded:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #10                 // Field totalBuffered:J
      11: aload_0
      12: getfield      #12                 // Field maxHeapUsage:J
      15: lcmp
      16: ifge          21
      19: aconst_null
      20: areturn
      21: lconst_0
      22: lstore_1
      23: aconst_null
      24: astore_3
      25: aload_0
      26: getfield      #6                  // Field buffers:Ljava/util/Map;
      29: invokeinterface #34,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      34: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore        4
      41: aload         4
      43: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          121
      51: aload         4
      53: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #38                 // class java/util/Map$Entry
      61: astore        5
      63: aload         5
      65: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      70: checkcast     #17                 // class org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer
      73: invokevirtual #40                 // Method org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer.heapSize:()J
      76: lstore        6
      78: lload         6
      80: lload_1
      81: lcmp
      82: ifle          118
      85: aload_0
      86: getfield      #9                  // Field currentlyWriting:Ljava/util/Set;
      89: aload         5
      91: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      96: invokeinterface #42,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     101: ifne          118
     104: lload         6
     106: lstore_1
     107: aload         5
     109: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     114: checkcast     #43                 // class "[B"
     117: astore_3
     118: goto          41
     121: aload_3
     122: ifnonnull     127
     125: aconst_null
     126: areturn
     127: aload_0
     128: getfield      #6                  // Field buffers:Ljava/util/Map;
     131: aload_3
     132: invokeinterface #44,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     137: checkcast     #17                 // class org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer
     140: astore        4
     142: aload_0
     143: getfield      #9                  // Field currentlyWriting:Ljava/util/Set;
     146: aload_3
     147: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     152: pop
     153: aload         4
     155: areturn

  void doneWriting(org.apache.hadoop.hbase.wal.WALSplitter$RegionEntryBuffer);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field currentlyWriting:Ljava/util/Set;
       8: aload_1
       9: getfield      #46                 // Field org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer.encodedRegionName:[B
      12: invokeinterface #47,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: istore_3
      18: getstatic     #48                 // Field $assertionsDisabled:Z
      21: ifne          36
      24: iload_3
      25: ifne          36
      28: new           #49                 // class java/lang/AssertionError
      31: dup
      32: invokespecial #50                 // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: aload_2
      37: monitorexit
      38: goto          48
      41: astore        4
      43: aload_2
      44: monitorexit
      45: aload         4
      47: athrow
      48: aload_1
      49: invokevirtual #40                 // Method org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer.heapSize:()J
      52: lstore_2
      53: aload_0
      54: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
      57: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
      60: dup
      61: astore        4
      63: monitorenter
      64: aload_0
      65: dup
      66: getfield      #10                 // Field totalBuffered:J
      69: lload_2
      70: lsub
      71: putfield      #10                 // Field totalBuffered:J
      74: aload_0
      75: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
      78: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
      81: invokevirtual #32                 // Method java/lang/Object.notifyAll:()V
      84: aload         4
      86: monitorexit
      87: goto          98
      90: astore        5
      92: aload         4
      94: monitorexit
      95: aload         5
      97: athrow
      98: return
    Exception table:
       from    to  target type
           4    38    41   any
          41    45    41   any
          64    87    90   any
          90    95    90   any

  synchronized boolean isRegionCurrentlyWriting(byte[]);
    Code:
       0: aload_0
       1: getfield      #9                  // Field currentlyWriting:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void waitUntilDrained();
    Code:
       0: aload_0
       1: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
       4: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #10                 // Field totalBuffered:J
      14: lconst_0
      15: lcmp
      16: ifle          53
      19: aload_0
      20: getfield      #11                 // Field controller:Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;
      23: getfield      #22                 // Field org/apache/hadoop/hbase/wal/WALSplitter$PipelineController.dataAvailable:Ljava/lang/Object;
      26: ldc2_w        #29                 // long 2000l
      29: invokevirtual #31                 // Method java/lang/Object.wait:(J)V
      32: goto          10
      35: astore_2
      36: getstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #52                 // String Got interrupted while waiting for EntryBuffers is drained
      41: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      46: invokestatic  #54                 // Method java/lang/Thread.interrupted:()Z
      49: pop
      50: goto          53
      53: aload_1
      54: monitorexit
      55: goto          63
      58: astore_3
      59: aload_1
      60: monitorexit
      61: aload_3
      62: athrow
      63: return
    Exception table:
       from    to  target type
          19    32    35   Class java/lang/InterruptedException
          10    55    58   any
          58    61    58   any

  static {};
    Code:
       0: ldc           #55                 // class org/apache/hadoop/hbase/wal/EntryBuffers
       2: invokevirtual #56                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #48                 // Field $assertionsDisabled:Z
      16: ldc           #55                 // class org/apache/hadoop/hbase/wal/EntryBuffers
      18: invokestatic  #57                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #25                 // Field LOG:Lorg/slf4j/Logger;
      24: return
}
