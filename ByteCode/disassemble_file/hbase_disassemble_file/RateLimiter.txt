Compiled from "RateLimiter.java"
public abstract class org.apache.hadoop.hbase.quotas.RateLimiter {
  public static final java.lang.String QUOTA_RATE_LIMITER_CONF_KEY;

  public org.apache.hadoop.hbase.quotas.RateLimiter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 1000l
       8: putfield      #4                  // Field tunit:J
      11: aload_0
      12: ldc2_w        #6                  // long 9223372036854775807l
      15: putfield      #8                  // Field limit:J
      18: aload_0
      19: ldc2_w        #6                  // long 9223372036854775807l
      22: putfield      #9                  // Field avail:J
      25: return

  abstract long refill(long);

  abstract long getWaitInterval(long, long, long);

  public synchronized void set(long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #10                 // Field org/apache/hadoop/hbase/quotas/RateLimiter$1.$SwitchMap$java$util$concurrent$TimeUnit:[I
       3: aload_3
       4: invokevirtual #11                 // Method java/util/concurrent/TimeUnit.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 5
                     1: 44
                     2: 52
                     3: 62
                     4: 72
                     5: 82
               default: 92
          }
      44: aload_0
      45: lconst_1
      46: putfield      #4                  // Field tunit:J
      49: goto          127
      52: aload_0
      53: ldc2_w        #2                  // long 1000l
      56: putfield      #4                  // Field tunit:J
      59: goto          127
      62: aload_0
      63: ldc2_w        #12                 // long 60000l
      66: putfield      #4                  // Field tunit:J
      69: goto          127
      72: aload_0
      73: ldc2_w        #14                 // long 3600000l
      76: putfield      #4                  // Field tunit:J
      79: goto          127
      82: aload_0
      83: ldc2_w        #16                 // long 86400000l
      86: putfield      #4                  // Field tunit:J
      89: goto          127
      92: new           #18                 // class java/lang/RuntimeException
      95: dup
      96: new           #19                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #21                 // String Unsupported
     105: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #23                 // Method java/util/concurrent/TimeUnit.name:()Ljava/lang/String;
     112: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #24                 // String  TimeUnit.
     117: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_0
     128: lload_1
     129: putfield      #8                  // Field limit:J
     132: aload_0
     133: lload_1
     134: putfield      #9                  // Field avail:J
     137: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #28                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: invokevirtual #29                 // Method getLimit:()J
      12: ldc2_w        #6                  // long 9223372036854775807l
      15: lcmp
      16: ifne          39
      19: new           #19                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_1
      27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #30                 // String (Bypass)
      32: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn
      39: new           #19                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      46: aload_1
      47: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #31                 // String (avail=
      52: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #32                 // Method getAvailable:()J
      59: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: ldc           #34                 // String  limit=
      64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #29                 // Method getLimit:()J
      71: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: ldc           #35                 // String  tunit=
      76: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #36                 // Method getTimeUnitInMillis:()J
      83: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      86: ldc           #37                 // String )
      88: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public synchronized void update(org.apache.hadoop.hbase.quotas.RateLimiter);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #4                  // Field tunit:J
       5: putfield      #4                  // Field tunit:J
       8: aload_0
       9: getfield      #8                  // Field limit:J
      12: aload_1
      13: getfield      #8                  // Field limit:J
      16: lcmp
      17: ifge          79
      20: aload_1
      21: getfield      #8                  // Field limit:J
      24: aload_0
      25: getfield      #8                  // Field limit:J
      28: lsub
      29: lstore_2
      30: aload_0
      31: getfield      #9                  // Field avail:J
      34: ldc2_w        #6                  // long 9223372036854775807l
      37: lload_2
      38: lsub
      39: lcmp
      40: ifgt          71
      43: aload_0
      44: dup
      45: getfield      #9                  // Field avail:J
      48: lload_2
      49: ladd
      50: putfield      #9                  // Field avail:J
      53: aload_0
      54: aload_0
      55: getfield      #9                  // Field avail:J
      58: aload_1
      59: getfield      #8                  // Field limit:J
      62: invokestatic  #38                 // Method java/lang/Math.min:(JJ)J
      65: putfield      #9                  // Field avail:J
      68: goto          79
      71: aload_0
      72: aload_1
      73: getfield      #8                  // Field limit:J
      76: putfield      #9                  // Field avail:J
      79: aload_0
      80: aload_1
      81: getfield      #8                  // Field limit:J
      84: putfield      #8                  // Field limit:J
      87: return

  public synchronized boolean isBypass();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getLimit:()J
       4: ldc2_w        #6                  // long 9223372036854775807l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public synchronized long getLimit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field limit:J
       4: lreturn

  public synchronized long getAvailable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field avail:J
       4: lreturn

  protected synchronized long getTimeUnitInMillis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tunit:J
       4: lreturn

  public boolean canExecute();
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #39                 // Method canExecute:(J)Z
       5: ireturn

  public synchronized boolean canExecute(long);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isBypass:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: aload_0
      11: getfield      #8                  // Field limit:J
      14: invokevirtual #41                 // Method refill:(J)J
      17: lstore_3
      18: lload_3
      19: lconst_0
      20: lcmp
      21: ifne          35
      24: aload_0
      25: getfield      #9                  // Field avail:J
      28: lload_1
      29: lcmp
      30: ifge          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #9                  // Field avail:J
      39: ldc2_w        #6                  // long 9223372036854775807l
      42: lload_3
      43: lsub
      44: lcmp
      45: ifgt          72
      48: aload_0
      49: lconst_0
      50: aload_0
      51: getfield      #9                  // Field avail:J
      54: lload_3
      55: ladd
      56: aload_0
      57: getfield      #8                  // Field limit:J
      60: invokestatic  #38                 // Method java/lang/Math.min:(JJ)J
      63: invokestatic  #42                 // Method java/lang/Math.max:(JJ)J
      66: putfield      #9                  // Field avail:J
      69: goto          84
      72: aload_0
      73: lconst_0
      74: aload_0
      75: getfield      #8                  // Field limit:J
      78: invokestatic  #42                 // Method java/lang/Math.max:(JJ)J
      81: putfield      #9                  // Field avail:J
      84: aload_0
      85: getfield      #9                  // Field avail:J
      88: lload_1
      89: lcmp
      90: iflt          95
      93: iconst_1
      94: ireturn
      95: iconst_0
      96: ireturn

  public void consume();
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #43                 // Method consume:(J)V
       5: return

  public synchronized void consume(long);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isBypass:()Z
       4: ifeq          8
       7: return
       8: lload_1
       9: lconst_0
      10: lcmp
      11: iflt          41
      14: aload_0
      15: dup
      16: getfield      #9                  // Field avail:J
      19: lload_1
      20: lsub
      21: putfield      #9                  // Field avail:J
      24: aload_0
      25: getfield      #9                  // Field avail:J
      28: lconst_0
      29: lcmp
      30: ifge          90
      33: aload_0
      34: lconst_0
      35: putfield      #9                  // Field avail:J
      38: goto          90
      41: aload_0
      42: getfield      #9                  // Field avail:J
      45: ldc2_w        #6                  // long 9223372036854775807l
      48: lload_1
      49: ladd
      50: lcmp
      51: ifgt          82
      54: aload_0
      55: dup
      56: getfield      #9                  // Field avail:J
      59: lload_1
      60: lsub
      61: putfield      #9                  // Field avail:J
      64: aload_0
      65: aload_0
      66: getfield      #9                  // Field avail:J
      69: aload_0
      70: getfield      #8                  // Field limit:J
      73: invokestatic  #38                 // Method java/lang/Math.min:(JJ)J
      76: putfield      #9                  // Field avail:J
      79: goto          90
      82: aload_0
      83: aload_0
      84: getfield      #8                  // Field limit:J
      87: putfield      #9                  // Field avail:J
      90: return

  public long waitInterval();
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #44                 // Method waitInterval:(J)J
       5: lreturn

  public synchronized long waitInterval(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #9                  // Field avail:J
       5: lcmp
       6: ifgt          13
       9: lconst_0
      10: goto          26
      13: aload_0
      14: aload_0
      15: invokevirtual #29                 // Method getLimit:()J
      18: aload_0
      19: getfield      #9                  // Field avail:J
      22: lload_1
      23: invokevirtual #45                 // Method getWaitInterval:(JJJ)J
      26: lreturn

  public abstract void setNextRefillTime(long);

  public abstract long getNextRefillTime();
}
