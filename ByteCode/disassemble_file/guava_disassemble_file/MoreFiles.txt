Compiled from "MoreFiles.java"
public final class com.google.common.io.MoreFiles {
  public static com.google.common.io.ByteSource asByteSource(java.nio.file.Path, java.nio.file.OpenOption...);
    Code:
       0: new           #3                  // class com/google/common/io/MoreFiles$PathByteSource
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #4                  // Method com/google/common/io/MoreFiles$PathByteSource."<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;Lcom/google/common/io/MoreFiles$1;)V
      10: areturn

  public static com.google.common.io.ByteSink asByteSink(java.nio.file.Path, java.nio.file.OpenOption...);
    Code:
       0: new           #5                  // class com/google/common/io/MoreFiles$PathByteSink
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #6                  // Method com/google/common/io/MoreFiles$PathByteSink."<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;Lcom/google/common/io/MoreFiles$1;)V
      10: areturn

  public static com.google.common.io.CharSource asCharSource(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #7                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
       5: aload_1
       6: invokevirtual #8                  // Method com/google/common/io/ByteSource.asCharSource:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       9: areturn

  public static com.google.common.io.CharSink asCharSink(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #9                  // Method asByteSink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSink;
       5: aload_1
       6: invokevirtual #10                 // Method com/google/common/io/ByteSink.asCharSink:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSink;
       9: areturn

  public static com.google.common.collect.ImmutableList<java.nio.file.Path> listFiles(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokestatic  #12                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
      11: astore_3
      12: aload_1
      13: ifnull        46
      16: aload_2
      17: ifnull        40
      20: aload_1
      21: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      26: goto          46
      29: astore        4
      31: aload_2
      32: aload         4
      34: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      37: goto          46
      40: aload_1
      41: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      46: aload_3
      47: areturn
      48: astore_3
      49: aload_3
      50: astore_2
      51: aload_3
      52: athrow
      53: astore        5
      55: aload_1
      56: ifnull        89
      59: aload_2
      60: ifnull        83
      63: aload_1
      64: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      69: goto          89
      72: astore        6
      74: aload_2
      75: aload         6
      77: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      80: goto          89
      83: aload_1
      84: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      89: aload         5
      91: athrow
      92: astore_1
      93: aload_1
      94: invokevirtual #17                 // Method java/nio/file/DirectoryIteratorException.getCause:()Ljava/io/IOException;
      97: athrow
    Exception table:
       from    to  target type
          20    26    29   Class java/lang/Throwable
           7    12    48   Class java/lang/Throwable
           7    12    53   any
          63    69    72   Class java/lang/Throwable
          48    55    53   any
           0    46    92   Class java/nio/file/DirectoryIteratorException
          48    92    92   Class java/nio/file/DirectoryIteratorException

  public static com.google.common.graph.Traverser<java.nio.file.Path> fileTraverser();
    Code:
       0: getstatic     #18                 // Field FILE_TREE:Lcom/google/common/graph/SuccessorsFunction;
       3: invokestatic  #19                 // Method com/google/common/graph/Traverser.forTree:(Lcom/google/common/graph/SuccessorsFunction;)Lcom/google/common/graph/Traverser;
       6: areturn

  public static com.google.common.base.Predicate<java.nio.file.Path> isDirectory(java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method "[Ljava/nio/file/LinkOption;".clone:()Ljava/lang/Object;
       4: checkcast     #28                 // class "[Ljava/nio/file/LinkOption;"
       7: astore_1
       8: new           #29                 // class com/google/common/io/MoreFiles$2
      11: dup
      12: aload_1
      13: invokespecial #30                 // Method com/google/common/io/MoreFiles$2."<init>":([Ljava/nio/file/LinkOption;)V
      16: areturn

  public static com.google.common.base.Predicate<java.nio.file.Path> isRegularFile(java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method "[Ljava/nio/file/LinkOption;".clone:()Ljava/lang/Object;
       4: checkcast     #28                 // class "[Ljava/nio/file/LinkOption;"
       7: astore_1
       8: new           #36                 // class com/google/common/io/MoreFiles$3
      11: dup
      12: aload_1
      13: invokespecial #37                 // Method com/google/common/io/MoreFiles$3."<init>":([Ljava/nio/file/LinkOption;)V
      16: areturn

  public static boolean equal(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokestatic  #39                 // Method java/nio/file/Files.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
      15: ifeq          20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: iconst_0
      22: anewarray     #40                 // class java/nio/file/OpenOption
      25: invokestatic  #7                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
      28: astore_2
      29: aload_1
      30: iconst_0
      31: anewarray     #40                 // class java/nio/file/OpenOption
      34: invokestatic  #7                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
      37: astore_3
      38: aload_2
      39: invokevirtual #41                 // Method com/google/common/io/ByteSource.sizeIfKnown:()Lcom/google/common/base/Optional;
      42: lconst_0
      43: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: invokevirtual #43                 // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #44                 // class java/lang/Long
      52: invokevirtual #45                 // Method java/lang/Long.longValue:()J
      55: lstore        4
      57: aload_3
      58: invokevirtual #41                 // Method com/google/common/io/ByteSource.sizeIfKnown:()Lcom/google/common/base/Optional;
      61: lconst_0
      62: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: invokevirtual #43                 // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #44                 // class java/lang/Long
      71: invokevirtual #45                 // Method java/lang/Long.longValue:()J
      74: lstore        6
      76: lload         4
      78: lconst_0
      79: lcmp
      80: ifeq          100
      83: lload         6
      85: lconst_0
      86: lcmp
      87: ifeq          100
      90: lload         4
      92: lload         6
      94: lcmp
      95: ifeq          100
      98: iconst_0
      99: ireturn
     100: aload_2
     101: aload_3
     102: invokevirtual #46                 // Method com/google/common/io/ByteSource.contentEquals:(Lcom/google/common/io/ByteSource;)Z
     105: ireturn

  public static void touch(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokestatic  #47                 // Method java/lang/System.currentTimeMillis:()J
       9: invokestatic  #48                 // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      12: invokestatic  #49                 // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;
      15: pop
      16: goto          33
      19: astore_1
      20: aload_0
      21: iconst_0
      22: anewarray     #51                 // class java/nio/file/attribute/FileAttribute
      25: invokestatic  #52                 // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      28: pop
      29: goto          33
      32: astore_2
      33: return
    Exception table:
       from    to  target type
           5    16    19   Class java/nio/file/NoSuchFileException
          20    29    32   Class java/nio/file/FileAlreadyExistsException

  public static void createParentDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #54,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       6: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      11: astore_2
      12: aload_2
      13: invokeinterface #56,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      18: astore_3
      19: aload_3
      20: ifnonnull     24
      23: return
      24: aload_3
      25: iconst_0
      26: anewarray     #20                 // class java/nio/file/LinkOption
      29: invokestatic  #22                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      32: ifne          79
      35: aload_3
      36: aload_1
      37: invokestatic  #57                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      40: pop
      41: aload_3
      42: iconst_0
      43: anewarray     #20                 // class java/nio/file/LinkOption
      46: invokestatic  #22                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      49: ifne          79
      52: new           #24                 // class java/io/IOException
      55: dup
      56: new           #58                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #60                 // String Unable to create parent directories of
      65: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #64                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: return

  public static java.lang.String getFileExtension(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: astore_1
       7: aload_1
       8: ifnonnull     14
      11: ldc           #66                 // String
      13: areturn
      14: aload_1
      15: invokeinterface #67,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: bipush        46
      24: invokevirtual #68                 // Method java/lang/String.lastIndexOf:(I)I
      27: istore_3
      28: iload_3
      29: iconst_m1
      30: if_icmpne     38
      33: ldc           #66                 // String
      35: goto          45
      38: aload_2
      39: iload_3
      40: iconst_1
      41: iadd
      42: invokevirtual #69                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: areturn

  public static java.lang.String getNameWithoutExtension(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: astore_1
       7: aload_1
       8: ifnonnull     14
      11: ldc           #66                 // String
      13: areturn
      14: aload_1
      15: invokeinterface #67,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: bipush        46
      24: invokevirtual #68                 // Method java/lang/String.lastIndexOf:(I)I
      27: istore_3
      28: iload_3
      29: iconst_m1
      30: if_icmpne     37
      33: aload_2
      34: goto          43
      37: aload_2
      38: iconst_0
      39: iload_3
      40: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: areturn

  public static void deleteRecursively(java.nio.file.Path, com.google.common.io.RecursiveDeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method getParentPath:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       4: astore_2
       5: aload_2
       6: ifnonnull     26
       9: new           #72                 // class java/nio/file/FileSystemException
      12: dup
      13: aload_0
      14: invokeinterface #67,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      19: aconst_null
      20: ldc           #73                 // String can't delete recursively
      22: invokespecial #74                 // Method java/nio/file/FileSystemException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      25: athrow
      26: aconst_null
      27: astore_3
      28: iconst_0
      29: istore        4
      31: aload_2
      32: invokestatic  #11                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      35: astore        5
      37: aconst_null
      38: astore        6
      40: aload         5
      42: instanceof    #75                 // class java/nio/file/SecureDirectoryStream
      45: ifeq          66
      48: iconst_1
      49: istore        4
      51: aload         5
      53: checkcast     #75                 // class java/nio/file/SecureDirectoryStream
      56: aload_0
      57: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      62: invokestatic  #76                 // Method deleteRecursivelySecure:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;)Ljava/util/Collection;
      65: astore_3
      66: aload         5
      68: ifnull        161
      71: aload         6
      73: ifnull        98
      76: aload         5
      78: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      83: goto          161
      86: astore        7
      88: aload         6
      90: aload         7
      92: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          161
      98: aload         5
     100: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     105: goto          161
     108: astore        7
     110: aload         7
     112: astore        6
     114: aload         7
     116: athrow
     117: astore        8
     119: aload         5
     121: ifnull        158
     124: aload         6
     126: ifnull        151
     129: aload         5
     131: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     136: goto          158
     139: astore        9
     141: aload         6
     143: aload         9
     145: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     148: goto          158
     151: aload         5
     153: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     158: aload         8
     160: athrow
     161: iload         4
     163: ifne          176
     166: aload_0
     167: aload_1
     168: invokestatic  #77                 // Method checkAllowsInsecure:(Ljava/nio/file/Path;[Lcom/google/common/io/RecursiveDeleteOption;)V
     171: aload_0
     172: invokestatic  #78                 // Method deleteRecursivelyInsecure:(Ljava/nio/file/Path;)Ljava/util/Collection;
     175: astore_3
     176: goto          197
     179: astore        4
     181: aload_3
     182: ifnonnull     188
     185: aload         4
     187: athrow
     188: aload_3
     189: aload         4
     191: invokeinterface #79,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     196: pop
     197: aload_3
     198: ifnull        206
     201: aload_0
     202: aload_3
     203: invokestatic  #80                 // Method throwDeleteFailed:(Ljava/nio/file/Path;Ljava/util/Collection;)V
     206: return
    Exception table:
       from    to  target type
          76    83    86   Class java/lang/Throwable
          40    66   108   Class java/lang/Throwable
          40    66   117   any
         129   136   139   Class java/lang/Throwable
         108   119   117   any
          28   176   179   Class java/io/IOException

  public static void deleteDirectoryContents(java.nio.file.Path, com.google.common.io.RecursiveDeleteOption...) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokestatic  #11                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: aload_3
      11: instanceof    #75                 // class java/nio/file/SecureDirectoryStream
      14: ifeq          32
      17: aload_3
      18: checkcast     #75                 // class java/nio/file/SecureDirectoryStream
      21: astore        5
      23: aload         5
      25: invokestatic  #81                 // Method deleteDirectoryContentsSecure:(Ljava/nio/file/SecureDirectoryStream;)Ljava/util/Collection;
      28: astore_2
      29: goto          42
      32: aload_0
      33: aload_1
      34: invokestatic  #77                 // Method checkAllowsInsecure:(Ljava/nio/file/Path;[Lcom/google/common/io/RecursiveDeleteOption;)V
      37: aload_3
      38: invokestatic  #82                 // Method deleteDirectoryContentsInsecure:(Ljava/nio/file/DirectoryStream;)Ljava/util/Collection;
      41: astore_2
      42: aload_3
      43: ifnull        131
      46: aload         4
      48: ifnull        72
      51: aload_3
      52: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      57: goto          131
      60: astore        5
      62: aload         4
      64: aload         5
      66: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      69: goto          131
      72: aload_3
      73: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      78: goto          131
      81: astore        5
      83: aload         5
      85: astore        4
      87: aload         5
      89: athrow
      90: astore        6
      92: aload_3
      93: ifnull        128
      96: aload         4
      98: ifnull        122
     101: aload_3
     102: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     107: goto          128
     110: astore        7
     112: aload         4
     114: aload         7
     116: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     119: goto          128
     122: aload_3
     123: invokeinterface #13,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     128: aload         6
     130: athrow
     131: goto          149
     134: astore_3
     135: aload_2
     136: ifnonnull     141
     139: aload_3
     140: athrow
     141: aload_2
     142: aload_3
     143: invokeinterface #79,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     148: pop
     149: aload_2
     150: ifnull        158
     153: aload_0
     154: aload_2
     155: invokestatic  #80                 // Method throwDeleteFailed:(Ljava/nio/file/Path;Ljava/util/Collection;)V
     158: return
    Exception table:
       from    to  target type
          51    57    60   Class java/lang/Throwable
          10    42    81   Class java/lang/Throwable
          10    42    90   any
         101   107   110   Class java/lang/Throwable
          81    92    90   any
           2   131   134   Class java/io/IOException

  static java.lang.Iterable access$300(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method fileTreeChildren:(Ljava/nio/file/Path;)Ljava/lang/Iterable;
       4: areturn

  static {};
    Code:
       0: new           #112                // class com/google/common/io/MoreFiles$1
       3: dup
       4: invokespecial #113                // Method com/google/common/io/MoreFiles$1."<init>":()V
       7: putstatic     #18                 // Field FILE_TREE:Lcom/google/common/graph/SuccessorsFunction;
      10: return
}
