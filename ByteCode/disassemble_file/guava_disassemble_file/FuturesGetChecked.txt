Compiled from "FuturesGetChecked.java"
final class com.google.common.util.concurrent.FuturesGetChecked {
  static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: invokestatic  #1                  // Method bestGetCheckedTypeValidator:()Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;
       3: aload_0
       4: aload_1
       5: invokestatic  #2                  // Method getChecked:(Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
       8: areturn

  static <V, X extends java.lang.Exception> V getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator, java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #3,  2            // InterfaceMethod com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator.validateClass:(Ljava/lang/Class;)V
       7: aload_1
       8: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      13: areturn
      14: astore_3
      15: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      21: aload_2
      22: aload_3
      23: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      26: athrow
      27: astore_3
      28: aload_3
      29: invokevirtual #10                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      32: aload_2
      33: invokestatic  #11                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      36: new           #12                 // class java/lang/AssertionError
      39: dup
      40: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      43: athrow
    Exception table:
       from    to  target type
           7    13    14   Class java/lang/InterruptedException
           7    13    27   Class java/util/concurrent/ExecutionException

  static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>, long, java.util.concurrent.TimeUnit) throws X;
    Code:
       0: invokestatic  #1                  // Method bestGetCheckedTypeValidator:()Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;
       3: aload_1
       4: invokeinterface #3,  2            // InterfaceMethod com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator.validateClass:(Ljava/lang/Class;)V
       9: aload_0
      10: lload_2
      11: aload         4
      13: invokeinterface #14,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn
      19: astore        5
      21: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      24: invokevirtual #7                  // Method java/lang/Thread.interrupt:()V
      27: aload_1
      28: aload         5
      30: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      33: athrow
      34: astore        5
      36: aload_1
      37: aload         5
      39: invokestatic  #8                  // Method newWithCause:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;
      42: athrow
      43: astore        5
      45: aload         5
      47: invokevirtual #10                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      50: aload_1
      51: invokestatic  #11                 // Method wrapAndThrowExceptionOrError:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      54: new           #12                 // class java/lang/AssertionError
      57: dup
      58: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      61: athrow
    Exception table:
       from    to  target type
           9    18    19   Class java/lang/InterruptedException
           9    18    34   Class java/util/concurrent/TimeoutException
           9    18    43   Class java/util/concurrent/ExecutionException

  static com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator();
    Code:
       0: getstatic     #17                 // Field com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator.INSTANCE:Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator;
       3: areturn

  static com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator();
    Code:
       0: getstatic     #18                 // Field com/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator.INSTANCE:Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator;
       3: areturn

  static boolean isCheckedException(java.lang.Class<? extends java.lang.Exception>);
    Code:
       0: ldc           #22                 // class java/lang/RuntimeException
       2: aload_0
       3: invokevirtual #58                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static void checkExceptionClassValidity(java.lang.Class<? extends java.lang.Exception>);
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method isCheckedException:(Ljava/lang/Class;)Z
       4: ldc           #60                 // String Futures.getChecked exception type (%s) must not be a RuntimeException
       6: aload_0
       7: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokestatic  #62                 // Method hasConstructorUsableByGetChecked:(Ljava/lang/Class;)Z
      14: ldc           #63                 // String Futures.getChecked exception type (%s) must be an accessible class with an accessible constructor whose parameters (if any) must be of type String and/or Throwable
      16: aload_0
      17: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      20: return

  static {};
    Code:
       0: invokestatic  #65                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: new           #66                 // class com/google/common/util/concurrent/FuturesGetChecked$1
       6: dup
       7: invokespecial #67                 // Method com/google/common/util/concurrent/FuturesGetChecked$1."<init>":()V
      10: invokevirtual #68                 // Method com/google/common/collect/Ordering.onResultOf:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
      13: invokevirtual #69                 // Method com/google/common/collect/Ordering.reverse:()Lcom/google/common/collect/Ordering;
      16: putstatic     #46                 // Field WITH_STRING_PARAM_FIRST:Lcom/google/common/collect/Ordering;
      19: return
}
