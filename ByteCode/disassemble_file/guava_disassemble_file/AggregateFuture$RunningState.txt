Compiled from "AggregateFuture.java"
abstract class com.google.common.util.concurrent.AggregateFuture$RunningState extends com.google.common.util.concurrent.AggregateFutureState implements java.lang.Runnable {
  final com.google.common.util.concurrent.AggregateFuture this$0;

  com.google.common.util.concurrent.AggregateFuture$RunningState(com.google.common.collect.ImmutableCollection<? extends com.google.common.util.concurrent.ListenableFuture<? extends InputT>>, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lcom/google/common/util/concurrent/AggregateFuture;
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method com/google/common/collect/ImmutableCollection.size:()I
      10: invokespecial #7                  // Method com/google/common/util/concurrent/AggregateFutureState."<init>":(I)V
      13: aload_0
      14: aload_2
      15: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #9                  // class com/google/common/collect/ImmutableCollection
      21: putfield      #4                  // Field futures:Lcom/google/common/collect/ImmutableCollection;
      24: aload_0
      25: iload_3
      26: putfield      #10                 // Field allMustSucceed:Z
      29: aload_0
      30: iload         4
      32: putfield      #11                 // Field collectsValues:Z
      35: return

  public final void run();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method decrementCountAndMaybeComplete:()V
       4: return

  final void addInitialException(java.util.Set<java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lcom/google/common/util/concurrent/AggregateFuture;
       4: invokevirtual #32                 // Method com/google/common/util/concurrent/AggregateFuture.isCancelled:()Z
       7: ifne          22
      10: aload_1
      11: aload_0
      12: getfield      #5                  // Field this$0:Lcom/google/common/util/concurrent/AggregateFuture;
      15: invokevirtual #33                 // Method com/google/common/util/concurrent/AggregateFuture.tryInternalFastPathGetFailure:()Ljava/lang/Throwable;
      18: invokestatic  #25                 // Method com/google/common/util/concurrent/AggregateFuture.access$400:(Ljava/util/Set;Ljava/lang/Throwable;)Z
      21: istore_2
      22: return

  void releaseResourcesAfterFailure();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field futures:Lcom/google/common/collect/ImmutableCollection;
       5: return

  abstract void collectOneValue(boolean, int, InputT);

  abstract void handleAllCompleted();

  void interruptTask();
    Code:
       0: return

  static com.google.common.collect.ImmutableCollection access$000(com.google.common.util.concurrent.AggregateFuture$RunningState);
    Code:
       0: aload_0
       1: getfield      #4                  // Field futures:Lcom/google/common/collect/ImmutableCollection;
       4: areturn

  static void access$100(com.google.common.util.concurrent.AggregateFuture$RunningState);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method init:()V
       4: return

  static void access$200(com.google.common.util.concurrent.AggregateFuture$RunningState, int, java.util.concurrent.Future);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method handleOneInputDone:(ILjava/util/concurrent/Future;)V
       6: return

  static void access$300(com.google.common.util.concurrent.AggregateFuture$RunningState);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method decrementCountAndMaybeComplete:()V
       4: return
}
